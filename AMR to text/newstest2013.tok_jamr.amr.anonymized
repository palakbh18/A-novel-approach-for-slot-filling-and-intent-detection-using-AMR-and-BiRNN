strategy :mod ( political-party :name ( name :op1 republican )  :wiki republican_party_[united_states] )  :mod ( counter :arg1 ( elect :arg1 ( person :name ( name :op1 obama )  :wiki barack_obama )  )  )
justify :arg0 ( person :arg0-of ( lead :arg1 ( need :arg1 ( combat :arg1 ( fraud :arg1-of elect )  )  )  )  :mod ( political-party :name ( name :op1 republican )  :wiki republican_party_[united_states] )  )  :arg1 policy
consider :arg0 ( organization :arg0-of ( state :arg1 ( rare :location ( country :name ( name :op1 united :op2 states )  :wiki united_states )  )  :purpose ( kill :arg0 lightning :arg1 ( person :quant number )  :arg1-of ( elect :mod-of fraud )  )  )  :name ( name :op1 brennan :op2 centre )  )  :arg1 ( myth :mod this :wiki year_2000_problem )
identify :arg0 ( lawyer :mod ( political-party :name ( name :op1 republican )  :wiki republican_party_[united_states] )  )  :arg1 ( case :arg1 ( fraud :arg1-of ( elect :arg0 indeed )  )  :mod only :quant 300 )  :arg2 ( country :name ( name :op1 united :op2 states )  :wiki united_states )  :time ( decade :unit-of temporal-quantity )
vote :arg0 ( person :arg0-of ( turn :arg1 ( thing :domain-of certain :quant 1 )  :arg1-of ( impact :arg0 ( provision :mod new :mod this )  :mod negative )  )  )  :arg1 out
undermine :arg1 ( system :arg1-of measure :mod democracy )  :arg2 ( sense :arg1 this )  :manner partial
responsible :arg0 state :arg1 ( organize :arg1 ( elect :mod federal )  :location ( country :name ( name :op1 united :op2 states )  :wiki united_states )  )  :direction ( unlike :op1 ( country :name ( name :op1 canada )  :wiki canada )  )
or :arg2-of ( process :arg1 ( spirit :mod this )  :domain-of ( difficult :degree more )  )  :op1 register :op2 ( vote :arg0 ( government-organization :arg0-of govern :quant ( majority :arg0-of ( pass :arg1 it :arg2 ( law :mod new )  :time ( since :op1 ( date-entity :year 2009 )  )  )  )  )  )
add :arg0 ( person :arg0-of represent :arg1-of ( see :arg0 ( elect :arg2-of ( follow :arg0 ( date-entity :year 2010 )  :arg1 ( gain :arg0 ( phenomenon :mod ( this :mod-of ( date-entity :month 11 )  )  )  :arg1 momentum )  )  )  )  :mod ( political-party :name ( name :op1 republican )  :wiki republican_party_[united_states] )  :mod new )  :arg1 ( state :quant 26 )
introduce :arg1 ( bill :arg0-of ( restrict :arg1 ( exercise :arg1 ( right :arg2 ( vote :arg0 180 :arg1 ( state :quant 41 )  )  )  )  )  )  :arg2-of result :time ( date-entity :mod alone :year 2011 )
require :arg0 ( law :mod new :mod elect )  :arg1 ( show :arg0 ( person :arg0-of vote )  :arg1 ( card :mod id :mod photo :part ( citizenship :mod ( country :name ( name :op1 us )  :wiki united_states )  )  )  )  :arg2 ( and :op1 proof )
invalidate :arg1 ( right :arg1 ( elect :time day )  :arg2 ( register :arg3 ( person :arg0-of vote )  )  )  :op2-of ( and :op1 ( reduce :arg0 ( law :mod this )  :arg1 ( period :arg0-of ( vote :time early )  )  :extent furthermore :mod also )  :op3 ( withdraw :arg1 ( right :arg2 ( vote :arg1 ( record :mod criminal )  )  )  :arg2 citizen )  )
require :arg0 ( organization :name ( name :op1 us :op2 state )  )  :arg1 ( show :arg1 ( card :mod id :mod photo )  )  :arg2 ( person :arg0-of ( vote :arg1 - )  )  :time ( before :op1 ( elect :time ( date-entity :year 2006 )  )  )
impose :arg0 ( state :domain ( country :name ( name :op1 indiana )  )  )  :arg1 ( require :mod such )
uphold :arg0 ( government-organization :name ( name :op1 supreme :op2 court )  :poss ( country :name ( name :op1 united :op2 states )  :wiki united_states )  :wiki supreme_court_of_new_south_wales )  :arg1 ( constitutionality :mod ( law :topic ( country :name ( name :op1 indiana )  )  )  )  :time ( date-entity :year 2008 )
quick :arg1 ( extend :arg0 ( authority :mod ( political-party :name ( name :op1 republican )  :wiki republican_party_[united_states] )  )  :arg1 ( practice :mod this )  :arg2 ( state :mod other )  )
id :mod-of ( card :arg1-of ( show :arg0 ( past :op1 ( temporal-quantity :op1-of over :quant 2 :unit year )  )  :arg2-of ( force :arg0 ( they :arg0-of ( sponsor :time ( state :quant 34 )  )  :arg1-of bill )  :arg1 ( person :arg0-of vote )  )  )  :mod photo )
id :mod-of ( card :example ( card :mod ( insure :arg0 ( province :name ( name :op1 quebec )  :wiki quebec )  :arg1 citizen :arg2 ( note :arg0 it :arg1 such :domain-of important )  :mod health :time - )  )  :mod universal )
possess :arg0 ( person :arg1-of ( age :mod ( vote :arg1 21 )  )  :poss-of ( state :poss-of citizen :poss-of ( agency :mod ( government-organization :arg0-of govern )  )  )  )  :arg1 ( card :arg1-of ( issue :arg0 ( percentage-entity :value 11 )  )  :mod id :mod photo )  :polarity - :prep-in fact
vote :arg0 ( person :arg1-of ( identify :mod such :polarity - :time 5 )  :mod new )  :time ( date-entity :quant-of addition :year 2012 )
and :op1 ( cost :arg2 ( monetary-quantity :purpose ( obtain :arg1 ( card :mod ( identity :arg1-of require )  )  )  :unit dollar )  :frequency often )
affect :arg0 ( restrict :mod new )  :arg1 ( person :mod young :op1-of ( and :op2 minority :op3 ( person :prep-with ( income :arg1-of low )  )  )  )  :manner disproportionately
and :op1 ( person :arg0-of ( vote :arg1 18 )  :op3-of ( and :op1 ( thing :name ( name :op1 african :op2 americans )  )  :op2 ( percentage-entity :quant-of fact :value 15 )  :time ( percentage-entity :value 25 )  )  )  :op2 ( require :arg1 ( card :mod id :mod photo )  :op1-of ( citizen :quant percentage-entity )  :purpose ( earn :arg0 65 :arg1 less :op1-of - :op1-of ( percentage-entity :value ( 20 :quant-of ( temporal-quantity :quant 29 :quant 18 :unit year )  )  )  :op1-of old )  )
and :example - :op1 all
consider :arg1 ( vote :arg0 ( person :arg0-of vote )  :arg1 candidate :arg2 more )  :arg1-of ( issue :arg0 institution :arg2-of ( use :arg0 ( person :arg0-of study )  :arg1 ( card :mod id :mod photo )  :arg1-of ( allow :arg0 democratic :arg3 ( state :quant several )  :polarity - )  )  )
issue :arg0 ( club :mod this )  :arg1 card :arg2-of ( use :arg1-of ( vote :arg0 they )  :arg1-of ( vote :arg0 ( person :arg0-of ( have-org-role :arg1 club :arg2 member )  :op4-of ( or :op1 ( allow :arg0 ( state :arg1-of same :mod this )  :arg1 ( hand :mod other )  )  :op2 fish :op3 hunt )  )  :arg2 ( political-party :degree more :name ( name :op1 republican )  :wiki republican_party_[united_states] )  )  )
require :arg0 state :arg1 proof :arg4 prior :polarity - :purpose ( vote :arg0 citizenship :arg1 ( date-entity :year 2004 )  )
introduce :arg0 ( state :name ( name :op1 arizona )  :wiki arizona )  :arg1 ( require :mod such )
adopt :arg0 state :arg1 ( law :arg0-of ( require :arg1 ( prove :arg0 dozen :arg1 citizen )  :arg2 ( person :arg0-of ( vote :arg1 they )  )  )  )  :time ( since :op1 ( date-entity :year 2011 )  )
intend :arg0 ( measure :mod this )  :arg1 ( limit :arg1 ( vote :arg1 ( thing :name ( name :op1 hispanic )  )  )  )  :arg1-of clear
appear :arg0 democratic :arg1 ( favor :arg0 ( person :arg0-of ( vote :arg1 ( thing :name ( name :op1 hispanic )  )  )  :quant 2 :quant 3 )  :arg1 party )
sponsor :arg0 ( legislator :mod ( political-party :name ( name :op1 republican )  :wiki republican_party_[united_states] )  )  :arg1 ( law :arg0-of ( abolish :arg1 ( register :arg0 ( person :arg0-of vote )  :arg1 amr-unknown )  :time ( day :time-of ( elect :arg1 more )  )  )  )  :time ( date-entity :year 2011 )  :time ( state :quant 8 )
wish :arg0 ( person :arg0-of vote :arg2-of ( provide :arg1 assist :arg2-of ( right :arg1 ( and :op1 individual :op2 group )  :arg1-of ( limit :arg0 they :time addition )  )  )  )  :arg1 register
restrict :arg3 - :concession-of consequence :mod this
contribute :arg0 ( campaign :arg0-of ( register :arg1 ( citizen :op2-of ( around :op1 10 )  )  )  :arg1-of ( vote :arg0 person )  :mod register )  :arg1 example :time ( elect :arg1-of general :time ( date-entity :year 2004 )  )
measure :arg0-of ( lead :arg4 ( drop :arg1 ( rate :mod ( register :arg0 ( person :arg0-of ( vote :arg1 compare )  :mod new )  )  )  :arg2 ( percentage-entity :value 17 )  )  )  :arg1-of ( adopt :time ( since :op1 ( date-entity :year 2009 )  )  :time ( date-entity :year 2006 )  :time ( date-entity :year 2010 )  )
enact :arg0 ( legislator :mod ( political-party :name ( name :op1 republican )  :wiki republican_party_[united_states] )  )  :arg1 ( law :arg1-of ( aim :arg0 ( state :mod other :quant 5 )  :arg2 ( reduce :arg1 ( period :arg1-of vote :mod early )  )  )  )  :time addition
thing :arg2-of ( account :arg0 ( person :arg0-of ( vote :arg1 ( elect :arg0 only :arg1 ( person :arg0-of ( vote :arg1 state )  )  :arg1-of general :location ( state :name ( name :op1 florida )  :wiki florida )  :time ( date-entity :year 2008 )  )  )  :mod early :quant ( 33 :value-of percentage-entity )  )  :arg1 ( percentage-entity :value 13 )  :time example )  :name ( name :op1 african-americans )
apply :arg1-of same :arg2 ( thing :name ( name :op1 hispanics )  )
contrast :arg0 ( citizen :arg0-of ( vote :arg1 only :time early )  )  :arg1 ( percentage-entity :value 11 )  :arg2 ( percentage-entity :poss ( person :arg0-of vote :arg1-of ( represent :arg0 this )  )  :value 24 )
contrast :arg0 ( percentage-entity :mod only :value 46 )  :arg1 white :arg2 ( represent :arg0 this :arg1 percentage-entity :arg2 ( person :arg0-of ( vote :arg1 ( person :quant 76 )  )  :arg1-of ( vote :arg0 person )  :mod early :part ( hand :mod other )  )  )
oppose :arg0 ( and :op1 ( person :arg0-of ( support :arg1 legislator )  )  )  :arg1 ( adopt :arg1 ( law :arg0-of ( restrict :arg1 ( register :arg0 ( person :arg0-of vote )  :arg1 democratic )  )  )  )  :time vigorous
block :arg1 ( bill :quant several )  :arg2 ( veto :arg1 ( person :arg0-of ( have-org-role :arg1 democratic :arg2 governor )  )  )
intervene :arg0 ( organization :name ( name :op1 united :op2 states :op3 attorney :op4 general )  )  :arg1 ( suspend :arg1 ( law :mod ( controversy :degree most )  )  :arg0 organization )
possible :arg0 they :arg1 ( limit :arg1 damage :manner partial )
adopt :arg0 ( state :quant 34 :quant 16 )  :arg1 ( law :arg0-of ( require :arg1 ( card :mod id :mod photo )  :arg2 presentation )  :mod only )  :purpose example
rule :arg0-of ( exercise :arg1 ( right :arg1 ( difficult :degree more )  :arg2 ( vote :time ( date-entity :year 2012 )  )  )  )  :arg1-of ( put :arg2 ( place :arg1-of ( doubt :polarity - )  )  )  :mod new
denounce :arg0 critic :arg1 ( character :mod partisan :mod-of ( law :arg1-of ( pass :arg0 ( date-entity :year 2012 )  )  )  )  :arg2 ( key :arg0 democratic :arg1 state )  :op1-of ( and :op2 ( see :arg0 ( they :arg0-of ( influence :arg1 ( thing :arg2-of result )  )  )  :arg1 ( objective :arg1-of clear )  )  )
show :arg0 ( report :poss ( organization :name ( name :op1 brennan :op2 centre )  )  :time ( date-entity :year 2011 )  )  :arg1 ( represent :arg0 ( state :arg0-of ( adopt :arg1 ( law :mod this )  )  )  :arg1 ( vote :arg1-of ( need :purpose ( win :arg1 presidency )  :time ( college :arg1-of elect )  )  )  )
outcome :arg1-of ( impact :arg0 ( change :arg1 ( system :instrument-of elect )  :arg1-of legislate :mod this )  :arg1-of significant )  :poss ( elect :arg0 ( person :arg0-of ( say :arg1 certainty :domain-of ( early :degree too :domain it :op1 ( date-entity :year 2012 )  )  )  :arg0-of ( have-org-role :arg2 president )  )  )
contrast :arg1 ( turn :arg0 ( provision :mod new :mod this )  :arg1-of ( impact :arg0 out :mod negative )  )  :arg2 ( certain :domain thing )
undermine :arg1 ( system :arg1-of measure :mod democracy )  :arg2 ( sense :arg1 this )  :manner partial
screen :arg1 cancer :mod prostate :op1-of ( or :mode interrogative :op2 ( test :arg1-of ( take :polarity - )  )  )
show :arg0 ( test :arg1 ( organization :name ( name :op1 psa )  )  )  :arg1 ( thing :arg2-of ( result :arg1 ( or :mod-of ( thing :arg2-of ( involve :arg0 false :arg1 ( intervene :mod medicine :mod unnecessary )  )  :arg2-of ( result :mod positive )  )  :op1 negative :op2 ( false :mod even )  )  )  :mod erroneou )  :frequency sometimes :mod indeed
hesitate :arg0 enough :arg1 ( take :arg0 ( man :mod reluctant )  :arg1 ( test :arg1 ( screen :arg1 already )  )  )
or :mode interrogative :op1 ( test :arg1 - :arg1-of take )
opine :arg1-of ( ask :arg0 we :arg2 ( person :arg0-of specialize :quant 2 )  )
recommend :arg1 ( control :arg0 ( group :arg1-of ( contaminate :quant ( lot :arg0-of ( study :arg1-of ( conduct :location ( country :name ( name :op1 united :op2 states )  :wiki united_states )  )  )  )  )  )  )  :mod firm :op2-of ( and :op1 ( interpret :arg1 data :domain-of ( difficult :arg1-of cause )  )  )
screen :arg0 mortality :arg1 ( person :arg0-of ( have-rel-role :arg2 patient )  :arg0-of ( differ :arg1 ( this :mod-of time )  :arg1-of ( conclude :arg0 ( study :arg0 - :arg1 ( continent :mod-of one :name ( name :op1 europe )  :wiki europe )  :mod another )  )  )  :op1-of and )
screen :arg0 ( 12 :quant-of ( temporal-quantity :unit year )  )  :arg1-of ( absent :arg0 30 :arg1-of ( occur :arg0 metastas )  :arg2 ( follow :arg0 and :arg2-of ( show :arg0 ( study :arg1 40 :mod this )  :arg1 ( likely :degree ( more :quant percentage-entity )  )  :mod also :time after )  )  )
cancer :mod ( prostate :arg0-of ( age :arg1 ( direct :arg0 50 :arg1 relative )  :arg1-of ( recommend :arg0 ( i :arg0-of ( test :arg1 40 :op1-of or )  )  :arg2 you )  )  )  :mod previous
risk :arg0 ( thing :name ( name :op1 african-american )  )  :arg1 ( man :domain-of ( more :mod also )  )
cancer :arg1-of ( detect :arg0 ( decide :arg1-of key :mod right )  :op1-of once )
cancer :mod aggressive :op1-of ( and :op2 other :op3 indolent )
cancer :arg1-of ( treat :manner ( necessarily :polarity - )  :op2-of ( and :manner-of ( understand :arg0 ( person :arg0-of ( need :mod really )  :arg0-of ( have-rel-role :arg2 patient )  )  :arg1 ( degree :degree-of ( risk :arg2 cancer )  )  )  :op1 ( offer :arg1 ( option :arg2-of available )  )  :op3 ( threaten :arg1 ( life :arg1-of long )  )  :op4 ( opt :arg1 - :arg1-of instead-of :time ( case :mod ( such :arg1-of ( activity :arg0 ( monitor :arg1 disease )  )  )  )  )  )  )  :mod prostate
cancer :arg1-of ( detect :arg0 ( man :arg1-of ( treat :arg1-of ( cause :arg0 ( aggressive :domain ( cancer :arg1-of ( threaten :arg0 today :arg2 life :polarity - )  )  :polarity - )  )  :op1-of and :polarity - )  :quant many )  )
suggest :arg1 ( monitor :arg1 active )  :op1-of ( and :op2 ( offer :arg0 they :arg1 treat :time ( progress :arg1 disease )  )  )
determined :arg1 ( criteria :arg1-of specific )  :purpose ( decide :arg1 ( or :op1 recommend :op2 ( recommend :arg0 more :arg1 ( treat :polarity - )  :op2-of ( and :op1 more-than )  )  )  )
recommend :arg0 ( i :arg0-of take )  :arg1 test
contrast :arg1 ( take :arg1 - )  :arg2 ( thing :arg0-of ( discuss :arg0-of ( determine :arg1 or )  :arg1 doctor )  :mod important )
and :op1 ( con :arg0 pro :arg1 ( make :arg0 ( create :arg0 d :arg0-of ( collaborate :arg1 internationale )  :arg1 movemb )  :arg1 tool :arg1-of ( test :arg0 psa )  :arg1-of possible :arg1-of ( evaluate :arg0 it )  )  )
screen :arg0 ( slash :op1 ( mean :arg1 ( address :arg0 short :arg1 this )  :op1-of ( slash :op2 men )  :op1-of slash :op1-of slash :op2-of ( slash :op1 ( thing :arg1-of ( available :arg0 ( you :arg0-of ( download :arg1 ( possible :arg1 document )  )  )  )  :arg2-of ( translate :arg0 time :arg1 france )  )  :op3 http )  )  :op2 health :op3 prostate :op4 cancer )
prevent :arg1 disease
miracle :mod-of ( recipe :mod ( prevent :arg1 ( cancer :arg0-of ( fortunate :arg1 - )  )  )  )
remain :arg1 ( adopt :arg1 ( habit :mod live :mod healthy )  )  :arg3 ( reduce :arg1 ( risk :arg2 suffer )  :manner ( way :mod ( good :degree most )  )  )  :concession ( progress :arg1 research :op1-of despite )
estimate :arg1 ( it :arg1-of ( eat :arg0 ( everyone :arg0-of ( exercise :degree enough :op1-of ( and :op2 ( possible :arg1 ( prevent :arg1 ( percentage-entity :quant-of cancer :value 30 )  )  )  )  )  )  )  )
say :arg0 ( person :arg0-of ( smoke :arg1 ( rate :mod this )  )  :arg0-of ( increase :arg1 50 :arg2 percentage-entity :op1-of least :polarity - )  :mod more )  :arg1 ( person :arg0-of ( have-org-role :arg1 ( organization :name ( name :op1 &quot; )  )  :arg2 spokesman )  :name ( name :op1 &quot; )  )
roughly :op1 ( percentage-entity :quant-of cancer :value ( 10 :arg0-of ( estimate :arg1 hereditary :arg2 ( hand :mod other )  )  )  )
unexplain :arg1-of ( complete :arg0 some :mod also )
remain :arg0 ( organization :name ( name :op1 canadian :op2 cancer :op3 society )  )  :arg1 ( fight :arg0 ( person :arg0-of decrease :arg0-of smoke :quant number )  :arg1 tobacco )  :arg2 priority
cancer :arg1-of ( case :arg2 ( percentage-entity :arg2-of ( link :arg1 cigarett )  :value 85 )  :mod lung )
factor :arg1-of ( risk :arg0 ( number :quant-of other )  )  :domain it :mod also
damage :arg0 massive :arg1 ( person :poss-of health )  :mod this
spokesperson :arg2-of ( have-org-role :arg0 ( person :arg1-of ( deplore :arg0 ( person :arg0-of ( smoke :arg1 ( province :name ( name :op1 quebec )  :wiki quebec )  )  :mod million :mod ( 1.5 :mod there )  :mod even )  :arg2 ( person :name ( name :op1 &quot; )  )  :time today )  )  )
cancer :arg1-of ( risk :arg0-of ( give :arg1 ( smoke :arg1 ( encourage :arg1 data )  )  :arg2 ( temporal-quantity :quant 10 :unit year )  :op1-of ( after :time-of ( drop :arg0 half )  )  )  :arg2 die )
weight
say :arg1 ( and :op1 overweight :op2 ( obesity :name-of ( disease :poss-of onset )  )  )  :time also
possible :arg1 ( increase :arg0 they :arg1 ( risk :arg1 ( cancer :op1-of ( and :op2 breast :op3 rectum :op4 oesophagu :op5 pancrea :op6 ( and :op1 colon :op2 uteru )  )  )  )  )
say :arg0 it :arg1 ( life :arg0-of ( protect :arg1 cancer :op1-of ( against :op2 colon )  )  :arg1-of ( activity :arg0 physical :op1-of throughout )  :arg2-of ( practice :arg0 ( show :arg1 that :arg1-of research )  :arg1 of :arg1-of regular )  )  :mod also
diet
recommend :arg1 ( limit :arg0 ( organize :arg1 red )  :arg1 ( consume :arg1 meat )  )  :mod also
increase :arg0 rectal :arg1 ( risk :arg1 ( develop :arg1 cancer )  )  :time ( amount :mod large )
and :mod likewise :op1 ( cure :arg1 ( product :mod meat )  )  :op2 recommend :op3 ( avoid :arg1 this )
cause :arg1 ( form :arg1 ( or :arg0-of ( conserve :arg1 meat )  :op1 smoke :op2 dry :op3 ( cure :arg0 carcinogen )  )  )  :arg1-of possible
cancer :arg2-of ( lead :arg1 ( explain :arg0 it )  :op3-of ( and :op1 ( damage :arg0 they :arg1 cell :arg1-of possible )  :op2 body :op4 ( develop :arg1 of )  )  )
vitamin
cancer :arg2-of ( link :arg1 ( supplement :mod vitamin )  :arg1-of ( study :arg0 ( number :location ( temporal-quantity :time recent :unit year )  :quant-of scientist )  )  :op1-of and )
conclusive :domain ( research :arg1 time )  :polarity -
scc :arg0-of ( say :arg1 ( study :arg1 ( e :mod vitamin )  :domain-of contradictory )  )
note :arg0 another :arg1 increase :arg1-of while :purpose ( note :arg0 ( study :arg0-of ( risk :arg2 ( cancer :mod prostate )  )  )  :arg1 decrease )
clear :arg1 ( effect :arg0 d :arg1 vitamin :topic cancer )  :mod also :polarity -
and :op1 ( concern :arg0 ( thing :name ( name :op1 mr :op2 beaulieu )  )  :arg1 addition :arg1-of ( discuss :arg2 ( doctor :poss-of history )  :mod-of important )  )  :op2 family
screen :arg1 ( give :arg1 cancer :arg1-of take :arg1-of test :arg2 you :polarity - )
reveal :arg0 ( boson :mod ( thing :name ( name :op1 higgs )  )  )
and :op1 probable :op2 ( create :arg0 ( announce :arg1 ( discover :arg0 ( last :mod-of summer )  :arg1 ( boson :mod ( thing :name ( name :op1 higgs )  )  )  )  )  :arg1 stir :degree quite )  :op3 ( reason :mod good )
believe :arg0 ( less :polarity - )  :arg1 ( boson :mod this :mod ( universe :location-of ( everything :mod-of ( mass :arg1-of ( responsible :arg0 mechanism )  )  )  )  )  :mod indeed
contrast :arg1 ( behave :arg0 it :arg2-of ( bad :arg0 ( or :arg1-of model :arg1-of ( predict :arg0 also )  :op1 ( good :degree most )  )  :arg1 less :arg1-of ( explain :arg0 ( we :arg0-of ( observe :arg1 yet :arg2 empirically :polarity - )  )  )  )  :arg2-of ( exist :arg1 ( particle :mod last )  )  :mod-of matter :op2-of ( and :op1 nature )  )
contrast :arg0 physicist :arg2 ( sure :arg1 ( really :mod-of ( thing :name ( name :op1 higgs )  )  )  :arg1-of complete :mod still :polarity - )
shadow :arg1-of ( know :arg0 ( we :arg0-of ( doubt :arg1 ( particle :arg1-of authentic :mod new )  )  )  :op1-of ( and :op2 ( resemble :arg2 ( boson :arg1-of ( predict :arg0 ( organization :name ( name :op1 standard :op2 model )  )  )  :mod ( thing :name ( name :op1 higgs )  )  )  :degree great )  )  )
contrast :arg1 ( unveil :arg0 addition :arg1 ( data :mod new )  :time ( physics :mod large )  :time ( week :mod this )  )  :arg2 ( seem :arg1 ( confirm :arg0 ( government-organization :arg1-of ( suffice :arg0 ( data :arg0-of ( sure :arg1 still :arg1-of perfect )  )  :polarity - )  :location ( city :name ( name :op1 kyoto )  :wiki kyoto )  :name ( name :op1 congress )  :wiki united_states_congress )  :arg1 this )  )
contrast :arg1 ( let :arg0 higg :arg1 ( suppose :arg1 it )  :arg2 really )  :arg2 ( and :op1 ( seem :arg1 slim :arg1-of mistake )  :op2 ( see :arg1 amr-unknown :arg1-of ( chance :arg0 since )  )  )
state :arg0 ( law :arg1-of ( avoid :arg0 ( we :poss-of world )  )  :topic fatally )  :arg1 ( possible :arg1 ( meet :arg0 ( thing :quant 2 )  :arg1 ( place :arg1-of same )  :polarity - :time ( time :arg1-of same )  )  )
and :arg1-of ( try :arg0 ( you :arg1-of mad )  :arg1-of hard :location too :polarity - )  :arg2-of ( rule :arg1 ( way :polarity - )  :arg2-of ( break-up :arg1 this )  )
consist :arg0 state :arg1 roughly :arg2 ( thing :arg2-of ( same :arg0 ( they :arg0-of ( same :arg1 ( space :arg1-of ( same :arg0 ( state :arg0-of ( exclude :arg1 ( kind :arg2-of ( same :arg0 turn :mod also :mod ( world :mod ( strange :degree very )  :mod ( physics :mod particle :mod even )  :mod-of it )  :mod law )  )  :arg2 principle )  )  :arg2-of ( occupy :arg0 particle :arg1 2 :arg1-of possible :polarity - )  )  )  :arg2 time )  )  :arg1 quantum )  :arg2-of ( characteristic :arg0 state :arg1 certain )  )  :mod this
base :arg1 ( classify :arg0 physicist :arg1 particle :arg2 ( category :quant 2 )  )  :arg2 this
fermion :arg2-of ( call :arg1 ( citizen :domain we :mod good )  :purpose-of ( obey :arg0 corner :arg1 ( principle :mod ( person :name ( name :op1 pauli )  )  )  :manner wise )  )
mean :arg1 ( principle :mod this :polarity - )  :arg2 ( possible :arg1 ( find :arg0 ( person :consist ( band :mod nasty )  :mod anarchy )  :arg1 ( they :arg0-of ( respect :arg1 ( nothing :time ( event :mod ( all :mod-of ( same :arg1 time )  )  )  )  :arg1-of ( lurk :arg1-of ( while :arg0 ( boson :domain-of other )  )  )  )  )  :location ( place :arg1-of same )  :mod indeed )  )
say :arg1 ( thing :mod ( organization :name ( name :op1 these )  :poss-of site )  :name ( name :op1 these )  :op1-of ( and :arg1-of ( discuss :arg0 we :arg1-of ( mean :arg2 meson :mod way )  :arg2 particle :arg3 ( extraordinary :mod absolute )  :polarity - )  :example ( and :arg2-of ( relate :arg1 somehow )  :op1 nature :op2 ( propagate :arg0 ( force :mod great )  :arg1 of )  :op3 ( possible :arg1 boson )  )  :op2 here :op3 force )  )  :arg2-of ( divide :arg0 ( boson :mod this )  :arg1 group :arg3 then :quant 2 :time into )
possible :arg1 ( think :arg0 ( you :arg0-of ( stress :arg1 - :location here )  )  :arg1 ( boson :mod this )  :arg2-of ( bug :mod such :mod exotic :mod all )  )
mean :arg0 ( article :arg0-of ( thank :arg1 ( you :arg0-of ( read :arg1 ( possible :arg1 fact )  :mod this )  )  :arg2 extraordinary )  )  :arg1 it :arg2 ( or :arg1-of ( light :arg0 photon :arg2 ( force :mod electromagnetic :poss messenger )  )  :op1 particle )  :op1-of banal :op1-of boson
charge :arg0 electric :arg1 ( or :arg0-of ( change :arg1 direction :arg2-of ( disturb :arg0 this :arg1 ( field :arg0-of ( specific :arg1 this )  :arg2-of ( resemble :arg0 ( place :arg2-of ( throw :arg0 pebble :domain-of pond )  )  )  :mod electromagnetic )  )  )  :arg1-of ( accelerate :arg0 particle )  )  :arg2 fact
and :example-of ( and :op1 ( produce :arg1 ( wave :arg0 electromagnetic :arg1 ( of :mod-of ( light :mod-of ( infrar :mod-of ultraviolet )  )  )  )  :mod ( disturbance :mod this )  )  :op2 ( wave :arg1 nothing :mod this )  )  :mod ( other :mod-of ( force :mod ( carrier :mod-of boson )  :mod 1 )  )  :op1 photon :op2 thus-far
more :mod-of ( field :arg1-of stable )
appear :arg1 ( field :arg1-of disturb :mod ( field :arg1-of ( same :arg1-of apply )  :arg1-of ( differ :arg0 boson :arg2 it :mod that )  :mod another )  )
resemble :arg1 ( stable :arg1 ( field :domain-of much :mod this :mod ( thing :name ( name :op1 higgs )  )  )  :degree ( more :degree much )  :topic ( field :mod electromagnetic )  )  :arg2 ( pond :arg0-of ( achieve :arg1 ( level :arg1-of ( high :arg0 now :degree very :degree very )  :mod energy )  :arg1-of excite )  :arg0-of ( need :arg1 ( rock :mod ( large :degree very )  )  :op1-of and :purpose ( wrinkle :arg1 surface )  )  :arg1-of freeze )
circumference :arg0-of ( achieve :arg1 ( energy :mod-of ( level :mod such )  )  :arg1-of ( need :arg0 ( large :mod-of ( thing :domain-of ring :name ( name :op1 hadron :op2 collider )  )  )  :purpose ( resemble :arg1 ( accelerator :mod huge :mod particle )  :arg2 one )  )  )  :poss-of ( name :op1 cern )
and :op1 ( thing :arg0-of ( relation :arg1 ( electromagnetic :source field )  :arg1-of ( explain :arg2-of ( useful :arg1 analogy :mod again )  )  )  :name ( name :op1 higgs )  )  :op2 mass
interact :arg0 ( or :op1 particle :op2 ( material :quant all )  :quant ( all :polarity - )  )  :arg1 ( field :source-of electromagnetic )  :prep-in fact
contrast :arg1 other :arg2 ( piece :arg1-of ( cause :arg0 ( do :arg0 such :arg1 magnet :arg3 some :polarity - )  )  :arg2-of ( stick :arg0 paper :arg1 fridge )  :poss-of of :poss-of example )
and :op1 ( interact :arg0 ( particle :quant all )  :arg1 ( field :mod ( thing :name ( name :op1 higgs )  )  )  :manner likewise :op1-of - :op1-of mass :op1-of ( photon :example-of other )  :op1-of such :polarity - )
ask :arg0 interrogative :arg1 amr-unknown :arg2 ( person :arg0-of ( bring :arg1-of possible )  :arg2-of ( research :arg0 it :mod ( this :mod all )  :time now )  :name ( name :op1 now )  )
predict :arg1 ( organization :name ( name :op1 sm )  )  :op3-of ( and :op1 ( examine :arg0 physician :arg1 ( discrepancy :mod any )  :arg1-of ( allow :mod also :op2-of ( and :op1 ( serve :arg1 science :arg2 ( check :arg1 ( valid :arg1 ( organization :name ( name :op1 standard :op2 model )  )  )  )  )  )  )  )  :op2 observation )
cause :arg0 ( possible :arg0-of ( open :arg1 door :arg2 ( physics :mod new )  :arg2-of ( differ :arg0 ( slight :degree most )  :arg1 number )  )  :arg1 ( and :arg0-of ( plug-in :arg1 certain :arg2 hole )  :arg1-of model )  )  :arg1 ( hope :arg0 ( person :arg0-of ( find :arg1 that :manner some )  :poss-of moreov :poss-of of )  :arg1 fervent )
say :arg0 oop :arg1 ( this :arg0-of ( dark :arg1 ( shortcoming :mod huge :quant approximately )  :mod-of ( matter :arg1-of form :op1-of ( or :arg0-of ( offer :arg1 ( explain :arg1 gravity :polarity - )  :mod still )  :op2 ( matter :mod oop :poss-of universe :quant ( percentage-entity :value 80 )  )  )  )  )  )
contrast :arg0 ( name :op1 cern )  :arg1 ( find :arg1 ( discrepancy :mod such )  :arg2 date :polarity - )
repercussion
contrast :arg1 ( difficult :arg1-of ( predict :arg0 ( man :poss-of ( life :arg1-of ( research :arg0 repercussion :mod this )  :mod ( newspaper :name ( name :op1 the :op2 daily )  :wiki the_daily_[news_corporation] )  :poss of )  )  )  :arg1-of wrong :degree more :domain street :domain it :polarity - )  :arg2 ( assume :arg0 there :arg1 that :arg2 any )
remember :arg1 ( work :arg0-of ( trigger :arg1 ( revolution :arg1-of ( suspect :arg2 ( pioneer :arg1 ( laser :location ( country :name ( name :op1 bell :op2 laboratories )  )  )  )  :time ( early :degree very :mod-of 60 )  )  )  )  :arg1 - )
contrast :arg1 ( inkl :mod ( application :mod science )  )  :arg2 ( nothing :poss they :topic rest )
tell :arg0 ( person :arg0-of ( invent :arg1 laser )  :arg0-of ( have-org-role :arg1 ( country :arg0-of ( develop :arg1 ( continue :arg1-of ( pulse :arg0 laser )  )  :op1-of ( and :op2 ( see :arg0 laser :arg1 ( rather :poss-of ( lab :op1 gadget )  )  )  :time ( date-entity :year 1960 )  )  )  :name ( name :op1 in )  )  :arg2 physicist )  :arg0-of ( work :arg1 fact )  :name ( name :op1 in )  :time late )  :arg2 initial :time ( date-entity :year 1962 )
imagine :mod just
possible :arg1 ( come :arg1 application :arg3 ( instrumentation :arg0-of ( surround :arg1 research )  :quant all )  :mod also :op1-of and :time then )
develop :arg0 ( person :arg0-of ( work :location optic )  :arg1-of same :name ( name :op1 willard :op2 boyle )  )  :arg1 ( sensor :arg1-of light :mod small )  :purpose example :time ( date-entity :year 1969 )
intend :arg0 all :arg1 this :arg1-of ( serve :arg0 eye :arg3 now )  :arg3 ( sensor :mod this )  :op1-of ( and :example-of ( digital :mod all )  :op2 camera :op3 worldwide :op4 ( earn :arg1 ( physics :arg0-of prize :mod ( award :name ( name :op1 nobel )  :wiki nobel_prize )  :poss-of ( 2009 :year-of date-entity )  )  )  )  :polarity - :prep-on-of original
contrast :arg1 ( know :arg0 you )  :arg2 mean :arg2-of ( mean :arg1 this )  :condition ( transform :arg0 ( activity :arg0 ( organization :name ( name :op1 lhc )  )  :arg1 actual )  :arg1 ( life :domain - :poss we )  :manner necessarily )
the :location-of ( care :arg0 palliative :manner ( good :compared-to die :degree most :mod-of way :mod-of ( le :mod expressive :mod-of devoir )  )  )
discuss :arg0 ( province :name ( name :op1 quebec )  :wiki quebec )  :arg1 ( issue :arg0 ( end :arg1 life )  :arg1 ( die :arg2 ( organization :name ( name :op1 dignity :op2 commission )  )  )  :mod delicate )  :time recent
resume :arg1 ( debate :arg1 short )  :time ( prepare :arg1 bill )
remain :arg0 much :arg1 ( do :arg1 ( vital :mod-of ( area :mod this )  )  )
attempt :arg0 ( organization :name ( name :op1 le :op2 devoir )  )  :arg1 ( look :manner ( close :degree more )  :arg0 organization )
mr :op1-of ( name :name-of ( thing :arg0-of ( live :arg1 alone :location ( apartment :poss ( just :mod-of ( few :op1 ( temporal-quantity :unit week )  )  )  )  )  )  :op2 l. )
cancer :arg0-of ( allow :arg1 ( respite :duration ( temporal-quantity :quant 2 :unit year )  )  )  :arg1-of fester :mod prostate
say :arg0 ( he :arg0-of ( lie :arg1 ( he :arg2-of ( mix :arg0 ( i :arg2-of ( live :arg0 ( i :arg2-of ( give :arg0 they :arg1 ( 5 :quant-of ( temporal-quantity :unit year )  )  )  )  :arg1 it )  )  :arg1 emotion )  :poss-of bed )  :arg2 ( person :arg0-of ( care :arg1 home :arg2 ( he :arg0-of ( arrive :arg1 day :arg2 previous )  )  :mod palliative )  :name ( name :op1 victor )  :wiki - )  )  )  :arg1 7
contrast :arg1 ( possible :arg1 nev :arg1-of ( prepare :arg0 ( you :arg1-of ( shock :arg0 it )  )  :arg2 ( he :arg0-of ( add :arg1 ' )  )  )  )  :arg2 still
and :arg1-of ( prevent :arg0 ( weak :mod huge )  :arg1-of ( work :arg1-of ( do :arg0 disease )  )  )  :op1 alone :op2 ( eat :arg1 toilet :location alone :mod even )
appetis :mod-of ( lunch :arg0 ( he :arg0-of ( consent :arg1 ( help :arg1 ( eat :arg1 he )  :arg0 he )  )  )  :arg1-of ( sit :arg0-of resign :arg2 front )  )
bring :arg1 ( medication :arg0-of ( offer :arg1 ( bathe :arg1-of ( smile :arg0 ( he :arg0-of ( manage :mod even )  )  )  :arg1-of ( bustle :arg0 ( stranger :arg2-of ( talk :arg1 courageou )  )  :location around )  )  )  )
courage :mod ( die :mod ordinary )
humiliate :arg0 it :arg1 ( he :arg0-of ( confide :arg1 ' )  :arg2-of ( want :arg0 i :arg0-of ( cure :arg1 of :arg2 i )  :arg1 diarrhoea :degree most :extent amr-unknown )  )
find :arg0 team :arg1 ( cure :arg1 ( illness :mod this )  )  :time ( late :op1 ( few :op1 ( temporal-quantity :unit hour )  )  )
say :arg0 ( we :poss-of ( life :mod during )  )  :arg1 ( thing :name ( name :op1 &quot; )  :op1-of home )  :arg2-of ( stand :arg0 ( man :arg0-of ( piss :arg1 psychologist )  )  :arg1 ( person :arg2-of ( learn :arg0 we :arg1 that )  :name ( name :op1 &quot; )  )  )
humiliate :arg1 ( person :mod some )  :mod ( accept :arg1 ( child :poss-of ( stage :arg1-of regress )  )  )
say :arg0 ( he :arg1-of ( accept :arg0 ( person :arg1-of ( depend :arg0 it )  )  :arg2 regression )  )  :arg1 ( ability :mod ' )
opine :arg1 ( number :quant-of ( person :arg0-of ( work :arg1 ( care :arg1 ( palliative :arg0-of ( occur :arg0-of cause :arg1 ( moment :mod great )  :location ( heart :mod very :part-of ( regression :mod such )  )  )  )  )  )  )  )
suffer :arg0 ( patient :location ( home :arg0-of ( care :arg1 palliative :mod ( thing :name ( name :op1 victor-gadbois )  )  )  )  )  :arg1 cancer :arg2 all
expectancy :mod ( life :mod ( maximum :mod-of ( temporal-quantity :quant 3 :unit month )  )  )  :poss they
cause :arg0 doctor :arg1 ( provide :arg0 they :arg1 and :arg1-of long :arg1-of ( call :arg0 ( team :arg0-of ( surround :arg1 nurse )  :poss ( stage :mod this )  )  :arg1-of ( care :arg0 curative )  )  :polarity - )
fear :arg0-of ( suffocate :arg1 conscious :op1-of and )  :arg1 ( bad :arg0 old :arg1 ( 89 :quant-of ( temporal-quantity :unit year )  )  )  :arg1-of die
contrast :condition ( discover :arg0 i :arg1 child :arg2 disease )
add :arg0 she :arg1 ( child :arg1-of ( fine :arg0 i )  )
say :arg0 ( she :arg0-of help )  :arg1 ( put :arg0 mask :arg1 breathe :arg1-of ( accept :arg0 ( i :arg0-of ( do :arg1 anything )  :arg0-of ( wish :arg1 life :polarity - )  )  :degree more :time before )  :arg2 she )
come :arg1 ( person :arg0-of ( have-rel-role :arg1 ( she :arg0-of ( look :arg1 forward :mod nevertheles )  :poss-of ( day :mod next :unit-of ( temporal-quantity :op1-of few )  )  )  :arg2 son )  :arg0-of ( visit :mod last )  )  :arg3 ( country :name ( name :op1 italy )  :wiki italy )
and :op1 ( provide :arg0 group :arg2 ( thing :name ( name :op1 victor-gadbois )  )  :arg1 care )  :op2 ( care :arg1 bodily )  :op3 ( help :arg1 ( person :arg0-of volunteer )  :arg2 feed )
possible :arg1 ( do :arg0 ( nothing :arg1-of ( give :arg2 ( care :arg1 palliative )  )  :mod else )  :arg1 this )
comfortable :arg1 die :degree more
bed :arg0-of ( care :arg1 ( province :name ( name :op1 quebec )  :wiki quebec )  )  :arg1 ( person :arg0-of inhabit )  :arg2 palliative
die :arg1 ( we :quant all )  :arg1-of ( know :arg0 we :time-of ( few :degree very :domain this )  )  :arg2 day
explain :arg0 ( person :name ( name :op1 christiane :op2 martel )  )  :arg1 ( continue :arg0 ( good :degree most )  :arg1 life :arg2 home :arg2-of ( possible :arg0 doctor :arg1 condition )  :time here )
or :op1 comfort :op2 emotional :op3 spiritual :op4 ( level :mod physical )
accept :arg1 ( help :arg0 ( person :arg1-of ( die :arg0 ( whatever :domain-of tipple )  )  )  :arg1 ( drink :arg1 ( brandy :op1-of ( or :op2 ( company :name ( name :op1 pepsi )  :wiki pepsi )  )  )  )  )
need :arg0 diabetic :arg1 ( control :arg1 ( sugar-cane :mod blood )  )  :polarity -
and :arg1-of ( die :arg0 ( life :mod everyday )  )
serve :arg1 beer :arg2 ( x :mod ( mr :arg1-of ( die :time night )  )  )  :time ( evening :mod yesterday )
decease :arg1 ( person :arg1-of ( have-rel-role :arg0 ( person :arg0-of ( finish :arg1 beer )  )  :arg2 son :time ( morning :mod this )  )  :part foot )
say :arg0 ( person :arg0-of ( have-rel-role :arg1 ( person :arg0-of ( have-org-role :arg1 of :arg2 director )  :name ( name :op1 &quot; )  )  :arg2 patient )  :arg1-of ( have-rel-role :arg0 ( person :arg2-of ( help :arg0 we :arg1 much )  )  :arg2 relative )  )  :arg1 care
contrast :arg0 another :arg1 ( follow :arg0 day :arg1 2 :location ( home :mod ( thing :name ( name :op1 victor-gadbois )  )  )  )  :arg1-of ( alike :arg0 - )
honor :arg0 ( toast :domain-of drunk )  :arg1 ( man :arg1-of ( die :manner tragically )  :arg1-of ( surround :arg0 ( person :arg0-of ( have-rel-role :arg1 ( child :mod young )  :arg2 parent )  :arg0-of ( meet :arg1 family :arg1-of ( sit :manner ( wedge :arg0 along :arg1 pillow :arg1-of firm )  )  :arg2 ( man :age ( temporal-quantity :quant 93 :unit year )  :mod old )  :mod last )  :arg1-of ( have-rel-role :arg0 person :arg2 wife )  :op1-of and )  :time ( after :op1 ( try :arg1 everything :purpose ( survive :arg1 2 )  )  )  )  :age ( temporal-quantity :quant 36 :unit year )  :mod young )
say :arg0 ( person :arg0-of ( have-rel-role :arg1 less :arg2 patient )  :arg2-of ( bed :arg0 5 :arg1 ( occupy :arg0 ( 6 :quant-of ( temporal-quantity :quant 3 :unit year )  :quant-of ( temporal-quantity :unit month )  )  :arg2 cancer :op1-of by :time always :time there )  )  )  :arg1 ( concern :arg1 ( person :name ( name :op1 &quot; )  )  :time 45 )  :mod old
come :arg0 ( hospital :source-of ( percentage-entity :value 47 )  )  :arg1 ( person :arg0-of ( admit :arg1 ( percentage-entity :value 53 )  :arg4 ( home :mod ( thing :name ( name :op1 victor-gadbois )  )  )  )  :arg0-of ( have-rel-role :arg2 patient )  )  :arg3 home
palliative :mod-of ( care :arg1-of ( access :arg1-of lack )  )
say :arg0 ( person :arg0-of ( have-rel-role :arg1 ( person :mod ( country :name ( name :op1 canada )  :wiki canada )  :poss-of home )  :arg2 patient )  :arg0-of ( reach :arg1 ( stage :mod terminal :part-of life )  :arg1-of ( pain :arg1-of ( ease :arg3-of ( design :arg1 ( care :arg0-of ( care :arg1 ( percentage-entity :value 77 )  :arg1-of ( access :manner simple :polarity - )  :arg2 ( or :op1 hospital :op2 ( home :arg0-of care )  )  )  )  )  )  )  )  )  :arg1 it
cancer :mod-of ( patient :arg2-of ( have-rel-role :arg0 ( person :arg2-of ( provide :arg0 ( specialise :op1-of ( or :arg1-of exclusive :op2 more :op3 less )  )  :arg1 ( care :arg1 ( and :example-of ( number :quant-of organization )  :op1 such :op2 ( home :mod ( thing :name ( name :op1 victor-gadbois )  )  )  :op3 ( thing :location ( city :mod great :name ( name :op1 montreal )  :wiki montreal )  :name ( name :op1 palliative :op2 care :op3 society )  )  )  :op1-of and )  )  )  )  )
fear :arg0 ( physician :arg0-of care :mod palliative :quant number )  :arg1 ( and :op1 ( adopt :arg0 ( care :arg1 health :beneficiary-of ( gap :domain it :manner precise :mod large :mod this )  :mod ( province :name ( name :op1 quebec )  :wiki quebec )  )  :arg1 law )  :op2 euthanasia :op3 ( assist :arg1 suicide )  )
and :op1 ( person :arg0-of ( oppose :arg1 ( initiative :mod such )  :arg1-of ( demonstrate :arg0 ( manifesto :arg1-of ( sign :arg0 ( luminari :arg0-of care :mod palliative )  )  )  :arg1-of ( circulate :time ( since :op1 ( date-entity :month 10 )  )  )  )  )  :name ( name :op1 balfour :op2 mount )  )  :op2 ( person :name ( name :op1 bernard :op2 lapointe )  )
palliative :mod-of ( care :arg1 quality :arg1-of ( proceed :arg1-of ( accept :op1-of before :time-of ( entitle :arg1 everyone :arg1-of ( ensure :arg0 ( system :arg0-of ( effective :arg1-of ( say :arg0 ( person :name ( name :op1 christiane :op2 martel )  )  )  :degree ( enough :polarity - )  )  :mod health :mod ( province :name ( name :op1 quebec )  :wiki quebec )  )  )  )  )  :arg2 euthanasia )  )
say :arg0 she :arg1 ( i :arg0-of ( see :time recent )  :arg1-of ( have-rel-role :arg0 ( person :arg0-of ( spend :arg1 emergency )  :arg0-of ( pain :mod great )  :arg0-of ( do :arg1 anything :arg2 ( ease :arg1 ( suffer :arg1 ( 14 :quant-of ( temporal-quantity :unit day )  )  )  )  )  )  :arg2 patient )  )
cause :arg0 they :arg1 ( die :arg1-of ( ask :arg0 ( person :arg0-of ( have-rel-role :arg1 ( i :arg0-of ( care :arg1 adequate :polarity - )  )  :arg2 patient )  :arg1-of receive )  )  )
and :op1 ( work :arg0 ( oncologist :arg1-of ( have-rel-role :arg0 person :arg2 patient :location relentless )  :quant some )  :time ( until :op1 ( day :mod last )  )  :time ( time :arg1-of ( same :arg2-of ( bad :arg1 prognos )  )  )  )
hope :arg0 ( she :arg0-of ( end :arg1 ( gruell :mod-of chemotherapy )  )  :arg2-of ( minimal :arg1 already )  )  :arg1 ( survive :arg0 ( person :name ( name :op1 hélène )  )  )  :arg2 she
say :arg1 ( tell :arg0 she :arg1 ( regret :arg1 ( give :arg0 i :arg1 fight )  )  :arg2 ( i :arg0-of ( announce :arg1 ( stop :arg0 i :arg1 treat )  )  :poss-of oncologist )  :arg3 i )
tell :arg0 she :arg1 ( finish :arg1 i )  :arg2 i
care :arg1 ( powerful :arg1 all )  :arg2 -
request :arg1-of ( accede :arg0 ( person :arg0-of ( give :arg1 ( percentage-entity :value 90 )  )  :arg1-of ( thank :arg0 ( person :arg0-of ( have-rel-role :arg2 patient )  :arg0-of ( ask :arg1 die )  )  :arg1-of ( believe :arg0 ( thing :name ( name :op1 dr :op2 martel )  )  )  :arg2 care )  )  :polarity - :time ( after :op1 ( relieve :arg1 they :arg2 ( pain :arg1 ( team :arg0-of ( care :arg1 palliative )  )  )  )  )  )
contrast :arg2 ( say :arg1 ( all :domain ( care :arg1 palliative :arg1-of ( powerful :arg2 ( treat :arg1 pain )  :polarity - )  )  :mod absolute )  )
resist :arg0 ( person :arg0-of ( have-rel-role :arg2 patient )  )  :arg1 ( treat :arg1 ( pain :arg2 ( percentage-entity :arg2-of ( case :arg1 great )  )  )  :time 8 )  :arg1-of ( say :arg0 ( person :arg0-of ( have-org-role :arg1 ( organization :location ( city :name ( name :op1 montreal )  :wiki montreal )  :name ( name :op1 palliative :op2 care :op3 society )  )  :arg2 ( director :mod care )  )  :name ( name :op1 elsie :op2 monereau )  )  )
or :op1 ( sleep :arg0 ( person :arg0-of ( have-rel-role :arg1 ( die :arg1 permanent )  :arg2 patient )  :arg1-of ( put :arg0 either :domain-of equivalent )  )  :arg1 ( resort :arg0 physician :arg1 ( sedation :mod palliative )  :frequency often :time ( end :arg1 life :degree very )  :time then )  :time ( until :op1 time )  )  :op2 sporadically
possible :arg1 ( pretend :arg0 we :arg1 ( understand :arg1 ( suffer :arg1 this )  :polarity - :arg0 we )  )  :polarity -
palliative :degree ( such :mod-of ( sedation :mod ( unreliev :mod-of ( person :arg0-of ( have-rel-role :arg2 patient )  :prep-with-of option )  )  :poss-of increasingly )  )
say :arg0 amr-unknown :arg1 ( thing :arg1-of ( mean :arg2 die )  :arg1-of ( want :arg0 i :polarity - )  :arg1-of same )  :arg1-of ( relieve :arg0 patient )  :time always
contrast :arg1 ( want :arg0 i :arg0-of ( relieve :arg1-of ( want :arg0 ( i :arg2-of ( mean :arg1 it )  )  :polarity - )  )  :arg1 you :arg1-of ( mean :arg2 i :mod necessarily )  )  :arg2 this
journalism :arg1-of ( award :arg0 ( institute :mod ( research :arg1 health )  :mod ( country :name ( name :op1 canada )  :wiki canada )  )  :arg1-of ( thank :arg0 ( report :mod this )  :arg1-of possible )  )
scandal :location ( province :name ( name :op1 quebec )  :wiki quebec )  :mod ( estate :mod real )
tell :arg0 ( person :arg0-of ( specialize :arg1 mafia )  :arg0-of ( know :arg1 of :arg1-of ( combine :arg0 ( system :mod formidable )  :arg2 ( build :arg0 ( government-organization :arg0-of govern :arg1-of ( have-org-role :arg0 ( person :op1-of ( and :arg1-of crime :op2 politician :op3 trade :op4 ( political-party :arg0-of organize :name ( name :op1 unionist )  :wiki - )  )  )  :arg2 official )  )  :arg1 industry )  )  )  :op4-of ( and :op1 ( fund :arg0 ( person :arg0-of ( contract :arg1 day )  :arg1-of ( build :arg0 ( person :arg0-of ( have-org-role :arg2 official )  :mod highway :mod ( day :mod after )  )  )  )  :arg1 ( politics :mod-of party )  )  :op2 raiser :op3 ( country :name ( name :op1 italy )  :wiki italy )  )  )  :arg1 amr-unknown :arg2 they
and :mod 1990 :mod ( especially :mod ( dearly :mod ( taxpayer :mod ( cost :arg1 industry :mod-of ( province :name ( name :op1 quebec )  :wiki quebec )  )  )  )  )  :op1 2000
say :arg0 ( we :arg0-of ( measure :arg1 of )  :arg0-of ( take :arg1 drastic :arg1-of ( crumble :arg0 system )  :arg1-of ( curious :arg0 it :arg2 amr-unknown )  :arg2 chief :op1-of ( and :location ( city :name ( name :op1 montreal )  :wiki montreal )  :op2 ( person :name ( name :op1 &quot; )  )  :op3 ( province :name ( name :op1 quebec )  :wiki quebec )  :op4 politician :op5 former :op6 police )  :time since )  )  :arg1 ironically
jean :arg1-of ( char :arg1-of ( construct :mod road :mod-of ( contract :arg2-of ( relate :arg0 ( have-org-role :arg0 time :arg1-of ( liberal :arg0 ( date-entity :year 2011 )  )  :arg2 ( minister :arg0-of ( consent :manner reluctant :mod only )  :mod prime )  )  :arg1 ( corrupt :arg1-of ( investigate :arg0 ( scandal :arg0-of ( break-up :arg1 it )  )  :manner depth )  )  )  :location ( province :name ( name :op1 quebec )  :wiki quebec )  )  )  )
and :op1 ( link :arg1-of direct :mod-of ( industry :mod between :mod ( establish :arg1 ( person :name ( name :op1 the )  )  )  :mod report :mod under )  )  :op2 table :op3 ( party :mod of :mod finance )  :op4 bribe :op5 ( person :arg0-of ( have-org-role :arg2 official )  )
say :arg0 ( he :arg0-of ( save :arg1 billion :arg1-of ( report :arg0 ( organization :name ( name :op1 &quot; )  :op1-of alone )  :arg2 contract )  )  :arg0-of ( share :arg1 expressive :arg1-of ( get :arg0 ( person :arg0-of ( curb :arg2 instinct )  )  )  )  :arg2-of ( open :arg0 ( inquire :arg0 since )  :arg1 certain )  )  :arg1 ( monetary-quantity :unit dollar )  :time ( date-entity :year 2010 )
hope :arg0 ( he :arg0-of ( have-org-role :arg1 ( organization :name ( name :op1 the )  )  :arg2 mayor )  :arg0-of ( add :arg1 2 )  :arg0-of ( scheme :arg1 individual :op1-of behind )  :arg2-of ( bring :arg0 already :time down )  )  :arg1 ( succeed :arg1 it :arg1-of reveal )  :mod that
create :arg1-of ( corrupt :arg0 ( date-entity :year 2011 )  :arg1-of ( oppose :arg0 ( unit :mod permanent )  )  )
couple :arg1 ( organization :arg0-of create :name ( name :op1 permanent :op2 anti-corruption :op3 unit )  )  :arg2 ( army :consist-of ( person :arg0-of ( analyze :arg1 ( government-organization :arg0-of govern )  )  :op1-of ( and :op2 ( person :arg0-of ( investigate :arg1 ( date-entity :year 2011 )  )  )  :op3 auditor )  )  )  :mod also
policeman :mod ( squad :arg1-of ( lead :arg2 plus :location ( city :arg0-of ( sew :arg1 cartel :arg2 ( soft :arg1-of ( pedal :arg0 ( since :mod-of ( date-entity :year 2009 )  )  :arg2 ( inflation :mod-of ( of :mod-of ( contract :op1 expressive )  )  )  )  )  )  :name ( name :op1 montreal )  :wiki montreal )  :mod apparent )  )
and :op1 ( conduct :arg1 ( series :domain ( and :arg1-of ( charge :arg1-of bring :arg2 fraud )  :op1 ( corrupt :arg1 ( recent :mod-of ( week :unit-of temporal-quantity )  )  )  :op2 ( person :name ( name :op1 richard :op2 marcotte )  :op2-of ( and :example-of ( politician :mod municipality )  :op1 ( person :arg0-of ( have-org-role :arg1 ( town :mod suburb )  :arg2 mayor )  :name ( name :op1 frank :op2 zampino )  )  )  )  )  :quant-of ( search :arg1 such )  )  )
list :topic-of ( next :domain-of ( person :arg0-of ( have-org-role :arg1 ( country :arg2-of ( resign :arg1 post :mod just )  :name ( name :op1 laval )  )  :arg2 mayor :location ( province :location-of ( city :mod ( large :degree most )  )  :name ( name :op1 quebec )  :wiki quebec )  :op1-of apparent )  :name ( name :op1 gilles :op2 vaillancourt )  )  )
suspect :arg1 ( pocket :arg1 ( bribe :arg1-of repeat )  :arg1-of ( exchange :arg3 ( contract :mod public )  )  )  :arg2 he
and :arg2-of ( accuse :arg0 ( country :name ( name :op1 italy )  :wiki italy )  :arg1 other :arg1-of ( engineer :arg0 ( person :op1-of ( and :op2 entrepreneur )  )  :location ( city :name ( name :op1 montreal )  :wiki montreal )  :mod highway )  :manner formal )  :op1 ( person :name ( name :op1 tony :op2 accurso )  )  :op2 ( person :name ( name :op1 lino :op2 zambito )  )
cause :arg0 latter :arg1 ( explain :arg0 public :arg1 commission :mod sensation :mod-of of :mod-of ( system :mod contract )  :mod-of mechanic )
value :arg1 percentage-entity :arg1-of ( contract :arg0 ( he :arg0-of ( obtain :arg1 ( city :arg1-of ( link :arg0 intermediary )  :name ( name :op1 montreal )  :wiki montreal )  )  :arg0-of ( pay :arg1 ( money :arg1-of ( turn :arg0 mafia )  )  )  :arg0-of ( have-org-role :arg1 party :arg2 mayor )  :arg0-of ( pay :arg1 3 )  )  )
roughly :op1 ( hand-over :arg0 ( thing :arg0-of ( give :arg1 ( monetary-quantity :domain-of power :unit ( dollar :mod ( country :name ( name :op1 canada )  :wiki canada )  )  )  :arg2 ( party :mod province )  )  :name ( name :op1 mr :op2 zambito )  )  :arg1 money :arg2 2000 :arg3-of ( free :arg0 ( thing :name ( name :op1 liberals )  :op1-of especially )  :arg1 then )  )  :op2 ( monetary-quantity :unit euro )
admit :arg0 ( he :arg0-of ( have-org-role :arg2 ( minister :mod prime :mod deputy )  :time ( former :arg1-of liberal )  )  )  :arg1 ( organize :arg1 ( fundraiser :mod ( law :polarity - )  )  :arg3 ( thing :name ( name :op1 nathalie :op2 normandeau )  )  :arg0 he )  :mod also
sew :arg1 ( contract :arg1-of ( cost :arg1-of inflate )  )
run :arg0 system :arg1 ( corrupt :arg1 ( city :name ( name :op1 montreal )  :wiki montreal )  )  :arg1-of smooth
trip :arg0 ( invitation :arg1-of ( match :arg0 hockey :op4-of ( and :op1 ( person :arg0-of ( detail :arg1 commission )  :arg0-of ( describe :arg2 front )  :name ( name :op1 gilles :op2 surprenant )  )  :op2 ( receive :arg0 ( he :arg0-of ( total :arg1 ( bribe :arg0-of ( exchange :arg1 ( contract :beneficiary-of ( inflate :arg1 ( cost :arg1 ( tournament :mod golf )  )  )  :topic ( sew :arg1 restaurant )  )  :arg3 ( monetary-quantity :unit dollar )  )  )  )  )  )  :op3 ( gift :arg1 ( company :arg1-of ( construct :arg1-of ( work :arg0 ( person :arg0-of ( engineer :time former )  )  :arg2 public )  )  )  )  )  )  )  :arg1 ( temporal-quantity :unit year )
and :arg1-of ( invoice :arg1-of ( inflate :arg0 ( palm :arg0 ( person :arg0-of ( have-org-role :arg1 highway :arg2 official )  :arg0-of ( admit :arg1 ( 40 :value-of percentage-entity )  )  )  :arg1 other )  :arg1-of ( grease :time 30 )  )  )  :op1 ( on :mod ( false :mod-of add )  )
parallel :arg0 ( he :arg0-of ( have-org-role :arg1 ( party :mod ( organis :mod then )  )  :arg2 mayor )  :arg0-of ( feed :arg1 ( money :arg1-of ( dirty :arg0 coffer )  )  )  :arg0-of ( close :arg1 deliberate :arg2 eye )  :arg2-of ( accuse :arg0 martin )  )  :arg1 budget
resign :arg0 ( thing :name ( name :op1 mr :op2 tremblay )  )  :arg0-of ( plunge :arg1 ( city :name ( name :op1 montreal )  :wiki montreal )  :arg4 ( crisis :arg1-of major )  )  :time ( date-entity :month 11 :op1-of early :time-of ( reveal :arg2-of ( follow :arg1 this )  )  )
raise :arg1 ( alarm :arg0 ( person :name ( name :op1 chantal :op2 rouleau )  )  )  :purpose-of ( city :location-of woman :name ( name :op1 montreal )  :wiki montreal )
and :op1 ( buy :arg0 ( person :arg0-of ( have-org-role :arg1 ( borough :arg1-of ( protest :arg0 she :time ( date-entity :year 2010 )  )  :poss ( country :name ( name :op1 rivière-des-prairies )  )  )  :arg2 mayor )  :arg0-of develop )  :arg1 ( land :mod municipality :poss-of sale )  :arg2 ( boom :arg1 ( estate :mod real )  :arg2 height :op1-of island )  :arg4 ( monetary-quantity :quant 5 :unit dollar )  )
dirty :arg1 money :manner ( campaign :arg1 ( elect :arg1 ( percentage-entity :value 70 )  )  )
say :arg0 ( she :arg0-of ( find :arg1 ( amr-unknown :arg1-of ( infiltrate :arg0 system )  )  )  )  :arg1 ( investigate :arg0 ( she :arg0-of ( follow :arg1 thread )  :arg0-of ( put :arg1 work :arg1-of ( stop :arg0 ant )  :arg1-of ( catch-up :arg0 gangrene :op1-of ( and :op2 culprit )  )  )  )  :arg1 eventual :arg1-of will :arg1-of implement )
contrast :arg1 positive :arg1-of ( say :arg0 ( she :arg1-of ( process :arg1-of pain )  )  )
contrast :arg1 ( clean :arg1 wound )  :arg2 ( need :arg0 ( city :arg0-of ( avoid :arg1 ( return :arg1 ( practice :mod questionable :mod this )  )  )  :arg0-of ( monitor :arg1 ongo )  :name ( name :op1 montreal )  :wiki montreal )  :arg1 ( unit :mod investigative )  )
house :arg1-of ( clean :arg0 amr-unknown )
properly
contrast :arg1 ( monetary-quantity :unit dollar )  :arg2 ( he :arg0-of ( concern :arg1 ( person :mod-of note :name ( name :op1 jacques )  )  :location about :mod especially :op1-of role )  :arg0-of ( elect :arg1 person :arg2 scheme )  :arg0-of ( neck :arg1 ( scam :op1 expressive )  :arg2 they :polarity - )  :arg2-of ( steal :arg0 he :arg1 ( person :arg0-of ( have-org-role :arg1 of :arg2 official )  :mod that )  )  )
say :arg0 ( he :arg0-of ( campaign :arg1 70 )  :arg0-of ( dirty :arg1 ( money :arg1-of estimate :arg1-of ( elect :arg0 ( province :name ( name :op1 quebec )  :wiki quebec )  :arg2 percentage-entity )  :arg1-of finance :arg1-of share )  )  :arg0-of ( tell :arg1 it :arg2 i )  :arg0-of ( pale :arg1 reflect :arg2 reality :mod only )  )  :arg1 dryly
contrast :arg1 ( monetary-quantity :unit dollar )  :arg2 ( change :arg1 ( situation :arg1-of ( say :arg0 ( he :arg0-of ( expend :arg1 strict :arg2 there )  :arg0-of ( dirty :arg1 ( money :arg1-of limit )  )  :arg1-of ( elect :arg2 politics :mod until )  )  )  :arg1-of ( limit :arg0 ( government-organization :arg0-of ( govern :arg1 ( province :name ( name :op1 quebec )  :wiki quebec )  )  :arg0-of propose :arg0-of ( donate :arg1 ( party :part 100 )  )  )  )  :arg1-of mean :mod this )  :polarity - )
mean :arg1 ( fund :arg0 ( he :arg0-of ( help :arg1 courage )  :arg0-of overhaul :arg0-of ( grant :arg1 system :arg1-of public )  :arg0-of ( contract :arg1 ( and :op1 party )  )  :arg0-of ( advocate :arg1 thing )  :arg1-of complete )  :arg1 ( go :arg0 ( we :arg0-of ( rebuild :arg1 ( solid :arg0 house :arg1 ( foundation :wiki mac_cosmetics )  :degree more )  )  :arg0-of ( control :arg1 more :op1-of ( and :op2 law )  )  )  :arg1 bottom :arg1-of ( low :arg0 any :arg2 and )  :arg4 - )  )
invite :arg0 ( thing :name ( name :op1 mr :op2 duchesneau )  )  :arg1 ( anyone :arg0-of ( laugh :arg1 ( look :arg1 backyard )  )  )  :purpose ( tarnish :arg0 ( story :mod this )  :arg1 ( image :mod international :op1-of ( and :op2 ( province :name ( name :op1 quebec )  :wiki quebec )  :op3 ( city :name ( name :op1 montreal )  :wiki montreal )  )  )  )
organization :mod-of ( organization :mod expressive :name ( name :op1 &quot; )  :polarity - )  :name ( name :op1 &quot; )
take :arg0 you :arg1 ( stature :mod new :poss ( season :mod this )  :prep-with ( organization :name ( name :op1 psg )  )  )
explain :arg0 you :arg1 ( progress :mod this )  :manner amr-unknown :mode interrogative
contrast :arg1 ( possible :arg0 ( dimension :mod new :poss ( organization :name ( name :op1 psg )  )  )  :arg1 ( explain :arg0 ( awareness :mod individual )  :arg1 it )  )  :arg2 also
arrive :arg1 ( person :arg0-of play :mod great :quant some )
progress :arg0 day :arg1 alongside :arg2 they :arg2-of ( make :arg0 i :arg1 every )
bring :arg0 ( person :arg2-of ( staff :mod technical )  )  :arg1 lot :arg2 i :mod also
help :arg0 ( thing :mod this :quant all )  :arg1 ( raise :arg0 i :arg1 level :arg3 ( play :arg1 day )  )
and :op1 ( easy :arg1 ( it :arg1-of match )  )
move :arg1 everything :arg2 football :manner ( fast :degree very )
contrast :arg2 ( i :arg0-of ( work :polarity - )  )
move :arg0 i :arg1 ( saint :arg1-of ( debut :arg0 i )  :arg1-of ( transfer :arg0 centre-left )  :arg1-of train )  :arg1-of ( step :arg1-of step )  :time always
cause :arg1 ( benefit :arg0 you :arg2 ( compete :arg1-of ( bring :arg0 ( person :name ( name :op1 carlo :op2 ancelotti )  )  )  )  )
use :arg0 ( person :arg1-of recruit :mod summer )  :arg1 this :arg1-of play :arg1-of match :arg3-of ( high :arg1 level )
know :arg0 they :arg1 ( crucial :domain ( session :mod every :mod train )  )  :mod also
and :op1 ( make :arg1 ( thing :arg0-of play )  )  :op2 ( want :arg0 i :arg1 ( face :arg0 i )  :arg2-of resemble )  :op3 ( give :manner ( good :degree most )  )
give :arg0 ( person :arg0-of ( regard :arg1 position )  :name ( name :op1 carlo :op2 ancelotti )  )  :arg1 lot :arg2 i :time ( hand :mod other )
resemble :arg1 ( person :arg0-of ( have-org-role :arg2 deputy )  :arg1-of ( support :arg0 ( he :arg0-of play :arg0-of ( position :arg1 ( same :arg1 i )  )  )  )  )
be :arg1 ( person :domain-of ( man :mode interrogative :prep-for job )  :name ( name :op1 ancelotti )  )
definitely
inspire :arg0 ( person :name ( name :op1 ancelotti )  )  :arg1 ( respect :arg0 ( person :arg1-of expert )  :arg1 all )
equal :arg0 he :arg1 ligue :arg2 ( he :arg2-of ( coach :arg0 ( one :mod ' :mod-of of )  :arg1 ( continent :name ( name :op1 europe )  :wiki europe )  :manner ( good :degree most )  )  :op1-of and )  :arg3 1 :polarity - :time today
and :arg0-of ( win :arg1 he :arg2 ( title :quant many )  )  :op1 ( experience :arg1 mass :arg2 ( top :mod-of club )  )
great :arg1-of ( play :arg0 ( person :arg0-of ( work :arg1 he )  )  )
think :arg0 i :arg1 ( bring :arg0 he :arg1 ( title :quant more )  :arg2 ( city :name ( name :op1 paris )  :wiki paris )  )
discuss :arg0 i :arg1-of encourage :arg2 1
come :arg1 i :arg3 ( series :quant-of injure )  :direction back :mod just
explain :arg1 ( perform :arg0 ( confidence :arg1-of ( give :arg0 he :arg2 i )  )  )  :mod also
attach :arg0 you :arg1 ( important :mod amr-unknown )  :arg2 season :manner ( organization :name ( name :op1 psg )  )  :mode interrogative
overtake :arg0 ( city :name ( name :op1 lyon )  :wiki lyon )  :arg1 ( top :mod 1 )
contrast :arg1 ( we :arg1-of wait )  :arg2 sideline
thing :domain ( qualify :arg0 we :arg1 last :arg2 ( goal :mod main :poss ( we :poss 16 )  :quant 1 )  :manner ( way :mod right )  )  :name ( name :op1 champions :op2 league )
club :mod-of ( compete :arg0 goal :arg3 interrogative :degree amr-unknown :mod this )
possible :arg1 ( go :arg0 ( we :arg0-of ( try :arg1 far )  )  )
possible :arg0 now :arg1 anything
contrast :arg2 ( say :arg0 we :arg1 something :time ( against :mod some )  :time ( good :degree very :mod-of team :mod-of ( continent :name ( name :op1 europe )  :wiki europe )  )  )
want :arg0 ( we :poss-of pool )  :arg1 ( finish :arg0 we :arg1 top :time ( ahead :op1 ( organization :name ( name :op1 porto )  )  )  )  :arg2 ( match :arg0 all :arg1 ( advantage :mod home )  :mod last :quant 16 )
possible :arg1 ( become :arg1 ( organization :name ( name :op1 psg )  )  :arg2 ( club :mod top :mod ( continent :name ( name :op1 europe )  :wiki europe )  )  :manner ( term :mod short )  )  :mode interrogative
budget :mod already :poss it
need :arg0 ( city :arg1-of ( become :arg2 ( club :mod top :mod ( continent :name ( name :op1 europe )  :wiki europe )  )  )  :name ( name :op1 paris )  :wiki paris )  :arg1 ( and :op1 ( keep :arg0 time )  )  :arg3 ( win :arg1 title )
case :arg3 ( today :mod-of this )  :polarity -
mean :arg0 ( organization :name ( name :op1 psg )  )  :op1-of finance
fail :arg1 ( title :arg2-of ( win :arg1 1 :degree - )  )  :arg1-of ( resemble :arg2 ( season :mod last )  )  :arg2 ligue :mod big :mode interrogative
disappoint :arg1 definitely :arg1-of major
commit :arg0 ( we :arg0-of ( win :arg1 championship )  )  :arg1 this :op1-of really :prep-on-of ( temporal-quantity :unit year )
season :quant ( far :mod-of ( away :mod last :mod we :polarity - )  )
cause :arg0 ( good :arg1-of ( disappoint :mod great )  :domain ( finish :arg0 we :arg1 ( date-entity :month 5 )  )  :mod enough )
terrific :mod-of ( season :domain it )
finish :arg0 we :arg1 ( point :quant 79 )
good :domain ( point :arg1-of ( normal :arg0 top )  :quant 79 )  :mod enough
contrast :arg1 ( organization :mod ( another :mod-of ( team :poss-of ( season :arg1-of ( fantastic :degree ( more :mod even )  )  )  )  )  :name ( name :op1 montpellier )  )
think :arg0 i :op1-of ( year :mod this )
think :arg0 i :arg1 ( weapon :arg2-of ( win :arg0 we )  )  :concession even :time ( compete :arg0 title :arg1 ( team :example ( and :arg2-of resemble :op1 ( city :name ( name :op1 marseille )  :wiki marseille )  :op2 ( city :name ( name :op1 lyon )  :wiki lyon )  :op3 ( country :name ( name :op1 bordeaux )  )  )  :mod big )  )
think :arg0 you :arg1 ( expect :arg0 media :arg1 ( organization :mod ( much :degree too )  :name ( name :op1 psg )  )  )  :mode interrogative
expect :arg0 ( we :arg0-of ( invest :arg1 ( give :arg0 lot :arg1 ( and :op1 ( person :arg0-of play )  )  )  )  )  :arg1 ( normal :arg1 it )
accept :arg0 we :degree total
blame :arg1 ( thing :arg1-of ( find :arg0 ( we :arg0-of ( win :arg1 home )  )  :op2-of ( and :op1 they :op3 definite :op4 ( frustrate :arg1 bit )  :time after )  :time still )  )
wonder :arg0 you :arg1 ( expect :arg0 ( person :quant more )  )
win :arg0 you :arg1 ( every :op1-of weekend )
barcelona :op1 expressive :polarity - :quant we
implement :arg0 ( we :arg0-of ( try :arg1 game )  )  :arg1 project
take :arg0 ( build :arg0 it :arg1 team )  :arg1 time
prove :arg0 ( thing :name ( name :op1 champions :op2 league )  )  :arg1 ( possible :arg1 ( hold :arg0 we :arg1 we )  )
look :arg0 ( organization :name ( name :op1 manchester :op2 city )  )  :arg1 ( fail :arg1 ( season :arg1 16 :quant 2 )  :arg2 ( person :arg1-of ( qualify :arg2 ( spend :arg1 last :arg3 ( amount :mod huge )  :mod also )  )  )  )
recommend :arg1 ( point :arg1-of ( base :arg2 ( amount :arg1-of invest )  )  :mod ( ahead :prep-in ( break-up :mod winter )  )  :quant 15 )  :arg2 you
and :arg1-of ( ignore :arg0 that :arg2 ( person :arg0-of ( oppose :arg1 we )  )  )  :op1 ( thing :name ( name :op1 french :op2 championship )  )
and :location ( city :name ( name :op1 marseille )  :wiki marseille )  :op1 ( city :name ( name :op1 lyon )  :wiki lyon )  :op2 good :op3 ( boost :arg1 ( season :mod last )  :polarity - )  :op4 ( organization :mod new :name ( name :op1 lyon )  )
show :arg0 this :arg1 ( excite :arg1 ( organization :name ( name :op1 ligue )  )  )  :time 1
say :arg1 ( difficulty :mod all )  :arg1-of ( smile :arg0 we :arg1-of ( possible :arg0 final :arg1-of ( hope :arg0 i :arg2 we )  :arg2 ( date-entity :month 5 )  )  )
seem :arg1 ( depend :arg1 ( organization :name ( name :op1 psg )  )  :degree total )  :time ( exploit :arg1 ( person :name ( name :op1 zlatan :op2 ibrahimovic )  )  )
say :arg0 person :arg1 ( much :arg1-of cause :arg1-of depend :arg1-of cause )
mean :arg1 this :arg2 ( succeed :arg0 ( person :name ( name :op1 ibrahimovic )  )  :degree very :op1-of ( and :frequency ( lot :quant-of goal )  :op2 score )  )
prove :arg0 ( he :op2-of ( and :op1 ( come :arg0 he :arg1 that :arg3 why )  )  )  :arg1 ( he :domain-of ( star :arg1-of of :quant 1 )  )
demonstrate :arg0 he :arg1 ( go :arg0 ( he :arg0-of ( play :arg1 great )  )  :arg1 ( star :location world )  :arg4 everywhere )
and :op1 ( man :arg1-of ( respect :arg0 we :prep-in ( group :op1-of within )  )  )  :op2 ( thing :arg0-of play )
and :op1 ( respect :arg0 he :arg1 man :arg2 around :mod also )
exceptional :domain ( do :arg0 he :arg1 amr-unknown )
push :arg0 it :purpose ( raise :arg0 other :arg1 level :arg3 play )
help :arg0 ( person :name ( name :op1 thiago :op2 silva )  )  :arg1 ( progress :arg0 everyone :mod else )  :arg4 ( world :compared-to-of ( good :degree most :mod-of ( defend :arg0 person )  )  )  :mod also
euro :poss you :time ( date-entity :op1-of interrogative :year 2012 )  :time-of ( team :mod ( country :name ( name :op1 france )  :wiki france )  :poss-of amr-unknown )
disappoint
want :arg0 i :arg1 ( play :arg1 ( euro :mod this )  :arg0 i )  :mod really
prevent :arg1 ( i :arg1-of injure :op1-of ( game :purpose-of ( time :mod any )  )  )  :arg2-of fortunate
and :op1 ( see :arg0 ( i :arg1-of ( come :arg2 strong )  )  :arg1 ( thing :quant some )  :location there )
select :arg0 today :arg1 match :arg2 i :manner well :manner play
hope :arg0 i :arg1 amr-unknown :arg2-of ( baptize :arg0 i :arg1 blue )  :manner since
owe :op4-of ( and :op1 ( learn :arg0 i :arg1 lesson )  :op2 ( country :name ( name :op1 ukraine )  :wiki ukraine )  :op3 i :op5 ( behave :arg1 exemplary )  )  :time now
think :arg1 ( amr-unknown :arg0-of ( charge :arg1 blue :arg3 deschamp :duration ( temporal-quantity :unit month )  :mode interrogative :time few :time about )  )
result :arg0 ( he :arg2-of ( want :arg0 he )  )  :arg2 thing
qualify :arg0 ( we :arg0-of place )  :arg1 group
win :arg1-of ( inspire :arg0 ( person :arg0-of coach :arg1-of tough )  :op2-of ( and :op1 ( person :arg0-of play )  )  )
resemble :arg1 ( person :name ( name :op1 laurent :op2 blanc )  )
contrast :arg2 ( want :arg0 i :arg1 ( compare :arg0 any )  :polarity - )
achieve :arg0 ( person :arg1-of ( qualify :arg0 we :arg2 euro )  :name ( name :op1 blanc )  )  :arg1 goal
hope :arg0 i :arg1 ( take :arg0 ( person :name ( name :op1 didier :op2 deschamps )  )  :arg1 ( organization :name ( name :op1 blues )  )  :arg3 ( country :name ( name :op1 brazil )  :wiki brazil )  )
represent :arg0 ( date-entity :month 10 )  :arg1 ( match :topic found )  :mode ( interrogative :mode-of ( snatch :arg1-of ( draw :arg0 ( country :name ( name :op1 spain )  :wiki spain )  :arg1-of do :mod good )  :time 16 )  )
give :arg0 ( match :mod that )  :arg1 confidence
fight :arg0 everybody :arg1 everybody
experience :arg0 ( i :arg1-of ( shock :arg0 before )  )  :arg1 ( country :name ( name :op1 spain )  :poss-of ( career :poss i :poss such )  :wiki spain )  :arg1-of match
and :op1 ( pay :arg0 ( thing :name ( name :op1 bitcoin )  )  :location bank )  :op2 sell
identify :arg0 ( opposite :arg1 ( base :arg2 ( bank :mod central )  )  :arg2 ( exchange :time current )  )  :arg1 ( and :op1 ( transact :arg0 ( party :arg1-of involve )  :arg1 money )  :op2 ( fee :mod process )  )
lead :arg0 ( system :quant money :time current )  :arg1-of ( believe :arg0 ( monopoly :mod ( banking :mod-of often )  )  :arg2 ( palpate :arg0 ( finance :mod-of crisis )  :arg1 ( vision :mod politics )  )  )  :arg2 ( technology :mod ( this :mod-of addition )  )
and :arg1-of ( resemble :arg0 pseudonym )  :op1 ( person :arg1-of ( invent :arg0 ( person :arg0-of ( have-rel-role :arg1 both :arg2 peer )  :arg0-of ( have-rel-role :arg1 ( exchange :arg0 ( monetary-quantity :unit euro )  :arg1 file :arg1-of ( allow :arg0 fact )  )  :arg2 peer )  :name ( name :op1 satoshi :op2 nakamoto )  )  )  :name ( name :op1 bitcoin )  )  :op2 ( contrast :arg0 virtual :arg1 currency :arg2 convertible )  :op3 ( protocol :location-of ( exchange :arg1 ( monetary-quantity :unit dollar )  :arg1-of secure )  )
record :arg1 ( transact :arg1 network :op1-of around )  :arg2 computer :time already
thousand :quant-of ( site :arg4-of ( close :arg0-of ( accept :arg1 ( bitcoin :example ( or :op1 ( donate :arg1 payment )  :op2 mean )  )  )  )  :mod web )
list :arg1 ( rate :arg0-of ( reach :arg1 ( peak :arg0 around :arg1 ( monetary-quantity :quant 30 :unit dollar )  )  :op1-of ( after :mod-of ( 2 :quant-of ( monetary-quantity :unit dollar )  )  :quant ( temporal-quantity :quant 5 :unit month )  :time-of ( fall :arg1 ( rate :mod ( exchange :arg0 ( date-entity :year 2011 )  :arg1 ( 23 :quant-of ( monetary-quantity :unit euro )  )  )  )  :purpose ( return :arg1 ( date-entity :month 6 )  :arg4 ( monetary-quantity :op1-of dozen :unit dollar )  :time today )  :time late )  )  )  )  :location site
or :arg1-of ( transact :arg2-of ( compare :mod-of ( nothing :arg1-of ( impress :degree very )  )  )  :mod globe )  :op1 ( currency :mod real )  :op2 ( product :mod finance )
interest :arg1 ( organization :name ( name :op1 european :op2 central :op3 bank )  :poss-of ( report :topic ( currency :arg1-of ( publish :arg0 ( organization :name ( name :op1 ecb )  :wiki european_central_bank )  :time ( date-entity :month 10 )  )  :mod virtual )  )  )
and :arg1-of ( resemble :arg2 conventional )  :op1 ( monetary-quantity :op2-of ( or :op1 ( monetary-quantity :arg3-of ( compete :arg0 currency :arg1 ( succeed :arg1 virtual :degree most )  :arg1-of ( describe :arg0 it )  )  :unit dollar )  )  :unit euro )  :op2 currency
and :op1 ( buy :arg0 you :arg1 ( exchange :arg0 sometimes :arg1-of return )  :arg1-of possible :op1-of ( or :arg1-of ( win :arg0 you :arg2 ( progress :arg0 such :arg1 game :arg2 currency :arg2-of ( use :arg0 ( person :arg0-of ( differ :arg1 ( other :mod-of ( of :mod-of virtual )  :mod-of type )  )  :name ( name :op1 bitcoin )  )  :arg1 credit )  )  )  :arg1-of play )  :op1-of video )
develop :arg0 ( company :location ( network :mod society )  :name ( name :op1 facebook )  :wiki facebook )  :arg1 ( system :mod ( kind :mod this )  )  :mod also
contrast :arg2 ( and :arg1-of ( control :arg1-of ( occasion :mod each )  )  :op1 ( handle :arg0 ( authority :mod central )  :arg1 exchange )  )
custodian :arg2-of ( nod :arg0 ( and :op1 ( person :name ( name :op1 bitcoin )  )  :op2 ( account :poss-of book )  :op3 auditor :op4 ( person :arg0-of buy :op2-of ( and :op1 ( issuer :mod currency )  :op3 ( person :arg0-of sell )  )  )  )  :arg1 network :quant all )  :mod both
operate :arg1 network :manner amr-unknown :mode interrogative
carry-out :arg1 ( transact :arg1 ( user :quant 2 )  :mod each )  :arg2 ( resemble :arg0 electronic :arg1 ( address :quant 2 )  :arg2 e-mail )  :mod actual
thereby :manner-of ( ensure :arg0 ( person :arg0-of use :arg0-of ( choose :arg1 address :arg1-of ( possible :condition except )  )  :arg1-of differ )  :arg1 anonymity :arg4 ( payment :mod each )  )
sign :arg0 ( system :arg0-of encrypt :arg1-of ( key :arg2 dual )  )  :arg1 ( set :consist-of ( information :arg1-of ( associate :arg2 ( transact :mod this )  )  )  )  :manner electronic
possible :arg1 ( verify :arg0 ( network :arg0-of transact )  :arg1 authenticity )  :arg1-of cause
possible :arg1 ( ensure :arg1 ( exist :arg1 ( bitcoin :arg1-of exchange )  :location ( book :mod public :poss ( account :arg0-of ( broadcast :arg1 ( across :op1 ( network :mod entire )  )  )  )  )  )  :manner ( use :arg1 ( thing :arg1-of ( contain :arg0 file )  )  )  )  :mod also
enter :arg0 ( step :arg1-of key )  :arg1 ( transact :mod new )  :location book
and :op1 ( pass-out :arg0 it :arg1 ( issue :arg1 ( challenge :arg1 winn :arg2-of ( add :arg1 ( line :mod this :mod extra )  :arg1-of privilege :arg1-of ( bank :mod central :mod interim :mod kind )  )  :mod mathematical )  :arg2 computer )  :path resolution )
phase :domain this :example ( transform :arg1 ( file :mod large )  )  :mod ( hash :arg1 file :arg1-of ( imprint :arg2 ( and :op1 short :op2 unique )  :mod digital )  )
and :arg1-of add :op1 ( take :arg0 computer :arg1 it :arg2 then :purpose ( hash :arg0 it :arg1 ( up :quant all )  )  )  :op2 ( transact :arg1 number :mod new )
zero :arg1 begin :arg2-of ( give :arg0 ( number :arg1-of ( find :arg0 goal )  )  :arg1 ( imprint :arg1-of special )  )  :quant lot
possible :arg1 ( check :arg0 ( nod :mod other )  :arg1 right :time once )  :condition ( find :arg1 ( number :mod this )  )
and :arg1-of ( imprint :arg1-of ( alter :arg0 ( modify :mod any )  )  )  :op1 ( transact :mod other :mod-of ( chain :arg2-of ( link :arg1 transact :time then )  )  :quant all )
imprint :arg0-of ( cause :arg1 ( remain :arg0 other :arg1 ( orphan :arg1 ( temporal-quantity :op1-of less :unit minute )  )  :arg2 ( defraud :arg0 ( person :arg0-of use )  :arg1 ( pay :arg1 only :arg1-of ( quick :degree very )  :manner ( money :arg1-of same )  )  :arg1-of ( want :concession-of ( validate :arg0 network :arg1 ( transact :quant 2 )  )  :arg0 person )  )  )  )  :arg1 2 :arg1-of differ
win :arg0 ( computer :arg0-of ( resolve :arg1 challenge )  )  :arg1 ( bitcoin :quant 50 )
divide :arg0 ( end :arg1 ( date-entity :year 2012 )  )  :arg1 ( award :mod this )  :arg1-of ( regular :arg0 probable )  :purpose ( avoid :arg0 2 :arg1 inflation )
contrast :arg1 ( limit :arg1 ( number :quant-of bitcoin )  )  :arg2 ( leave :arg0 millionth :arg1 ( margin :mod some )  :arg2 ( circulate :arg0 they :arg1 21 )  )
raise :arg1 ( difficult :topic challenge )  :arg2 ( increase :arg1 ( power :arg1-of compute )  :mod each )  :mod also
and :op1 ( up :poss ( network :mod-of life :poss-of down )  )
and :op1 ( attack :arg1 ( websit :arg0-of ( provide :arg1 service :arg2 ( person :mod-of ( deposit :arg1-of steal )  :name ( name :op1 bitcoin )  )  )  )  )
say :arg0 itself :arg2 ( person :arg0-of ( launch :arg1 ( person :arg0-of ( use :arg1 network :arg2 ( person :name ( name :op1 &quot; )  )  :mod that :mod ( real :mod-of currency )  )  :name ( name :op1 &quot; )  )  :arg2 ( payment :mod-of company )  :manner amr-unknown :mod just :polarity - )  :name ( name :op1 &quot; )  :op1-of reassuringly )  :time ( use :arg0 loophole :arg1 protocol )
highlight :arg0 ( organization :name ( name :op1 ecb )  :wiki european_central_bank )  :arg1 ( thing :arg1-of ( possible :arg2 ( launder :arg0-of ( use :arg1 ( service :mod anonymous :mod this )  )  :arg1 money )  )  )  :mod also
contrast :arg2 ( weak :arg1 cash :mod this :mod also )
refuse :arg0 ( person :arg0-of play :arg0-of ( have-org-role :arg2 major )  :arg1-of ( resemble :arg2 ( publication :name ( name :op1 wikipedia )  :wiki wikipedia )  )  )  :arg1 ( donate :arg1 ( nature :mod this )  )
accept :arg0 other :arg1 such :purpose ( organization :name ( name :op1 wordpress )  :name-of ( platform :mod blog )  )
and :op1 ( person :name ( name :op1 dorit :op2 ron )  )  :op2 ( book :topic ( account :arg0 80 :arg2 ( country :location-of ( organization :name ( name :op1 weizmann :op2 institute )  )  :name ( name :op1 israel )  :wiki israel )  )  )  :op3 ( show :arg1 ( circulate :arg0 bitcoin :arg1 ( almost :op1 percentage-entity )  :polarity - )  :op2-of ( and :op1 ( person :name ( name :op1 adi :op2 shamir )  )  )  )  :time recent
launch :arg0 ( sell :arg1 huge )  :arg1 off :time ( date-entity :month 11 )
welcome :arg0 thousand :arg1 ( person :arg1-of ( exchange :arg0 thirty :arg3 ( monetary-quantity :unit dollar )  )  :name ( name :op1 &quot; )  )  :arg2 ( amr-unknown :arg0-of ( work :arg1 ( thing :arg0-of ( convert :arg1 bitcoin :arg2 gold )  :name ( name :op1 &quot; )  )  )  )
author :arg0 ( person :mod ( also :mod-of ( lot :arg0-of ( transact :arg1 network )  :quant-of faith )  )  )  :arg1 ( book :mod ( educate :arg1 ( person :name ( name :op1 pierre :op2 noizat )  )  )  :topic ( currency :mod this :mod-of ( potential :poss ( technology :mod this )  )  )  )
contrast :arg1 ( equivalent :op1 ( card :mod ( credit :arg1 ( person :name ( name :op1 paytunia )  )  )  :op1-of ( or :op2 ( payment :mod contactles )  )  )  )  :arg2 ( use :arg0 ( system :poss he )  :arg2 ( validate :arg0 ( person :name ( name :op1 bitcoin )  )  :arg1 ( transact :arg1 money :arg1-of ( cheap :arg0 real :arg1-of mobile :degree thus-far )  )  )  )
possible :arg1 anonymous :op2-of ( and :op1 ( manage :arg0 ( person :arg0-of use )  :arg1 identity :mod also )  )
or :arg1-of ( install :arg0 ( person :arg0-of ( implement :arg1 system :arg1-of easy )  :arg0-of merchandise )  :arg1-of ( need :polarity - )  )  :op1 ( terminal :mod new )  :op2 software
say :arg0 ( person :arg0-of ( confirm :arg1 ( he :arg0-of ( need :arg1 just :arg1-of address :arg1-of ( provide :arg0 they )  )  )  )  :name ( name :op1 they )  )  :arg1 ( and :arg1-of possible :arg1-of ( recognize :arg0 phone )  :arg1-of photograph )
horizontal :degree more :mod-of ( system :arg3-of ( reappraise :arg1 ( system :mod hierarchical )  :arg1-of ( movement :arg1-of general )  )  )
contrast :arg1 ( possible :arg1 point :arg1-of ( establish :arg1-of ( firm :arg0 ( person :arg1-of ( take :arg0 it :arg2 time )  :name ( name :op1 &quot; )  )  :arg2-of ( become :arg1 ( he :arg0-of predict :arg1-of turn )  )  )  )  )  :arg2 ( date-entity :year 2013 )
say :arg0 ( organization :arg0-of ( report :arg1 it :arg1-of ( risk :arg0 various :arg1-of reassess :arg1-of high :arg2 ( event :arg2-of ( regard :arg1 ( succeed :arg1 currency )  )  :mod-of of )  :time current )  )  :name ( name :op1 ecb )  :wiki european_central_bank )  :arg1 it
get :arg0 we :source ( country :name ( name :op1 afghanistan )  :wiki afghanistan )
amr-unknown :mod-of interrogative :mod-of now
leave :arg0 troop :arg1 ( area :example ( and :op1 ( country :name ( name :op1 kapisa )  )  :op2 ( country :name ( name :op1 surobi )  )  :poss-of france )  )  :time ( responsible :location ( country :name ( name :op1 afghanistan )  :wiki afghanistan )  )
and :arg0-of ( follow :arg1 ( military :name ( name :op1 nato )  :wiki nato )  :time ( date-entity :op1-of late :year 2014 )  )  :op1 ( person :mod ( country :name ( name :op1 america )  :wiki united_states )  )
resume :arg0 ( army :poss ( country :name ( name :op1 afghanistan )  :wiki afghanistan )  )  :arg1 it :arg2 ( choose :arg0 ( and :op1 ( possess :arg0 ( person :mod ( country :name ( name :op1 afghanistan )  :wiki afghanistan )  )  :arg1 territory )  :time time )  :arg1 future )  :manner ( expect :arg1 ( do :arg1 everything )  )
regard :arg0 ( we :arg0-of ( punish :arg1 ( peasant :domain it :mod ( country :name ( name :op1 afghanistan )  :wiki afghanistan )  )  )  )  :arg1 main :arg2 terrorist
and :op1 ( kill :arg0 we :arg1 ( maim :arg0 ourselv :arg1 plus )  :arg1-of ( wound :arg0 88 )  :instrument soldier )
contrast :arg1 ( compose :arg1 ( criminal-organization :name ( name :op1 taliban )  :wiki taliban )  :arg2 ( extremist :mod foreign )  )  :arg1-of ( lead :arg0 person :time former )  :arg2 ( resemble :arg1 ( peasant :arg0-of ( refuse :arg1 ( presence :poss ( force :arg1-of arm :mod foreign )  )  )  :location ( refuge :location ( country :name ( name :op1 pakistan )  :wiki pakistan )  )  )  :frequency often :location ( time :part-of soviet_union )  )
want :arg0 ( they :arg0-of ( defend :arg1 tradition :arg2 ( thing :name ( name :op1 uzbeks )  )  )  )  :arg1 ( and :mod both :op1 ancient :op2 archaic :op3 ( person :mod ( country :name ( name :op1 pakistan )  )  )  :op4 ( person :mod ( ethnic-group :name ( name :op1 arab )  :wiki arabs )  )  :op5 ( thing :name ( name :op1 tajiks )  )  )  :condition ( join :arg0 ( organization :name ( name :op1 jihadists )  )  :arg1 ( they :quant even )  )
sometimes :frequency-of ( assist :arg1 ( tolerate :arg0-of ( become :arg1 ( person :arg2-of ( local :arg0 - :arg1 insurgent )  :mod ( world-region :name ( name :op1 west )  :wiki western_world )  )  :arg2 ( scarce :degree more )  :arg3 latter )  )  )
hill :consist-of ( tree :arg1-of ( plant :manner ( fund :arg1 france )  )  :mod almond )  :part ( top :arg2-of ( observe :arg0 ( i :arg0-of ( depart :arg1 troop :arg1-of ( carry-out :location ( fashion :arg1-of ( orderly :arg0 france )  )  )  )  )  :arg1 ( base :mod ( country :name ( name :op1 nijrab )  )  )  )  )
reach :arg0 ( convoy :consist-of truck )  :arg1 ( city :name ( name :op1 kabul )  :wiki kabul )  :manner ( attack :arg1 ( overflow :arg0 helicopter )  )  :op2-of ( and :op1 ( vehicle :mod armour )  )
wave :arg1 ( criminal-organization :arg0-of ( end :arg1 ( date-entity :year 2014 )  )  :location ( city :name ( name :op1 kabul )  :wiki kabul )  :name ( name :op1 taliban )  :wiki taliban )  :polarity -
and :op1 ( date-entity :year 1994 )  :op2 ( date-entity :arg1-of ( advance :mod irresistible :op1-of ( since :time-of ( change :arg1 circumstance )  )  )  :year 1996 )
empty :arg1 ( city :arg0-of ( tear :arg1 country :degree apart :manner ( struggle :arg0 ( faction :arg1-of differ )  )  )  :name ( name :op1 kabul )  :wiki kabul )  :time ( time :mod that )
perceive :arg0 ( return :arg1 safe :arg2 ( sort :mod-of liberate )  )  :arg1 ( take-over :arg0 country )  :time then
contrast :arg1 ( improve :arg1 situation :time today )  :arg2 ( pay :arg0 afghanistan :arg1 ( price :arg1 ( criminal-organization :arg1-of ( organize :arg0 - )  :name ( name :op1 al-qaeda )  :wiki al-qaeda )  :arg2 ( obscurantism :poss ( peasant :mod this )  )  )  )
and :arg0-of ( ally :arg1 ( desire :arg1 ( keep :arg1 woman :location ( position :arg1-of ( inferior :arg0 current )  )  )  )  :arg2 ( country :arg1-of ( govern :arg0 government-organization )  :name ( name :op1 afghanistan )  :wiki afghanistan )  )  :op1 ( thing :name ( name :op1 former :op2 mujahidin )  )  :op2 ( criminal-organization :name ( name :op1 taliban )  :wiki taliban )
return :arg1 ( person :arg0-of ( oppose :arg1 ( country :name ( name :op1 soviet :op2 union )  :wiki soviet_union )  )  :arg0-of ( lead :arg1 war )  :mod main )  :arg4 power :time ( date-entity :year 2001 )
and :arg1-of ( benefit :arg2 ( contract :mod huge :topic outsource )  )  :arg2-of ( return :arg1 ( refugee :arg2-of ( build :arg1 land :arg1-of ( resell :arg0 ( government-organization :arg0-of ( govern :arg1 ( country :name ( name :op1 pakistan )  :wiki pakistan )  )  )  :purpose-of ( seize :arg0 ( they :arg1-of ( become :arg2 profiteer )  )  :arg1 land )  )  )  )  )  :op1 ( country :name ( name :op1 iran )  :wiki iran )
become :arg1 they :arg2 ( discredit :arg1 most )  :op1-of ( and :arg0-of ( fight :arg1 more :polarity - )  )
want :arg0 ( person :arg1-of ( hear :arg0 i :topic countryside )  )  :arg1 ( government-organization :arg0-of govern :arg0-of ( thieve :polarity - )  )
possible :arg1 ( benefit :arg0 largesse :arg1 ( person :arg0-of ( leave :arg1 ( considerable :domain ( flight :arg1 capital )  )  )  :arg0-of ( want :arg1 leave )  :arg1-of leave :mod young :quant many )  )
tire :arg1 ( person :mod young )  :arg2 war :op1-of ( and :op2 ideology )
and :op1 ( appreciate :arg0 ( they :arg0-of ( rub :arg1 shoulder :arg2 ( world :arg1-of modern )  )  )  :arg1 benefit :op3-of ( or :arg1-of exile :op1 ( country :name ( name :op1 iran )  :wiki iran )  :op2 ( country :name ( name :op1 pakistan )  :wiki pakistan )  )  )
and :arg2-of ( total :arg0 now :op1-of population :op1-of ( 65 :value-of ( percentage-entity :op1-of roughly )  )  :op1-of less )  :op1 ( city :name ( name :op1 kabul )  :quant 25 :wiki kabul )  :op2 ( person :quant 5 )  :poss-of ( population :poss-of fifth )
alike :arg0 city :arg1 ( boy :op3-of ( and :op1 ( and :op1 town :op2 ( full :domain ( school :poss state )  )  )  :op2 girl )  )
or :arg2-of ( return :arg1-of ( want :arg0 ( person :arg2-of ( provide :arg0 it :arg1 ( work :arg1 former )  )  :mod young )  :polarity - )  :arg4 ( obscurantism :poss party )  )  :op1 ( corrupt :arg1 ( person :arg0-of lead :mod certain )  )
show :arg0 ( opera :mod soap )  :arg1 ( world :arg1-of ( modern :arg0 all )  )  :arg2-of ( follow :arg1 ( television :arg2-of ( mobile :arg1 ( phone :prep-to-of partial )  )  :op1-of and )  :arg2-of ( arm :arg0 ( country :name ( name :op1 turkey )  :wiki turkey )  :arg1 ( person :arg0-of oppose )  )  :location everywhere )
present :domain army :time now
consider :arg1 ( legitimate :arg1 ( authority :arg0-of command )  )  :arg1-of ( will :mode interrogative )
think :arg0 ( person :arg0-of ( command :arg1 ( struggle :mod ( country :arg1-of oppose :name ( name :op1 soviet :op2 union )  :wiki soviet_union )  )  :time former )  )  :arg1 ( restore :arg1 province :arg2 ( militia :arg0-of ( escape :arg1 ( power :mod central )  )  )  )  :time already
contrast :arg1 ( possible :arg1 ( benefit :arg0 ( decentralisation :mod certain )  :arg1 ( country :name ( name :op1 afghanistan )  :wiki afghanistan )  )  :arg1-of recommend )  :arg2 ( want :arg0 ( country :arg0-of ( abolish :arg1 ( post :arg1-of ( exist :time ( since :op1 ( constitution :mod ( date-entity :year 1964 )  )  )  )  )  )  :arg1-of ( have-org-role :arg0 ( person :arg0-of ( have-org-role :arg2 president )  :poss-of ( power :arg1-of strong )  :poss-of ( land :consist-of mountain )  )  :arg2 ( minister :mod prime )  )  :name ( name :op1 united :op2 states )  :wiki united_states )  :arg1 ( turn :arg1 ( local :arg1 ( identity :arg1-of strong )  )  :arg2 ( state :mod centralise )  :beneficiary ( nation :location ( world-region :name ( name :op1 west )  :wiki western_world )  :poss-of image )  :arg0 country )  )
want :arg0 ( person :arg0-of ( have-org-role :arg1 particular :arg2 president )  :name ( name :op1 karzai )  :wiki hamid_karzai )  :arg1 ( control :arg1 ( occasion :arg1 ( elect :arg1 4 )  :time ( date-entity :year 2014 )  )  :mod foreign :mod any )  :polarity -
contrast :arg0 before :arg1 and :arg2 ( depend :arg0 country :arg1 ( aid :arg1 already :mod foreign )  :time since :time 50 )
establish :arg1 industry :polarity ( - :arg0-of ( repair :arg1 ( system :arg1-of ( major :arg1-of ( dam :polarity - )  )  :mod ( irrigation :mod ( good :mod-of condition )  )  )  :polarity - )  )
and :arg0-of ( produce :arg1 nothing :mod apart :op2-of ( and :op1 ( import :arg1 everything )  )  )  :op1 fruit :op2 vegetabl
leave :arg1 priority :arg4 ( initiative :arg1-of private )
thirty :quant-of ( temporal-quantity :arg0-of ( ruin :arg1 ( country :arg1-of ( govern :arg0 ( government-organization :arg0-of ( control :arg1 infrastructure )  )  )  )  )  :duration-of war :unit year )
spread :arg1 rumour :arg2 ( country :name ( name :op1 afghanistan )  :poss-of ( wealth :mod mineral :mod huge )  :wiki afghanistan )
add :arg1 this :arg2 ( feel :arg0 ( person :arg0-of ( seize :arg1 ( only :mod-of there )  )  :mod ( world-region :name ( name :op1 west )  :wiki western_world )  )  )  :mod only
or :op1 site :op2 ( mean :instrument-of ( transport :arg1 - :arg2 ( export :arg0 ( or :op1 ore :op2 copper )  :arg1 ( iron :arg1-of ( process :arg0 ( mine :polarity - )  :purpose-of energy )  )  :path ( across :op1 mountain )  )  )  )
and :arg2-of ( leave :arg1 ( archaeologist :arg1-of ( fund :arg0 ( organization :name ( name :op1 world :op2 bank )  :wiki world_bank )  )  :mod international )  :purpose-of ( leave :arg0 ( country :name ( name :op1 china )  :wiki china )  :arg1 ( mine :mod ( organization :name ( name :op1 mes :op2 aynak )  )  :mod copper )  :mod already :mod almost )  )  :op1 ( search :arg1 ( site :mod ( religious-group :name ( name :op1 buddhism )  :wiki buddhism )  :mod huge )  )  :op2 ( remain :arg1 ( employer :location ( province :wiki helmand_province )  :mod ( large :degree most )  )  )
and :arg0-of ( restore :arg1 ( relation :arg0 ( country :name ( name :op1 afghanistan )  :wiki afghanistan )  :arg1 also :arg1-of ( normal :arg0 1 )  :arg2 ( country :name ( name :op1 pakistan )  :wiki pakistan )  )  )  :arg1-of ( depend :arg0 ( and :op1 ( import :arg1 day )  :op2 export )  :degree large )
complete :arg1 ( depart :arg1 ( troop :arg1-of ( combat :arg0 ( date-entity :mod france :month 11 :quant 20 )  )  )  )
mean :arg1 ( girl :arg0-of ( high :arg1 school )  :arg1-of ( aid :arg0 of )  :arg1-of ( continue :arg1-of ( provide :arg0 treaty :mod ( cooperate :arg0 ( military :arg0-of ( cooperate :arg1-of ( institute :arg0 france )  :op1-of ( and :op2 ( legal :arg1 medicine )  :op3 agriculture :op4 ( support :arg0 field :arg1 archaeological )  :op5 delegation )  )  )  :arg1 ( school :arg1-of ( high :mod boy )  )  :mod new )  )  )  )  :arg2 france :mod tradition
and :arg1-of ( aid :arg0 ( and :op1 ( achieve :arg0 ( heart :arg0-of ( win :arg1 ( try :arg0 since :arg1 ( continue :arg0 ( carry-out :arg0 ( military :poss-of service )  :arg1 france :arg1-of ( close :arg0 civil )  :time ( date-entity :year 2012 )  )  :arg1 ( and :op1 community :op2 agriculture :op3 ( rehabilitate :arg0 small )  :op4 project :op5 dozen :op6 ( village :location mountain )  :quant many )  :arg1-of defend :op1-of ( and :op2 ( carry :arg0 action :arg1 ngo :arg1-of succeed )  )  )  :time ( date-entity :year 2009 )  )  )  )  :arg1 mind :arg1-of task :op1-of and )  )  :arg1-of reconcile )  :arg1-of offense :op1 action
and :arg2-of ( involve :arg1 ( number :mod large :mod ( labour :arg1-of ( local :arg0 well :arg2 ( protect :arg1 soil )  )  )  )  :purpose ( drink :arg1 water )  :purpose-of ( help :arg1 ( contain :arg0 ( project :domain this )  :arg1 insurgency )  )  )  :op1 irrigation :op2 reforestation :op3 ( tree :source-of fruit )  :op4 ( increase :arg1 ( area :mod cultivable )  )
leave :arg0 we :arg1 amr-unknown :arg2 ( souvenir :arg3-of ( spend :arg1 2 :arg4 military )  )  :mode interrogative :time ( after :op1 ( monetary-quantity :unit euro )  )
valley :arg1-of ( locate :frequency often :path above )  :location-of ( hard :arg1 ( level :mod sea )  :degree very :mod-of ( condition :arg1-of ( improve :arg0 ( budget :arg1-of contribute :mod ( modest :degree ( more :degree much )  )  )  )  :mod ( live :arg1 metr :arg1-of local )  )  )  :mod this
receive :arg0 ( government-organization :name ( name :op1 embassy )  :wiki embassy_of_the_united_kingdom,_washington,_d.c. )  :arg1 dozen :arg2 ( write :arg1 ( request :arg0 ( country :location-of ( province :wiki helmand_province )  :name ( name :op1 kapisa )  )  :arg1 ( project :mod small :mod agriculture :source ( community :arg1-of local )  )  )  )
tell :arg0 ( person :arg0-of farm )  :arg1 ( want :arg0 ( they :arg1-of ( free :arg2 ( uprise :arg1-of ( lead :arg0 ( group :mod foreign )  )  )  :purpose-of position )  )  :arg1 ( and :arg1-of control :arg1-of ( maintain :arg1-of recommend :arg2 ( favor :arg1 ( aid :mod civil :quant ( amount :mod small )  )  )  )  :op1 ( affect :arg1-of direct )  )  )  :arg2 i
constitution :mod ( force :location ( country :name ( name :op1 egypt )  :wiki egypt )  )
gamble :arg1 ( person :arg0-of ( have-org-role :arg2 president )  :name ( name :op1 mohammed :op2 morsi )  )  :mod new
declare :arg0-of ( grant :arg1 ( full :mod-of ( power :arg2-of ( remain :arg0 ( he :arg0-of ( go :arg1 break-up )  :arg0-of ( decide :arg1 go )  )  :arg1 ( country :name ( name :op1 egypt )  :wiki egypt )  :arg1-of while )  )  )  :duration temporary )  :mod constitution :op1-of ( around :arg1-of ( divide :degree more )  :mod ever )
announce :arg0 ( he :arg0-of ( take :arg1 everyone :manner ( surprise :arg1 ( follow :arg1 day )  )  )  )  :arg1 ( vote :arg0 ( organization :name ( name :op1 constituent :op2 assembly )  )  :arg1 ( text :mod final )  )  :manner wednesday
give :arg0 ( head :arg1 state )  :arg1 ( temporal-quantity :mod more :quant 2 :unit month )  :purpose ( finish :arg1 ( work :time week )  :time just )
and :op1 ( country :arg0-of ( rely :arg1 ( temporal-quantity :quant 2 :unit year )  :arg2 ( text :mod provisional )  )  :name ( name :op1 egypt )  :wiki egypt )  :op2 ( weaken :arg1 this )  :op3 ( lead :arg4 ( imbroglio :arg1-of legal )  :op2-of ( and :arg1-of amend :mod several :op1 ( stability :duration institution )  )  )
serve :arg1 ( enhance :arg0 ( initiative :mod new :mod this )  :arg1 ( divide :location country )  )  :manner only
say :arg0 ( person :arg0-of oppose :arg0-of ( have-org-role :arg1 ( continue :arg1 ( go :arg1 back )  :arg1-of persevere )  :arg2 president )  )  :arg1 ( and :arg1-of word :op1 ( trample :arg1 law )  )
and :op1 institution :op2 ( crisis :arg1-of ( end :arg1-of ( put :manner ( way :arg1-of ( affirm :arg0 ( person :arg0-of ( support :arg1 he )  )  :arg1-of ( transition :arg1-of ( process :arg1-of speed )  )  )  :domain this :mod quick )  )  )  :mod politics )
referendum :arg1-of hold :mod-of ( 2 :quant-of ( temporal-quantity :unit ( week :mod next )  )  )
plan :arg1 ( explain :arg0 ( person :mod ( country :name ( name :op1 egypt )  )  :mod ( article :degree-of article )  )  :arg1 text )  :arg1-of ( abandon :arg0 brother :arg2 ( period :mod ( short :degree very )  )  :purpose-of force )
and :arg1-of ( achieve :manner ( way :mod also )  )  :op1 ( popular :arg1 legitimacy )  :op2 democracy :op3 ( rage :arg1 dispute :arg2 ( throughout :op1 ( country :arg1-of ( have-org-role :arg2 president )  )  )  )
state :arg0 he :arg1 ( person :arg0-of ( vote :arg1 favourably :arg2-of ( convince :arg0 ( temporal-quantity :unit week )  :arg1 ( person :name ( name :op1 mohammed :op2 morsi )  )  :arg1-of seem )  )  :mod ( country :name ( name :op1 egypt )  )  )  :medium ( interview :arg0 time )
ultimatum :arg2-of ( vote :arg0 since :arg0-of ( smack :arg1 particularly :arg2 ( vote :arg0 you :arg1 ( or :op1 text )  :arg2 ( i :arg0-of ( follow :arg1 ( expire :arg0 ( person :mod ( country :name ( name :op1 egypt )  :wiki egypt )  )  :arg1 ( power :arg1-of suppose :mod this :mod ( full :mod-of power )  )  :arg2 ( adopt :arg0 i :arg2 constitution )  )  )  )  :mod either )  )  :mod hasty )
text :arg1-of ( vote :arg0 ( person :arg0-of ( have-org-role :arg1 ( organization :mod-of ( strange :mod-of atmosphere )  :name ( name :op1 constituent :op2 assembly )  )  :arg2 member )  :domain-of ( majority :mod ( religious-group :name ( name :op1 islamism )  :wiki islam )  :mod large )  :quant 85 )  :arg2 it :time yesterday )
miss :arg0 most :arg1 ( person :arg1-of liberal )
assert :arg1 view :arg2-of ( fail :arg1-of ( feel :arg0 ( they :arg0-of ( slam :arg1 door :time ( before :op1 ( declare :mod constitution )  :quant short )  :time ( date-entity :mod mid :month 11 )  )  )  )  )
do :arg0 ( or :op1 ( minority :mod religion )  :op2 ( society :mod civil )  )  :arg1 ( represent :arg1 ( right :mod human )  )  :manner likewise
add :arg1 yesterday :arg1-of alternate :manner hasty :purpose ( obtain :arg0 ( person :arg0-of ( have-org-role :arg2 member )  :quant 11 )  :arg1 quorum )  :time morning
very :op1 ( organization :name ( name :op1 muslim :op2 brotherhood )  :op1-of some :wiki muslim_brotherhood )
surprise :arg1 ( vote :arg0 most :arg1 article :mod unanimous )  :polarity -
express :arg0 ( person :arg0-of ( feel :arg1 ( wrong :arg1 ( clock :mod ( organization :name ( name :op1 constituent :op2 assembly )  )  )  )  )  :arg0-of ( have-org-role :arg1 ( committee :arg1-of ( pray :duration ( temporal-quantity :unit hour )  )  )  :arg2 member )  :quant some )  :arg1 ( diversion :arg0-of ( amuse :arg1 commentator :mod also )  :mod only )  :arg2 ( regard :arg1 day )
vote :arg0 text :arg1 ( evening :mod yesterday )  :arg2 ( article :mod 234 )  :mod still
stipulate :arg1 ( attend :arg0 article :arg1-of ( remain :op1-of ( principle :mod-of sharia )  :time ( date-entity :year 1971 )  )  :arg1-of ( analyze :arg0-of ( identical :arg1 that )  )  :arg1-of ( focus :arg2 2 :mod main :mod ( main :mod-of ( source :mod-of law )  )  :op1-of of )  :time final )  :mod constitution
hope :arg0 ( of :arg1-of establish :mod-of ( religious-group :name ( name :op1 islam )  :wiki islam )  )  :arg0-of ( replace :arg1 principle )  :arg1 ( rule :arg1-of ( apply :arg0 strict )  :arg1-of allow )  :arg1-of ( claim :arg1-of ( major :arg0 law )  )  :op1-of ( party :mod ( religious-group :name ( name :op1 salafism )  :wiki salafi_movement )  )
amend :arg1 ( article :mod this )  :arg1-of ( guarantee :arg0 goodwill :op1-of ( and :op2 ( respect :arg0 ( person :mod ( religious-group :name ( name :op1 islamism )  :wiki islam )  )  :arg1 ( element :mod other :poss ( society :mod ( country :name ( name :op1 egypt )  :wiki egypt )  )  )  )  )  )  :polarity - :topic-of fact
respond :arg0 hypocrisy :arg1 amr-unknown :arg2 ( person :arg0-of ( see :arg1 only )  :arg0-of ( communicate :arg1 coup )  :arg1-of liberal )
opine :arg0-of ( cause :arg1 ( do :arg0 ( article :mod other )  :arg1 ( event :name ( name :op1 islamisation )  :poss constitution :wiki islamization )  )  )
refer :arg0 ( they :arg0-of ( reference :arg1 ( verify :arg1 ( conformity :poss law )  :arg2 sharia )  )  )  :arg1 ( role :mod ( advise :arg1 particular :arg2-of ( grant :arg0 ( article :mod 220 )  :arg1 ( university :name ( name :op1 al-azhar :op2 university )  :wiki al-azhar_university )  )  )  )  :mod particular
say :arg0 ( person :arg1-of ( specialize :arg0 ( country :name ( name :op1 egypt )  :wiki egypt )  )  :name ( name :op1 according )  )  :arg1 ( and :arg0-of ( cause :arg1 ( call :arg0 person :arg1 ( advise :arg1 legitimacy )  :arg1-of ( worry :mod this :polarity - )  :arg2 and )  )  :arg2-of ( elect :arg1 democracy :polarity - )  )
suggest :arg0 of :arg1 this :arg2 beginning :prep-on theocracy
fear :arg0-of ( fuel :arg1 ( fact :mod that )  :mod also )  :arg0-of ( moderate :arg1 ( less :mod ( much :mod ( probable :mod-of ( university :mod ( of :mod ( rector :mod next )  )  )  )  )  )  :arg2 1 :time current )  :arg1 ( person :arg1-of liberal )
imply :arg0 ( religion :arg1-of ( concrete :arg0 there :polarity - )  )  :arg1 ( thing :time time )
remain :arg1 thing :arg3 ( constitution :mod this )  :time ( rule :mod civil )
contrast :arg1 scholar :arg2 ( person :arg0-of ( train :arg1 france :arg2 ( person :arg0-of ( work :arg1 amr-unknown :location text :location this :location lawyer :location ( of :degree most )  )  :arg0-of ( write :arg1 thesi )  :arg1-of ( qualify :arg0 ( country :arg0-of ( transition :arg1 constitution )  :name ( name :op1 egypt )  :wiki egypt )  :polarity - )  :name ( name :op1 most )  :poss-of system )  )  :mod academia :mod some :poss-of ( law :mod-of ( religious-group :name ( name :op1 islam )  :wiki islam )  )  )
contrast :arg1 ( he :arg0-of acknowledge )  :arg2 ( possible :arg1 ( use :arg0 ( term :arg1-of ( cause :arg0 ( article :arg0-of ( regard :arg1 ( ambiguity :mod some )  :arg2 220 )  :arg0-of borrow )  )  )  :arg1 ( religion :mod-of vocabulary )  )  )
editor :arg2-of ( have-org-role :arg0 ( religious-group :name ( name :op1 islam )  :wiki islam )  :arg1 note :arg2-of ( reference :arg0 particular )  )
and :op1 ( question :arg1 ( judge :arg1 ( competent :arg1 ( pronounce :arg1 it )  )  )  )  :op2 ( ask :arg1 amr-unknown :arg1-of possible :example extent :example civil :location future )
grant :arg1 ( power :arg1-of extensive )  :arg2 ( have-org-role :arg0 ( beyond :op1 ( aspect :mod religion )  )  :arg1 republic :arg2 president :time-of ( vote :arg0 ( text :arg1-of ( criticize :manner high )  )  :arg1 yesterday )  )
argue :arg0 ( organization :arg0-of ( reduce :arg1 ( they :arg1-of compare )  :arg2 significant )  :name ( name :op1 muslim :op2 brothers )  )  :arg1 ( former :time-of regime )
issue :arg1 ( confer :arg0 power :arg1 army )  :mod another
contrast :arg0 ( organization :name ( name :op1 national :op2 defence :op3 council )  )  :arg1 ( submit :arg1 ( review :mod ( budget :mod defence )  )  :arg1-of ( accord :arg2 ( wish :arg1 military )  )  :arg2 ( organization :name ( name :op1 parliament )  )  :polarity - )
request :arg0 ( association :purpose ( defend :arg1 ( right :mod human )  )  )  :condition-of ( ban :arg0 ( tribunal :mod military )  :arg1 ( civilian :arg0-of trial )  )
repress :arg1 ( text :arg0-of ( concern :arg1-of ( voice :mod ( also :location-of amr-unknown )  )  )  )  :arg2-of ( consider :arg0 they )
express :arg1 ( and :op1 ( maintain :arg0 particular :arg1 ( consequence :arg1-of possible :mod serious )  )  :op2 ( prohibit :arg0 insult :arg1 ( offence :mod blasphemy )  :arg2 press :time now )  )  :arg3-of free
refer :arg0 ( article :mod any )  :arg1 protect :arg1-of ( long :polarity - )  :arg2 ( woman :arg0-of ( highlight :arg1 ( person :name ( name :op1 heba :op2 morayef )  )  )  )  :arg3 ( organization :name ( name :op1 human :op2 rights :op3 watch )  :wiki human_rights_watch )  :time addition
prohibit :arg0 ( point :mod positive :mod only )  :arg1 torture :location ( article :mod ( 36 :arg1-of opine )  )
include :arg1 word :arg2 ( constitution :time previous )  :polarity -
plan :arg1 demonstrate :arg2 afternoon :time ( speak :arg0 ( president :arg2-of ( have-org-role :arg0 this :arg1 ( country :name ( name :op1 egypt )  :wiki egypt )  )  )  :arg1 ( yesterday :medium television :time evening )  :arg1-of while )
march :arg0 ( person :arg0-of ( support :arg1 ( head :arg1 state )  )  )  :arg1 saturday
await :arg0 ( place :mod holy )  :arg1 ( and :op1 omphalo :op2 ( sea :quant-of water )  )  :arg2 ( person :arg0-of ( tour :mod ( country :name ( name :op1 ukraine )  :wiki ukraine )  )  :location ( country :name ( name :op1 israel )  :wiki israel )  :mod saline )
and :op1 ( splendour :arg1-of ( combine :arg0 ( organization :name ( name :op1 holy :op2 land )  )  )  )  :op2 ( truth :mod biblical )  :op3 ( comfort :arg1-of modern )  :op4 ( nature :mod primeval )
highlight :arg0 ( i :arg0-of ( visit :arg1 ( country :name ( name :op1 israel )  :wiki israel )  :arg2 must )  )  :arg1 ( reason :mod ( important :mod most :mod-of ( why :mod-of it )  )  :quant 5 )  :arg2 newspaper
let :arg0 ( place :arg1-of worship )  :arg1 holy
baptize :arg1 ( person :name ( name :op1 jesus )  :wiki jesus )  :location ( country :arg1-of ( visit :arg0 it :domain-of ( worth :domain ( river :wiki river_thames )  )  )  :name ( name :op1 jordan )  :wiki jordan )
consider :arg0 it :arg1 ( enter :arg0 ( person :arg0-of ( bathe :arg1 ( baptize :arg1 this )  )  :arg1-of bless :name ( name :op1 god )  :wiki god )  :arg1 all )
and :op1 ( turn :arg0 ( place :domain ( country :name ( name :op1 galilee )  )  )  :arg1 ( wed :arg0 water )  :arg2 wine )  :op2 ( walk :arg0 ( person :arg0-of ( perform :arg1 magic )  :name ( name :op1 jesus )  :wiki jesus )  :arg1 water )  :op3 ( calm-down :arg1 storm )  :op4 ( fill :arg1 net )
resurrection :op1-of ( after :op2-of ( and :op1 ( come :arg0 this :arg1 ( person :name ( name :op1 jesus )  :wiki jesus )  :mod also :time ( before :op1 discipl )  )  )  )
contrast :arg1 ( big :degree most :mod-of ( number :location ( city :name ( name :op1 jerusalem )  :wiki jerusalem )  :quant-of ( place :mod holy )  )  )
believer :arg0-of ( walk :path ( organization :name ( name :op1 way :op2 of :op3 grief )  :op1-of ( or :op2 ( organization :name ( name :op1 via :op2 dolorosa )  )  )  )  )
and :op1 ( organization :name ( name :op1 church )  :op6-of ( and :op1 ( start :arg0 it )  :op2 ( judge :arg0 praetorium )  :op3 place :op4 ( bring :arg0 fortres :arg1 street )  :op5 along )  :poss-of ( town :mod old )  :wiki christian_church )  :op2 ( stone :arg0 ( holy :mod-of sepulchre )  :arg1 crucifixion )  :op3 unction :op4 ( person :name ( name :op1 jesus )  :poss-of burial :wiki jesus )
location :domain this :mod also :quant-of ( mankind :mod-of ( salvation :arg2-of ( symbolize :arg0 ( omphalo :arg1-of symbolize :mod ( religious-group :name ( name :op1 christian )  :wiki christian )  )  )  )  )
say :arg0 ( person :arg0-of cross :name ( name :op1 jesus )  :poss-of crucifixion :wiki jesus )  :mod ( that :mod-of site )  :time ( use :arg1 ( yield :arg1 ( legend :wiki billy_thorpe )  :arg1-of ( erect :arg0 ( city :arg0-of ( cross :arg1 monastery :mod holy )  :name ( name :op1 jerusalem )  :wiki jerusalem )  )  )  :mod tree )  :time ( religious-group :name ( name :op1 christian )  :wiki christian )
destroy :arg0 ( ethnic-group :name ( name :op1 jew )  :wiki jews )  :arg1 ( temple :arg2-of ( remain :arg0 ( city :domain-of ( place :mod ( holy :degree most )  )  :name ( name :op1 jerusalem )  :wiki jerusalem )  :arg1 ( country :name ( name :op1 wailing :op2 wall )  )  :op1-of ( 70 :quant-of ad )  )  )
say :arg0 tradition :arg1 ( leave :arg0 ( person :arg0-of ( wish :arg1-of ( fulfill :time then )  )  :mod ( faith :arg1-of differ )  )  :arg1 note :location here )
travel :arg1 ( along :op1 vertical )
remain :arg1 ( ruin :arg1 ( organization :name ( name :op1 massada :op2 fortress )  )  )  :arg3 ( refuge :mod secret :source ( have-rel-role :arg1-of ( build :arg0 ( person :name ( name :op1 herod )  )  :location ( bc :poss family :quant 25 )  )  :arg2 enemy )  )
locate :arg1 they :location mountain :location cliff :location elevation :location ( level :mod ( sea :location-of m )  :op1-of above )  :op1-of 450
possible :arg1 ( reach :arg1 they :manner foot )  :arg2-of ( climb :arg0 only :arg1 mountain )
deliver :arg0 cableway :arg1 other :arg2 ( mountaintop :mod history :mod this )
fill :arg0 ( m :consist elevation :time ( date-entity :day 40 :month 20 :year 1600 )  )  :arg1 ( call :arg1 ( resort :arg1-of ( ski :arg0 famou )  )  :arg2 ( country :name ( name :op1 hermon )  :part north )  )  :arg2 ( person :arg0-of tour :mod country )  :location ( winter :mod-of ( month :unit-of temporal-quantity )  )
bring :arg0 ( bus :op1-of shuttle )  :arg1 person :arg2 ( mountain :part foot )
ski :arg1 ( pist :mod-of ( length :arg2-of ( total :arg1 45 )  )  )
say :arg0 ( legend :mod ancient :wiki billy_thorpe )  :arg1 ( use :arg0 ( god :mod pagan )  :arg2 ( live :location mountain :arg0 god )  )
visit :arg1 ( museum :mod unique )
museum :part-of ( country :mod this )  :quant ( about :op1 300 )
possible :arg1 ( visit :arg0 ( you :arg0-of trip )  :arg1 all )  :polarity -
contrast :arg2 ( worth :domain ( one :arg2-of ( interest :degree most )  )  :domain ( visit :arg1 5 )  )
museum :poss ( country :arg0-of ( locate :arg1 ( organization :name ( name :op1 knesset )  )  :arg2 ( organization :name ( name :op1 parliament )  )  )  :name ( name :op1 israel )  :wiki israel )
and :op1 archaeological :op2 anthropological :op3 artefact :poss-of ( ancient :mod-of ( manuscript :mod ( country :name ( name :op1 qumran )  )  :op1-of ( and :arg1-of ( scroll :arg0 ( country :name ( name :op1 dead :op2 sea )  )  :arg1-of ( find :arg0 it :location ( cave :arg0 along :arg1 desert )  )  )  )  )  )  :quant about
interest :arg1 ( museum :location ( country :name ( name :op1 tel-aviv )  )  :mod art )  :mod also
include :arg1 ( range :arg1 ( and :arg1-of ( resemble :arg2 ( person :name ( name :op1 monet )  )  )  :op1 impressionist :op10 ( person :name ( name :op1 picasso )  :wiki pablo_picasso )  :op2 expressionist :op3 ( person :name ( name :op1 pissarro )  )  :op4 ( person :name ( name :op1 renoir )  )  :op5 ( person :name ( name :op1 sisley )  )  :op6 ( person :name ( name :op1 cezanne )  )  :op7 ( person :name ( name :op1 matisse )  )  :op8 ( person :name ( name :op1 modigliani )  )  :op9 ( person :name ( name :op1 chagall )  )  )  :arg2 wide )  :arg2 ( exhibit :arg0 it )
and :accompanier-of ( consist :arg0 ( person :arg0-of ( bathe :arg1 museum )  :arg1-of ( visit :arg0 you :arg1-of possible )  :name ( name :op1 al-basha )  )  :arg2 ( room :poss ( bath :mod ( country :name ( name :op1 turkey )  :wiki turkey )  :mod ancient )  :quant several )  )  :op1 ( person :arg0-of ( visit :arg1 ( country :name ( name :op1 akko )  )  )  :topic-of model )  :op2 ( attendant :arg1-of bathe )  :op3 time
and :arg1-of ( sculpture :arg1-of ( enjoy :arg0 ( you :arg0-of ( visit :arg1 ( country :arg1-of private :mod unique :name ( name :op1 ralli :op2 museum )  )  :domain-of ( worth :location ( country :name ( name :op1 caesarea )  )  )  )  )  :arg1-of possible )  )  :op1 ( person :name ( name :op1 dali )  :wiki salvador_dalí )  :op2 ( country :name ( name :op1 rodin )  )
guide :arg1 ( tour :arg1 - )  :op1-of ( or :op2 ( thing :arg1-of gift )  :op3 shop )
and :op1 ( free :arg1 entry :arg1-of contribute :arg2 charge )  :op2 ( allow :manner strict :polarity - )
or :op1 ( country :domain ( one :mod fifth )  :name ( name :op1 holocaust :op2 museum )  )  :op2 ( person :location ( country :arg0-of ( tell :arg1 ( story :mod ( dramatic :degree most )  :time history )  )  :name ( name :op1 tel-aviv )  )  :name ( name :op1 yad :op2 vashem )  )
and :arg1-of ( kill :arg0 ( child :arg1-of concentrate :arg2-of ( build :arg0 ( child :mod ( most :mod-of tragic )  :mod section )  :arg1 memory :mod memorial )  :mod 1.5 :mod of )  )  :op1 camp :op2 gas :op3 chamber
and :op1 ( find :arg0 ( you :arg0-of go )  :arg1 ( darkness :arg1-of complete )  )
glimmer :arg1 stars
listen :arg0 you :arg1 ( name :time-of ( and :op1 ( child :mod ( religious-group :name ( name :op1 jew )  :wiki jews )  )  :op2 country :op3 ( die :arg1 they )  )  )  :op1-of and
mention :arg1 ( country :name ( name :op1 ukraine )  :wiki ukraine )  :arg2 there :mod too
wellnes
and :arg0-of ( locate :arg1 ( area :location ( country :name ( name :op1 israel )  :wiki israel )  :mod resort :quant 3 )  )  :op1 ( sea :name ( name :op1 mediterranean )  :wiki mediterranean_sea )  :op2 ( red :arg1-of coast )  :op3 ( country :name ( name :op1 dead :op2 seas )  )
and :op1 ( pool :mod ( swim :arg1 each )  )  :op2 ( park :arg1 aqua )  :op3 oceanarium
cause :arg0 ( drop :arg0 ( temperature :mod water :name ( winter :mod-of ( month :mod even :unit-of temporal-quantity )  )  )  :arg1 degree :op1-of ( and :op1-of below :op2 degree :op3 ( warm :arg0 - :arg1 air )  )  )  :arg1 ( swim :arg0 21 :arg1 it :arg1-of ( possible :arg0 23 :compared-to-of notable )  :location ( country :name ( name :op1 red :op2 sea )  )  )
and :op1 ( warm :arg1 ( country :name ( name :op1 dead :op2 sea )  )  :mod even )  :op2 ( swim :arg0 person :arg1 ( round :mod year :quant all )  )
low :arg1 ( point :arg1-of ( locate :arg2 ( most :degree-of ( usual :mod-of ( sea :location world )  :polarity - )  )  :op1-of ( level :mod sea )  :op1-of below )  :poss planet )  :degree most :op1-of incidental
and :op1 azure :op2 water :op3 saline :op4 ( keep :arg0 it :arg1 afloat :manner you :time even )  :op5 ( know :arg0 you :arg1 amr-unknown :arg1-of swim :polarity - )
surreal :compared-to beauty :domain ( landscape :arg1-of surround )
and :arg2-of ( use :arg0 ( treat :arg1-of ( undergo :op1-of ( and :op2 ( improve :arg0 they :arg1 health :time dermatiti )  :op3 ( or :op1 ( return :arg0 ( or :op1 allergi :op2 asthma :op3 eczema :op4 arthritis :op5 bronchiti :op6 diabetes )  :arg1 ( balance :arg1-of emotional )  )  )  )  :purpose-of ( come :arg1 person :location here )  )  )  :arg1 ( water :mod salt )  )  :op1 wrap :op2 medicine :op3 mud
mysteri :arg1-of touch :mod antiquity
mediterranean :op1-of ( name :name-of ( thing :path-of ( preserve :arg1 they :arg2 ( section :mod old :part-of ( country :name ( name :op1 tel-aviv )  )  )  :path ( town :name jaffa )  )  )  :op2 sea )
run :arg0 ( route :mod sea :mod famou )  :arg1 ( and :arg1-of connect :op1 ( country :name ( name :op1 egypt )  :wiki egypt )  :op2 ( country :name ( name :op1 syria )  :wiki syria )  :op3 ( country :name ( name :op1 anatolia )  )  :op4 ( country :name ( name :op1 mesopotamia )  :wiki mesopotamia )  )
mention :arg1 city :arg2 ( country :name ( name :op1 greece )  :wiki greece )  :op1-of ( and :mod ancient :op2 ( legend :mod ( country :name ( name :op1 egypt )  :wiki egypt )  :mod ancient )  )
say :arg0 legend :arg1 ( and :op1 happy :op2 ( life :arg1-of ( long :arg0 this )  :arg1-of ( live :arg0 he :location ( person :arg2-of ( save :arg0 ( person :name ( name :op1 perseus )  )  :arg1 beauty :op2-of ( and :op1 ( build :arg0 ( person :name ( name :op1 noah )  )  :arg1 ark )  )  )  :name ( name :op1 andromeda )  )  )  )  )
zodiac :arg2-of ( wander :arg0 ( person :arg0-of tour )  :arg1 ( street :arg1-of narrow )  :arg1-of ( resemble :mod really )  )  :op2-of ( after :op1 sign )
say :arg0 they :arg1 ( come :arg1 fortune :arg2 you :condition ( touch :arg0 you :arg1 wall :location ( street :poss sign )  )  )
and :arg1-of ( come :arg0 ( newlywed :arg1-of ( meet :arg0 you :arg1-of ( possible :arg2 even )  :purpose session )  )  :arg2 all :arg3 ( country :name ( name :op1 jaffa )  )  )  :op1 ( country :location ( country :name ( name :op1 israel )  :wiki israel )  :location photo :mod other )
and :location city :op1 ( walk :arg0 you :arg1 theatre :arg1-of possible :example ( religious-group :name ( name :op1 roman :op2 catholic )  :wiki catholic_church )  :op1-of around :time-of ( capture :arg0 ( country :name ( name :op1 and )  )  :arg1 fortress )  )
and :op1 ( reside :arg0 ( period :mod ( religious-group :name ( name :op1 roman :op2 catholic )  :wiki catholic_church )  )  :arg1 ( prefect :mod ( religious-group :mod ( person :name ( name :op1 pontius :op2 pilate )  )  :name ( name :op1 roman :op2 catholic )  :wiki catholic_church )  )  :arg2 ( country :location-of ( city :domain ( country :name ( name :op1 caesarea )  )  :mod main )  :name ( name :op1 judea )  )  )
use :arg1 ( theatre :arg1-of ( restore :degree careful )  )  :arg2 ( and :op1 ( concert :time evening )  :op2 ( thing :arg1-of ( perform :mod opera )  )  )  :time now
note :beneficiary ( person :arg0-of tour )
worry :arg0 ( you :arg0-of ( know :arg1 percentage-entity )  )  :arg1 30 :arg2 ( country :name ( name :op1 israel )  :wiki israel )  :arg2-of ( bad :arg1 approximately )  :arg2-of ( speak :arg0 country :arg1 ( country :name ( name :op1 russia )  :wiki russia )  :time population )  :polarity -
cause :arg0 ( exchange :arg0 3.8 :arg1 they :arg2 ( shekel :poss ( monetary-quantity :polarity - :unit euro )  )  :time ( trip :arg1 ( 1 :quant-of ( monetary-quantity :time current :unit dollar )  )  :op1-of shekel :purpose-of ( good :domain ( monetary-quantity :arg1-of take :unit dollar )  )  )  )
contrast :arg1 main :arg2 ( and :op1 ( city :arg1-of ( tram :arg0 ( transport :arg1 ( country :name ( name :op1 city )  )  :domain-of bus )  :mod ( speed :arg1-of high )  )  :name ( name :op1 jerusalem )  :wiki jerusalem )  :op1-of ( and :op2 ( comprise :arg0 haifa )  :op3 ( stop :arg1 country :quant 6 )  :op4 ( connect :arg1 ( town :mod upper )  :duration low )  )  :op2 ( line :mod ( subway :mod only )  )  )
railway :location essence :mod ( cable :mod underground )
and :op1 ( transport :arg1 city :mod type )  :op2 ( cost :arg1 shekel )  :op3 ( possible :arg1 ( ride :arg0 you :arg1 ticket :arg2 ( transfer :arg0 any :arg1 6 )  :duration ( temporal-quantity :quant 1.5 :unit hour )  )  )
say :arg0 ( tradition :mod ( religious-group :name ( name :op1 jew )  :wiki jews )  )  :arg1 ( celebrate :arg1 sabbath :location ( country :name ( name :op1 israel )  :wiki israel )  )
stop :arg0 ( and :op1 saturday :op2 market :op3 store :op4 ( transport :arg0 public :arg1 friday )  )  :arg1 ( work :arg0 ( and :op1 ( evening :op1-of ( between :op2 sunset )  )  )  )
start :arg0 ( week :mod ( work :arg0 sunday )  )  :arg1 morning
meat :arg2-of ( combine :arg0 ( dish :arg0 many :arg1 - :arg2 ( cafe :op1-of ( and :op2 restaurant :op3 hotel :poss-of ( food :mod ( kosher :mod only :name-of scale )  )  )  )  :op4-of ( or :op1 ( pork :polarity - )  :op2 seafood :op3 fish )  )  :arg1 milk )
and :op1 lamb :op2 beef :op2-of ( and :arg0-of ( dish :arg1 ( cook :arg0 ( ground :location-of chickpea )  :arg1 ( use :arg0 ( and :op1 ( paste :arg1 hummu :mod ( religious-group :name ( name :op1 jew )  :wiki jews )  :mod tradition )  :op2 falafel :op3 fruit :op4 vegetabl )  :arg1 ( milk :mod coconut )  )  )  :arg1-of ( select :arg0 ball :arg1-of wide )  )  :arg1-of ( sauce :mod various )  :op1 soup :op3 dessert )
of :mod-of ( do :arg0 ( country :name ( name :op1 israel )  :wiki israel )  :polarity - :time dog :time home )  :mod-of street
contrast :arg2 ( cat :arg1-of ( feed-up :mod well )  :arg1-of ( walk :direction around :direction lazily )  :quant many )
possible :arg1 ( see :arg1 ( they :arg0-of ( sleep :location ( roof :quant-of ( car :arg1-of park )  )  )  )  :mod even :time evening )
and :op1 ( resemble :arg1 ( place :mod busy )  )  :op2 ( refuse :arg0 ( pussycat :mod this )  :arg1 treat :polarity - )
depend :arg0 ( cost :arg0 188 :arg1 ( rental :mod ( car :poss ( person :name ( name :op1 audi :op2 a6 )  )  :poss ( person :name ( name :op1 hyundai :op2 getz )  )  )  )  :arg2 ( monetary-quantity :unit dollar )  )  :arg1 37 :arg2 ( type :mod car :mod-of day )  :op1-of 80 :op1-of ( name :op2 s-400 )
plus :mod-of ( insure :arg1 day :arg2 ( monetary-quantity :quant 15 :unit dollar )  )
cost :arg1 ( rental :arg0-of bike )  :arg2 ( shekel :quant 15 )  :time day
cost :arg1 ( entrance :mod museum )  :arg2 ( shekel :quant 30 :topic average )
number
visit :arg0 ( person :arg0-of ( tour :arg1 ( around :op1 ( world :op1 3 )  )  )  )  :arg1 ( country :name ( name :op1 israel )  :wiki israel )  :time ( date-entity :year 2012 )
arrive :arg1 ( and :op1 visitor :op2 holidaymaker :op3 ( country :name ( name :op1 france )  :wiki france )  :op4 ( country :name ( name :op1 italy )  :wiki italy )  )  :arg2 ( country :name ( name :op1 germany )  :wiki germany )  :arg4 ( country :name ( name :op1 usa )  :wiki united_states )  :manner most :op1-of ( and :op2 ( country :name ( name :op1 russia )  :wiki russia )  :op3 ( country :name ( name :op1 england )  :wiki england )  :op4 ( country :name ( name :op1 ukraine )  :wiki ukraine )  )
resemble :arg1 ( figure :manner-of ( more :quant ( percentage-entity :value 51 )  )  )  :arg2 ( visit :arg0 ( person :arg0-of tour :mod ( country :mod-of visa :name ( name :op1 ukraine )  :wiki ukraine )  )  :arg1 ( country :name ( name :op1 holy :op2 land )  )  :time ( before :op1 ( remove :arg0 ( date-entity :year 2012 )  :arg1 ( regime :time ( date-entity :day 9 :month 2 :year 2011 )  )  )  )  :time ( between :op1 ( date-entity :month 10 :op2-of ( and :op1 1 )  )  )  :time ( date-entity :year 2010 )  )
mean :arg1 ( city :name ( name :op1 moscow )  :wiki moscow )  :op2-of ( and :arg1-of high :mod only :op1 mighty :op3 ( person :arg0-of ( migrate :arg1 ( save :arg1 ( money :quant-of language )  )  )  )  )  :time ( make :arg0 it )
and :arg0-of ( argue :arg1 ( purpose :mod law )  :arg1-of while )  :op1 ( person :arg0-of ( have-org-role :arg2 deputy )  )  :op2 ( activist :mod ( right :mod human )  )  :op3 ( test :arg1 ( language :mod mandatory )  )  :op4 ( country :arg2-of ( sell :arg0 ( artist :mod already :mod scam )  :arg1 ( certificate :arg1-of fake )  )  )
come :arg1 ( person :arg0-of work :mod ( migrate :arg1 ( every :mod-of year )  )  :quant 13 )  :arg3 ( and :location ( country :location-of ( city :mod other )  :name ( name :op1 russia )  :wiki russia )  :op1 ( country :name ( name :op1 st. :op2 petersburg )  )  )  :arg4 ( city :name ( name :op1 moscow )  :wiki moscow )
and :op1 ( country :name ( name :op1 uzbekistan )  :wiki uzbekistan )  :op2 ( country :name ( name :op1 tajikistan )  :wiki tajikistan )  :op3 ( country :name ( name :op1 turkmenistan )  :poss mostly :wiki turkmenistan )  :poss-of ( citizen :mod this :poss ( world-region :name ( name :op1 central :op2 asia )  :wiki central_asia )  )
goal :arg0-of ( earn :arg1 money :arg2 ( support :arg1 family :arg4 ( home :mod back )  )  )  :mod only
come :arg1 ( law :mod new )  :arg2 effect :time ( 12 :arg0-of ( oblige :arg1 ( person :arg0-of ( work :arg1 ( pass :arg0 1 :arg1 ( test :arg0 ( country :name ( name :op1 russia )  :wiki russia )  :arg1 language )  )  :arg2 ( person :arg0-of migrate :mod every )  )  )  )  )
intend :arg1 ( work :arg0 ( and :op1 ( service :mod utility :op2-of ( and :op1 ( house :arg1 ( apply :arg0 ( law :mod this )  :arg1 moment :arg4 only )  )  )  )  :op2 ( service :mod household )  :op3 retail )  :location service )
contrast :arg1 ( promise :arg0 ( organization :name ( name :op1 federal :op2 migration :op3 service )  )  )  :arg2 ( become :arg1 ( test :arg0 ( person :arg0-of reside :quant all )  :arg1 time :time - )  :arg2 mandatory )
test :arg1 ( history :op1-of ( and :op2 ( system :arg1-of ( legal :arg0 language )  )  )  :poss ( country :mod-of basic :name ( name :op1 russia )  :wiki russia )  )  :time addition
and :op1 ( confirm :arg0 knowledge :arg1 ( receive :arg1 both )  )  :op2 ( permit :arg1 work :arg1-of ( extend :arg0 language )  )
except :arg0 ( language :domain ( country :name ( name :op1 russia )  :wiki russia )  :mod state )  :arg1 ( country :poss-of ( citizen :mod only )  )  :arg1-of effect
and :op1 ( receive :arg0 ( person :arg1-of ( exempt :arg0 law :arg2 ( date-entity :year 1991 )  :mod also )  )  :arg1 ( certificate :arg1-of educate )  :time ( before :op1 ( fall :arg1 ( country :name ( name :op1 ussr )  :wiki soviet_union )  )  )  )  :op2 diploma
and :op1 purpose :op2 ( fate :arg1-of doom )  :op3 ( protect :arg1 right )
and :arg2-of ( educate :arg0 ( country :name ( name :op1 russia )  :wiki russia )  :arg1 institution :mod other )  :op1 ( friendship :arg1-of ( institute :arg0 auspex )  :arg1-of ( people :arg0 ( country :mod-of language :name ( name :op1 russia )  :wiki russia )  )  :arg1-of ( operate :arg0 state :arg1-of ( test :arg0 7 :op1-of point )  :op1-of under )  )  :op2 ( country :name ( name :op1 russia )  :wiki russia )  :op3 ( city :name ( name :op1 moscow )  :wiki moscow )  :op4 state
possible :arg1 ( take :arg1 ( test :arg0 migrant :arg1 160 )  :location ( city :quant all )  :op1-of ( and :arg0-of ( open :arg1 ( centre :mod such )  :arg2 more )  )  )
support :arg0 ( person :arg0-of ( have-org-role :arg1 ( organization :name ( name :op1 state :op2 duma )  )  :arg2 member )  )  :arg1 ( initiative :arg0-of ( introduce :arg1 test )  )  :manner ( and :op1 ( organization :name ( name :op1 federal :op2 migration :op3 services )  )  )
contrast :arg2 ( ask :arg0 ( activist :mod ( right :mod human )  )  :arg1 press :arg1-of repeat :arg2 question :time ( before :op1 ( come :arg0 interrogative :arg1 law :arg4 ( force :arg1-of ( achieve :mod actual )  )  )  )  )
obligate :arg1 ( know :arg0 ( person :mod ( country :name ( name :op1 russia )  :wiki russia )  )  :arg1 ( change :arg0 ( country :name ( name :op1 russia )  :wiki russia )  :arg1 ( and :op1 ( person :arg0-of ( reside :arg1 amr-unknown :polarity - )  )  )  )  :mode interrogative )  :arg2 thing
say :arg0 ( person :arg0-of ( represent :arg1 ( service :mod migration )  )  )  :arg1 ( allow :arg0 this :arg1 ( reduce :arg0 all :arg1 ( number :quant-of ( person :arg0-of ( suffer :arg1 ( slavery :mod labour )  )  )  )  )  )
explain :arg0 ( person :name ( name :op1 viktor :op2 sebelev )  )  :arg1 ( speak :arg0 many :arg1 ( protect :arg0 ( person :arg0-of ( migrate :arg1 ( work :arg0 ( country :name ( name :op1 russia )  :wiki russia )  )  )  :arg0-of represent )  :arg1 right )  )  :arg2 ( head :arg1 ( office :poss ( organization :name ( name :op1 federal :op2 migration :op3 services :op4 of )  )  )  )
recommend :arg1 ( begin :arg1 ( protect :arg1 right )  :time ( before :op1 depart )  )
enable :arg0 ( system :mod only :mod ( select :arg1-of organize )  )  :arg1 ( solve :arg1 ( problem :quant ( percentage-entity :value 90 )  :topic ( person :arg0-of work :mod foreign )  )  )
start :arg0 ( certificate :mod medicine )  :arg1 ( problem :poss ( migrant :arg0-of ( know :arg1 ( country :name ( name :op1 russia )  :wiki russia )  :arg1-of educate :polarity - )  )  :poss profession )  :arg2 -
say :arg0 ( he :arg0-of ( cramp :arg1 day :arg1-of ( barrack :arg0 force )  )  :arg0-of ( do :arg0-of ( understand :arg1 certainty :polarity - )  :arg1 migrate )  :arg0-of ( pretend :arg1 unconscientiou )  :arg0-of ( terrible :arg1 ticket )  :arg0-of ( come :arg1 person )  :arg0-of ( will :arg1 across )  :arg0-of doom :arg0-of help :arg0-of ( suffer :arg1 ( and :op1 document :op2 slave :op3 ( away :quant-of ( temporal-quantity :unit hour )  )  :quant food )  :arg2-of ( resemble :arg0 other :arg1 many )  )  )  :arg1 language
receive :arg0 ( we :arg2-of ( complain :arg0 ( person :arg0-of ( migrate :arg1 we )  )  :quant many )  )
contrast :arg1 ( take :arg0 passport :arg1 ( they :arg0-of ( pay :arg1 amr-unknown :arg2 ( they :arg0-of ( promise :arg1 ( thing :name ( name :op1 &quot; )  )  :arg2 ( confirm :arg0 ( thing :arg2-of ( promise :arg0 they )  :quant 1 )  :arg0-of ( head :arg1 ( organization :name ( name :op1 &quot; )  )  :arg2 of )  :arg2 ( country :mod-of tolib :name ( name :op1 tajikistan )  :wiki tajikistan )  :op1-of service )  )  )  )  )  :arg1-of ( lie :arg0 they )  :arg2 sharipov :arg4 home :polarity - )  :arg2 ( they :arg0-of arrive )
boss :arg1 ( angry :polarity - )
contrast :arg1 ( good :arg1-of ( admit :arg0 ( citizen :arg0-of ( go :arg1 ( work :arg1 nonetheles :arg2 - :location ( country :name ( name :op1 russia )  :wiki russia )  )  :arg1-of ( plan :arg0 they )  )  :poss ( country :location ( world-region :name ( name :op1 central :op2 asia )  :wiki central_asia )  )  :quant many )  )  )  :arg2 ( possible :arg1 ( write :arg1 ( understand :arg0 ( language :poss country )  :mod ( only :polarity - )  )  :degree bare :medium language )  )
possible :arg0 naturally :arg1 ( afford :arg0 ( and :arg1-of ( educate :arg0 poverty :mod basic :mod even )  :arg2-of ( contrast :arg1 ( fault :domain this :polarity - :quant much )  )  :op1 ( person :mod ( country :name ( name :op1 turkey )  :wiki turkey )  :quant ( few :degree very )  )  :op2 ( thing :name ( name :op1 uzbeks )  )  :op3 ( thing :name ( name :op1 tajiks )  )  )  )
and :arg1-of clothe :arg1-of shoe :op1 ( supply :arg0 family :arg1 ( mention :arg0 ( child :arg1-of ( feed :arg0 food )  :mod even :polarity - )  :arg1 decent :polarity - )  )
go :arg1 ( work :arg1 ( kid :arg0-of ( reach :arg1 adolescence :op1-of after )  :mod this )  :arg2 opportunity )
admit :arg0 ( they :domain-of ( bad :arg1 knowledge :domain ( it :arg1-of hard )  )  )  :arg1 language
and :arg1-of ( feel :arg0 you )  :arg1-of inferior :arg1-of humiliate
contrast :arg1 language :arg2-of ( note :arg0 ( activist :mod ( right :mod human )  )  :arg1 ( point :mod important :topic law )  )
conduct :arg1 test :mod ( only :mod-of ( migrate :arg0 ( person :poss-of ( status :arg1-of legal )  )  )  )
test :arg0 ( future :time-of ( work :arg1 ( status :polarity - )  :mod any :mod official )  )  :arg1 they :polarity -
continue :arg0 most :arg1 ( live :arg0 ( person :arg0-of ( work :arg2 ( person :arg0-of migrate )  )  )  :location ( country :name ( name :op1 russia )  :wiki russia )  )  :time meantime
welcome :arg1 ( or :op1 unauthoriz :polarity - )  :arg2 entry
assert :arg0 ( foreign :arg0-of ( receive :arg1 ( status :mod official )  :arg1-of ( easy :polarity - )  :location ( country :poss we )  )  :quant many )
difficulty :arg1-of ( mention :op1-of ( and :arg0-of ( lie :arg1 reason :arg2 ( hurdle :mod bureaucrat )  )  )  )  :mod already :mod language
cost :arg1 legalization :arg2 ( money :source ( monetary-quantity :unit ruble )  )  :location addition
and :arg1-of ( cost :mod only :op2-of ( and :op1 ( do :arg1 ( register :arg1 wherea :arg1-of ( fake :arg0 thousand )  )  :arg1-of quick )  )  )  :op1 half
know :arg0 ( officer :poss ( police :mod ( country :name ( name :op1 russia )  :wiki russia )  )  )  :arg1 ( paper :arg1-of ( fake :arg0 extortion )  :arg1-of register :mod main :poss we )  :arg2 hence
ask :arg0 they :arg1 ( or :op1 hundr :op2 2 :op3 ( cigarette :mod-of tea )  :op4 ( citizen :mod-of of :mod-of ( share :arg0 ( country :name ( name :op1 tajikistan )  :wiki tajikistan )  :arg1 journalist )  )  )  :arg2 ( person :name ( name :op1 &quot; )  )
roll :arg1 ( get :arg1 artwork :arg1-of ( do :polarity - )  :arg1-of cheap )
possible :arg1 ( effect :arg0 law :arg1 day :arg1-of register :arg1-of ( fake :arg0 document )  :arg1-of ( migrate :arg0 only :polarity - )  :arg1-of ( turn :arg0 it )  )
seize :arg0 ( person :arg0-of ( have-org-role :arg1 ( organization :name ( name :op1 federal :op2 migration :op3 services )  )  :arg2 officer )  )  :arg1 ( forge :arg1 ( certificate :quant few )  :arg2 ( pass :arg1 ( test :arg1 language )  )  )  :time already
print :arg0 ( printer :arg1-of standard :mod colour )  :arg1 ( document :arg1-of forge )
hope :arg0 ( person :arg0-of migrate :mod ( each :mod-of ( they :arg1-of ( free :arg2 ( person :arg0-of own )  :polarity - :time naturally )  )  )  )  :arg1 ( facilitate :arg1 ( task :mod ( pass :arg1 test :manner ( way :manner-of ( pay :arg1 ( monetary-quantity :quant 7 :quant thousand :unit ruble )  )  :mod this )  )  )  )
and :op1 half :op2 ( test :arg0 2 :arg1 ( 3 :era thousand )  :arg1-of ( process :degree ( more :domain it )  )  :arg1-of cost :mod official )
cause :arg1 ( possible :arg1 ( buy :arg1 certificate :mod just :op3-of ( and :arg0-of ( agree :arg1 ( protect :arg0 ( goal :mod main )  :arg1 system :arg2 ( corrupt :arg1 ( future :arg1-of near )  )  )  )  :op1 ( person :arg0-of ( have-org-role :arg1 ( government-organization :arg0-of govern )  :arg2 official )  )  :op2 ( activist :mod ( right :mod human )  )  )  )  :polarity - )
possible :arg1 ( promise :arg0 authority :arg1 ( person :arg0-of work :arg0-of ( pass :arg1 ( test :arg0 ( language :mod basic )  :arg0-of ( give :arg1 time :purpose complete )  :arg1 time )  :arg1-of ( possible :polarity - )  )  :mod migrate )  :purpose moment )
offer :arg1 ( work :arg0 ( country :mod-of ( knowledge :arg1-of come )  :name ( name :op1 russia )  :wiki russia )  :location ( area :arg0-of ( require :arg1 ( communicate :arg1 language :arg1-of activity :arg2 person )  :polarity - )  )  :location addition )
put :arg0 ( organization :name ( name :op1 ministry :op2 of :op3 the :op4 interior )  )  :arg1 arm :arg2 ( market :mod ( law :polarity - )  )  :arg3 circulate :location back :polarity -
low :arg1 ( involve :arg1 ( weapon :arg1-of legal )  :arg2 ( crime :arg1-of share )  )  :degree extreme
propose :arg0 ( ministry :poss ( country :name ( name :op1 russia )  :wiki russia )  )  :arg1 ( toughen :arg0 interior :arg1 law :beneficiary ( person :arg0-of ( own :arg1 ( weapon :mod civil )  )  )  )
result :arg0 ( massacre :arg0-of ( stage :op2-of ( and :op1 ( wedding :location-of ( shot :arg1-of click )  )  )  )  :arg1 ( react :arg1 ( incident :time recent )  :domain this :mod-of authority )  )  :arg1 ( click :arg1 ( die :arg1 ( person :quant 7 )  )  :location ( person :name ( name :op1 dmitry :op2 vinogradov )  )  )  :arg2 ( casualty :polarity - )  :purpose ( city :mod-of lawyer :name ( name :op1 moscow )  :wiki moscow )
license :arg0 21 :arg1 weapon :arg1-of ( age :arg1-of ( raise :op2-of ( and :op1 ( prohibit :arg0 policeman :arg1 ( carry :arg0 18 :arg1 weapon )  :arg1-of want )  )  )  :arg1-of legal )  :mod-of ( place :mod public )
amend :arg1 ( law :topic weapon )  :arg1-of ( bring :arg0 ( thing :name ( name :op1 state :op2 duma )  )  :arg1-of ( promise :arg0 ( thing :name ( name :op1 irina :op2 yarovaya )  )  )  :arg2 ( and :op1 ( support :arg0 ( head :arg1 ( organization :name ( name :op1 duma :op2 committee )  )  )  :arg1 idea )  :op2 safe :op3 anti :op4 corruption )  :time ( future :arg1-of near )  )
tighten :arg0 ( authority :arg0-of ( fight :arg1 problem :polarity ( - :polarity-of everyone )  )  :arg0-of ( try :arg1 happy )  :mod ( country :name ( name :op1 russia )  :wiki russia )  )  :arg1 screw
appear :arg1 ( person :arg0-of ( represent :arg1 organization )  :arg0-of ( toughen :arg1 senseles :arg1-of abandon )  :arg0-of ( differ :arg1 society :arg2 ( demand :arg1 rifle )  :mod of )  :arg1-of author )  :arg1-of ( open :arg0 letter )  :arg1-of online
say :arg0 ( person :arg2-of ( criminal :arg1 lawyer )  :mod ( country :name ( name :name-of ( company :name ( name :op1 bbc )  :wiki bbc )  :op1 russia )  :wiki russia )  :name ( name :op1 vasily :op2 lesnikov )  )  :arg1 ( minimal :arg1 ( percentage :arg2-of ( crime :arg2-of ( involve :arg1 ( register :arg1 weapon )  )  )  )  )
say :arg0 statistic :arg1 ( use :arg0 firearm :arg1 ( register :arg0 law :arg1 ( commit :arg0 ( 6 :mod-of ( temporal-quantity :unit month )  )  :arg1 ( record :arg0 whereas :arg1 ( period :mod this )  :arg1-of crime :arg1-of total :arg2 ( date-entity :year 2012 )  )  :arg1-of ( enforce :arg0 agency )  )  )  :arg1-of crime :arg1-of ( of :arg0 interior )  )
letter :op1 ( open :arg0 ( of :arg1-of author )  :arg1 certain :arg3 ( toughen :arg1 law :arg2 area :mod that :purpose ( prevent :arg0 civil :arg1 ( market :arg1-of black )  :arg2 weapon :op1-of ( from :op2 criminal )  :polarity - )  )  )
say :arg1 ( possible :arg1 ( find :arg0 one :arg1 ( weapon :mod any )  :arg1-of price )  :time ( now :mod right )  )  :arg1-of low
assert :arg0 ( organization :name ( name :op1 ministry :op2 of :op3 the :op4 interior )  )  :arg1 ( control :arg1 ( situation :mod ( spread :arg1 ( arm :mod ( law :polarity - )  )  )  )  )  :time nonetheles
plant :arg1-of ( have-org-role :arg0 person :arg2 officer )
replenish :arg1 ( market :arg1-of black :mod-of ( channel :mod several :mod weapon :mod of )  )
and :op1 ( education :mod-of ( ministry :time-of ( work :arg0 ( person :arg0-of ( have-org-role :arg1 ( channel :mod such )  :arg2 colonel )  :arg0-of explain :arg0-of retire :name ( name :op1 viktor :op2 baranets )  )  :arg1 5 :duration ( temporal-quantity :quant 10 :unit year )  )  )  )  :op2 ( staff :mod general )
accept :arg0 site :arg1 order :arg2 weapon
or :arg1-of ( fight :arg0 during :arg2-of ( steal :arg0 military :arg1 ( weapon :mod i.e. )  )  )  :op1 army :op2 loot
say :arg0 ( person :arg0-of ( have-org-role :arg2 officer )  :arg2-of ( steal :arg0 weapon :arg1 by )  :op2-of ( and :op1 ( country :name ( name :op1 russia )  :wiki russia )  :op3 ( thing :name ( name :op1 &quot; )  )  )  )  :arg1 ( person :name ( name :op1 &quot; )  )
of :mod-of ( defend :arg0 ( person :arg0-of ( represent :arg1 ( person :arg0-of ( steal :arg1 ( weapon :mod next )  )  :arg2-of criminal )  )  )  :arg1 agency )
and :arg1-of ( steal :mod that )  :arg1-of direct :op1 ( take :arg0 ( person :arg1-of employ )  :arg1 weapon :arg1-of cover :arg3 ( enforce :arg0 agency :arg1 law )  :op1-of from :purpose ( explain :arg0 ( person :name ( name :op1 baranets )  )  :arg1 that :mod-of this )  )  :op2 police :op3 warehouse
take :arg1 ( arm :arg0-of ( sell :arg1 ( warehouse :mod military )  )  :mod law )
hear :arg1 explosion :arg2 ( warehouse :mod military )  :time often
say :arg0 of :arg1 former :arg1-of ( short :arg0 ( theory :arg1-of ( prove :arg0 there )  :mod that :mod some )  :arg1-of ( cover :arg0 ( intend :arg0 fire :arg1 man )  )  :arg2 military )
say :arg0 ( person :name ( name :op1 baranets )  )  :arg2 ( contribute :arg1 ( manufacturer :poss weapon )  )
say :arg0 ( city :name ( name :op1 moscow )  :wiki moscow )  :arg1 ( expert :arg0 ( market :arg1-of black :arg1-of ( counter :arg0 ( market :arg1-of ( compete :arg0 ( there :arg0-of ( cause :arg1 ( weapon :arg1-of ( private :arg0 many )  )  )  )  :arg1-of endure :arg1-of ( do :arg0 factory :polarity - :time now )  )  :mod international :op1-of ( and :op2 ( throw :arg1 weapon :op1-of under )  )  )  )  )  )
source :arg0-of ( traffic :arg1 ( market :arg1-of black )  :arg2 of )  :mod another
come :arg1 ( number :arg1-of high :quant-of gun )  :arg3 ( country :arg1-of ( resemble :arg0 especially )  :mod poor )  :op2-of ( and :op1 ( gun :mod machine )  :op3 ( country :name ( name :op1 kyrgyzstan )  :wiki kyrgyzstan )  )
and :op1 ( produce :arg0 ' :arg1 ( there :arg0-of ( organize :arg1 ( explain :arg1 former :arg1-of ( form :arg0 mafia )  :arg1-of ( stream :arg2 military )  )  )  )  :location there )  :op2 ( and :op1 sometimes :op2 handmade )  :op3 man
come :arg1 weapon :mode interrogative
source :mod ( each :arg0-of ( black :arg1 market )  :arg0-of ( supply :arg1 ( weapon :mod ( law :polarity - )  )  )  :arg1-of share :arg1-of ( count :arg0 ( person :arg1-of expert )  :arg2 approximately )  :mod-of of )
prepare :arg0 ( organization :name ( name :op1 centre :op2 of :op3 problems :op4 analysis )  )  :arg1 ( report :topic this )  :op1-of ( and :op2 ( organization :name ( name :op1 public :op2 management :op3 planning )  )  )  :time ( date-entity :year 2011 )
and :op1 ( organization :arg1-of ( report :arg0 ( person :arg1-of expert )  )  :name ( name :op1 department :op2 of :op3 the :op4 interior )  )  :op2 ( literature :mod criminology )  :op2-of ( and :op1 ( organization :name ( name :op1 rosstat )  )  :op3 ( data :arg1-of open )  :op4 ( weapon :location-of portal )  )
say :arg0 ( person :arg0-of research )  :arg1 ( and :op1 ( come :arg1 ( majority :arg0-of ( overwhelm :arg1 ( weapon :mod ( law :polarity - )  )  )  )  :arg3 ( force :mod military :mod security )  )  )
cause :arg0 there :arg1 ( market :arg1-of ( black :arg0 ( arm :part-of ( person :arg0-of ( work :arg1 weapon :arg2 ( connect :arg1 report )  :location state :mod whose )  :arg0-of ( have-org-role :arg2 official )  )  :part-of all :part-of ( of :mod half )  )  )  )
say :arg0 ( data :arg0-of ( research :arg1 17 )  )  :arg1 ( of :arg0 time :arg1 ( weapon :arg2-of ( arm :arg0 ( 14 :arg0-of ( produce :arg1 ( 5 :arg0-of ( black :arg1 percentage-entity )  )  )  :arg0-of ( conflict :arg1 percentage-entity :arg2 area )  )  :arg1-of receive )  )  :arg2 percentage-entity )
assert :arg0 ( remain :arg1 store :arg2 anonymous :arg2-of ( wish :arg0 ( person :arg0-of ( find :arg1 weapon :arg2 ( buy :arg0 digger :arg1 more :arg1-of ( cause :arg0 ( they :poss-of ( too :mod old )  )  )  :arg1-of black :arg2 any :polarity - )  )  :arg0-of ( consult :arg1 of )  )  :arg1 weapon )  :arg3 1 )  :arg1 that
say :arg1 ( go :arg0 ( person :arg0-of deal :domain-of good )  :arg4 ( warehouse :arg1 military )  :purpose ( person :mod new :source batch )  )
possible :arg1 ( buy :arg1 ( gun :mod tt )  :arg2 ( piece :quant 1 )  :arg4 ( example :arg0-of ( have-org-role :arg1 warrant :arg2 officer )  )  )
issue :arg1 it :op1-of ( and :op2 ( give :arg1 fence )  )
say :arg0 he :arg1 ( and :op1 city :op2 ( sell :arg0 ( he :arg0-of ( take :arg1 it :arg2 piece )  )  :arg1 ( monetary-quantity :unit euro )  :arg2 2 )  :op3 900 )  :time magazine
say :arg0 ( person :arg0-of merchandise :arg1-of ( detect :arg0 periodic :arg2 ( rate :arg1-of crime )  )  :arg1-of ( purchase :arg0 ( of :mod-of everything )  :arg2-of ( test :arg0 why :arg1 ( weapon :mod ( law :polarity - )  )  :arg1-of ( conduct :arg0 ( police :mod that )  )  )  :arg2-of ( low :arg0 truth :arg1 it )  )  )  :arg1 ( person :arg0-of consult )
resemble :arg1 store :arg2 luxury
find :arg0 ( and :op1 ( person :arg0-of buy :arg1-of ( have-rel-role :arg0 person :arg2 friend )  )  :op2 ( sell :arg1 ( each :mod-of other )  )  )  :frequency often
cause :arg0 ( we :arg0-of ( negotiate :arg1 ( possible :arg1 ( look :arg0 i :arg1 ( go :arg0 ( i :arg0-of ( offer :arg1 till )  )  :arg1 station :arg4 site )  :arg1-of ( respond :arg0 someone )  :purpose blog )  )  :purpose-of ( take :arg0 ( i :arg1-of ( wait :arg0 man )  )  :arg1 i :arg2 corner )  )  )
find :arg0 i :arg1 ( price :arg1 weapon )  :location ( there :mod only )
person :mod ( military :mod-of commentator )  :name ( name :op1 viktor :op2 baranets )
contrast :arg2 ( i :arg0-of ( sure :arg1 it :arg2 reliable )  :arg2-of ( acquaint :arg0 ( i :arg2-of ( consult :arg0 ( person :arg0-of ( say :arg1 the :arg2-of ( connect :arg0 with :arg1 an :arg1-of ( need :arg0 ( i :arg0-of ( get :arg1 weapon )  )  :manner someone )  :polarity - )  )  )  )  )  :arg1 ' )  )
contrast :arg1 ( market :arg1-of labour )  :arg2 ( need :arg1 salesman :arg1-of ( tell :arg0 ( he :arg1-of ( have-rel-role :arg0 person :arg2 daughter )  )  :arg2 ( lose :arg1 tooth :arg2-of ( ask :arg1 conditionally )  :arg2-of ( come :arg1 ( person :name ( name :op1 there )  )  )  )  )  )
need :arg0 i :arg1 ( knuckleduster :quant few )  :beneficiary i :condition-of ( trust :arg0 i :arg1 someone :arg2 ( right :mod-of now )  )  :mod even
cause :arg0 i :arg1 ( know :arg0 i :arg1 he :arg1-of ( give :arg0 ( he :arg0-of ( supply :arg1 also )  )  :arg2 ( away :mod only )  :polarity - )  )
look :arg0 beginner :arg1 weapon :manner ( way :arg1-of differ )
publish :arg0 ( he :arg0-of ( prepare :arg1 this :arg2 ( mid :condition-of ( try :arg0 ( man :op1-of military )  :arg1 ( weapon :mod ( law :polarity - )  )  :arg2-of ( buy :arg0 person :op1-of of )  :op1-of baranet :time former )  )  :time ( date-entity :year 1990 )  )  )  :arg1 ( article :degree-of about )
say :arg1 ( formula :arg1-of ( same :mod still )  )
and :op1 ( give :arg0 he :arg2 album )  :op2 picture :op3 anything :op4 everything
recall :arg0 ( he :arg2-of ( resemble :arg1-of ( feel :arg0 i :arg2 i )  )  )  :arg1 store :arg2 luxury
say :arg0 ( person :name ( name :op1 baranets )  )  :arg1 ( offer :arg0 ( person :arg0-of buy )  :arg1 pig :polarity - :purpose ( possible :arg1 ( try :arg0 you :arg1 everything :arg1-of poke )  )  )
and :op1 ( buy :arg0 i :arg1 ( client :mod potential )  :mod just )  :op2 ( go :arg0 ( we :arg0-of sell :arg0-of ( target :arg1 - :location there )  )  :arg4 forest :op1-of and )
and :op1 ( shoot-down :arg0 ( i :arg0-of ( give :arg1 certain :arg2 opportunity )  )  :arg2 i )  :op2 ( begin :arg0 ( we :arg0-of ( expert :arg1 ( weapon :mod that )  )  :arg0-of ( negotiate :arg1 describe )  )  :arg1 good )
store :arg1 sofa
and :arg0-of ( lead :arg1 group :arg2 ( search :arg0 where :arg1 internet :arg2 weapon )  )  :op1 site :op2 ( thing :arg1-of offer :arg1-of ( differ :arg2 purpose )  :name ( name :op1 internet )  )
need :arg1 ( or :op1 document :op2 ( meet :arg1-of personal )  )  :polarity -
say :arg0 ( sum :mod-of of )  :arg1 ( buy :arg0 ( it :op1-of ( ' :mod-of enough )  )  :arg1 rifle :arg1-of ( head :arg0 advertisement )  :op1-of website :op1-of or :op1-of money :op1-of pistol )  :manner certain
and :op1 ( leave :arg0 user :arg1 ( request :arg1 user )  )  :op2 ( ask :arg2 question )
possible :arg1-of ( buy :mod minor :mode interrogative )
ask :arg0 without :arg1 ( change :arg0 ( person :name ( name :op1 &quot; )  :name name )  :arg1 license )  :arg2 ( person :arg0-of ( use :arg1 ( course :mod of )  )  )
request :arg0 concisely :arg1 ( buy :arg1 ( city :name ( name :op1 moscow )  :wiki moscow )  :arg1-of want :op1-of tt )  :arg2 ( thing :name ( name :op1 &quot; )  )
and :op1 ( spread :arg0 ( organization :name ( name :op1 federal :op2 security :op3 service )  )  :arg1 ( network :consist-of ( site :arg1-of fake )  :mod big )  :time now )  :op2 ( mass-quantity :quant-of ( person :arg0-of ( buy :arg1 ( weapon :mod military )  )  :mod potential )  :unit ton )
and :op1 ( come :arg1 person :arg1-of ( resemble :arg2 ( fish :arg1-of hunger )  )  :arg4 bait )  :op2 ( mine :time then )  :op3 ( coal :location ( country-region :name ( name :op1 siberia )  :wiki siberia )  )
and :op1 ( commentator :mod military )  :op2 ( person :mod ( military :mod former :mod-of man )  :name ( name :op1 viktor :op2 baranets )  )
applicability :mod-of ( area :mod-of ( law :poss ( country :name ( name :op1 russia )  :wiki russia )  )  :op1-of ( outside :location-of ( register :arg0 ( i :arg0-of ( hear :arg1 this :arg2 about )  )  :arg1 site :arg1-of normal )  )  )
accept :arg0 person :arg1 order
pay :arg0 ( person :arg0-of buy )  :arg1 ( thing :name ( name :op1 atm )  )
say :arg0 ( hide :arg0 ( send :arg0 ( photo :arg1-of ( respond :arg0 in )  )  :arg1 instruction :arg2 weapon :polarity - )  :arg1 ( press :arg0-of ( have-org-role :arg1 ( organization :arg1-of ( govern :arg0 government-organization )  :op1-of kislov :op1-of dmitry )  :arg2 secretary )  )  :arg2 of )  :arg2 ( weapon :mod right )
confirm :arg0 ( person :name ( name :op1 viktor :op2 baranets )  )  :arg1 ( stay :arg1 ( you :arg0-of ( leave :arg1 ( request :arg1 site )  :op1-of after )  )  :manner weapon :op1-of ( and :arg1-of possible :op2 ( go :arg4 jail :arg0 you )  )  )
and :op1 ( spread :arg0 ( organization :name ( name :op1 federal :op2 security :op3 service )  )  :arg1 ( network :consist-of ( site :arg1-of fake )  :mod big )  :time now )  :op2 ( mass-quantity :quant-of ( person :arg0-of ( buy :arg1 ( weapon :mod military )  )  :mod potential )  :unit ton )
say :arg0 ( he :arg2-of ( resemble :arg1 ( hunger :arg0 person :arg1 fish )  )  )  :arg1 ( and :arg1-of bait :op1 ( end :arg0-of ( mine :arg1 coal )  :arg1 ( country-region :name ( name :op1 siberia )  :wiki siberia )  )  :time after )
makarov :op1 ( monetary-quantity :quant 100 :unit dollar )
say :arg0 ( person :arg0-of ( buy :arg1 ( firearm :mod ( law :polarity - )  )  )  :arg1-of ( expert :arg0 100 )  )  :arg1 enough :arg2 ( monetary-quantity :unit dollar )
say :arg0 ( person :name ( name :op1 dmitry :op2 kislov )  :source right )  :arg1 ( possible :arg1 ( acquire :arg0 ( organization :mod weapon )  :arg1 gun :arg3 ( monetary-quantity :unit dollar )  )  )
and :op1 ( time :domain-of ( month :unit-of ( temporal-quantity :beneficiary ( temporal-quantity :unit month )  )  )  :purpose wait )  :op2 half
ship :arg1 it :arg2 ( warehouse :arg1-of long :mod ( storage :topic-of ( manage :arg1 ( warehouse :mod this )  :mod ( level :mod mid )  )  )  )
say :arg0 ( statistic :mod official )  :arg1 ( drop :arg0 whole :arg1 ( number :quant-of ( case :arg1 theft :arg2 ( and :op1 extortion )  )  )  :purpose ( amount :arg0 ( number :arg0-of ( drop :arg1 ( and :op1 weapon :op2 ammunition :op3 ( substance :mod explode )  :op4 ( device :arg1-of explode )  )  :degree ( percentage-entity :value 7.8 )  )  :quant-of ( crime :arg1 7 :location ( country :mod-of authority :name ( name :op1 russia )  :wiki russia )  :mod such )  )  :arg1 ( percentage-entity :arg1-of ( compare :arg0 ( date-entity :year 2011 )  :arg2 ( date-entity :month 10 )  :arg4 1 )  )  )  )
and :op1 fast :op2 food :op3 supermarket :op4 ( person :arg0-of work :arg0-of ( strike :arg1 u.s.a. )  )
or :arg1-of ( work :arg0 ( teenager :quant all )  :arg0-of ( register :arg1 cash )  :arg1-of up :location fourth )  :duration time :op1 another
and :op1 ( popular :arg0 supermarket :arg1 ( protest :arg0 ( action :arg0-of ( low :arg1 salary )  )  :arg1 ( wave :arg0 ( temporal-quantity :unit day )  :arg1 ( few :mod last )  )  )  :location chain :location chain )  :op2 ( fast :arg0-of ( have-org-role :arg1 burg :arg2 king )  )  :op3 food :op4 ( taco :op1 bell_canada )  :op5 ( and :arg2-of ( resemble :arg1 restaurant )  :op1 ( company :name ( name :op1 kentucky :op2 fried :op3 chicken )  :wiki kennedy_fried_chicken )  )
possible :arg1 ( predict :arg0 nobody :arg1 ( or :op1 ( turn :arg1 ( wave :mod this )  :arg2 ( wave :mod ninth )  )  :op2 ( destine :arg1 ( fizzle :time early )  )  )  :time ( now :mod right )  )
support :arg0 union :arg1 action :manner ( and :op1 ( series :quant-of ( organization :mod ( wing :mod left )  )  )  )
and :op1 ( person :arg0-of ( receive :arg1 ( wage :arg1-of low :arg1-of ( increase :arg2 addition )  )  )  :arg1-of ( employ :arg0 ( organization :name ( name :op1 walmart )  )  )  )  :op2 ( chain :arg1 ( food :mod fast )  :arg2-of ( protest :arg0 ( person :arg0-of ( create :arg1 union :domain-of goal )  )  )  )
cover :arg0 ( movement :arg1 ( union :arg0 yet )  :mod any )  :arg1 ( sector :mod this :poss economy )  :polarity -
cent :unit-of ( monetary-quantity :mode ( interrogative :mode-of year )  :quant 46 )
clash :arg0 massive :arg0-of ( accompany :frequency sometimes :purpose-of ( draw :arg1 million :arg2 friday )  )  :arg1 ( begin :arg1 action :time ( after :op1 ( festival :arg1-of black :name ( name :op1 thanksgiving )  :wiki thanksgiving )  )  :time ( week :mod last )  )  :op1-of ( country :location-of person :name ( name :op1 america )  :wiki united_states )
and :op1 ( leave :arg0 ( person :arg1-of ( employ :arg0 ( corporation :arg0-of ( employ :arg1 ( person :location ( around :op1 world )  )  )  :mod ( organization :name ( name :op1 walmart )  )  )  )  :quant some )  :arg1 workplac :time ( day :mod this )  )  :op2 ( picket :arg0 income :arg1 ( union :op1-of ( and :op2 ( activist :mod wing )  )  )  :arg2 ( store :arg0-of ( sell :arg1 ( product :arg0-of ( low :arg1 medium )  )  :arg2 person :op1-of 2.2 )  :mod corporation )  :manner together )
sell :arg0 ( organization :name ( name :op1 walmart )  )  :arg1 ( and :arg0-of ( imagine :arg1 everything )  :op1 diaper :op2 ( rifle :purpose hunt )  :op3 ( battery :name car )  )  :purpose ( vacuum :op1-of ( and :op2 clean :op3 egg :op4 milk )  )
cheap :arg1 ( product :poss store )  :arg2 ( average :arg1 ( major :arg0 8 :arg1 supermarket :arg2 percentage-entity )  :arg2 ( percentage-entity :value 27 )  )
cause :arg0 ( shop :arg0 ( person :arg0-of ( pay :arg1-of low )  :arg1-of employ :poss-of workplace :quant many )  :mod only )
corporation :example ( and :op1 availability :op2 assortment :op3 ( organization :name ( name :op1 walmart )  )  )  :mod ( big :degree most )
say :arg0 critic :arg1 ( possible :arg0 cheaply :arg1 ( afford :arg0 ( organization :name ( name :op1 walmart )  )  :arg1 ( sell :arg1 product )  :arg1-of ( cause :arg0 ( pay :arg2 ( person :arg1-of employ )  :arg3 little )  :mod part )  )  )
complain :arg1 ( condition :topic ( work :arg1-of ( hard :time about )  )  )  :mod also :purpose ( lack :arg0 example :arg1 ( truck :arg1-of ( lift :arg0 this )  )  :op1-of ( and :op2 ( scanner :arg0-of ( hold :arg1 hand :arg2 latter )  )  )  )
and :op1 ( complain :arg0 ( person :arg0-of ( demand :arg1 ( increase :arg1 salary )  )  :arg0-of protest )  :arg1 ( go :arg1 ( corporation :arg0-of ( provide :arg1 ( insure :arg1 ( temporal-quantity :unit month )  :arg1-of cost :manner-of ( black :arg0 30 :arg1 friday )  :mod medicine )  )  )  :arg4 ( monetary-quantity :quant 100 :unit dollar )  )  )
possible :arg0 ( slash :quant-of ( temporal-quantity :unit hour )  )  :arg1 ( afford :arg0 ( person :arg0-of ( receive :arg1 ( monetary-quantity :unit dollar )  )  :arg1-of ( employ :arg0 ( organization :name ( name :op1 walmart )  )  )  :arg1-of typical )  :arg1 this )  :polarity -
argue :arg0 ( person :arg0-of ( have-org-role :arg1 ( organization :location ( state :name ( name :op1 california )  :wiki california )  :name ( name :op1 berkeley :op2 university )  )  :arg2 scientist )  :op1-of ( slash :quant-of ( temporal-quantity :unit hour )  )  )  :arg1 ( cost :arg0 ( organization :arg0-of ( raise :arg1 ( salary :arg1-of ( average :arg0 3.2 )  )  :arg4 ( monetary-quantity :quant 12 :unit dollar )  )  :name ( name :op1 walmart )  )  :arg1 corporation :arg2 ( monetary-quantity :unit dollar )  )
spend :arg0 1.1 :arg1 salary :op1-of ( more :domain this :quant ( percentage-entity :op1-of about )  )  :time ( right :mod-of now )
increase :arg1 ( wage :arg2-of ( cost :arg1-of ( shift :arg0 ( organization :name ( name :op1 walmart )  )  :arg2 ( shoulder :arg1 ( person :arg0-of consume )  :arg2-of ( visit :arg1 store :arg1-of ( cost :arg0 ( monetary-quantity :mod only :quant 46 :unit cent )  :arg2 more )  :mod each )  )  :degree full )  )  )
spend :arg0 they :arg1 more :arg3 ( monetary-quantity :mod only :unit dollar )  :time now :time year
note :arg0 ( person :arg0-of ( support :arg1 ( organization :name ( name :op1 walmart )  )  )  )  :arg1 ( and :op1 ( cause :arg0 ( protest :arg1 corporation :location ( state :location-of place :quant 9 )  )  :arg1 ( damage :arg0 all :mod any )  :polarity - )  )  :manner happy
and :op1 ( continue :arg0 ( friday :arg1-of ( black :arg0 ( next :mod-of day )  :op1-of ( 5000 :poss 8 )  :op1-of about )  )  :location store :time ( till :op1 midnight )  :time evening )  :op2 thursday :op3 ( sell :arg0 ( organization :name ( name :op1 walmart )  )  :arg1 product :time period )
conduct :arg0 ( register :arg1 cash )  :arg1 ( transact :arg1 ( friday :arg1-of black )  :arg2-of ( total :arg1 100 )  :quant nearly )
interview :arg0 ( person :arg0-of ( assert :arg1 ( wing :mod left )  )  :arg0-of ( represent :arg1 of :op1-of corporation )  :name ( name :op1 representative )  )  :arg1 ( person :arg1-of employ :op2-of ( and :op1 ( post :arg0 site :arg1 that :arg2-of ( total :arg1 less )  )  :op3 workplace :op4 ( act :arg1 ( protest :arg1 ( trick :arg1-of ( union :arg2-of ( organize :arg1 it )  )  :mod pr :mod just :mod another )  )  )  )  :quant 5 )
cash :arg1-of ( free :arg2 ( register :arg1 expressive )  )
contrast :arg1 yet :arg2 ( and :arg1-of ( exist :arg0 they :arg2 ( why :mod that )  :location here :polarity - :polarity ( - :polarity-of ( cause :arg0 ( they :arg0-of ( progressive :arg1 city )  )  :arg1 ( object :arg1-of welcome :arg1-of ( continue :arg1-of ( protest :location ( city :name ( name :op1 new :op2 york )  :wiki new_york_city )  )  :mod-of ( week :mod this )  )  :mod-of walmart :op1-of ( their :mod where )  )  :polarity - )  )  )  :arg1-of ( cheap :mod ( other :mod-of restaurant )  )  :op1 mcdonald :op2 ' )
say :arg0 ( person :arg2-of ( give :arg0 ( you :arg0-of ( sick :arg1 ( or :arg1-of ( pay :arg0 ( you :arg0-of ( work :arg1 honest :location expressive )  )  )  :op1 ( temporal-quantity :unit day )  )  )  )  :arg1 ( and :op1 of :op2 portion :op3 ( despite :mod-of this )  )  :mod even :polarity - )  :arg2-of ( sell :arg0 it :arg1 billion )  :name ( name :op1 mcdonald )  )  :arg1 that
person :arg0-of ( have-org-role :arg1 ( organization :name ( name :op1 city :op2 council )  :part-of ( city :name ( name :op1 new :op2 york )  :wiki new_york_city )  )  :arg2 member )  :name ( name :op1 jumaane :op2 williams )
say :arg0 ( law :mod-of moment :op1-of ( temporal-quantity :unit hour )  :op3-of ( and :op1 federal :op2 ( state :name ( name :op1 ny )  :wiki new_york )  )  )  :arg1 ( salary :domain-of ( monetary-quantity :unit dollar )  :op1-of minimum )
contrast :arg0 ( monetary-quantity :op1-of ( slash :op2 ( hour :unit-of temporal-quantity )  )  :unit dollar )  :arg1 ( ordinary :arg1-of average :mod-of ( person :arg1-of employ )  )  :arg2 ( increase :arg0 ( food :mod fast )  :arg1 ( restaurant :arg1-of ( earn :arg0 ( city :name ( name :op1 new :op2 york )  :wiki new_york_city )  )  :domain-of ( little :degree very )  )  :arg3 time )
earn :arg0 nobody :arg1 less :location ( city :mod expensive :mod this )
understand :arg0 i :arg1 ( possible :arg1 ( survive :arg0 one :arg1 ( money :mod this )  :location ( city :name ( name :op1 new :op2 york )  :wiki new_york_city )  )  )  :arg1-of possible :polarity -
teenager :arg0-of ( go :arg1-of ( have-rel-role :arg0 ( person :arg0-of ( live :arg1 school :time after :time time )  )  :arg2 parent )  :arg1-of ( work :arg0 fourth )  :time ( time :mod once :time-of almost )  )
see :arg0 few :arg1 this :arg2 ( source :mod ( live :arg1-of long )  )  :op1-of ( or :op2 ( plan :arg1 ( stay :location there )  )  )
interview :arg0 across :arg1 ( person :arg0-of ( complain :arg1 ( continue :arg0 i :arg1-of ( come :time now )  )  :arg2 they )  :arg0-of ( feed :arg1 ( and :op1 ( salary :mod this )  :op2 sometimes )  :arg2 child :mod even )  :arg0-of survive :arg1-of employ )
note :arg0 ( person :arg0-of ( author :arg1 ( newspaper :mod-of ( forum :arg1-of comment )  :name ( name :op1 wall :op2 street :op3 journal )  :wiki the_wall_street_journal )  )  :part ( hand :mod other )  )  :arg1 ( responsible :arg1 ( child :arg1-of ( know :arg0 you :concession ( feed :arg0 you )  :polarity - )  )  )
and :op1 ( begin :arg1 at :arg1-of ( protest :arg0 participant :arg2 ( near :arg1 ' :mod thursday :mod that :mod a.m. :mod mcdonald )  :mod of )  )  :op2 40th :op3 street :op4 madison :op5 ( demand :arg1 that :op1-of ( and :op2 cashier :op3 ( person :arg0-of ( cook :arg1 ( fast :mod-of food :mod-of chain )  )  :arg0-of ( pay :arg1 ( 15 :op2-of ( slash :op1 least :op3 ( monetary-quantity :unit dollar )  :op4 i.e. :op5 ( double :mod-of wage :mod-of ( than :mod more )  :mod-of present :mod-of their )  )  :quant-of ( temporal-quantity :unit hour )  )  )  )  )  :op1-of avenue )
demand :arg0 they :arg1 ( create :arg1 ( union :location ( industry :mod ( food :mod fast )  )  )  )  :mod also
prohibit :arg0 ( law :arg0-of ( administrate :arg2 ( prevent :arg1 this :op1-of ( or :op2 ( punish :arg0 ( or :op1 nag :op2 fire )  :arg1 ( activist :poss ( movement :arg1 union )  )  )  )  )  )  )
ease :arg1 ( life :poss ( administrate :arg1 ( hand :mod other )  )  )  :frequency often :polarity -
contrast :arg2 ( hard :arg1 ( cover :arg0 ( reason :mod objective )  :arg1 ( food :mod fast )  :arg2 union )  )
turnover :domain 1 :mod ( usual :polarity - )  :poss ( person :arg1-of employ )
disagree
begin :arg1 ( protest :arg1 ( city-district :name ( name :op1 manhattan )  :wiki manhattan )  :manner noisy )  :arg2 ( number :arg0-of ( cheap :arg1 ( restaurant :mod other )  )  )  :time ( day :mod this )
say :arg0 they :arg1 ( and :arg2-of ( give :arg0 ( you :arg0-of ( sick :arg1 ( or :arg1-of ( pay :arg0 ( you :arg0-of ( work :arg1 honest :mod expressive )  )  )  :op1 ( temporal-quantity :unit day )  )  )  )  :mod even :polarity - )  :op1 ( politician :arg0-of ( speak :time 1 )  :arg0-of ( time :arg1 ( square :wiki - )  :arg2-of ( near :arg1 ( highlight :arg1 of )  :mod meet :mod afternoon :mod action )  )  :arg2-of ( local :arg1 several )  :mod democracy )  :op2 ( claim :arg2 ( sell :arg0 it :arg1 billion )  )  :op3 portion :op4 ( despite :mod-of this )  )  :arg2-of mean
say :arg0 ( person :arg0-of ( have-org-role :arg1 city :arg2 mayor )  )  :arg1 ( need :arg0 ( we :arg0-of ( support :arg1 ( person :arg2-of ( resemble :arg1 ( candidate :mod-of ( state :name ( name :op1 ny )  :wiki new_york )  )  )  :mod ( other :mod-of democrat :mod-of ( state :name ( name :op1 ny )  :wiki new_york )  :mod-of prominent )  :name ( name :op1 demonstrators )  )  :mod demonstrator :mod-of by )  )  :arg1 voice :arg1-of ( cause :arg0 ( possible :arg1 ( achieve :arg0 they :arg1 ( thing :arg1-of ( deserve :arg0 expressive )  :mod every :mod which :name ( name :op1 demonstrators )  )  :mod that :op1-of fair :op2-of ( and :op1 ( person :arg1-of employ :arg1-of ( support :arg0 we :mod joint )  :mod ( fast :mod-of food )  )  :op3 wage :op4 economy :op5 wellbe )  )  )  )  :arg1-of ( mean :arg2 amr-unknown )  )
say :arg0 ( newspaper :name ( name :op1 the :op2 new :op3 york :op4 times )  :wiki the_new_york_times )  :arg1 ( action :domain this :mod ( big :compared-to ( history :poss ( industry :mod ( food :mod fast )  )  )  :compared-to ( kind :mod this )  :degree most )  )
contrast :arg1 many :arg2 ( and :op1 ( person :quant few )  :op2 ( food :mod fast )  :op3 ( person :arg0-of ( comprise :arg1 ten :arg2 thousand :op1-of only )  :arg1-of ( employ :polarity - )  )  :op4 ( person :location ( city :name ( name :op1 new :op2 york )  :wiki new_york_city )  )  )
clear :arg0 it :arg1 ( spark :arg0 this :arg1 ( movement :arg1 mass )  )  :polarity - :time ( now :mod right )
possible :arg0 mind :arg1 ( deceive :arg0 ( moment :mod at )  :arg1 ( well :mod-of too )  )  :polarity -
augment :arg0 ( fan :mod ( technology :arg1-of modern )  )  :arg1 ( topic :arg1-of popular )  :purpose ( see :arg0 ( glass :arg1-of special )  :arg1 reality :mod primary :path prism :time lately )
announce :arg0 ( company :name ( name :op1 microsoft )  :wiki microsoft )  :arg1 ( conference :arg0-of file :arg0-of apply :location-of too :location-of ( date-entity :month 11 )  :location-of then :time-of ( show :arg0 ( company :arg0-of patent :name ( name :op1 google )  :wiki google )  :arg1 ( model :mod functional )  :time summer )  )
say :arg0 ( person :name ( name :op1 shahram :op2 izadi )  )  :arg1 ( converse :arg1 3d :arg2 ( person :arg0-of ( lead :arg1 ( group :location ( laboratory :mod ( country :name ( name :op1 cambridge )  :poss-of ( technology :mod interactive )  )  :mod-of ( past :poss-of ( thing :domain glass )  )  :mod-of ( scientist :location ( company :mod this )  )  :poss ( company :name ( name :op1 microsoft )  :wiki microsoft )  )  )  )  )  )
draw :arg0 ( prospect :arg0 air :arg1 ( manipulate :arg0-of ( create :arg1 ( space :arg1-of open :mod virtual )  )  :arg1 ( object :mod virtual )  :instrument ( hand :arg1-of bare )  )  )  :arg1 they
tell :arg1 ( work :arg1 ( research :arg1 group )  :mod about )  :manner ( term :arg1-of simple )
interact :arg1 ( time :arg1-of same :time-of ( try :arg1 ( expand :arg0 ( machine :arg1-of ( interact :arg0 person :arg1-of ( work :arg0 we )  )  )  :arg1 boundary )  )  )  :mod this
stick :arg1 ( person :arg1-of while )  :arg2 ( work :arg0 general :arg1 ( screen :mod flat )  :arg3 pixel :op1-of ( and :op2 ( point :arg1 finger :frequency sometimes )  )  )
want :arg0 we :arg1 ( look :arg1 ( temporal-quantity :unit year )  :op1-of ( and :op2 predict :op3 ( change :arg1 ( interact :mod this )  :mod cardinal )  )  :time future :arg0 we )
cause :arg0 ( like :arg0 ( everyone :arg0-of ( sell :arg1 ( - :mod almost )  :time today )  )  :arg1 ( control :arg1 example :arg1-of gesture )  )  :arg1 ( and :domain-of ( step :mod forward )  :op1 sensor )
await :arg0 ( amr-unknown :mod ( else :op1 interrogative )  )  :time future
occur :arg0 much :arg1 ( screen :mod flat )  :medium 3d :mod still :time ( despite :op1 ( fact :time ( shift :arg1 ( interact :arg1 sometimes )  :arg3 ( level :mod physical )  )  )  )
contrast :arg1 ( improve :arg1 ( entry :mod information )  )  :arg2 ( need :arg0 output :arg1 good :time still )  :topic-of ( system :arg0-of ( receive :arg1 ( data :quant more )  )  )
base :arg1 ( work :arg0 ( we :arg0-of ( change :arg1 this )  :arg0-of ( try :arg1 change )  )  :arg1 ( system :arg0-of display :mod dimensional :quant 3 )  :arg1-of ( project :arg0 technology )  )  :arg2 ( technology :mod various )
need :arg0 we :arg1 ( let :arg1 ( world :location ( world :mod physical :poss we )  :mod computer )  :arg0 we )  :arg2 ( more :degree-of tangible )
contrast :arg2 ( need :arg0 we :arg1 ( identify :arg1 ( and :mod both :op1 ( person :arg0-of use )  :op2 ( space :location around )  )  :arg0 we )  :prep-along-with this )
possible :arg1 ( supplement :arg0 we :arg1 ( world :mod real :mod ( form :mod ( convenient :degree ( more :mod much )  )  )  )  :arg2 ( object :mod virtual )  :time then )
rid :arg0 ( above :mod all )  :arg1 ( helmet :mod reality :mod stupid :mod this )  :arg2 virtual
think :arg0 you :arg1 amr-unknown :arg2 ( control :arg1 voice )  :mode interrogative
contrast :arg1 ( thing :arg1-of ( popular :arg0 it )  :arg1-of ( overestimate :arg0 interrogative )  )
cause :arg0 ( want :arg0 ( we :arg1-of question )  :arg0-of ( call :arg1 it :arg1-of clear :arg1-of possible :arg2 ( cure :arg1 all )  :polarity - )  :arg0-of ( let :arg1 ( know :arg0 ( we :arg0-of ( intend :arg1 ( and :op1 action )  )  )  :arg1 other )  )  :arg1 always :polarity - )  :arg1 privacy
contrast :arg0 niche :arg1 ( good :domain ( type :mod-of ( interact :arg1 each :arg2 reality :location computer )  :quant all )  )
contrast :arg0 ( one :arg1-of reserved :mod small )  :arg2 ( move :arg1 ( we :arg0-of ( control :arg1 device :location ( place :mod public )  :purpose-of project )  )  :arg1-of ( think :arg0 ( we :arg1-of ( move :arg1-of ( wide :arg0 example )  :polarity - )  )  )  )
contrast :arg1 ( record :arg0 camera :arg1 movement :polarity - )  :arg2 ( and :arg1-of ( movement :arg1-of ( determine :arg0 ( bracelet :mod hand )  )  )  :op1 bone :op2 muscle )
contrast :arg1 ( right :arg0 it :arg1 ( theory :arg0-of ( reduce :arg1 possible :arg1-of ( size :arg0 ( hand :arg1-of watch )  )  )  )  :arg2 now :mod big )
lie :arg1 future :arg2 ( voice :arg3-of ( mix :arg1 control :arg1-of ( general :arg1-of ( movement :arg0 e.g. )  )  )  )
mean :arg0 you :arg1 amr-unknown :mode interrogative
ask :arg0 you :arg1 example :arg2 i :purpose ( give :arg1 ( bottle :mod this :quant-of water )  :arg2 ( you :op1-of interrogative )  )
and :op1 ( talk :arg0 you :time ( time :arg1-of same )  )  :op2 ( show :arg0 you )
say :arg0 i :arg1 usually :mod just
hard :arg1 ( detect :arg1 oh )  :degree very :domain that
cause :arg1 ( want :arg0 you :arg1 ( adapt :arg0 user :arg2 ( machine :arg0-of ( do :arg1-of ( possible :op1-of or )  :arg1-of ( possible :polarity - )  :time ( moment :mod that )  )  )  )  :mode interrogative )
contrast :arg1 ( approximation :mod mutual )  :arg2 ( necessarily :polarity - )
determine :arg0 precise :arg1 ( person :arg0-of ( develop :arg1 ( work :arg1 sensor :arg1-of ( think :arg0 i :arg2-of ( near :arg0 ( we :arg0-of ( enable :arg1 more )  )  :arg1 future )  )  :mod main )  :mod new )  :arg1-of react )
possible :arg0 ( they :op1 this )  :arg1 ( resolution :mod ( depth :mod decent )  :mod ( important :degree very )  :mod ( sensor :mod laser )  )
complain :arg0 ( camera :arg1-of ( modern :arg1-of ( work :arg1-of ( talk :arg0 we )  :arg2 ( sensor :mod ( thing :name ( name :op1 xbox :op2 kinect )  )  )  )  )  )  :arg1 interrogative
or :mode interrogative :op1 ( resolution :polarity - :quant enough )  :op2 depth :op3 ( something :mod else )
dimensional :mod-of ( recognize :arg0 ( generation :time current )  :arg1 ourselv :arg1-of ( work :arg0 ( we :arg0-of ( base :arg1-of possible )  )  :arg1-of general )  :quant 3 )
k :location-of pixel :mod-of ( slash :domain-of speed :op1-of 8 )  :quant ( 1000 :op1 good )
contrast :arg1 ( quality :op1-of ( and :op2 matrix :op3 depth :polarity - )  :poss pixel :poss it :poss just )
algorithm :arg1-of ( work :arg1-of ( add :arg0 this :arg1-of ( view :mod ( point :mod latter :source-of ( good :domain ( technology :mod all :time current )  :mod ( enough :polarity - )  )  )  )  )  :arg2 designer )
contrast :arg1 x :arg1-of ( cause :arg0 ( it :arg1-of ( remember :arg0 important :arg2 resolution )  )  )  :arg2 ( axis :quant also )
important :degree very :domain ( speed :arg1 ( image :quant number )  )  :mod also
and :op1 ( dynamic :domain ( move :arg0 especially :arg1 human :arg1-of ( gesture :arg0 relative )  )  )  :op2 ( slash :location ( k :quant 30 )  :op1 ( enough :degree-of really :polarity - )  :time current )
indicate :arg0 100 :arg1 ( sensor :arg1-of modern :domain-of close :mod serial )  :arg1-of ( delay :arg0-of process :arg1-of regulate :manner-of ( create :arg0 ( person :arg1-of touch :name ( name :op1 steven :op2 bathiche )  :source ( laboratory :location ( city :name ( name :op1 redmond )  :wiki redmond,_washington )  :poss we )  )  :arg1 sensor :arg2 m :time 1 )  )  :mod latter
understand :arg0 ( everyone :polarity - )  :arg1 ( affect :arg0 this :arg1 ( interact :arg0 man :arg1 ( and :op1 machine )  )  )
and :op1 ( require :arg0 device :arg1 touch :manner ( useful :arg1 work :degree very )  :polarity - )  :op2 ( image :quant more )
need :arg1 ( increase :arg1 ( number :arg1-of ( do :arg0 interrogative )  :quant-of camera )  )
recipient :op3-of ( and :op1 ( camera :quant 3 )  :op2 ( emitt :mod actual :mod infrar )  )  :poss ( signal :poss-of now )
sensor :arg1-of regular :arg1-of ( range :mod visible )  :domain one :mod actual
determine :arg0 it :arg1 depth :arg1-of ( apply :polarity - )  :arg1-of object
possible :arg1 ( solve :arg0 ( number :mod large :quant-of camera )  :arg1 problem )  :mod potentially
or :arg1-of ( worsen :arg1-of ( require :arg2 ( volume :arg1-of increase :mod-of calculate )  )  )
determine :arg1 position :arg1-of ( help :arg0 this :arg1-of ( see :op3-of ( and :op1 ( create :arg0 it :arg1 ( kinect :arg1-of flexible :mod analogue )  :arg1-of nice )  :op2 ( play :arg1 ( flexion :mod ( disposition :mod camera )  )  )  )  )  )  :mod dimensional :quant 3
present :arg0 ( company :name ( name :op1 microsoft )  :wiki microsoft )  :arg1 glass :arg2 ( company :name ( name :op1 google )  :wiki google )  :condition ( remember :arg0 i :degree far )  :destination public :polarity -
think :arg0 you :arg1 this :arg2 ( use :arg0 ( augment :arg0 technology )  :arg2 reality :arg2-of ( promise :arg0 point :arg1 platform :degree most )  :arg2-of ( view :arg0 everyday :mode interrogative )  )  :polarity -
contrast :arg1 ( walk :arg0 ( you :arg0-of ( shift :arg1 ( possible :arg1 ( and :op1 ( smart :arg1 glass :op1-of phone )  :op2 ( display :arg1-of project )  :op3 ( everywhere :location-of ( base :arg0 else :arg1 platform :location cloud )  )  )  )  )  :arg0-of ( augment :arg1 transitional :arg2 reality )  )  :arg1 ( convenient :degree very )  :arg1-of ( smart :op1-of phone )  :arg2 certain :op1-of around :polarity - :time-of ( raise :arg0 it :arg1 hand )  )  :arg2 ( think :arg0 i :arg1 ( cool :arg1 option )  :duration ( time :mod all )  )
and :op1 glass :op2 ( device :arg1-of ( personal :degree very )  :poss-of strength )  :op3 ( allow :arg0 ( weak :arg1 ( base :arg1 reality :arg2 glass )  :arg1-of augment )  :arg1 ( work :arg0 you :arg1 ( object :mod virtual )  :arg2-of ( see :arg0 you :arg1 ( thing :arg1-of private )  :location only )  :arg3 ( person :mod other )  :time together )  :polarity - :time ( time :arg1-of same )  )
contrast :arg1 ( imagine :arg0 ironman :arg1 ( available :arg0 ( only :polarity - )  :arg1 ( person :name ( name :op1 tony :op2 stark )  )  :arg2 ( manipulate :arg1 ( object :location air :mod holographic :mod virtual )  )  )  :arg1-of ( let :arg0 ( person :arg1-of regular )  )  :duration ( temporal-quantity :unit minute )  )
critic :domain-of ( point :frequency often :topic-of ( idea :mod this :topic-of ( problem :mod ( feedback :mod tactile )  :poss - )  )  )
feel :arg0 hand :arg1 nothing
prepare :arg0 group :arg1 ( answer :arg1 ( challenge :mod this )  :mod amr-unknown )  :mode interrogative
say :arg0 ( i :arg2-of ( attempt :arg0 ( reality :mod augment )  :arg1 ( interact :arg0 man )  :mod consecutive :mod seventh )  )  :arg1 ( and :op1 machine )  :arg2-of lecture :frequency often
probable :mod-of ( addition :arg1-of ( think :arg0 i )  :domain eighth :mod ( sensation :mod tactile )  )
interest :arg1 now :arg2 ( trick :arg0-of ( use :arg1 hand :arg2 ( sort :mod-of matrix )  :purpose image )  )
push :arg1-of ( register :arg0 ( it :domain-of great )  )
contrast :arg1 ( give :arg0 ( finger :arg1-of specific )  :arg1-of ( locate :arg0 point )  :arg1-of ( interfere :arg0 example :manner-of ( target :arg0 ray :arg1 ultrasound :manner several )  )  :arg2 sensation :arg2-of ( sense :arg0 air :arg1 tangibility :arg2-of ( give :arg1 ( image :mod this )  :arg1-of ( aim :arg0 really )  :arg2-of ( contrast :arg1 technology )  )  )  :time ( now :mod right :time-of ( blow :arg0 someone :arg1 fingertip )  )  )  :arg2 ( weak :degree very )
promise :arg0 nerve :arg1 ( area :mod also )  :op1-of also :op1-of ( wrist :mod-of ( bracelet :arg0-of ( affect :arg1 ending :location finger )  )  )
obligate :arg1 ( try :arg0 you :arg1 ( deceive :arg1 mind :arg0 you )  :mode interrogative )
recommend :arg1 ( feel :arg1 ( something :arg1-of ( feel :arg1-of ( think :arg2-of force )  )  )  :time ( see :arg1 something )  )  :mode interrogative
and :op1 good :op2 ( idea :topic this :topic this )  :op3 ( try :arg0 we :arg1 yet :polarity - )
and :op1 ( treadmill :mod-of ( concept :arg1-of ( work :arg0 we :op2-of ( and :op1 ( person :arg1-of ( force :arg0 ( challenge :arg1 ( limit :arg0 - :arg1 space :degree very :purpose ( believe :arg0 all :arg1 ( walk :arg0 he :arg1 ( along :op1 ( space :arg1-of open :mod ( limitles :degree almost )  )  )  )  )  )  :arg1-of ( solve :arg1-of quick :polarity - )  :arg1-of ( conceal :arg0 it )  )  )  )  )  )  )  )  :op2 ( platform :arg1-of ( move :arg1-of ( resemble :arg0 physical :arg2 club )  )  )  :op3 ( balloon :mod giant )
cause :arg1 ( far :arg1-of ( deceive :arg2 mind )  :arg1-of ( succeed :arg1-of ( work :arg0 many :arg1-of come :arg2 ( temporal-quantity :unit year )  )  :arg1-of ( limit :arg2 there )  )  )
cause :arg0 reality :arg1 ( make :arg0 amr-unknown :arg1 ( work :arg0 ( person :arg0-of ( research :arg1 ( beginning :degree very )  )  :arg1-of ( attract :arg0 virtual )  :quant ( many :quant-of thing )  )  :arg1 that )  )
call :arg0 ( person :arg1-of instead-of :name ( name :op1 rosbalt.ru )  )  :arg1 culture :mod judgement
continue :arg0 ahead :arg1 ( thing :arg1-of ( dedicate :arg0 ( person :arg0-of reside )  )  :domain project :name ( name :op1 petersburg :op2 avant :op3 - :op4 garde )  )  :op1-of ( and :op2 ( culture :topic-of avant )  :op3 art )
include :arg0 ( scene :mod art :mod ( country :name ( name :op1 st. :op2 petersburg )  )  :time-of ( reach :arg0 ( thing :arg1-of achieve )  :arg4 ( beyond :op1 ( scope :mod ( city :op1 ( continent :name ( name :op1 europe )  :wiki europe )  )  )  )  )  )  :arg1 ( figure :arg1-of ( recognize :frequency often )  :mod outstanding )  :arg2 ( list :arg0-of ( bypass :arg1 fame :location ( country :name ( name :op1 russia )  :wiki russia )  )  :mod top :mod this )  :time already
play :arg0 ( thing :mod ( new :arg2-of ( bold :arg0 ( person :name ( name :op1 kirill :op2 miller )  )  :arg1 artist )  )  )
show :arg1 all :op3-of ( and :op1 ( possible :arg1 ( see :arg0 ( museum :mod ( country :name ( name :op1 russia )  :wiki russia )  :op1-of ( or :op2 ( country :name ( name :op1 summer :op2 garden )  :op1-of or )  )  )  :arg1 ( person :arg1-of ( know :arg0 ( city :mod whole )  :arg2 ( dress :arg1 ( man :arg1-of beard )  :arg2 red )  )  :name ( name :op1 kirill :op2 miller )  )  )  )  :op2 ( party :mod fashionable )  )
exhibit :arg0 they :arg1 ( matter :arg1-of ( mill :arg0 ( person :arg0-of ( work :location always )  :arg0-of ( bring :arg1 crowd :arg2 ( person :mod of )  )  :name ( name :op1 kirill )  )  )  :polarity - )
create :arg0 person :arg1 ( mythology :mod new :op1-of ( and :op5-of ( and :op1 ( person :name ( name :op1 kirill :op2 miller )  )  :op2 society :op3 philosophical :op4 ( storyteller :poss ( country :arg1-of pure :name ( name :op1 st. :op2 petersburg )  )  )  )  )  )
of :mod ( man :arg1-of ( mill :arg0 ( person :name ( name :op1 kirill )  )  :arg2 ( early :mod-of 90 :time-of ( late :mod-of 80 )  )  )  :mod-of petersburg )  :mod outstanding
lift :arg0 ( he :mod moreover )  :arg1 ( make :arg0 man :arg1-of ( smile :arg0 person )  :location city )  :arg2 ( everyone :mod-of spirit )  :op2-of ( and :op1 street )
cause :arg0 ( man :op5-of ( and :op1 street :op2 organ :op3 ( become :arg0 ( he :poss-of recent )  :arg1 ( he :arg0-of ( ready :arg1 ( complex :mod this :mod-of ( role :quant all )  )  )  )  :arg2 music )  :op4 petersburg )  )  :arg1 ( and :arg2-of ( exist :arg0 bohemian :arg1 he )  :op1 philosophy :op2 image )
yellow :arg0 example :arg1 ( you :arg0-of ( walk :arg1 red :arg2 ( person :name ( name :op1 kirill )  )  :location ( around :op1 city )  :mode interrogative )  :quant all )  :op1-of ( or :op2 ( turquoise :polarity - )  )
choose :arg0 ( i :arg0-of ( design :arg1 fashion :arg1-of ( engage :arg2 ( and :op1 look :op2 image )  )  )  )  :arg1 ( red :mod colour )
compromise :arg0 ( and :op1 artist :op2 ( image :arg1-of ( make :arg0 ( this :mod-of world )  )  )  :op3 society )  :arg1 red
cause :arg0 ( everything :mod ( grey :polarity - )  )  :arg1 ( and :op1 aggression :op2 agitation )  :purpose-of ( bad :arg0 society :arg1 kind )
contrast :arg2 ( aim :arg1 provocation :arg2 ( converse :arg1-of start )  )
invite :arg1 ( discuss :arg2 ( action :arg2-of provoke :topic-of ( history :poss whole )  )  )
realize :arg0 you :arg1 ( artist :beneficiary you )  :mode interrogative
work :arg1-of ( display :arg0 ( country :arg1-of exhibit :name ( name :op1 nevsky :op2 house :op3 of :op4 culture )  )  )
become :arg1 ( it :arg1-of ( clear :arg0 ( path :domain this )  )  )  :arg4 i
resemble :arg0 unofficial :arg1 old :arg2 ( i :arg0-of ( understand :arg1 ( artist :arg1-of free :mod new )  :condition-of ( go :arg1 ( artist :arg1-of free :arg1-of ( wave :arg0 - )  )  :time then )  )  )
and :arg1-of ( long :polarity - )  :arg1-of ( wave :arg0 10 )  :arg2-of ( lead :arg0 ( person :arg0-of ( wave :arg1 new :op1-of ( post :op2 ( gaza_strip :mod-of ( style :mod artist )  )  )  )  :arg0-of ( have-rel-role :arg1 i :arg2 friend )  :arg1-of ( become :arg2 artist )  )  :arg1 post )
draw :arg0 ( i :arg0-of ( except :arg1 genr :arg2 literature :mod all )  :arg0-of ( clothe :arg1 theatre :arg2 music )  )
recommend :arg1 ( come :arg0 ( culture :poss ( thing :name ( name :op1 st. :op2 petersburg )  )  :topic-of centre-left )  :arg1 ( force :mod creative :mod ( good :degree most )  :quant all )  :manner together :op3-of ( and :op1 ( unite :arg1 ( this :mod all )  :arg2 art :location clinic )  :op2 ( important :domain ( it :arg1-of ( find :arg0 i )  )  )  )  )
and :op1 music :op2 creative :op3 ( club :op4-of ( and :op1 ( occupy :arg0 ( i :arg0-of ( start :arg1 ( work :arg1 ( renovate :arg1 ( date-entity :year 1995 )  )  )  :polarity - )  )  :arg1 territory )  :op2 pushkinskaya :op3 10 )  )  :op4 ( club :mod bohemian )  :op5 ( house :poss ( thing :name ( name :op1 petersburg :op2 bohemia )  )  )
mean :arg1 ( there :arg1-of ( bear :arg2 jazz :arg3 many )  )  :arg2 ( i :arg0-of ( bring :arg1 gogh :arg2 ear )  :arg0-of ( remember :arg1 ( van :example project )  )  )
trendy :mod-of ( compose :arg1 ( person :arg0-of ( wear :arg1 ( leotard :arg1-of tight )  )  :name ( name :op1 shnur )  :op1-of ( and :arg0-of ( sing :arg1 ( song :arg1-of easy )  )  :op2 ( person :arg0-of ( have-rel-role :arg1 ( person :name ( name :op1 igor :op2 vdovin )  )  :arg2 friend )  )  :op3 lip )  )  :op1-of and :time now )
become :arg1 ( play :arg0 group :arg1-of ( begin :arg0 group )  :arg1-of live )
presenter :domain ( person :name ( name :op1 trakhtenberg )  )  :time before :topic ( program :mod many )
contrast :arg1 ( mentor :arg1 ( great :mod-of ( career :poss-of way )  )  :op3-of ( and :arg1-of ( receive :arg0 he )  :op1 ( person :arg1-of ( give :arg0 we :op1-of and )  :name ( name :op1 trakhtenberg )  )  :op2 ( educate :mod basic )  )  )
club :condition ( echo :arg0 ( thing :name ( name :op1 gallery :op2 d :op3 137 )  )  :arg1 ( clinic :mod art )  :arg2 ( person :name ( name :op1 griboyedov )  )  :mod ( this :mod all )  )
and :arg1-of ( leave :arg0 ( person :arg2-of ( staff :arg1 ( we :poss-of ( customer :arg1-of ( regular :arg0 that )  )  )  )  )  )
mean :arg0 culture :arg1 ( temporal-quantity :poss-of ( hero :domain i )  :unit ( century :mod last )  )  :arg2 something
poll :arg0 press :arg1 ( person :mod ( prize :mod ( country :name ( name :op1 our :op2 city )  )  :mod ( date-entity :year 2000 )  :wiki - )  )
come :arg0 ( i :arg0-of ( nominate :arg1 ( artist :time year )  )  )  :arg1 ( climax :arg1-of end )
and :op1 culture :op2 last :prep-to ( man :location-of ( comfortable :arg0 it :arg1 rule :arg1-of ( work :arg0 i :location old :location truth )  :location new )  )  :quant honesty
contrast :arg1 ( possible :arg1 ( popular :arg0 you :degree very )  :arg2-of ( contrast :arg1 ( easy :arg0 ( time :poss we )  :arg1 ( become :arg2 popular :arg2-of ( differ :arg1 ( and :op1 culture :op2 popularity )  )  :prep-for-of - )  )  )  )  :arg2 culture
mark :arg0 ( style :mod recognizable )  :arg1 work
and :arg1-of ( reflect :arg1-of clear :arg2 relevance :arg2-of ( hit :arg1 ( work :quant many )  )  )  :op1 acuity
exhibit :arg0 i :arg1 ( program :poss ( country :name ( name :op1 russia )  :poss-of clown :wiki russia )  )  :arg2 museum
clown :domain-of ( category :mod timeles )
and :op1 ( pain :op1-of ( before :time-of ( society :domain i )  )  :time now )  :op2 ( scary :arg1-of ( resemble :arg2 that )  )
contrast :arg2 ( remove :arg1 tragedy :condition ( blur :arg1 everything :location clown )  )
resemble :arg0 i :arg1 ( idea :mod grotesque :part-of i )  :arg2 grotesque
save :arg0 ( change :arg1 ( clothes :mod example )  :mod totalitarian )  :arg1 world
judge :arg0 ( quality :mod inner :polarity - )  :arg1 ( person :arg1-of appear )  :time nowadays
possible :arg1 ( shake :arg0 ( you :arg0-of ( spit :arg1 face :arg1-of ( need :op1-of ( and :arg1-of ( know :arg0 amr-unknown )  )  )  )  )  :arg1 hand )  :polarity -
and :purpose-of ( go :arg0 ( thing :arg1-of lie )  :arg1-of ( help :arg0 ( clothes :arg0-of change )  )  :direction away )
recommend :arg1 such :arg2 ( you :arg1-of ( see :arg0 we :time ( recent :time-of character :time-of ( culture :location city )  )  :time ( role :poss ( man :mod music )  )  )  )
fit :arg0 amr-unknown :arg1 role :degree ( good :compared-to i )  :mode interrogative
possible :arg1 ( beautiful :arg1 ( art :mod commerce )  )  :mod also :mode interrogative
recommend :arg0 considerate :arg1 ( neat :domain ( art :arg1-of sweet :mod commerce )  )  :arg2 nowadays
disintegrate :arg1 culture
something :mod ( else :mod ( person :arg1-of ( simple :arg0 together :arg1-of ( flock :arg0 ( person :arg0-of ( use :arg1 ( thing :arg1-of ( like :arg0 ( thing :name ( name :op1 bohemians )  )  )  )  )  )  )  )  )  )
hard :arg0 it :arg1 ( like :arg0 everyone :arg1 ( everybody :arg1-of ( divide :arg0 now :arg2 ( micro :mod-of society )  )  )  )
please :arg0 i :arg1 ( - :op1 all )  :purpose-of ( bill :topic ( monetary-quantity :unit dollar )  )
please :arg0 now :arg1 you :arg1-of ( think :arg0 you )
cult :mod-of ( hero :mod ( each :op1 ( 100 :quant-of ( fan :time now )  )  )  )
contrast :arg1-of ( come :arg0 ( thousand :quant several )  :arg4 ( person :name ( name :op1 stas :op2 mikhailov )  )  )
sphere :arg0-of ( go :arg4 ( see :arg0 ( out :arg1-of work )  :arg1 ( cast :arg1 there )  )  )  :mod ( sexual :mod-of society )
contrast :arg1 300 :arg2 ( person :arg1-of ( come :polarity - :purpose culture :purpose die :time ( end :arg1 ( money :arg1-of ( manage :arg2 everything :mod less )  )  )  )  )
and :op1 ( betray :arg0 i :arg1 ( thing :mod main )  :condition ( spoil :arg1 ( earn :arg0 i :arg1 - :arg2 fan )  :polarity - )  )
and :op1 ( person :name ( name :op1 falk )  )  :op2 ( person :name ( name :op1 larionov )  )  :prep-with-of ( wall :arg1-of same :arg2-of ( hanging :arg0 collector :arg1 ( art :arg1-of ( paint :arg0 i :prep-in youth )  :mod such )  )  )
start :arg0 ( i :arg0-of ( paint :arg1-of ( end :arg0 person :mod usual )  )  )
mix :arg0 ( temporal-quantity :unit ( day :mod this )  )  :arg1 concept :frequency often
say :arg0 person :arg1 culture :arg2 spiritual :arg2-of ( consume :arg0 person :arg1 culture )
opera :mod another :part-of ( culture :mod ( consumerism :part it )  :polarity - )
and :arg1-of die :op1 ( grow :arg0 ( culture :mod yesterday )  :arg1 i )  :op2 example :op3 ( live :arg0 man :arg1 artist )  :op4 poor :op5 poverty :op6 ( refuse :arg0 i :arg1 ( money :arg1-of ( paint :arg0 sake )  )  )
culture :mod this :poss i
miss :arg0 ( country :name ( name :op1 st. :op2 petersburg )  )  :arg1 ( person :mode interrogative :name ( name :op1 kirill )  )
expert :arg1 ( person :mod culture )  :mod good
thing :mod ( such :mod-of ( person :arg0-of ( have-org-role :arg1 culture :arg2 official )  )  )
contrast :arg2 ( possible :arg1 ( engage :arg1 ( everyone :polarity - )  :arg2 culture )  )
contrast :arg0 very :arg1 ( understand :arg0 they :arg0-of ( need :arg1 ( stick :arg1 ( person :arg1-of expert :mod right )  )  :arg1-of ( differ :arg0 ( person :arg0-of rule :mod right :op1-of under )  :domain everything )  )  :arg1 king )  :arg2 ( possible :arg1 ( understand :arg1 culture :manner - )  )
consultant :location ( city :mod ( right :mod-of now )  :name ( name :op1 moscow )  :wiki moscow )  :mod good
contrast :arg2 ( push :arg0 ( person :arg1-of possible )  :arg1 they :arg1-of ( cause :arg0 ( need :arg0 ( country :location-of here :name ( name :op1 st. :op2 petersburg )  )  :arg1 ( person :arg1-of expert )  :purpose ( and :op1 ( evaluate :arg1 ( person :arg1-of expert :mod this )  :arg1-of correct )  :op2 ( give :arg1 way :arg2 ( person :arg1-of expert )  )  )  )  )  :arg1-of ( advanced :degree more )  :arg2 side )
call :arg1-of ( thrive :time now )  :mod judgement
contrast :arg2 ( say :arg0 they :arg1 honest :arg2-of ( differ :arg1 ( they :arg0-of ( cause :arg1 ( need :arg0 ( we :arg0-of ( accept :arg1 ( art :arg1-of modern :mod all )  :polarity - )  )  :arg1 ( artist :mod some )  :arg1-of ( find :arg0 ( other :mod-of museum )  )  )  )  )  :mod even )  )
mean :arg0 ( country :name ( name :op1 st. :op2 petersburg )  )  :arg1 amr-unknown :arg2 you :mode interrogative
bedrock :op1 ( much :degree-of ( more :quant-of ( culture :prep-with ( city :name ( name :op1 moscow )  :wiki moscow )  )  )  :mod ( country :domain-of ( capital :mod culture :polarity - )  :name ( name :op1 st. :op2 petersburg )  )  )
hard :arg0 ( art :arg1-of ( grow :arg0 ( we :poss-of rock )  )  )  :arg1 it
contrast :arg0 this :arg1 ( wrong :arg0 we )  :arg2 ( need :arg0 ( we :arg1-of ( write :arg0 ( person :quant ( more :compared-to ( person :arg0-of read )  )  )  :time now )  )  :arg1 ( bedrock :mod culture )  )
exhibit :arg0 ( continent :name ( name :op1 europe )  :wiki europe )  :arg1 art :arg4-of ( go :arg0 ( person :quant many )  :arg1 curious )
thin :arg0 here :arg1 ( layer :mod this )
need :arg0 ( we :arg0-of ( begin :arg1 ( temporal-quantity :unit ( century :mod last )  )  )  )  :arg1 ( fashionable :domain art )
support :arg0 ( grant :arg0 ( country :name ( name :op1 st. :op2 petersburg )  )  )  :arg1 project
give :arg1 ( birth :arg1 space )
danger :location-of earth
encounter :arg1 kill :op2-of ( or :op1 ( warm :arg1 globe )  )
caravan :arg0 human :arg0-of ( leave :arg1 board :time ( search :arg2 ( planet :arg1-of replace )  )  )  :arg1 ( ship :mod cosmic )
or :mode interrogative :op1 ( weightlessnes :mod-of ( condition :location-of ( propagate :arg0 ( question :arg0-of ( save :arg1 humanity )  :arg1 ( that :mod-of ( planet :arg1-of replace )  )  )  :arg1 ( race :poss we )  )  )  )
think :arg0 i :arg1 ( small :domain choose )
possible :arg1 ( explore :arg0 ( planet :arg1-of actual :quant ( 2 :op1-of only )  )  :arg1 ( hypothetically :mod even )  )
say :arg0 ( person :arg0-of ( mar :arg1 astronomy )  :name ( name :op1 &quot; )  :op1-of ( and :op2 ( person :arg1-of ( institute :arg0 state :arg2 ( organization :name ( name :op1 &quot; )  )  )  :name ( name :op1 &quot; )  )  )  )  :arg1 ( thing :name ( name :op1 &quot; )  )
contrast :arg1 ( 500 :mod ( degree :mod-of temperature )  )  :arg2 ( appropriate :arg0 ( person :name ( name :op1 venus )  )  :arg1 ( condition :topic ( person :name ( name :op1 mars )  )  )  :arg2 life :degree more )
or :op1 ( altitude :arg1-of high :mod only :time-of ( possible :arg1 life )  )  :op2 ( orbit :arg1 ( person :name ( name :op1 venus )  )  :location space )
begin :arg1 ( question :arg1 ( reproduce :location space )  )  :arg2 flora
experiment :arg1 ( half :op1 ( temporal-quantity :unit century )  )  :arg1-of ( run :arg0 plant )
differ :arg1 ( generation :arg1-of ( grow :location orbit )  :consist-of pea :quant 4 )  :arg2 ( counterpart :mod earth )  :polarity -
breed :arg0 insect :arg1 ( fly :arg1 fruit :mod small )  :manner orbit :time then
send :arg1 ( egg :arg0-of ( check :arg1 ( develop :arg0 embryo :arg1 weightlessnes :arg2 quail )  )  )  :arg2 space :time ( date-entity :year 1979 )
chick :arg1-of ( normal :degree absolute )  :poss we
contrast :arg2 ( begin :arg1 problem :time then )
and :arg0-of ( start :arg1 ( move :arg0 it :arg0-of ( explain :arg0-of ( head :arg1 ( organization :name ( name :op1 &quot; )  )  )  :arg1 of )  :arg1 laboratory :arg2 ( person :arg1-of ( run :arg0 ( organization :name ( name :op1 &quot; )  )  )  :name ( name :op1 &quot; )  )  )  )  :op1 ( foot :arg1-of ( get :arg0 ( need :arg0 problem :arg1-of ( find :arg0 this )  :arg1-of ( need :arg0 chick :arg1-of ( relate :arg2 that )  )  :arg1-of ( support :arg0 fact )  )  )  )
tumble :arg0 chick :direction around :manner disord :purpose ( find :arg1 ( support :arg1-of have :polarity - )  )
experience :arg0 newborn :arg1 ( atrophy :arg1 instinct :arg1-of ( complete :arg0 ( 10 :quant-of ( temporal-quantity :unit hour )  )  )  )  :time after
and :op1 ( light :arg1-of ( react :arg0 chick :polarity - )  )  :op2 sound
and :domain ( problem :domain ( die :arg1 they :mod simple :time ( after :op1 ( temporal-quantity :quant 4 :unit day )  )  )  )
say :arg0 ( we :arg0-of ( breed :arg1 chick )  :arg0-of ( stop :arg1 it )  )  :arg1 ( confirm :arg0 ( person :name ( name :op1 &quot; )  )  :arg1 ( fail :arg1 of :arg1-of ( cause :arg0 ( and :op1 twice :op2 then )  )  :arg1-of ( work :arg0 there )  :arg2 ( experiment :arg0 they :arg1 space :arg2 chick )  )  )
mini-vassal :mod ( biology :mod last )  :mod-of ( ark :arg0-of ( fly :mod ( animal :arg0-of ( orbit :arg1 ( 16 :quant-of ( temporal-quantity :unit year )  )  :mod into )  )  )  )
continue :arg1 experiment :time ( date-entity :year ( 2013 :mod spring )  )
being :mod ( only :op1 ( same :arg1 sex )  )  :poss-of ( satellite :mod bio )
experiment :arg2 ( rat :arg1-of ( send :arg2 space :arg3 foetu )  )
extraordinary :mod-of ( nothing :poss-of principle )
contrast :arg1 again :arg2 ( and :op1 ( experiment :arg0 singular :arg1 ( need :arg1 ( conduct :arg0 it :arg1 ( say :arg0 ( bio :mod-of ( satellite :mod this )  )  :arg1 sychev )  )  :arg1-of ( research :arg0 such )  )  )  )
rat :arg0-of ( land :arg1 baby :op1-of after )  :mod cosmic
contrast :arg1 it :arg2 ( hard :arg1 ( space :arg1-of direct :arg1-of reproduce )  :time ( solve :arg1 problem )  )
easy :arg1 it :arg1-of task :polarity -
familiarize :arg0 they :arg1 environment :arg2 out :mod of :mod when :polarity - :polarity ( simple :arg0-of ( follow :arg1 their :arg2 ( sexual :mod-of instinct )  )  :arg1-of possible :mod animal )
principle :arg0-of ( possible :arg1 person :arg2 animal )
and :op1 ( think :arg1 ( thing :name ( name :op1 homo :op2 sapiens )  )  :mod abstract )  :op2 ( possible :arg1 ( create :arg1 ( background :arg0-of emotional :arg1-of fit )  )  )
conduct :arg1 ( experiment :arg1 ( reason :mod ethics )  :mod such )  :polarity -
contrast :arg1 ( 50 :quant-of ( temporal-quantity :unit year )  )  :arg2 ( fly :arg1 woman :arg4 space )
risk :arg0 ( person :name ( name :op1 tereshkova )  )  :mod ( big :degree most )
thing :arg1-of ( value :degree most )  :beneficiary humanity :domain-of ( body :mod female )
tell :arg0 we :arg1 wheth :arg1-of possible :arg2 she :mod earth :op4-of ( and :op1 seagull :op2 left :op3 nobody )  :time ( after :op1 ( okay :arg1 space :arg1-of fly )  )
possible :arg1 ( give :arg0 she :arg1 ( birth :arg1 wheth )  :time ( after :op1 ( flight :mod this )  )  )
say :arg0 ( nobody :arg0-of ( answer :arg1 this )  )  :arg1 ( and :op1 question :op2 rocket :op3 ( space :mod-of industry )  :op4 ( person :arg0-of ( have-org-role :arg2 veteran )  )  :op5 ( person :name ( name :op1 &quot; )  )  )
give :arg0 ( person :mod space :name ( name :op1 valentina :op2 tereshkova )  )  :arg1 ( birth :arg1 ( person :arg0-of ( have-rel-role :arg1 woman :arg2 daughter )  )  )  :time ( after :op1 ( fly :arg0 only :arg1 year :arg4 space )  )  :time ( date-entity :month 6 :year 1964 )
cosmonaut :mod ( also :mod-of ( person :arg0-of ( have-rel-role :arg1 child :arg2 father )  )  )  :wiki leonid_kadeniuk
and :op1 ( go :arg0 ( person :arg0-of ( give :arg1 ( birth :arg1 ( person :arg0-of ( have-rel-role :arg2 son )  )  )  :time ( date-entity :year 1988 )  )  :name ( name :op1 svetlana :op2 savitskaya )  )  :arg1 ( cosmonaut :wiki leonid_kadeniuk )  :arg4 orbit )  :op2 ( work :arg1 woman :arg2 ( space :arg1-of open )  :mod even )
remain :arg1 risk
and :op1 ( okay :arg1 ( we :poss-of ( cosmonaut :quant ( few :degree very )  )  )  )  :op2 ( child :mod healthy :time ( after :op1 ( flight :arg1 few :arg1-of long )  )  )
and :op1 ( add :arg0 it :arg1 poliakov )  :op2 ( pilot :arg0 ( amr-unknown :op1-of ( ' :degree more )  )  :arg1 ( hero :arg1-of ( flight :arg0 dangerous :arg1-of ( orbit :mod even )  :arg2 ( country :name ( name :op1 russia )  :wiki russia )  )  :mod-of of )  )  :op3 ( cosmonaut :wiki leonid_kadeniuk )  :op4 ( country :name ( name :op1 ussr )  :wiki soviet_union )
and :arg1-of ( protect :arg2 radiation )  :op1 ( need :arg0 humanity :arg1 ( seek :arg1 ( avenu :location biotechnologi :mod new :quant some )  :arg0 humanity )  :time yet )  :op2 ( create :arg1 ( gravity :mod artificial )  )
hydro :mod-of ( laboratory :arg0-of ( train :arg1 ( flight :arg1 mandatory )  :mod-of phase )  )
gravity :mod-of ( condition :arg2-of ( work :arg0 ( space :arg1-of open )  :arg2-of ( practice :arg0 cosmonaut :arg1 skill :time here )  )  :mod zero )
weightlessnes :arg1-of ( imitate :arg0 water )
infant :mod ( water :arg0-of ( comfortable :arg1 ( native :mod-of element )  )  :domain-of ( medium :mod foreign )  )  :op1-of adult
seem :arg0 ocean :arg1 ( confirm :arg0 ( amphibian :mod small )  :arg1 ( come :arg1 life :purpose land )  )
and :arg1-of ( use :arg1-of easy :arg1-of ( connect :arg0 ( spend :arg0 infant :arg1 womb :arg2 ( fluid :location-of ( temporal-quantity :op1-of about :quant 9 :unit month )  :mod amniotic )  )  :arg2 fact )  :arg2 water :time after )
logical :arg1-of ( cause :arg0 ( pass :arg1 ( week :unit-of ( temporal-quantity :quant ( 2 :op1-of only )  )  )  :arg2 birth :time ( until :op1 bathe )  )  )  :location principle
say :arg0 something :arg1 ( infant :arg0-of ( swim :arg1 instructor :arg2 ( person :name ( name :op1 &quot; )  )  )  )  :arg2-of ( forget :arg0 ( little :degree very :mod-of ( time :mod this )  )  )
word :arg0 other :arg1 ( need :arg0 woman :arg1 gravity :arg1-of ( pull :arg0 earth )  :arg1-of ( natural :arg0 ( weightlessnes :op1-of newborn )  :degree more )  )
push :arg1 embryo :purpose-of ( ability :arg1-of ( reduce :arg0 ( and :op1 ( degenerate :arg0 muscle :arg1 ( and :op1 stomach :op2 pelvic )  :arg1-of quick :location weightlessnes :mod usual )  )  )  )
let :arg0 well :arg1 ( work :arg0 stimulator :arg1 that :op1-of out )  :arg2-of ( assume :arg0 childbirth )
push :arg0 she :arg1 baby :location ( room :arg1-of special )
ask :arg0 interrogative :arg1 ( amr-unknown :op1 then )  :arg2 ( person :mod ( this :mod about )  :name ( name :op1 &quot; )  )  :purpose ( issue :arg0 ( trivial :polarity - )  )
need :arg0 baby :arg1 ( gravity :mod artificial )  :mod also :time ( hand :mod other )
and :arg1-of ( feel :arg0 ( body :mod-of ( form :mod - :mod-of skeletal :mod-of ( system :mod muscular )  )  )  :arg2 - :arg2-of ( pull :arg0 earth :arg1 it )  )
possible :arg0 adult :arg1 they :arg2 ( dress :arg0 it :arg1 newborn :arg2 ( suit :arg1 train :arg1-of orbit :arg1-of load :arg1-of ( special :polarity - )  )  )
need :arg0 ( he :arg0-of survive )  :arg1 he :domain-of simple :polarity -
predict :arg0 earth :arg1 committee :arg2 ( have-org-role :arg0 ( we :arg0-of ( go :arg1 by :arg1-of ( experiment :arg0 and :arg2 ( child :arg0-of ( complete :arg1 unadapt )  :arg1-of allow :arg2-of ( birth :arg1 of )  )  :mod this )  :arg4 that )  :arg0-of ( bring :arg1 ( handicap :arg0 foreign :arg1 human )  :arg2-of ( lead :arg0 environment )  )  )  :arg1 ( organization :arg0-of ( run :arg1 ( person :name ( name :op1 &quot; )  )  )  :name ( name :op1 &quot; )  )  :arg2 chairman )
theory :domain ( birth :arg1 child :location space )  :mod just :topic moment
become :arg2 reality :time ( go :arg1 ( bear :location space )  :arg4 ( planet :mod faraway )  :op1-of ( and :op2 ( become :arg0 time :arg1 earthling :arg2 ( home :poss offspr )  )  )  :time ship )
fail :arg0 ( audit :arg1 ( country :name ( name :op1 svarc :op2 system )  )  )  :arg1 head :arg1-of ( cause :arg0 politician )
contrast :arg2 ( lag :arg0 ( country :name ( name :op1 czech :op2 republic )  :wiki czech_republic )  :arg1 ( and :op1 ( body :arg0-of control :mod sound )  :op2 ( standard :mod good :mod legislation )  :op3 ( come :arg4 ( contract :mod public )  )  )  :location behind :topic apply )
say :arg0 ( person :arg0-of ( have-org-role :arg1 ( organization :arg1-of interview :mod supreme :name ( name :op1 audit :op2 office )  :wiki national_audit_office_[china] )  :arg2 ( president :mod vice )  )  :name ( name :op1 miloslav :op2 kala )  )  :arg1 this
contrast :arg1 ( situation :arg1-of ( comment :arg0 ( person :arg1-of ( miss :arg0 we :arg2 ( i :arg0-of ( opine :arg1 state )  )  )  :name ( name :op1 &quot; )  )  )  :mod current )  :arg2 ( recommend :arg0 law :arg1 ( just :mod-of this )  :arg1-of ( perfect :arg0 nev )  :arg1-of ( apply :arg0 it )  :arg2 amr-unknown )
reach :arg0 ( audit :arg0 ( and :op1 ( thing :name ( name :op1 czech )  )  :op2 ( auditor :mod ( country :name ( name :op1 germany )  :wiki germany )  :mod joint )  )  )  :arg1 ( thing :arg1-of conclude :arg1-of resemble )  :mod also
cause :arg0 they :arg1 ( call :arg1 ( approach :arg0 neca :arg1 ( cite :arg1 ( practice :arg1 improper )  )  )  :arg2 system )
claim :arg0 ( minister :arg2-of ( have-org-role :arg0 ( person :arg0-of ( own :arg1 business )  :arg0-of check :arg1-of ( burden :arg0 ( organization :arg0-of ( forbid :arg1 interrogative :op1-of ( or :op2 allow )  )  :name ( name :op1 ods )  )  :polarity - )  )  )  :mod prime )  :time recent
assert :arg0 ( or :op1 law :op1-of ( and :arg0-of ( cause :arg1 ( prohibit :arg0 it :arg1 something :arg2 then )  )  :op2 other )  :op2 must :op3 out :op4 1 :op5 way )  :arg1-of ( enforce :arg0 ( government-organization :arg0-of ( head :arg1 department )  :arg0-of prevent :arg0-of ( govern :arg1 ' )  :arg0-of ( work :arg1 of :arg1-of ( possible :polarity - )  )  :mod even )  :op1-of ( and :arg1-of ( monitor :arg0 it )  :arg1-of ( bind :arg0 duty )  )  )
and :arg1-of ( contract :arg0 ( country :arg0-of ( compare :arg1 both )  )  :arg1-of public )  :arg1-of ( relate :arg0 legislation )  :location ( country :arg1-of ( have-org-role :arg0 ( person :arg0-of ( speak :arg1 ( you :poss-of ( project :mod joint )  )  )  :arg1-of ( house :arg0 session )  :arg1-of ( audit :arg0 committee )  )  :arg2 deputy )  :name ( name :op1 czech :op2 republic )  :wiki czech_republic )  :location ( country :name ( name :op1 germany )  :wiki germany )
amr-unknown :mod-of ( exact :domain-of ( this :op1-of interrogative )  )
parallel :arg0 ( 2 :quant-of ( temporal-quantity :unit year )  )  :arg1 ( audit :arg1 this :arg1-of ( begin :arg0 we :direction around )  :mod about )
and :arg1-of ( put :arg2 simple )  :op1 ( follow :arg0 ( legislation :mod ( state :mod individual )  )  :arg1 ( handle :arg1 ( contract :mod public )  :arg1-of ( govern :arg0 ( legislation :mod ( continent :name ( name :op1 europe )  :wiki europe )  )  )  )  )  :op2 ( practice :arg1 then :arg1-of ( actual :arg0 this )  )
and :arg1-of ( audit :arg0 ( we :arg0-of ( complete :arg1 yet )  :arg0-of ( differ :arg1 ( interest :arg0 very :arg1 some :arg2-of ( become :arg0 apparent :arg1 ( we :arg0-of ( complete :arg1 ( and :op1 concise :op2 ( good :mod-of aspect )  :quant ( more :mod even )  )  )  :arg0-of ( possible :arg1 legislation )  :arg0-of ( general :arg1 term )  :arg0-of ( actual :arg1 certain :arg1-of ( practice :arg0 ( country :name ( name :op1 germany )  :wiki germany )  )  )  )  )  )  )  :arg0-of ( bring :arg1 this )  )  :arg3 - )  :quant ( all :quant-of together )
and :arg1-of ( attend :arg1-of ( pay :arg0 ( enough :polarity - )  :arg2 ( apply :arg1 ( law :mod this )  :arg1-of actual )  :op1-of ( and :arg1-of ( confirm :arg0 ( this :arg0-of ( create :arg1 rule )  )  )  )  )  )  :op1 ( more :degree-of concise )  :op2 more
and :op1 ( help :arg0 ( project :mod this )  :arg1 you :arg2 amr-unknown :mod actual :mode interrogative )  :op2 ( think :arg0 you :arg1 ( bring :arg0 outcome )  )
possible :arg1 ( contribute :arg1 ( and :op1 ( reduce :arg0 ( kind :mod this :mod-of ( audit :arg1 - :mod joint )  )  :arg1 ( impact :mod such :mod positive )  )  :op2 ( perfect :arg1 boundary )  )  :arg2 ( curtail :arg1 ( effort :mod this :purpose ( specify :arg1 ( law :poss we )  )  )  )  )
mean :arg1-of ( low :degree most )  :arg2 ( possible :arg1 ( avoid :arg1 ( and :op1 ( profiteer :arg1-of price )  :op2 ( proceeding :arg1-of possible :arg2-of ( criminal :arg1 require )  )  )  :arg1-of reasonable :condition-of ( mean :arg1 ( economy :arg0-of ( acquire :arg1 thing )  )  )  )  )  :polarity - :time always
cause :arg0 ( reduce :arg0 we :arg1 limit )  :arg1 just :arg1-of ( mean :arg2 ( procure :arg1 something )  :polarity - )
wish :arg1 ( look :arg0 ( and :op1 ( become :arg1 system :arg1-of possible :arg2 ( overload :arg0 ( amount :quant-of paperwork )  :arg1 ( far :degree-of more )  )  )  :op2 ( possible :arg1 ( take :arg1 advantage )  )  )  :arg1 loophol :arg1-of ( limit :arg1-of high :arg1-of remain )  )
problem :domain this :mod domestic :topic ( implement :arg1 ( legislation :arg1-of ( relate :arg2 ( contract :mod public )  )  )  :mod practical )
work :arg0 ( system :arg1-of audit )  :location ( country :name ( name :op1 germany )  :wiki germany )  :manner amr-unknown :mode interrogative
be :arg0 ( office :arg1-of ( resemble :arg2 ( organization :name ( name :op1 nku )  )  )  )  :op1-of ( or :mode interrogative :op2 ( organize :arg1-of differ )  )
contrast :arg2 ( organize :arg1-of ( resemble :arg2 our )  :op2-of ( and :arg0-of ( concern :arg1 office )  :op1 ( resemble :arg0 we :arg1 ( organization :name ( name :op1 nku )  :poss ( function :arg0 ( organization :name ( name :op1 bundesrechnungshof )  )  :arg1 ( differ :arg1 ( appoint :arg1 ( committee :mod also )  )  :degree slight )  )  )  :degree far )  :op3 ( operate :arg0 basic :arg1 ( office :mod both )  :manner similarly )  )  )
cause :arg0 ( resemble :arg1 power :arg2 degree :mod also :time ( organize :arg1 ( country :arg0-of ( respect :arg1 ( system :arg0-of ( differ :arg1 ( auditor :mod-of ( court :mod this )  )  :degree slight )  )  :mod this )  :arg1-of ( have-org-role :arg0 we :arg2 member :arg3 ( level :mod state )  )  :name ( name :op1 germany )  :wiki germany )  :duration federally )  )  :arg3 also
possible :arg1 ( audit :arg0 ( thing :mod federal :name ( name :op1 brh )  )  :arg1 ( money :arg1-of ( know :arg2 ( fund :poss state )  )  )  :mod only )
and :op1 ( authority :arg0-of ( administer :arg1 ( fund :arg1-of ( public :arg0 ( auditor :mod there )  )  :arg1-of ( audit :arg0 ( court :mod federal )  )  )  )  :mod municipality :mod region )
straightforward :compared-to our :degree ( more :arg1-of ( come :arg4 legislation )  )  :mode interrogative
contrast :arg2 ( possible :arg1 ( say :arg0 ( i :arg0-of ( compare :arg1 nevertheles :arg2 ( data :arg1-of ( specific :arg0 overall )  :mod any )  )  :arg0-of ( like :polarity - )  :arg1-of ( respect :arg0 ( country :arg0-of ( serve :arg1 example )  :name ( name :op1 germany )  :wiki germany )  :arg2 certain )  )  :arg1 ( good :degree-of ( aspect :mod every )  )  :polarity - )  :mod certain )
cause :arg0 ( good :mod-of ( enforce :arg0 perhaps :arg1 they )  )  :arg1 this :arg1-of be :mode interrogative
contrast :arg1 ( true :mod certain :polarity - )  :arg2 ( prefer :arg0 ( i :arg0-of ( compare :mod such )  )  :arg1 that :mod again :polarity - )
say :arg1 ( encounter :arg0 they :arg1 ( range :arg1 problem :mod whole )  :arg2 ( we :arg0-of ( perceive :arg1 country :arg2 exemplary :mod even )  )  )  :arg1-of recommend :arg2 it
work :arg0 ( they :arg0-of ( gain :arg1 nothing :condition ( case :arg1 interrogative :domain that :polarity - )  )  )  :arg3 ( office :poss we )
mean :arg1 ( amend :arg1 ( legislation :mod ( public :mod-of contract )  )  :arg1-of ( come :arg4 ( legislation :mod domestic )  :direction back )  )  :condition ( feel :arg1 office :arg2 impact :time already )  :mode interrogative
amend :arg1-of ( come :arg0 ( period :domain-of ( short :arg0-of ( cause :arg1 ( manifest :arg1 ( we :arg2-of ( work :arg1 audit )  )  :polarity - :time yet )  )  :degree quite )  )  :arg4 force :op1-of since )
delay :arg0-of ( take :arg1 ( ex :arg1-of audit :arg1-of ( carry :arg0 ( we :poss-of ( post :poss we )  )  :op1-of since )  )  :arg3 account )  :mod certain
cause :arg1 ( see :arg0 ( we :arg0-of ( contract :arg1 ( thousand :arg1-of public )  )  :arg0-of ( process :arg1 ( almost :op1 14 )  )  )  :arg1 ( change :arg1 this :arg1-of clear :arg1-of will :arg2-of ( prepare :arg0 ( we :arg0-of ( observe :arg1 yet :mod only )  )  :arg1 ( process :arg1 it :arg1-of ( audit :arg0 future )  :arg1-of ( launch :arg0 ( we :arg0-of ( detect :arg1 ( fail :arg1 fiscal :arg1-of ( risk :arg0 we :arg2 system )  )  )  )  :manner new )  )  )  )  :arg1-of ( change :arg1-of limit :arg1-of ( adjust :arg1-of ( govern :arg0 analyse )  :arg1-of ( process :arg1-of ( select :arg0 type :manner certain )  :arg1-of ( cause :arg0 and )  )  :mod-of condition :op1-of and )  )  )
cause :arg0 ( bureaucrat :mod-of ( system :arg1-of ( burden :arg0 interrogative )  )  )  :arg1 ( see :arg0 ( you :arg0-of ( adopt :arg1 ( legislation :mod this )  )  )  :arg1 ( or :op1 ( benefit :arg1 another )  )  )
and :arg1-of ( believe :arg0 i )  :op1 ( step :direction ( direction :mod right )  :domain ( legislation :mod this )  )  :op2 ( hope :arg0 i :arg1 ( confirm :arg3 this )  )
and :arg1-of ( possible :arg0-of ( arise :arg1 problem :arg2 here )  )  :arg1-of ( constrain :arg0 too :arg2 ( enforceable :polarity - )  )  :arg2-of ( become :arg0 law :arg1 that )
mean :arg0 example :arg1 ( infringe :arg1 ( law :arg0-of ( bind :arg1 ( party :arg1-of ( audit :arg0 ( office :mod region )  )  )  :arg3 ( rule :op1-of under :time previous )  :arg4 ( provide :arg1 fact :arg1-of audit :arg2-of ( budget :arg1-of ( operate :mod-of ( program :arg1-of case :mod region )  )  )  )  :time already )  :topic ( contract :mod public )  )  :mod every )  :arg2 ( breach :arg1 discipline )
be :arg1 ( worth :domain ( constrain :arg1 law :manner ( way :mod this )  :time ( case :mod that )  )  :mode interrogative )
think :arg0 i :arg1 ( way :domain this )  :polarity -
contrast :arg2 ( penalize :arg1 ( affect :arg1 ( decide :mod final )  :polarity - )  :polarity - )  :op3-of ( and :op1 ( prevent :arg0 system :arg1 ( want :arg1 ( attack :arg1 ( mistake :arg1 technicality )  )  )  :arg1-of recommend )  :op2 abuse )
increase :arg1 ( pressure :arg0 ( kind :mod this :mod-of system )  :arg1 bureaucracy )  :manner only
cause :arg0 this :arg1 ( possible :mode interrogative )  :manner we
see :arg1 ( take :arg1 this :arg1-of end )  :arg1-of let
say :arg0 ( recent :arg1-of ( have-org-role :arg2 ( minister :mod prime )  )  )  :arg1 ( call :arg1 ( amr-unknown :arg2-of ( mean :arg1 interrogative :mod this )  )  :arg1-of ( cause :arg0 of )  :arg1-of ( audit :arg2-of ( burden :arg1 businessman :polarity - )  )  :arg2 system )
be :arg1 ( organization :arg1-of ( prohibit :op1-of ( or :mode interrogative :op2 allow )  )  :name ( name :op1 svarc :op2 system )  )
cause :arg0 ( or :op1 ( way :mod 1 )  )  :op2-of ( and :mod other :op1 law :op3 ( prohibit :arg0 it :arg1 something :time then )  :op4 ( head :arg1 ( government-organization :arg0-of ( enforce :arg1 ( and :arg1-of ( bind :arg0 it )  :op1 ( monitor :arg1 duty )  )  )  :arg0-of ( prevent :arg1 ( work :arg0 department :arg1 of :arg1-of possible )  :polarity - )  :arg0-of govern :mod even )  )  )
contrast :arg1 ( possible :arg1 ( he :arg0-of ( relax :arg1 ( and :arg1-of ( say :arg0 ( he :arg0-of ( let :arg1 ( change :arg1 this )  )  :arg1-of possible )  :arg1-of mean )  :op1 law )  )  :arg0-of say :arg0-of ( recommend :arg1 ( we :arg0-of ( pretend :arg1 - :polarity - )  )  )  )  )
ensure :arg0 ( public :mod-of contract )  :arg1 ( protect :arg1 ( tender :arg0 public :arg1 ( adhere :arg0 law :arg1 ( formality :topic-of ( rule :mod ( strict :degree relative )  )  )  )  )  )  :manner ( way :mod right )
offer :arg0 ( bidd :arg1-of ( exclude :arg2 technicality :condition-of tragedy )  )  :arg1 ( hand :mod other )  :mod ( good :degree most )
contrast :arg0 ( opine :arg1 just :time-of ( miss :arg0 we :arg1 this )  )  :arg1 ( perfect :arg1 law )  :arg2 apply :op1 recommend
contrast :arg1 ( icy :domain ( road :arg1-of ( pass :degree most )  )  :location place )
and :op1 ( icy :domain ( road :domain-of snowy :mod main )  :location ( place :location ( country :name ( name :op1 czech :op2 republic )  :wiki czech_republic )  :quant several )  )
pass :arg1 ( majority :arg1-of ( care :arg1-of ( need :location place )  :mod ( extra :mod-of road )  )  )
region
and :op1 ( country :mod-of ( region :location-of ( usable :domain road :time ( morning :mod this )  )  )  :name ( name :op1 carlsbad )  )  :op2 ( icy :domain ( they :domain-of snowy )  :location ( place :mod some )  )
drop :arg0 temperature :arg1 ( warm :arg0 5 :arg1 day :arg1-of ( expect :op1-of and :time slight )  )  :arg4 degree :time ( below :op1 zero )
and :op1 ( stop :arg1 ( snow :arg1 lowland :location region )  )  :op2 ( remain :arg0 snow :arg1 ( layer :arg1-of thin :mod only )  )
ridge :poss ( organization :location ( around :quant-of snow :quant-of ( centimetr :quant 30 )  )  :name ( name :op1 krusne :op2 mountains )  )
say :arg0 ( service :mod ( highway :arg1-of ( local :arg0 ( location :quant some )  :arg1-of mist :purpose-of ( limit :arg1 visibility )  )  )  )
usable :domain ( and :arg1-of restrict :location region :op1 ( motorway :mod ( speed :arg1-of ( high :arg0 6 )  )  )  :op2 ( road :location primary )  )  :time now
and :arg1-of ( possible :arg0 ( caution :arg1-of ( appropriate :arg0 surface :arg2 example )  :poss ( bridge :mod certain )  )  )
tertiary :mod-of ( road :arg1-of ( pass :arg0 ( road :location mountain )  :mod also :op2-of ( and :mod all :op1 secondary )  )  )
possible :arg1 ( remain :arg1 ( patch :arg1 snow )  :manner ( stretch :arg1 ( road :mod this )  :mod certain )  :op1-of ( and :op2 freeze :op3 compact )  )
recommend :arg1 ( take :arg1 ( care :mod extra )  :location ( level :arg1-of high )  )  :condition drive :op1-of ( above :mod all )
and :op1 ( country :name ( name :op1 pardubice )  )  :op2 ( region :mod ( country :name ( name :op1 hradec :op2 kralove )  )  )
say :arg0 ( organization :name ( name :op1 motorway :op2 directorate )  )  :arg1 ( and :op1 ( altitude :arg1-of high )  )  :arg2 ( and :op1 ( possible :arg0 mountain :arg1 ( risk :arg0 ( ice :arg1-of black )  :arg2 ( road :location ( country :name ( name :op1 eastern :op2 bohemia )  )  :quant some )  )  )  :op2 ( possible :arg1 ( layer :quant-of ( snow :arg1-of compact )  )  )  :op3 road )
warn :arg1 ( service :mod highway )  :arg2 ( person :arg0-of ( drive :arg1 ( ice :arg0-of ( occur :arg1 ( country :mod particular :mod-of region :name ( name :op1 pardubice )  )  :arg1-of possible :location ( altitude :arg1-of high )  )  :arg1-of black )  )  )
and :op1 ( possible :arg1 ( occur :arg0 ( ice :arg1-of black )  :arg1 ( and :op1 ( country :name ( name :op1 svitavy )  )  :op2 ( country :name ( name :op1 vysoke :op2 myto )  )  )  :location ( around :op1 ( country :name ( name :op1 lanskroun )  )  :op1-of ( and :op2 particular )  :op2 ( country :name ( name :op1 usti :op2 nad :op3 orlici )  )  :op3 ( country :name ( name :op1 policky )  )  )  )  )  :op2 secondary :op3 ( road :mod tertiary )
and :op1 i :op2 ( country :name ( name :op1 svitavy )  :op1-of ( around :location-of ( treat :arg0 ( road :quant 34 )  :arg1 i :degree chemically )  )  :op2-of ( slash :op1 ( 43 :op1-of slash )  )  )
and :op1 ( affect :arg0 ( person :name ( name :op1 snow )  )  :arg1 road :manner particular )  :op2 ( thing :name ( name :op1 krkonose )  )  :op3 ( thing :mod-of mountain :name ( name :op1 orlicke )  )
and :op1 ( high :arg1 altitude :purpose ( compact :arg1 ( layer :mod snow )  )  )  :op2 ( country :name ( name :op1 rychnov :op2 nad :op3 kneznou )  :op1-of ( around :location-of road )  )  :op3 ( country :name ( name :op1 trutnov )  )
clear :arg0 ( and :op1 ( country :name ( name :op1 eastern :op2 bohemia )  )  :op2 part :op3 dry )  :arg1 day :mod most
minus :op1 celsius :op2 ( light :arg1 ( wind :location-of most )  :arg2 ( degree :quant ( plus :mod temperature )  )  :op1-of 3 :time and )
region :mod ( country :name ( name :op1 pilsen )  )
recommend :arg1 ( take :arg0 driver :arg1 condition :arg2 account :arg3 weather :manner ( care :arg1 ( road :location ( region :mod ( country :name ( name :op1 pilsen )  )  )  )  :arg1-of ( need :location ( place :mod some )  )  :mod extra )  )  :time ( morning :mod this )
and :arg4-of ( range :arg0 temperature :arg1 ( degree :mod ( below :op1 zero )  )  :topic-of ( frosty :domain ( morning :mod-of 3 :poss 9 )  )  )
possible :arg0 due :arg1 ( icy :domain ( road :mod certain :op4-of ( and :arg1-of exist :op1 snow :op2 subsequent :op3 ( drop :location temperature )  )  )  )
expect :arg1 ( mist :arg1 ( driver :arg0-of ( improve :arg1 visibility :manner gradual )  )  :location place )  :arg1-of recommend
report :arg0 ( information :mod this )  :arg1 region :prep-on ( highway :value-of service )
contrast :arg2 ( recommend :arg0 ( service :location ( road :manner almost :manner-of restrict )  )  :arg1 ( caution :mod extra )  :arg4 ( motorway :mod ( 5 :mod d )  )  :op1-of ( and :op2 80th :op3 ( thing :arg0-of mark :mod ( distance-quantity :unit kilometer )  )  )  )
and :op1 ( dry :arg1 ( surface :arg1 ( road :mod primary )  :arg1-of free :arg1-of frost :mod most )  )
and :arg1-of possible :op1 ( country :name ( name :op1 pilsen )  )  :op2 ( region :arg1-of ( patch :arg0 ( area :quant ( thing :name ( name :op1 southern )  )  )  :mod icy )  :mod ( name :name-of country :op1 tachov )  )
and :arg0-of ( patch :mod icy )  :arg1-of ( possible :mod also )  :op1 ( wet :arg1 ( road :mod tertiary :op2-of ( and :op1 secondary )  )  )
recommend :arg1 ( cautious :arg0 especially :arg1 driver :time ( road :arg1-of ( frequent :degree less )  :location forest )  )
region :mod ( country :name ( name :op1 olomouc )  )
expect :arg0 driver :arg1 ( slush :mod snow )  :arg1-of recommend :arg2 ( head :arg0 road :arg1 ( part :arg1-of high :part-of ( region :mod ( country :name ( name :op1 olomouc )  )  )  )  )
result :arg1 ( treat :arg0 chemical :arg1 ( person :name ( name :op1 videlsky :op2 kriz )  )  :arg1-of ( carry :arg0 ( thing :name ( name :op1 cervenohorkse :op2 sedlo )  :op1-of ( and :op2 way )  )  )  )  :arg2 it
bring :arg1 snowplough :manner ( fall :arg0 ( centimetr :quant ( around :quant-of ( snow :arg1-of ( get :arg0 ( region :mod ( country :name ( name :op1 sumperk )  )  )  :arg1-of ( say :arg0 ( maintain :arg1 highway )  )  )  )  )  :quant 3 )  :arg1 snow :time overnight )
pass :arg1 road :arg2 ( restrict :arg1 ( other :mod-of ( part :part-of region )  )  )  :degree main
trace :mod region :mod of :mod in :op1 ( remain :arg0 snow :arg1 ( altitude :arg1-of ( high :arg0 ( country :name ( name :op1 &quot; )  )  :degree most )  )  )
dispatch :arg0 ( country :arg0-of ( have-org-role :arg1 ( country :arg0-of ( tell :arg1 ( thing :arg1-of ( expect :arg0 ( snow :mod-of slush )  :arg2-of ( recommend :arg0 driver )  )  :mod at :mod-of sedlo :name ( name :op1 drivers )  )  :arg2 ( organization :name ( name :op1 drivers )  )  :mod highway :mod service :time today )  :name ( name :op1 drivers )  )  :arg2 officer )  :name ( name :op1 drivers )  )  :arg1 ( direction :mod-of of )
say :arg1 ( and :poss-of ( road :arg1-of ( clear :op1-of ( and :arg1-of ( follow :arg2 ( treat :arg0 all :arg1 way )  )  )  :time now )  :arg1-of ( wet :arg0 chemical :arg2 ( altitude :arg1-of ( high :arg0 overnight :arg2 ( out :arg1 ( counterpart :mod ( country :name ( name :op1 jesenik )  )  )  :mod also )  :degree most )  )  )  )  )
recommend :arg0 while :arg1 ( drive :arg0 ( region :mod road )  :arg1 wood :arg2 area :mod of :mod area )  :arg1-of beware :concession ( remain :arg1 road :arg1-of wet :concession-of ( restrict :arg0 usable )  )
region :mod ( country :mod-of ( region :mod ( country :name ( name :op1 liberec )  )  )  :name ( name :op1 usti :op2 nad :op3 labem )  )
report :arg0 snowplough :arg1 ( place :quant several )  :time ( since :op1 ( morning :arg1-of ( pass :arg2 ( country :name ( name :op1 bohemia )  :part north )  :domain-of difficult )  :mod this )  )
besides :op1 ( place :mod certain :mod ( cover :arg1 snow )  :op1-of ( or :arg0-of ( close :arg1 ( road :arg1-of ( say :arg0 ( database :mod police )  )  :location mountain :location ( region :mod ( thing :name ( name :op1 nad :op2 labem )  )  )  :poss icy )  :mod also )  :op2 ( patch :arg1 frost :mod some )  )  )
and :arg2-of ( remain :arg0 road :arg1 lowland :arg1-of ( likely :arg0 ( southeast :mod particular )  :op2-of ( and :op1 ( remain :arg1 temperature :arg2 ( below :op1 zero )  )  :op3 ( organization :name ( name :op1 central :op2 bohemian :op3 uplands )  :op1-of ( and :op2 ( problem :polarity - )  )  )  :op4 ( dry :arg1 road :degree most )  )  )  :arg3 snowy )  :op1 icy
report :arg1 ( hold :arg1 up :arg2 traffic )  :mod far :polarity -
report :arg0 ( maintain :arg1 road :location ( around :op1 ( organization :name ( name :op1 steti )  )  )  )  :arg1 ( patch :arg1 frost :mod icy )  :mod particular
and :op1 ( say :arg0 meteorologist :arg1 ( perfect :arg1 ( condition :topic this )  :arg1-of ( rain :op1-of ( and :op2 melt :op3 ( snow :time day )  )  )  )  )  :op2 ( night :arg1-of clear )  :op3 ( temperature :arg1-of freeze )
expect :arg0 ( country :location-of ( region :op2-of ( and :op1 ( country :location-of ( road :mod slash :quant 13 )  :name ( name :op1 usti :op2 nad :op3 labem )  )  )  )  :name ( name :op1 liberec )  )  :arg1 ( condition :mod adverse )  :arg2 ( section :mod main )  :op1-of i
cause :arg0 ( branch :arg1-of ( weigh :arg0 ( snowfall :location-of ( level :mod road )  )  :direction down )  :mod tree )  :arg1 ( closure :beneficiary ( road :arg1-of bend :poss ( person :name ( name :op1 kninice )  )  )  :poss ( person :name ( name :op1 telnice )  )  )
want :arg0 we :arg1 ( fusion :location ( positive :mod-of energy )  )  :arg2 ( person :name ( name :op1 simon :op2 ornest )  )  :arg3 concert
opine :arg1 amr-unknown :topic ( end :arg1 ( world :domain ( possible :arg1 ( come :arg1 ( less :op1 ( temporal-quantity :unit month )  )  )  :mode interrogative )  )  )
startle :arg1 it :arg1-of ( latch :arg0 we :arg1-of resemble )  :mod just :mod another
possible :arg1 ( draw :arg0 ( band :arg1-of ( say :manner-of ( tend :arg1 we :arg2 ( joke :arg1 ( tap :arg1 ( band :arg1-of tap )  )  :arg0 we )  )  )  :location earth :mod only )  :arg1 ( energy :mod ( positive :degree enough )  )  :arg1-of possible :arg2 ( or :op1 ( hold :arg1 together )  :op2 ( avert :arg1 ( end :arg1 world )  :arg1-of ( complete :arg0 we )  )  )  )
organize :arg0 you :arg1 ( series :mod unique :quant-of ( concert :quant 3 )  )  :arg2 ( end :arg0 12 :arg1 world )  :mod even
possible :arg1 ( detail :arg0 this :arg1-of ( give :arg0 you :arg2 ( person :arg0-of ( read :arg1 we )  )  )  :mod some )  :mode interrogative
event :arg1-of ( plan :arg0 we )  :mod ( raise :arg1 ( fund :arg1 this )  :arg2 ( temporal-quantity :op1-of past :quant 2 :unit year )  )  :mod nationwide
a.m. :location-of ( 10 :arg2-of ( use :arg0 ( we :arg0-of ( decide :arg1 ( thing :name ( name :op1 mayan )  )  )  )  :arg1 ( potential :mod ( market :arg0 11 :arg1 21st )  :poss ( end :arg1 calendar )  )  :op1-of 12 )  )
parallel :arg0 ( and :op1 ( country :name ( name :op1 prague )  )  :op2 ( country :name ( name :op1 brno )  )  :op3 ( country :name ( name :op1 ostrava )  )  )  :arg1 12 :manner-of ( take :arg0 ( concert :quant 3 )  :arg1 ( place :time eve )  :arg2 20th :destination ( country :name ( name :op1 9pm )  )  )
thing :mod ( ocean :name ( name :op1 pacific )  :wiki pacific_ocean )  :mod-of ( calendar :arg1-of ( end :arg0 ( 12 :quant-of ( temporal-quantity :quant-of ahead :unit hour )  )  :arg1-of ( reach :arg0 ( island :location ( country :name ( name :op1 kiribati )  )  )  )  :frequency ( time :time-of ( end :arg0 they :arg1 around )  )  )  )  :name ( name :op1 mayan )
come :arg0 amr-unknown :arg1 ( idea :mod this )  :mode interrogative
idea :domain-of ( initial :arg0-of ( design :arg1 we :arg1-of ( detail :arg0 ( person :name ( name :op1 honza :op2 augusta )  )  :arg1-of ( work :arg0 we :time late )  :mod all )  )  )  :domain-of probable
and :op1 ( ourselv :arg2-of ( allow :arg0 ( hand :domain we )  :arg1 ( spare :arg0 ( child :poss we )  :arg1 ( thing :arg1-of think :quant some )  :arg2 ( state :poss ( planet :poss we )  )  )  :arg1-of ( want :arg0 ( we :poss-of day :poss-of ( fact :arg1-of ( want :arg0 ( we :arg0-of ( collect :arg1 ( energy :arg0-of ( stop :arg1 ( end :arg0 apart :arg1 world )  )  :mod ( positive :degree enough )  )  )  )  )  )  )  :mod also )  )  )  :op2 public
cause :arg1 we :arg1-of ( support :arg1-of ( purchase :arg0 ( we :arg0-of ( occasion :arg1 ( end :arg0 ( item :mod unique )  :arg1 calendar :source bag :source shoe )  )  :arg0-of ( prepare :arg1 ( range :arg1 ( and :op1 ( thing :name ( name :op1 mayan )  )  :op2 t :op3 shirt :op4 ( key :mod original )  )  )  :mod also )  )  :arg1-of possible :arg2 ( end :arg1 world )  )  )
cause :arg1 ( call :arg1 ( record :arg0 ( other :mod-of artist )  :arg1 together :arg1-of ( tap :arg0-of ( tap :arg1 band )  )  :arg1-of ( call :arg0 of :arg1-of cancel :arg2 ( end :arg1 world )  )  :mod also )  :arg2 anthem :op1-of ( against :op2 end )  )
figure :arg1 ( receive :arg1 it :arg2 ( publication :name ( name :op1 youtube )  :wiki youtube )  :time already )  :location ( concert :arg1-of ( fund :arg1-of raise )  )  :mode interrogative
end :arg1 ( world :compared-to-of ( long :arg1 ( grand :mod-of finale )  )  )  :mod beforehand :polarity -
sing :arg0 ( artist :quant all )  :arg1 it :manner ( same :arg1 ( time :location-of ( concert :quant all :quant 3 )  )  )
feature :arg1 anthem :arg2 ( broadcast :arg0 live :arg1 ( television :mod ( thing :name ( name :op1 czech )  )  )  :mod unique )  :mod also
clip :mod video :mod-of ( role :arg1-of ( play :arg0 ( person :name ( name :op1 tomas :op2 hanak )  )  :op2-of ( and :arg1-of ( sing :arg0 ( organization :name ( name :op1 xindl :op2 x )  )  :mod also )  :op1 ( write :arg1 word )  )  )  :poss ( person :name ( name :op1 jesus )  :wiki jesus )  )
end :arg1 ( you :arg0-of work )  :manner amr-unknown :mode interrogative
and :arg0-of ( organize :arg2-of ( collaborate :arg0 we :arg1 ( personaliti :mod other )  :mod also )  )  :op1 ( event :mod ( raise :arg0 ( culture :mod-of scene )  :arg1 ( fund :arg1 ( thing :name ( name :op1 czech )  )  )  )  :quant ( lot :quant-of concert )  )
try :arg0 ( we :arg1-of ( involve :arg2 ( project :domain this )  )  )  :mod really
turn :arg0 it :arg1 ( interest :arg1 most :op1-of ( and :op2 enjoy :op3 work )  )
go :arg0 ( proceeds :source concert )  :arg1 ( world :arg1-of ( end :arg0 amr-unknown )  )  :mode interrogative
equip :arg1 ( centre-left :arg1-of access :mod wheelchair )  :manner ( collaborate :arg0 ( year :mod sixth )  :arg1 ( associate :arg1 citizen :arg1-of ( tap :arg2 ( institute :arg1 already :arg1-of ( educate :arg1-of disable )  )  )  )  )
and :arg1-of ( enjoy :arg0 they )  :arg1-of ( interest :arg0 they )  :op1 ( person :arg0-of study :arg0-of ( run :arg1 ' )  :arg1-of ( institute :arg0 jedlicka )  :op3-of ( and :op1 ( come :arg1 tutor :purpose regular )  :op2 ( spend :mod-of ( time :mod-of with )  )  :op4 ( activity :arg1 which )  )  )
cause :arg0 ( afford :arg0 ( person :arg0-of study :poss-of fund )  :arg1 ( person :arg0-of tutor )  )  :arg1 ( try :arg0 we :arg1 ( provide :arg1 this :arg2 - :manner ( way :mod this )  :arg0 we )  )
plan :arg0 ( project :op1-of within :topic ( construct :arg1 ( organization :name ( name :op1 jedlicka :op2 institute )  )  )  )  :arg1 ( build :arg1-of separate )  :arg2 ( project :mod this )  :arg3 ( possible :arg1 ( move :arg1 we )  )
see :arg0 ( concert :mod every )  :arg1 ( appear :arg1 ( band :op1-of and :quant ( several :quant-of artist )  )  )
select :arg0 you :manner amr-unknown :mode interrogative
try :arg0 we :arg1 ( compile :arg1 ( program :arg0-of ( speak :arg1 age )  )  :arg2 all :arg0 we )  :arg2 child
appear :arg1 ( and :beneficiary example :op1 ( country :name ( name :op1 chinaski )  )  :op2 ( lesbien :arg0-of support )  :op3 ( person :name ( name :op1 dan :op2 barta )  )  :op4 ( tap :arg1-of ( tap :arg0 ( country :name ( name :op1 prague )  )  )  )  :op5 ( person :name ( name :op1 marian :op2 bango )  )  :op6 ( person :name ( name :op1 jiri :op2 suchy )  )  )
possible :arg1 ( find :arg1 ( detail :degree further )  )
event :arg1-of ( be :arg0 ( you :arg0-of ( plan :arg1 bombastic :degree ( more :degree-of any )  :time future :time interrogative )  )  )
cause :arg1 ( prepare :arg0 we :arg1 ( line :mod good )  :arg2 ( we :arg0-of ( appear :arg1 ( spring :arg1 ( country :arg1-of ( interest :arg2 ( guest :quant some )  )  :name ( name :op1 prague )  )  )  :poss we )  )  :mod definite :time ( date-entity :month 5 )  )
and :arg1-of ( build :arg0 appearanc :arg1-of ( like :op1-of since :op3-of ( and :arg1-of personal :op1 ( like :arg0 i :arg1 ( play :arg0 we :arg1 ( organization :name ( name :op1 czech :op2 national :op3 house )  )  :location ( city :name ( name :op1 new :op2 york )  :wiki new_york_city )  )  :time ( year :mod next )  )  :op2 ( country :name ( name :op1 usa )  :poss we :wiki united_states )  )  )  )  :op1 ( city :name ( name :op1 washington )  :wiki washington,_d.c. )  :op2 ( country :name ( name :op1 chicago )  )
and :arg1-of ( perform :arg0 you :arg1-of ( plan :arg0 international :arg2 ( city :name ( name :op1 london )  :wiki london )  :domain-of ( modest :polarity - )  )  :arg2 instance :location ( city :name ( name :op1 madrid )  :wiki madrid )  :op1-of and :time already )  :op1 ( city :name ( name :op1 brussels )  :wiki brussels )  :op2 ( city :name ( name :op1 moscow )  :wiki moscow )
handicap :arg0 nonetheles :arg1 ( person :arg2-of ( compose :arg1 ( band :domain ( thing :name ( name :op1 tap :op2 tap )  )  )  )  )
and :op1 ( logistics :mod-of ( term :manner-of ( journey :arg1 this :arg2 ( you :arg0-of ( cope :manner amr-unknown :mode interrogative )  )  )  )  )  :op2 organize
seem :arg0 ( it :arg0-of ( scary :polarity - )  )  :arg1-of possible
and :op1 luggage :op2 ( case :arg1-of ( carry-out :arg0 we :direction around :mod also :mode ( and :example-of ( area :location-of ( transport :arg0 we :arg1 ( person :arg0-of ( have-org-role :arg1 ( wheelchair :mod electric )  :arg2 member )  :quant 5 )  )  :mod luggage )  )  )  :mod instrument :quant lot )
surprise :arg1 i :frequency ( occasion :arg0 nevertheles :arg1 ( manage :arg0 we :arg1 ( problem :mod any )  :arg1-of ( prepare :mod much :op3-of ( and :op1 ( organization :name ( name :op1 csa )  )  :op2 ( organization :name ( name :op1 british :op2 airways )  )  )  )  :degree far )  )  :mod quite
go :arg0 ( we :arg0-of ( return :arg1 ( city :mod even :name ( name :op1 moscow )  :wiki moscow )  :arg2 all :mod just )  )  :arg1-of smooth
and :arg1-of ( compare :arg1-of ( chance :arg0 you :arg2 ( thank :arg0 disability :arg1 ( trip :arg1 public :mod international :mod this )  )  )  :arg2 ( issue :arg0 ( access :arg1-of specific )  )  )  :op1 attitude
experience :arg1 thing :arg2 amr-unknown :location far :mode interrogative
witness :arg0 we :arg1 ( good :degree-of ( function :arg0 ( beginning :poss ( everything :time still )  )  :arg1 everything :arg2 ( city :name ( name :op1 london )  :wiki london )  )  )  :time ( after :op1 ( city :location-of here :name ( name :op1 madrid )  :wiki madrid )  :op2 ( and :op1 ( country :name ( name :op1 luxembourg )  )  :op2 ( place :mod other )  )  )  :time just
travel :arg1 ( wheelchair :mod electric )  :arg2 ( around :op1 ( centre-left :mod city )  )  :arg4 ( country :arg2-of ( compare :arg1 ( city :arg1-of ( access :arg0 person :op1-of or )  :arg1-of ( remain :arg3 ( usual :polarity - )  :location there :mod still :op1-of and )  :name ( name :op1 moscow )  :wiki moscow )  )  :name ( name :op1 prague )  )
lift :arg0 there :arg1 ( give :arg0 ( thing :domain-of ( commonplace :polarity - )  :mod obviou )  :arg1 priority :arg2 wheelchair )  :op1-of such
draw :arg1 ( attend :arg1 ( problem :arg1-of ( face :arg0 person )  )  )  :arg1-of ( try :arg0 ( too :arg1-of ( emerge :arg0 ( association :mod citizen )  :arg2-of ( fortunate :arg1 disabiliti )  )  )  )
and :arg1-of ( lag :arg0 ( world-region :name ( name :op1 west )  :wiki western_world )  :arg2 ( behind :op1 ( country :arg1-of ( advanced :degree more )  )  )  :mode interrogative )  :op1 ( hand :mod other )
lag :arg0 ( lot :quant-of thing )  :arg1 ( world-region :name ( name :op1 west )  :wiki western_world )  :location behind
affect :arg0 person :arg1 ( effort :arg1-of ( depend :arg0 ( improve :arg1 ( situation :time current )  )  :arg1-of ( mention :arg0 it :domain-of important )  :time always )  )
and :arg0-of ( depend :arg1 ( handicap :arg0 ( city :name ( name :op1 london )  :wiki london )  :arg1 person :mod serious )  :manner public )  :op1 ( natural :arg1-of complete :op2-of ( and :op1 ( city :name ( name :op1 madrid )  :wiki madrid )  )  )  :op2 ( go :arg0 ( they :arg0-of ( use :arg1 toilet :arg1-of possible )  )  :arg4 museum :op1-of ( or :op2 wherever )  )
tap :arg0 there :arg1 ( tap :arg1 ( step :extent-of ahead )  :arg1-of ( respect :arg0 we :manner-of ( take :arg0 ( it :domain-of ( common :degree less )  )  :arg1 disabiliti :arg1-of ( activity :arg0 ( person :consist ( group :mod large )  )  )  :time ( life :mod society )  )  :mod this )  )
contrast :arg1 ( respect :arg1 ( or :op1 access )  :arg1-of public :domain-of thing )  :arg2 ( become :arg1 we :arg1-of possible :arg2 ( athlete :mod famou :op1-of ( or :op2 artist :op3 actor :op4 politician :op5 ( lawyer :arg0-of ( begin :arg1 ( change :arg0 only :arg1 thing )  :mod really )  )  )  )  )
cause :arg1 ( will :arg0 far :arg1 ( person :arg1-of ( strong :arg1-of ( case :mod exceptional :mod only )  )  )  )
contrast :arg1 ( popular :arg1 ( band :arg1-of tap )  :degree very :mode interrogative :time current )  :arg2 ( let :arg1 ( look :arg1 ( few :op1 ( temporal-quantity :arg1-of ( form :arg0 ( you :arg1-of ( prompt :time ( date-entity :year 1998 )  )  )  )  :unit year )  )  :location back )  )
interest :arg1 ( lot :arg0-of ( surround :arg1 i :location ( organization :arg0-of ( tutor :arg1 ( begin :arg0 i :arg1 job )  )  :name ( name :op1 jedlicka :op2 institute )  )  )  :quant-of ( person :mod young )  )  :arg2 ( do :arg1 something )
start :arg0 i :arg1 club :arg2 ( colleague :mod-of ( since :poss music )  )  :manner ( other :arg2-of ( play :arg0 i :arg1 ( saxophone :domain-of ( musician :domain i )  )  )  )
grow :arg0 ( we :arg0-of ( control :arg1 we )  )  :arg1 ( time :arg0-of ( laugh :arg1 little )  )  :concession ( say :arg0 ( person :name ( name :op1 ladya :op2 angelovic )  )  :arg1 moderator )
or :op1 ( come :arg1 popularity :mod only )  :op2 ( mistake :arg0 ( last :mod-of ( year :unit-of ( temporal-quantity :op1-of few )  )  )  :arg1 i :mode interrogative )
and :arg1-of ( tie :arg1-of ( create :arg0 also :manner-of ( help :arg0 ( we :arg0-of ( work :arg1 ( promote :arg0 famou :arg1 band )  :mod proactive )  )  :arg1 we :domain-of ( true :domain it )  )  )  :arg2 ( person :arg0-of sing )  )
realize :arg0 we :arg1 ( possible :arg1 ( go :arg1 work :arg1-of ( resemble :arg2 exist )  )  )
possible :arg1 ( afford :arg0 we :arg1 ( and :op1 ( thank :arg1 ( fund :source ( organization :name ( name :op1 european :op2 union )  :wiki european_union )  )  )  :op2 ( person :arg0-of ( tutor :arg1 quality )  :mod top )  :op3 equipment )  :mod even )
be :arg1 ( goal :arg1-of ( tap :arg1-of tap )  :purpose ( take :arg1 interrogative :arg3 ( height :mod such )  )  )
feel :arg0 i :arg1 ( do :arg1 ( thing :arg1-of ( differ :arg0 little )  )  :domain-of potential )  :time outset
fill :arg1 ( business :arg1-of show )  :arg2 ( thing :arg3-of ( imitate :arg0 one :arg1 other )  )
and :op1 ( take :arg0 ( it :domain-of logical :poss-of way )  :arg1 ( time :arg1-of long )  :op2-of ( and :op1 ( take :arg1 ( thing :mod new :quant all )  :manner hesitantly )  )  )
contrast :arg1 ( few :domain ( thing :mod unique )  )  :arg2 ( dare :arg1 i :arg2 ( claim :arg1 ( tap :arg1 ( and :op1 far :op2 thing )  )  :arg0 i )  )
impression :arg0 person :arg1 ( see :arg0 ( you :poss-of pity :poss-of of )  :arg1 it :arg1-of ( natural :arg1-of react )  )
contrast :arg2 ( waste :arg1 ( pity :mod that )  :arg1-of ( cause :arg0 ( and :op1 ( abandon :arg1 ( person :arg1-of handicap )  :polarity - )  :op2 ( suffer :arg1 ( being :arg0-of ( pity :arg1-of need )  )  )  )  )  :manner simple )
possible :arg1 ( live :arg0 they :arg1 ( life :op1-of ( and :op2 ( blossom :arg1 ( right :mod-of environment )  )  )  )  :degree full :purpose ( assume :arg0 they :arg1 person )  )
contrast :arg1 ( progress :arg1 ( society :example whole )  :arg1-of ( say :arg0 i )  :condition ( succeed :arg0 ( person :arg1-of handicap )  :arg1 something )  :mod just :polarity - )
help :arg0 ( hand :part-of firm )  :arg1 ( succeed :arg0 ( person :arg0-of lead )  :arg1-of have :arg2 also )  :mode interrogative :time ( suggest :arg0 ( person :quant many )  )
and :arg1-of ( want :arg0 ( we :arg0-of ( achieve :arg1 ( work :arg1 ( class :mod top )  )  )  )  )  :op1 ( require :arg0 ( level :mod discipline :mod certain )  :arg1 ( we :time ( thing :quant many )  )  )
think :arg0 i :arg1 ( this :arg1-of expect )
and :op1 ( go :arg0 ( they :arg0-of ( find :time-of ( and :op1 ( come :arg1 ( person :arg0-of cloud :mod some )  )  :op2 ( head :arg1 ( idea :arg1-of romantic )  :op1-of and )  :op3 ( disappear :arg1 ( enthusiasm :arg0-of ( travel :arg1 week :arg4 concert :time ( time :quant lot )  )  )  :arg1-of quick )  )  )  )  :arg4 rehearsal )  :op2 ( attend :arg1 session )  :op3 ( put :arg1 practice )
and :op1 ( work :arg1-of ( want :arg0 ( group :arg2-of ( work :location everywhere :manner that )  :mod every )  )  )  :op2 ( want :arg1 ( achieve :arg1 something )  )
twenty :quant-of ( person :arg0-of ( have-org-role :arg1 band :arg2 member :time current )  :prep-with-of ( thing :name ( name :op1 tap )  )  )
amr-unknown :degree-of ( many :arg1-of ( begin :time ( date-entity :year 1998 )  :time-of ( present :mode interrogative )  )  )
person :name ( name :mod only :op1 ladya :op2 angelovic )
and :op1 ( come :arg1 person )  :op2 ( go :arg0 person :arg1 ( group :arg1-of open :domain we )  )  :op3 ( avoid :arg1 this )
and :op1 ( drive :arg0 ( interest :arg1 ( open :arg1 ( door :arg1-of ( find :arg0 that :time always )  :poss we )  )  )  )
take :arg0 event :arg1 ( place :part thursday )  :time ( before :op1 ( expect :arg1 ( end :arg0 9pm :arg1 world )  )  :unit day )
and :arg0-of ( perform :arg1 thing )  :op1 ( person :name ( name :op1 praha :op2 incheba )  :op2-of ( and :op1 venu :op3 ( thing :name ( name :op1 brno :op2 fleda )  )  :op4 ( person :name ( name :op1 ostrava :op2 plynojem )  )  :op5 ( country :name ( name :op1 czech :op2 republic )  :wiki czech_republic )  )  )  :op2 ( band :quant 12 )  :op3 ( musician :mod other )
unite :arg0 evening :arg1 rendition :arg2 ( close :arg2-of ( link :arg1 ( city :quant all )  :arg1-of ( cancel :arg0 ( end :arg1 ( anthem :arg1-of ( tap :arg1-of ( tap :arg0 of )  )  )  )  )  :arg1-of televise :arg1-of ( join :arg0 3 )  )  )
crown :arg0 ( sum :arg2-of ( learn :arg0 ( wheel :mod functional :mod-of chair )  :arg1 ( access :arg1 prague )  :op1-of centre-left :op2-of ( multiple :op1 ( raise :arg0 concert :arg1 goal :arg1-of equip :op1-of fund )  )  )  :mod-of of :mod-of 25 )  :arg1 czech
age :arg0 400 :duration ( temporal-quantity :quant 12 :unit year )  :time-of ( go :arg0 child :arg1 ( free :arg0 concert :arg1 ( country :name ( name :op1 bohemiaticket )  :source-of sale )  )  :arg2 ( ticket :domain ( fee :mod admission )  )  )
and :op1 ( country :name ( name :op1 poland )  :wiki poland )  :op2 ( organization :name ( name :op1 cosmos )  )
become :arg0 twentieth :arg1 ( country :name ( name :op1 czech :op2 republic )  :op1-of ( after :time-of ( nation :source ( organization :name ( name :op1 eastern :op2 block )  )  )  )  :wiki czech_republic )  :arg2 ( have-org-role :arg0 ( person :arg0-of ( have-org-role :arg1 ( organization :name ( name :op1 european :op2 space :op3 agency )  :wiki european_space_agency )  :arg2 minister )  :arg0-of ( admit :arg1 ( country :name ( name :op1 poland )  :wiki poland )  :arg2 ( member :arg2-of ( have-org-role :arg0 council :arg1 agency :time former )  )  :time ( week :mod last :mod ( date-entity :month 11 :time-of 12th :year 2008 )  )  )  )  :arg1 ( government-organization :name ( name :op1 esa )  :wiki european_space_agency )  :arg1-of ( fledge :manner full )  :arg2 member )
and :op1 ( begin :arg0 ( country :arg0-of ( participate :arg1 ( series :quant-of ( project :mod agency )  )  :time ( year :arg1-of follow :unit-of temporal-quantity )  )  :name ( name :op1 poland )  :wiki poland )  :arg1 ( close :arg1 ( cooperate :arg1 ( government-organization :name ( name :op1 esa )  :wiki european_space_agency )  )  )  :time ( date-entity :year 1994 )  )
begin :arg0 ( country :location-of path :name ( name :op1 poland )  :wiki poland )  :arg1 space :degree-of ( much :quant-of early )
contrast :arg1 ( devote :arg0 ( boffin :arg1-of polish )  :arg1 time :arg2 ( flight :arg1 ( before :mod even :op1 ( thing :arg1-of second :name ( name :op1 world :op2 war )  )  )  :mod space )  )  :arg2 ( meet :arg1 understand :polarity - :time always )
instance :arg1-of ( look :arg0 ( i :arg0-of ( work :arg1 space :arg2-of ( pioneer :arg0 entry :arg1 ( present :arg0 6th :arg1 idea :time ( date-entity :month 12 :year 1933 )  )  )  )  )  :arg1-of ( lecture :arg0 ( city :name ( name :op1 warsaw )  :poss-of observatory :wiki warsaw )  :arg2 astronomy )  :direction back )
and :op1 ( leave :arg0 ( person :arg0-of engineer :arg0-of ( think :arg1 thing )  :arg1-of ( bear :arg0 only :time ( date-entity :year 1905 )  )  :mod young )  :arg1 audience :arg2 cold )  :op2 ( remember :arg0 ( person :name ( name :op1 sternfeld )  )  :arg1 ( show :arg0 ( person :name ( name :op1 jan :op2 gadomski )  )  :arg1 ( interest :arg2 ( work :arg1 dr. )  )  )  :mod ( late :op1 ( temporal-quantity :unit year )  )  )
receive :arg0 ( person :name ( name :op1 sternfeld )  )  :arg1 ( person :name ( name :op1 robert :op2 esnault-pelterie )  )  :arg2 ( entry :mod ( work :arg1 space )  )  :location ( country :name ( name :op1 france )  :wiki france )  :op1-of ( and :op2 ( thing :mod-of ( prize :wiki - )  :name ( name :op1 louis :op2 hirsch )  )  )  :time ( date-entity :year 1934 )
become :arg0 ( date-entity :day 66 :month 19 :year 1899 )  :arg1 ( person :arg0-of mention :mod dr. :name ( name :op1 jan :op2 gadomski )  )  :arg2 ( promote :arg1 ( and :op1 astronomy :op2 astronautic )  :arg1-of ( strong :arg0 above )  )  :time late
and :op1 ( write :arg0 ( he :arg0-of ( publish :arg1 ( hundred :mod article )  :arg2 ( journal :arg1-of polish )  )  )  :arg1 ( series :consist-of book )  :arg2 ( subject :mod science :mod this )  )
and :op1 ( recognize :arg0 ( person :arg1-of ( become :arg2 ( promote :arg1 astronautic :arg1-of ( know :mod world )  )  )  :name ( name :op1 gadomski )  :poss-of ( crater :location ( side :mod ( moon :name ( name :op1 moon )  :wiki moon )  :mod far )  )  )  :arg1 ( contribute :arg1 after )  :manner notable )
suppose :arg1 handcar :arg1-of ( build :arg0 ( country :name ( name :op1 poland )  :wiki poland )  :time already :time ( date-entity :year 1925 )  )  :arg2 ( fit :arg1 ( engine :mod rocket )  )
fortunate :arg1 ( and :arg1-of ( know :arg0 project :arg1-of ( detail :arg0 project )  :polarity - )  :op1 ( design :arg1 both )  )
or :op1 ( handcar :arg1-of ( start :arg1-of ( intend :arg0 rocket :arg1-of ( clear :arg0 it :mod even :polarity - )  )  )  )  :op2 slow
know :arg1 ( information :topic ( track :mod rail :mod this )  )  :arg2 ( article :mod press :mod time )  :mod only
start :arg1 ( engage :arg0 ( artillery :arg1-of polish )  :arg2 ( bomb :arg1-of fly )  )  :time ( date-entity :year 1933 )
and :op1 ( person :arg1-of ( collaborate :manner-of ( undertake :arg0 ( organization :name ( name :op1 weapons :op2 technology :op3 division )  )  :arg1 research )  )  :name ( name :op1 mieczyslaw :op2 wolfke )  )  :op2 ( person :name ( name :op1 gustaw :op2 mokrzycki )  )
test :mod practical :part ( stage :arg1-of ( reach :arg0 research :arg1-of ( clear :arg0 document )  )  )
interrupt :arg0 ( advance :arg1 ( army :mod ( country :name ( name :op1 germany )  :wiki germany )  )  )  :arg1 research
and :arg0-of ( appear :arg1 ( follow :arg1 year )  )  :op1 ( torpedo :arg1 air :arg1-of author )  :op2 rocket :op3 ( bomb :arg1-of ( fly :arg0 ( rocket :arg0 concept :op1-of ( and :arg1-of ( appear :arg0 ( rocket :arg1-of ( design :arg0 ( organization :arg1-of ( engineer :arg0 person )  :name ( name :op1 rohozinski )  )  )  :mod photoelectric :mod home )  :location ( press :mod trade )  :time ( date-entity :year 1937 )  )  )  )  )  )
destine :arg1 ( project :domain both )  :arg2 ( use :arg0 military :arg1 ( engine :mod rocket )  )
oversee :arg0 ( organization :arg0-of ( work :arg1 immediately :arg1-of coordinate :arg3 ( organization :name ( name :op1 tymczasowy :op2 komitet :op3 doradczo-naukowy )  )  :quant all )  :name ( name :op1 provisional :op2 scientific :op3 advisory :op4 board )  )  :arg1 ( project :domain all :purpose ( use :arg0 military :arg1 ( technology :mod rocket )  )  )  :arg2 war :arg4 prior
contrast :arg1 ( activity :arg1 ( operation :arg1-of ( end :arg0 ( start :arg1 war )  )  )  :duration ( temporal-quantity :quant 2 :unit year )  :op1-of after )  :arg2 ( appoint :arg1 board :time ( date-entity :year 1937 )  )
appear :arg1-of ( devote :arg0 ( work :arg0 ( organization :name ( name :op1 polskie :op2 towarzystwo :op3 astronautyczne )  )  )  :arg2 astronautic )  :arg2 ( organization :name ( name :op1 polish :op2 astronautics :op3 company )  )  :location ( press :mod ( thing :name ( name :op1 polish )  )  )  :time ( after :op1 ( war :arg2-of ( thank :arg1 further )  )  )
subject :arg1-of ( issue :arg0 ( magazine :wiki time_[magazine] )  :mod ( date-entity :month 11 )  :topic-of ( figure :arg1-of ( reference :arg0 ( depth :mod-of ( article :quant 4 )  )  )  :domain-of ( date-entity :year 1954 )  :mod company )  )  :topic astronautic
astronautic :arg2-of ( dedicate :arg1 this :arg1-of ( propose :arg0 ( establish :arg0 company :arg1 ( thing :name ( name :op1 prof. :op2 subotowicz )  )  )  )  )
and :op1 ( satellite :mod artificial )  :op2 ( clear :arg0 already :arg1 ( project :mod underway )  :arg1-of ( research :domain-of ( sector :arg0-of emerge )  :mod cosmic )  )  :time time
seek :arg0 ( organization :name ( name :op1 polish :op2 astronautics :op3 company )  )  :arg1 ( entry :arg1-of ( have-org-role :arg0 already :arg2 ( member :mod full )  )  )  :op1-of ( and :op2 autumn :time ( date-entity :year 1951 )  )  :time ( begin :arg0 e :arg1 ( date-entity :year 1956 )  :arg2 ( organization :name ( name :op1 international :op2 astronautics :op3 federation )  :part ( organization :name ( name :op1 pta )  )  )  )
astronautic :arg1-of ( have-org-role :arg0 ( deputy :arg1-of ( appoint :arg0 ( year :arg1-of ( follow :arg1-of ( have-org-role :arg2 chairman )  )  )  :time ( date-entity :day 59 :month 19 :year 1902 )  )  )  :arg2 chairman )  :mod international
serve :arg0 ( he :poss-of ( date-entity :year 1959 )  )  :arg1 capacity :time ( until :op1 ( die :topic-of this )  )
polish :arg0 ( date-entity :year 1956 )  :arg1 ( rocket :arg1-of ( enable :arg2 ( research :mod science )  )  :arg2-of ( become :arg0 ( organization :arg0-of ( play :arg1 ( role :arg1-of significant :topic ( develop :arg1 ( rocket :mod meteorological )  :arg1-of succeed )  )  :arg2 ( organization :name ( name :op1 rm )  )  )  :name ( name :op1 pta )  )  :arg1 ( person :name ( name :op1 rakieta :op2 meteorologiczna )  )  )  )
and :op1 ( complete :arg0 ( date-entity :year 1958 )  :arg1 ( model :mod 1 )  :time ( date-entity :year 1957 )  )  :op2 ( launch :time ( date-entity :compared-to-of 10th :month 10 )  )  :op3 place
and :arg0-of ( measure :arg1 length :arg2 ( metr :consist ceiling )  )  :op1 ( weigh :arg0 rocket :arg1 ( cm :op1-of around :quant 80 )  :arg2 1800 :prep-under ( kg :quant 5 )  :quant little )
and :arg0-of ( initiate :arg1 ( test :arg1-of ( launch :arg1-of ( desert :arg0 ( summer :season-of ( date-entity :op1-of late :year 1959 )  )  )  )  )  :arg2 ( rocket :mod ( stage :quant 2 )  :mod 2 )  )  :op1 ( construct :arg1 ( version :arg1-of improve :mod ( organization :name ( name :op1 rm-1a )  )  )  )
and :op1 ( metr :location length :quant 1.4 )  :op2 ( weigh :arg0 rocket :arg1 ( kg :quant ( approximately :op1 11.5 )  )  )
altitude :mod-of ( wind :arg1-of ( monitor :arg1-of ( task :op2-of ( and :op1 ( reach :arg0 ( rocket :mod 34 )  :arg1 km )  )  )  :arg1-of ( develop :mod-of ( model :arg1-of ( design :arg3 ( work :mod science :mod real )  )  :mod further )  )  )  :arg1-of high )
stop :arg0 further :arg1 research :time ( date-entity :year 1962 )
succeed :arg0 ( organization :mod-of ( date-entity :year 1962 )  :name ( name :op1 rm )  )  :arg1 ( type :mod rocket )  :arg2 ( date-entity :year 1965 )  :domain-of ( rocket :arg1-of develop :mod 1 )
kg :arg0-of ( design :arg1 rocket :arg3 ( rocket :arg1-of ( total :arg2 length )  :mod ( stage :quant 2 )  )  :op1-of ( and :op2 cm :op3 ( weight :arg1-of launch )  )  )
apparatus :arg1-of ( available :arg2 ( room :location-of ( differ :arg1 ( model :arg1-of ( develop :arg0 ( and :op1 ( thing :arg1-of designate :name ( name :op1 meteor-1a )  )  :op2 ( thing :name ( name :op1 -1c )  )  )  )  :quant 3 )  )  )  )  :mod science
and :op1 ( available :arg1 litr :arg2 space :location ( rocket :name ( name :name-of thing :op1 meteor-1a )  )  )  :op2 ( meteor :mod-of 1c )  :op3 litr :poss litr
altitude :beneficiary ( model :mod all :quant 3 )  :mod maximum
and :op1 ( date-entity :year 1968 )  :op2 ( launch :arg1 ( test :arg0 ( develop :arg0 ( between :op1 ( date-entity :year 1965 )  )  :arg0-of ( institute :arg1 aeronautic )  :arg1 ( date-entity :poss-of underway :year 1970 )  )  :arg1 2 :time ( date-entity :month 10 )  )  )
and :op1 ( weight :arg1-of ( launch :arg0 around )  )  :op2 kg :op3 ( capable :arg0 10 :arg1 ( rocket :mod ( 2 :mod meteor )  )  :arg2 ( lift :arg0 380 :arg1 ( load :arg1-of useful )  :arg2 height )  )
and :op1 ( thing :domain ( model :arg1-of ( build :time subsequent )  )  :name ( name :op1 meteor-2h )  )  :op2 meteor :op3 3
mention :arg1 ( space :arg1-of ( research :arg0 committee )  :arg1-of ( admit :arg0 ( country :name ( name :op1 poland )  :wiki poland )  )  )  :arg1-of ( recommend :time ( date-entity :year 1960 )  )  :arg2-of ( appointment :arg0 of :manner ( well :mod-of ( nation :mod-of ( board :quant-of ( temporal-quantity :quant ( 2 :quant-of late )  :unit year )  )  )  )  )
and :arg1-of ( research :arg2 ( satellite :mod ( artificial :mod-of space )  :mod ( country :name ( name :op1 soviet :op2 union )  :wiki soviet_union )  )  )  :op1 ( participate :arg0 ( country :name ( name :op1 poland )  :wiki poland )  :arg1 ( program :mod space :mod ( thing :name ( name :op1 interkosmos )  )  )  :mod also )  :op2 ( become :arg0 ( after :op1 ( person :name ( name :op1 vladimir :op2 remkov )  )  )  :arg1 ( person :arg1-of pilot :arg1-of polish :name ( name :op1 miroslaw :op2 hermaszewski )  )  :arg2 intercosmonaut :time ( date-entity :year 1978 )  )
abolish :arg1 ( legislation :arg1-of ( work :arg0 public )  )  :domain-of ( solution :polarity - )
abolish :arg0 court :arg1 ( law :arg1-of ( work :arg0 public )  )  :time ( week :mod last )
cause :arg0 ( resolution :arg0-of ( debate :mod public :mod lively )  )
interest :arg1 ( it :poss-of perspective )  :arg2 ( look :arg1 ( issue :arg1 broad :mod this )  )  :manner certain
base :arg1 ( system :arg1-of ( orient :manner liberally )  :location ( organization :name ( name :op1 eu )  :wiki european_union )  :mod finance )  :arg2 ( principle :poss ( compete :arg1 ( economy :poss-of ( globalise :mod-of world )  )  :arg1-of ( regulate :polarity - )  )  )  :mod just
mean :arg0 ( system :mod economy :mod nation )  :arg1 ( effect :arg0 it )  :op1-of ( and :arg1-of ( conflict :mod permanent :mod-of state )  :op2 ( entity :mod finance :mod individual )  )
cause :arg1 ( control :arg1 ( speculate :mod finance )  :polarity - )  :domain-of ( principle :source ( trade :arg1-of free :op1-of ( and :op2 ( movement :arg1 ( capital :arg1-of private )  :arg1-of ( free :arg0 together )  :arg1-of ( regulate :arg1-of complete :polarity - )  )  )  )  )
salary :arg0-of ( price :arg1-of ( pressure :arg0 due :arg1-of ( differ :arg1-of significant :mod ( cost :arg1 labour )  )  )  )
understand :arg0 ( it :arg1-of recommend )  :arg1 this :arg1-of ( supply :arg0-of ( try :arg1 ( price :arg1 ( compete :arg1 ( pull :arg1 rug )  )  :arg1-of ( capture :arg0 ( market :arg0-of ( own :arg1 way )  :arg0-of ( increase :arg1 this :op1-of and )  :arg1-of profit :arg1-of share )  :arg1-of great )  )  :arg1-of ( compete :arg1-of ( tender :arg0 commerce :arg1-of ( import :arg0-of ( cheap :arg1 good )  )  )  )  )  )
mean :arg1 this :arg2 ( or :arg1-of high :arg1-of result :arg1-of high :arg1-of cost :arg1-of ( employ :polarity - )  :arg2-of ( compare :arg1 ( economy :mod other )  )  :op1 ( move :arg0 ( business :quant most )  :arg1 ( produce :arg1 abroad )  :arg2 abroad )  :op2 ( import :manner cheaply )  :op3 ( close :arg0 country :arg1 labour )  )  :degree ( scale :arg1-of wide )
cause :arg0 ( and :arg1-of ( increase :manner necessarily :time since )  :op1 ( bind :arg1 ( capital :arg1-of ( private :arg0 - )  )  :arg3 ( responsible :mod society )  :polarity - )  :op2 also :op3 ( cost :arg1 society :arg1-of ( bear :arg0 state )  )  )  :arg1 ( employ :polarity - )
cause :arg1 ( and :op1 ( pay :arg0 businessman :arg1 tax :mod unwillingnes )  :op2 ( alleviate :arg1 ( situation :arg1-of bolster :arg1-of complete :mod whole )  )  :op3 economical :op4 society :op5 ( harm :arg1 ( pursue :arg1 of :arg1-of profit )  )  )
know :arg1 situation :arg2 ( need :arg1 ( data :mod ( statistic :arg1-of actual )  )  :polarity - )
create :arg0 ( practice :arg1-of private :mod capital )  :arg1 ( situation :arg0-of ( force :arg1 state :arg2 ( enter :arg1 ( country :mod this )  :arg2 ( compete :arg1 ruthles :manner mutual )  )  :purpose ( aim :arg1 ( low :arg1 ( standard :mod society :topic citizen )  :manner artificially :time ( attract :arg1 ( invest :mod foreign )  )  )  )  )  :mod particular :mod economy )
cause :arg0 ( capital :arg1-of ( private :arg0 ( standard :arg1-of ( drop :arg0 ( word :mod other )  :arg1-of ( disregard :arg0 ( stake :domain ( government-organization :arg0-of govern )  )  )  )  :mod society )  )  )  :arg1 citizen
occur :arg1 this :manner ( amend :arg2 ( law :arg1-of exist )  )  :manner chief
aim :arg0-of ( force :arg1 ( population :arg0-of ( accept :arg1 ( price :arg0 ( capital :arg1-of private )  :arg1 ( salary :mod-of term )  :arg1-of ( dictate :arg0 especially )  )  )  :mod domestic )  :manner economy )
system :arg2-of ( case :arg1 ( employ :arg1 ( right :arg1-of restrict :mod other :poss ( person :arg1-of employ :part hand )  )  :arg1-of long :polarity - :time workplace )  )  :mod force :mod economy :mod this
and :op1 poor :purpose ( increase :arg1 ( void :op2-of ( and :op1 ( grow :arg0 rich :arg1 ( poverty :arg1-of ( yield :arg0 this )  )  )  )  )  )
feed :arg1 hand :arg1-of ( possible :polarity - )  :arg2 ( host :arg0 ( country :mod poor :name ( name :op1 germany )  :wiki germany )  :arg1 ( centre :mod ( food :mod already )  )  )  :location wage
million :op1 ( this :mod-of ( person :quant number )  )  :time already
wage :arg1 ( improve :arg1 competitiveness :arg2-of ( need :arg0 state :arg1 top )  :mod-of name )  :arg2 ( country :mod-of ( economy :arg0-of ( occur :arg1 ( employ :arg1 ( receive :arg0 person :arg1 ( salary :mod such )  )  :manner proper )  :mod common )  )  :name ( name :op1 germany )  :wiki germany )  :mod minimum
reveal :arg1 ( scandal :mod such )  :time ( case :arg1 ( person :arg2-of ( staff :arg1 just :mod auxiliary )  )  :location ( organization :name ( name :op1 bundestag )  )  )
catastrophic :mod-of ( drop :arg0-of ( emigrate :arg1 all :arg1-of ( live :mod-of standard )  :op1-of ( or :op2 ( exist :arg1 ( wage :mod starve )  :manner ( edge :arg1 society )  )  )  )  :arg0-of ( pressure :arg1 ( person :arg0-of ( hope :arg1 ( see :arg0 country :arg1 ( invest :mod foreign :quant some )  :time eventual )  )  )  :arg2 ( situation :arg1-of same :arg2-of ( lead :arg0 ( state :location south :poss ( organization :name ( name :op1 eu )  :wiki european_union )  )  :arg1 ( austerity :arg0-of measure )  :arg1-of ( doubt :polarity - )  )  )  )  :arg1 ( 19th :mod-of ( century :unit-of temporal-quantity )  )  )
possible :arg1 ( come :arg0 this :arg3-of ( ask :arg0 we :arg1 ( point :mod this )  )  )  :mode interrogative
and :op1 ( come :arg0 ( country :name ( name :op1 china )  :wiki china )  :arg1 ( come :arg0 still :arg1 all :arg3 ( state :mod other :mod ( organization :name ( name :op1 eu )  :wiki european_union )  )  )  :arg1-of ( cause :arg0 ( continent :mod-of ( wage :part fraction )  :name ( name :op1 europe )  :wiki europe )  )  :op2-of ( or :op1 ( shift :arg0 another :arg1 poverty :arg3 country :time then )  )  :polarity - )  :op2 ( country :name ( name :op1 india )  :wiki india )  :op3 ( country :name ( name :op1 brazil )  :wiki brazil )  :op4 ( country :name ( name :op1 turkey )  :wiki turkey )  :op5 ( country :name ( name :op1 morocco )  :wiki morocco )  :op6 ( country :name ( name :op1 egypt )  :wiki egypt )  :op7 labour
apply :arg0 all :arg1 this :arg2 ( world-region :name ( name :op1 latin :op2 america )  :wiki latin_america )
claim :arg0 ( and :op1 ( theory :arg1-of liberal )  :op2 ( incessantly :mod media )  )  :arg1 ( possible :arg1 ( participate :arg0 state :arg1 ( economy :location-of capital )  :polarity - )  )  :op1-of ( and :arg0-of ( ruin :arg1 economy )  :op2 ( lead :arg0 ( economy :arg1-of control )  )  )
insist :arg0 ( cruelly :mod ( capital :arg1-of private )  )  :arg1 ( viewpoint :mod ( intervene :arg0 state :arg1 economy :polarity - )  )
ask :arg0 we :arg1 ( or :op1 ( lead :arg0 ( capital :arg0-of ( influence :polarity - )  :arg1-of private )  :arg1 politics :arg2 ( and :arg0-of ( end :arg1 selfish )  :op1 ( country :mod whole )  )  :mod actual :time thereby )  )  :arg1-of recommend :arg2 ourselv
answer :domain-of ( yes :location here )
omnipresent :mod-of lobby :op3-of ( and :arg1-of ( exist :arg0 proof )  :op1 ( omnipotent :degree almost )  :op2 ( state :quant all )  )
contrast :arg1 ( situation :arg1-of ( corrupt :arg0 ( everything :arg1-of criminal :mod almost )  )  :arg1-of manifest :arg2-of ( result :arg1 ( and :op1 ( benefit :mod mutual )  :op2 legislation )  )  :mod desperate )  :arg2 ( punishable :arg1 nothing )
connect :arg1 ( firm :arg1-of private :arg2-of ( draft :arg0 law :arg1 law :arg1-of ( contract :arg0 ( ministry :mod state :topic-of ( such :domain situation :location ( country :arg0-of ( lack :arg1 ( resource :mod finance )  )  :name ( name :op1 germany )  :wiki germany )  )  )  )  )  )  :arg2 industry :manner basic
approve :arg1 ( law :mod this )  :arg2 ( organization :name ( name :op1 bundestag )  )  :time then
contrast :arg1 ( come :arg1 ( power :mod real )  :arg3 ( person :arg2-of ( claim :arg0 constitution :mod style :mod ( world-region :name ( name :op1 west )  :wiki western_world )  )  )  :polarity - )  :arg2 ( look :arg0 that :arg1 ( organization :arg1-of strong :mod finance )  :time ( after :op1 interest )  )
mean :arg0 republic :arg1 crisi :op3-of ( and :op1 ( work :arg1 ( situation :arg1-of ( reach :arg0 democraci )  :arg1-of ( describe :arg0 orientate )  :arg1-of ( quick :time now )  )  )  :op2 time :op4 ( take :arg0 ( it :arg0-of ( clear :arg1 liberally )  )  :arg1 office :arg2 force :op2-of ( and :arg1-of complete :op1 ( degenerate :arg0 ( religious-group :name ( name :op1 roman :op2 catholic )  :wiki catholic_church )  :arg1 ( long :arg0 state :arg1 already )  )  )  )  )
and :arg0-of ( acquire :arg1 benefit :arg2 bribe :mod ( law :polarity - )  )  :op1 ( sword :op2-of ( or :op1 stone )  )
contrast :arg1 ( mind :mod pompei )  :arg2 ( change :arg0 it :arg1 ( democracy :mod-of autocracy )  :arg2 cesar :domain-of permanent :manner amr-unknown :op7-of ( and :op1 ( buy :arg0 ( one :arg0-of ( occasion :arg1 ( run :arg1 office )  )  :arg0-of ( mean :arg1 ( debacle :mod whole )  )  :arg0-of ( cause :arg1 ( go :arg0 state :arg1 ( 8 :quant-of consul :quant-of ( temporal-quantity :unit month )  )  :arg4 expressive )  :polarity - )  )  :arg1 expressive :arg1-of result :op1-of which :op2-of ( and :op1 ( person :arg0-of ( vote :arg1 would )  )  )  :op3-of ( and :op1 bribery :op2 corrupt )  :op3-of ( and :op1 rife :op2 unhinder )  :purpose-of ( do :arg0 person :arg1 principle )  )  :op2 ( talk :arg0 there :arg1 actual :op1-of about )  :op3 autocracy :op4 an :op5 energetic :op6 ( man :arg0-of ( elect :arg2 appian )  :arg0-of ( recommend :arg1 ( situation :arg1-of ( answer :mod only )  :mod terrible :mod this )  )  )  )  )
build :arg0 ( tendenci :mod unscrupulou )  :arg1 ( society :time current )  :arg2-of ( regard :arg1 ( interest :poss ( society :prep-as whole )  )  )  :location antiquity :purpose ( gain :arg1 conclude :arg1-of ( personal :arg0 just )  )
possible :arg1 ( understand :arg0 ( capital :arg1-of private :location ( state :time present )  )  :arg1 ( interest :poss society )  :arg2 whole )  :polarity -
attempt :arg1 ( reform :arg1-of ( reach :arg0 outcome :degree ( deep :arg0 now :arg1 then )  :topic-of ( decadence :mod ( precedent :polarity - )  )  )  )  :degree whatsoever :polarity - :topic-of elite
seek :arg0 ( and :op1 19th :op2 ( 20th :mod-of ( temporal-quantity :unit century )  )  :op3-of ( and :op1 fascism :op2 ( regime :arg1-of rise :mod communism )  )  )  :arg1 causality :arg1-of recommend :arg2 ( liberalisation :arg1-of misguide :mod-of ( system :mod economy )  )
possible :arg1 ( expect :arg1 ( cycle :arg0 ( state :mod affair :time current )  :mod next )  )  :arg2 ( consider :arg0 ( we :arg0-of ( favor :arg1 ( democracy :mod liberalise )  :example interlude )  )  :arg1 system :arg2 demise )
and :arg2-of ( familiarize :arg0 ( life :mod-of ( reality :mod ( particular :mod-of catastrophic )  )  )  :arg1 we )  :op1 ( lose :arg1 ( potential :arg1-of ( ignore :arg0 ( elite :time current )  :arg1-of complete )  )  )  :op2 ancient :op3 ( modern :arg1 history )  :op3-of ( and :op1 humanitarian :op2 ( disaster :mod society )  :topic-of ( thousand :arg1-of ( crime :arg2 humanity )  :arg1-of ( witness :arg0 we :time already )  :mod-of hundred )  )
answer :arg0 ( work :arg0 public :arg1 ( law :arg1-of ( abolish :arg0 - )  )  )  :arg1 ( term :arg1-of long )  :polarity -
will :arg0 ( country :arg0-of ( pursue :arg0-of ( lower :arg1 ( live :arg0 population :arg1 standard )  )  :arg1 way )  :arg1-of ( govern :arg0 ( government-organization :arg0-of ( force :arg1 ( continent :name ( name :op1 europe )  :wiki europe )  )  :arg1-of ( pressure :arg0-of ( compete :arg1 economy :arg1-of ( well :arg0 international )  )  :op1-of under )  )  )  :name ( name :op1 czech :op2 republic )  :wiki czech_republic )
systemic :domain ( pattern :mod this )  :mod thus-far
address :arg1 this :arg2 ( politics :arg0-of ( reform :arg2 which )  :manner-of ( target :arg0 there :arg1 ( and :arg0-of ( strengthen :arg1 the :arg2 ( participate :arg0 ' :arg1 economy :arg2 ( person :arg0-of ( influence :arg2 ( weaken :arg0 state :arg1 monopoly :condition ( favor :arg0 state :arg1 of )  )  )  :arg2-of ( increase :arg0 state :arg1 ( and :arg0-of ( hold :arg1 by :arg2 ( private :arg1 ( society :degree-of over )  :arg2 capital )  )  )  )  )  :arg3 over :mod capital )  )  )  :manner society )  )
country :name ( name :name-of ( organization :name ( name :op1 chaos :op2 lab )  )  :op1 israel )  :wiki israel
forget :arg0 ( we :arg1-of ( come :arg0 nothing :op1-of ( and :op2 violence :op3 nothing :op4 ( possible :arg1 ( sting :arg0 ever :arg1 ' :arg2 fragile )  )  )  )  :arg1-of ( verse :arg0 of :arg2 ( refrain :arg0 1 :arg2 l )  :mod main )  )  :arg1 we :arg2 ( amr-unknown :op1-of fragile )
say :arg0 ( i :arg0-of ( do :arg1 none :arg2 there )  :arg0-of ( have-rel-role :arg1 ( person :arg0-of ( have-rel-role :arg1 ( person :mod of :name ( name :op1 &quot; )  )  :arg2 wife )  )  :arg2 son )  :arg0-of ( want :arg1 war :polarity - )  )  :arg1 ( die :arg1 ( person :name ( name :op1 &quot; )  )  )  :time ( date-entity :year 1849 )
spark :arg1 ( lot :quant-of react )  :op2-of ( and :op1 ( strip :arg0 ( country :arg0-of ( wave :arg1 violence :time ( late :degree most )  )  :name ( name :op1 israel )  :wiki israel )  :arg1 gaza_strip )  )  :time always
stand :arg0 ( country :name ( name :op1 israel )  :wiki israel )  :purpose ( argue :arg1 ( and :op1 ( right :arg1 self :arg2 ( defend :arg1 some )  )  :op2 ( portray :arg1 ( country :name ( name :op1 palestine )  :wiki state_of_palestine )  :arg2 ( terrorist :arg0-of ( support :arg1 ( country :arg0-of ( claim :arg1 ( commit :arg1 ( person :mod ( ethnic-group :name ( name :op1 arab )  :wiki arabs )  :mod ( country :name ( name :op1 palestine )  :wiki state_of_palestine )  )  :arg2 genocide :op1-of ( and :domain other :op2 ( state :domain ( country :name ( name :op1 israel )  :wiki israel )  :mod terrorist )  )  )  )  :name ( name :op1 palestine )  :wiki state_of_palestine )  :purpose ( claim :arg0 ( state :mod ( country :name ( name :op1 israel )  :wiki israel )  )  :arg1 racism )  )  )  )  )  )
and :arg1-of ( want :arg0 ( i :arg0-of ( repeat :arg1 this )  )  :arg0-of ( dwell :arg1 ( self :arg0-of ( govern :arg1 ( country :name ( name :op1 israel )  :wiki israel )  )  :arg1-of ( inhabit :arg0 today :time ( after :op1 all )  )  :arg1-of ( bear :arg0 victim :arg2 ( politics :op1-of ( and :arg0-of ( live :arg1 ( situation :arg1-of ( start :arg0 violence :polarity - )  )  )  )  )  :manner current )  :poss-of territory )  )  :arg0-of ( wave :arg1 periodic )  :polarity - )  :arg1-of kill :op1 transgressor
read :arg0 ( person :arg0-of ( offer :arg1 ( look :arg0 ( i :arg0-of ( start :arg1 balfour :time ( date-entity :month 11 )  )  )  :arg1 scene :purpose most )  )  :arg0-of ( serve :arg1 tension :arg2 ( piece :arg2-of ( long :arg0 year :arg1 ( 95 :mod ( this :mod all )  )  )  :arg2-of ( declare :arg0 1917 )  :mod small :mod this :mod-of land :poss-of ( world-region :name ( name :op1 middle :op2 east )  :wiki middle_east )  )  )  :arg1-of ( peek :arg0 behind )  :arg2-of resemble )
event :poss-of ( source :arg1-of ( derive :arg2 ( understand :arg0 other :arg1 main )  :time-of ( support :arg0 ( fact :arg2-of ( available :arg1 that )  :mod history )  :arg1 ( thing :arg1-of think :quant some )  )  )  :domain group :domain person )  :time ( history :arg1-of modern )
instance :topic ( struggle :arg0 ( human :mod-of history )  :arg2 power )
possible :arg1 ( find :arg0 we :arg1 ( or :op1 ( person :name ( name :op1 alexander :op2 the :op3 great )  )  :op2 ( person :name ( name :op1 napoleon )  )  )  :location ( era :mod every )  )
throne :op1-of ( behind :arg2-of ( stand :arg1 ( someone :arg0-of ( direct :arg1 action :arg2 ( goal :arg1-of ( calculate :arg0 ( apparent :polarity - )  )  )  :op1-of amr-unknown :op1-of quite )  )  :op2-of ( or :op1 ( choose :arg0 ( person :mod this )  :arg1 ( path :direction independent )  )  )  )  )
and :arg1-of possible :op1 wealth :op2 ( power :arg1-of ( exude :arg0 ( we :arg0-of ( concentrate :arg1 wealth :arg3 hand )  :arg0-of ( live :arg1 ( accept :arg0 we :arg1 world :arg3 time )  )  )  :arg3 - )  )  :op2-of ( and :op1 ( individual :arg0-of ( concentrate :arg1 this :arg3 ( generation :quant-of lifespan )  )  )  :quant few )
contrast :arg0 stand :arg1 ( stand :arg1 ( someone :arg0-of ( rule :arg1 i :polarity - )  :mod else )  :arg2 above )  :arg2 ( sure :arg0 i :arg1 ( possible :arg1 ( consider :arg0 ( family :mod this :mod ( rich :mod astronomically )  )  :arg1 ( master :mod puppet )  )  )  :polarity - )
write :arg1 ( much :polarity - )
understandably
mean :arg1 ( power :arg1-of ( secure :arg0 ( and :arg2-of ( connect :arg1-of act :arg1-of ( prevent :arg0 ( 19th :mod-of ( temporal-quantity :unit century )  )  )  :arg1-of high :mod name )  :op1 ( buy :arg0 they :arg1 of :op1-of ( news :mod-of agency )  :op1-of 90 )  :op2 ( appear :arg1 criminality )  :op3 background :op4 ( increase :arg0 ( or :op1 both )  :arg1 wealth )  )  :time always )  )
contrast :arg0 5 :arg2 ( submit :arg0 ( country :name ( name :op1 russia )  :wiki russia )  :arg1 ( bank :mod central )  :arg2 ( government-organization :arg0-of ( govern :arg1 ( country :name ( name :op1 russia )  :wiki russia )  )  :arg1-of ( overthrow :arg0 ( organization :name ( name :op1 kaddafi )  )  :arg1-of ( remain :op1-of after )  )  :poss ( country :name ( name :op1 iraq )  :op2-of ( after :op1 ( hold :arg0 they :arg1 stake :polarity - :time-of ( or :mod either :op1 ( wage :arg0 ( country :name ( name :op1 afghanistan )  :wiki afghanistan )  :arg1 war :op2-of ( and :op1 ( hold :arg0 they :arg1 ( stake :arg0 majority :arg1 ( country :arg1-of ( assault :arg0 world :op1-of before :time ( country :quant 7 )  )  )  )  :time ( bank :mod central :mod ( almost :mod-of every )  )  )  )  )  :op2 ( prepare :arg1 4 )  )  )  )  :wiki iraq )  )  :manner meantime )
whoev :arg0-of ( defy :arg1 ( family :arg1-of die :mod this )  :arg1-of attempt )
and :op1 ( refuse :arg0 ( person :name ( name :op1 abraham :op2 lincoln )  )  :arg1 ( renew :arg1 ( status :poss ( bank :mod central )  )  :arg2 ( company :mod ( country :name ( name :op1 rothschild )  )  :name ( name :op1 bank :op2 of :op3 america )  :wiki bank_of_america )  :arg0 person )  )  :op2 ( begin :arg0 he :arg1 ( issue :arg1 ( money :arg1-of ( issue :arg0 state )  )  :arg0 he )  :op1-of ( and :op2 ( assassinate :time ( date-entity :year 1865 )  :time theatre )  )  :time ( organization :name ( name :op1 civil :op2 war )  )  )
cause :arg1 ( country :name ( name :op1 great :op2 depression )  )  :arg2-of ( sue :arg0 he :arg1 ( government-organization :arg1-of have-org-role :name ( name :op1 fed )  :wiki federal_reserve_system )  :arg1-of ( intend :op1-of ( after :time-of ( poison :arg1 ( person :mod congressman :name ( name :op1 louis :op2 mcfadden )  )  :time ( date-entity :year 1936 )  )  :time-of ( and :op1 ( want :arg1 ( close :arg1 ( government-organization :arg1-of ( have-org-role :arg0 ( government-organization :name ( name :op1 federal :op2 reserve )  :wiki federal_reserve_system )  )  :name ( name :op1 fed )  :wiki federal_reserve_system )  )  :op2-of ( and :op1 ( begin :arg0 jfk :arg1 ( issue :arg1 money )  :time ( date-entity :year 1929 )  )  )  )  :op2 ( kill :time ( date-entity :year 1963 )  )  )  )  :arg0 he )  )
plan :arg0 ( person :arg0-of ( lead :arg1 ( thirst :arg0 formulation :arg1 3 :arg2 ( power :mod globe )  )  :time ( year :unit-of ( temporal-quantity :part-of ( date-entity :day 71 :month 18 :year 1859 )  )  )  )  :arg0-of ( lead :arg1 ( degree :mod 33rd )  :arg2 freemason )  )  :arg1 ( thing :name ( name :op1 albert :op2 pike )  )  :mod ( war :mod-of world )
cause :arg0 ( and :op1 ( and :arg1-of comfort :arg2-of ( suffice :arg0 ( population :arg0-of ( reduce :arg1 world )  )  :arg1 number :mod slave :mod ( body :mod-of ( continent :name ( name :op1 europe )  :wiki europe )  )  :mod of :mod this :mod down :mod 0.5 :mod especially :mod ( just :mod-of appetis :mod-of ( solution :mod this )  )  :mod ( large :arg1-of ( remove :arg0 war )  :mod-of monarchic )  :mod ( universal :mod-of faith )  :mod ecumenism :polarity - )  :op1 ( person :op2-of ( and :op1 ( country :arg0-of ( rule :arg1 ( colony :arg1-of ( remove :arg0 state )  )  )  :name ( name :op1 great :op2 britain )  :wiki united_kingdom )  )  :quant 1 )  :op2 luxury )  :op2 ( use :arg1 many )  :op3 ( create :arg0-of ( seize :arg1 ( power :mod absolute )  :op2-of ( and :op1 final )  )  :arg1 1 )  )  :arg1 resource
ab :mod-of ( chao :arg0-of ( lead :consist ( family :arg0-of ( follow :arg1 ( offer :arg0 chaos :arg1 solution )  )  :mod wealth :poss-of ( group :arg0-of ( employ :arg1 ( instigation :mod crisis )  :instrument method )  )  )  :manner way )  )
cause :arg0 ( have-org-role :arg1 ( government-organization :arg0-of ( establish :arg1 vide )  :name ( name :op1 fed )  :wiki federal_reserve_system )  )  :arg1 ( repeat :arg1 crisis :polarity - )  :op2-of ( and :op1 ( lead :arg1 ( solution :domain-of false :mod this )  :arg2 ( situation :arg1-of ( bad :arg0 ( date-entity :year 1907 )  )  )  :time always )  )
thing :mod-of ( throne :beneficiary-of ( heir :mod ( country :concession-of ( assassinate :arg0 ( war :name ( name :op1 world :op2 war :op3 i )  :wiki world_war_i )  :arg1 ( person :name ( name :op1 ferdinand )  )  :arg1-of ( succeed :arg0 ( they :arg0-of ( destroy :arg1 ( country :arg1-of ( revolution :arg0 ( political-party :name ( name :op1 bolshevik )  :wiki bolsheviks )  )  :name ( name :name-of tsarist :op1 russia )  :wiki russia )  )  :arg0-of ( unleash :arg1 sarajevo )  )  :mod thu )  )  :name ( name :op1 habsburg )  )  )  )  :name ( name :op1 austro-hungarian )
and :manner ( and :op1 ( military :mod ( country :name ( name :op1 tsarist )  )  )  :op2 ( unsubstantiat :manner economy )  )  :op1 ( end :arg1 ( thing :name ( name :op1 first :op2 world :op3 war )  )  :manner abrupt )  :op2 ( need :arg0 ( country :mod-of capitulation :name ( name :op1 germany )  :wiki germany )  :arg1 ( destroy :arg0 war :arg1 ( country :name ( name :op1 russia )  :wiki russia )  )  :polarity - )  :op3 ( dismantle :arg1 ( power :mod central :mod ( continent :name ( name :op1 europe )  :wiki europe )  :poss ( country :name ( name :op1 austria )  :wiki austria )  :poss ( country :name ( name :op1 hungary )  :wiki hungary )  )  :time subsequent )
introduce :arg0 ( solution :arg1-of ( simple :arg0 thereby )  )  :arg1 ( and :op1 ( culprit :arg1-of ( convince :arg0 indeed :arg0-of suffice )  )  :op2 ( person :arg0-of lead :arg0-of ( play :arg1 ( minority :arg1-of strong :mod ( country :name ( name :op1 germany )  :wiki germany )  )  :purpose-of ( create :arg1 ( czechoslovakia :mod ( racial :op1-of multiple )  )  :mod also )  )  :op1-of and )  )  :arg1-of ( remain :mod only )  :time ( mass :arg1-of impoverish :poss-of ( example :poss ( country :arg1-of ( saddle :arg2 ( reparation :mod huge :mod war )  :manner-of ( create :arg0 ( and :op1 ( allow :arg0 ( they :arg0-of ( facilitate :arg1 ( inception :arg1 ( thing :name ( name :op1 second :op2 world :op3 war )  )  )  )  )  :arg1 banker :time ( once :op1 ( ignite :arg0 ( role :poss ( colony :mod fifth )  )  :arg1 war )  )  )  )  :arg1 ( situation :location-of ( conflict :arg1 politician )  :mod latent )  )  )  :name ( name :op1 germany )  :wiki germany )  )  )
seek :arg1 area :arg2-of ( strive :arg0 branch :arg1 ( form :arg0 ( state :arg0-of ( end :arg1 ( century :mod 19th )  :time-of ( instigate :arg0 history :arg1 ( establish :arg0 ( country :arg1-of ( return :arg2 ( thing :name ( name :op1 zion )  )  )  :name ( name :op1 judea )  )  :arg1 ( movement :arg1 zionist )  :manner capital )  )  )  :mod ( religious-group :name ( name :op1 jew )  :wiki jews )  )  :arg1 ( city :name ( name :op1 jerusalem )  :wiki jerusalem )  )  )
form :arg0 ( organization :name ( name :op1 balfour :op2 declaration )  )  :arg1 ( immigrate :arg0 afore :arg1 ( ethnic-group :name ( name :op1 jew )  :wiki jews )  )  :purpose ( country :arg0-of ( begin :arg1 ( conflict :arg1 mass )  :arg2 ( population :mod ( ethnic-group :arg1-of local :name ( name :op1 arab )  :wiki arabs )  )  )  :name ( name :op1 palestine )  :wiki state_of_palestine )
occur :arg0 ( attack :mod terrorist )  :location ( side :mod both )
determine :arg1 ( difficult :arg1-of ( plan :arg0 ( he :arg0-of ( concentrate :arg1 ( create :arg0 camp :arg1 foundation )  )  :arg0-of ( suffer :arg1 ( continent :name ( name :op1 europe )  :wiki europe )  :mod nevertheles :mod international :mod all :mod-of ( ethnic-group :name ( name :op1 jew )  :wiki jews )  )  :arg0-of ( hold :arg1 ( or :op1 action )  )  :arg0-of ( leash :arg1 ( free :arg1 banker :arg1-of ( break-up :arg0 ( person :name ( name :op1 hitler )  :op2-of ( and :op1 wheth )  :wiki adolf_hitler )  )  :arg1-of ( break-up :arg0 ( war :name ( name :op1 world :op2 war :op3 ii )  :wiki world_war_ii )  :arg2 out )  )  )  :arg0-of ( accept :arg2 ( religious-group :name ( name :op1 jew )  :wiki jews )  :location state :mod world )  )  :mod of )  )
announce :arg0 ( country :name ( name :op1 germany )  :wiki germany )  :arg1 ( thing :arg1-of ( lay :arg0 state :arg2 ( war :name ( name :op1 world :op2 war :op3 ii )  :wiki world_war_ii )  :op3-of ( and :arg1-of ( form :arg0 ( country :name ( name :op1 israel )  :wiki israel )  :arg2 official :time ( date-entity :year 1948 )  )  :op1 just :op2 ( war :mod-of reparation )  :op4 ( become :arg1 ( country :name ( name :op1 israel )  :wiki israel )  :arg2 ( war :mod-of hotb )  )  )  )  :op1-of of )
or :op1 ( more :degree-of ( general :arg1 now :arg2-of ( succeed :arg0 ( language :name ( name :op1 arabic )  :wiki arabic_language )  :arg1 ( banker :mod international )  :arg2-of ( provide :arg0 ( victim :op1-of together )  :arg1 ( nation :mod ( religious-group :name ( name :op1 jew )  :wiki jews )  )  :op1-of ( front :mod-of line )  )  :op1-of ( world-region :mod-of population :name ( name :op1 middle :op2 east )  :wiki middle_east )  )  )  )
contrast :arg1 ( only :polarity - )  :arg2 ( and :op1 ( person :arg0-of support :arg2-of ( split :arg1 person :arg1-of strong :manner-of ( look :arg1 ( level :mod international )  :mod just )  )  :op6-of ( and :op1 ( country :arg1-of ( resemble :arg2 ( laboratory :mod huge )  )  :name ( name :op1 israel )  :wiki israel )  :op2 source :op3 discord :op4 chaos :op5 country )  )  :op2 ( person :arg0-of ( oppose :arg1 ( country :name ( name :op1 israel )  :wiki israel )  )  )  )
and :op1 ( do :arg1 ( wrong :domain amr-unknown )  )  :op1-of ( and :op2 few :op3 ( lust :arg1 ( justice :arg1-of ( breed :arg0 ( justice :arg0-of ( begin :arg1 everything :arg2 greed :purpose ( power :mod globe )  )  :polarity - )  :arg2 ( cycle :arg0 interrogative :arg1 violence :quant endless )  :arg3 ( conflict :arg0 ( country :name ( name :op1 palestine )  :wiki state_of_palestine )  :arg1 ( country :name ( name :op1 israel )  :wiki israel )  :arg2 victim )  )  :polarity - )  )  )
cause :arg0 ( population :arg0-of ( select :arg1 ( candidate :arg1-of ( vote :arg0 person )  )  :location here )  :arg0-of ( general :arg1 ( between :arg1-of ( differentiate :arg0 we :location here )  )  :location ( country :name ( name :op1 israel )  :wiki israel )  )  )  :arg1 ( and :op1 ( person :arg0-of lead :arg0-of ( introduce :arg1 banker :mod international )  :arg0-of ( happen :arg1 it :mod just )  )  )
and :op1 ( cooperate :arg0 ( country :location-of ( war :arg2-of ( instigate :arg0 ( politician :arg0-of ( typical :arg1-of ( hawk :arg0 ( person :arg0-of ( have-org-role :arg1 ( country :name ( name :op1 israel )  :wiki israel )  :arg2 ( minister :mod prime )  :time current )  :name ( name :op1 netanyahu )  :wiki benjamin_netanyahu )  )  :op1-of example )  :domain of :mod fascism :mod-of loyal )  :arg1 everything )  )  :name ( name :op1 iran )  :wiki iran )  :arg1 ( country :name ( name :op1 china )  :wiki china )  :arg2 due :location ( city :location-of membership :name ( name :op1 shanghai )  :wiki shanghai )  :mod-of organisation :topic it )  :op2 ( country :name ( name :op1 russia )  :wiki russia )  :op3 ( threaten :arg0 ( country :name ( name :op1 pakistan )  :wiki pakistan )  :arg1-of ( lead :arg2 expressive )  :mod great )  :op4 through :op5 ( control :arg0 ( country :name ( name :op1 india )  :wiki india )  :arg1 ( oil :arg0-of ( destroy :arg1 ( world :mod-of economy )  :arg1-of wide )  :arg1-of sail :mod-of must :mod-of ( channel :mod world :mod ( international :mod-of banker )  )  :quant-of ( distance-quantity :quant 2 :quant only :quant percentage-entity :quant 20 :unit mile )  )  :arg2-of ( conflict :arg1 globe )  )  :op6 strait
order :arg0 ( person :arg0-of ( speak :arg1 ( word :arg1 ( amr-unknown :arg1-of ( light :arg1-of stand )  )  )  )  :name ( name :op1 in )  )  :arg1 ( accept :arg0 ( we :arg0-of ( major :arg1 crisis )  :arg0-of ( need :arg1 ( and :quant all )  :arg1-of ( mean :time ( date-entity :year 1994 )  )  )  )  :arg1 ( will :arg0 nation )  )
thing :location ( eye :op1-of ( and :op2 master :op3 slave )  )  :name ( name :op1 new :op2 world :op3 order )
aristocrat :mod finance :mod-of world :mod-of ( handful :poss-of ( luxury :arg1-of ( serve :arg0 ( rest :part-of ( population :mod human )  )  )  )  )
subjugate :arg0 ( make :arg1 exist :time-of ( implant :arg0 new :arg1 ( bear :mod each )  :arg2 chip )  )  :arg1 world :arg1-of complete
cause :arg0 ( or :arg1-of ( force :arg0 ( he :arg0-of ( free :arg1 slave :op1-of ( and :op2 ( buy :arg0 forehead :arg1 number :arg1-of ( possible :polarity - )  :arg2 ( sell :arg0 he :arg2 ( he :arg0-of ( mark :arg1 ( he :poss-of name )  )  )  )  :op1-of ( or :name name :op2 of :op3 beast )  :op1-of unles :op1-of 1 :op1-of or )  )  :op2-of ( and :op1 ( rich :mod-of poor )  )  )  :arg0-of ( mark :arg2 ( he :arg1-of receive )  )  )  :arg2 ( and :op1 small :op2 great )  :mod also :op1-of everyone )  :op1 right :op2 hand )  :arg1 that
beast :quant ( number :arg1-of ( calculate :arg1-of ( let :arg0 anyone )  )  )
and :op1 sixty :op2 6 :quant ( number :poss he )  :quant 6 :quant ( number :poss man :poss it )
argo :arg0-of ( bad :arg1 thing :arg2-of ( call :arg1 ( city-district :name ( name :op1 hollywood )  :wiki hollywood )  )  )
and :op1 ( date-entity :year 1979 )  :op2 ( person :arg0-of demonstrate :arg2-of ( study :arg0 ( person :mod ( religious-group :name ( name :op1 islam )  :wiki islam )  )  )  )  :op3 ( hold :arg0 mob :arg1 hostage )  :poss-of ( embassy :arg1-of ( have-org-role :arg0 ( person :quant 52 )  :arg2 diplomat )  :location ( city :name ( name :op1 tehran )  :wiki tehran )  )  :time ( date-entity :month 11 )
shah :arg2-of ( have-org-role :arg0 ( person :arg0-of ( exchange :arg1 ( release :arg1 they )  )  :arg0-of ( flee :arg1 ( revolution :arg1 actual )  :arg2 ( country :arg0-of ( support :arg1 regime :duration ( several :op1 ( temporal-quantity :unit decade )  )  )  :name ( name :op1 usa )  :wiki united_states )  :time after )  :arg1-of overthrow :name ( name :op1 mohammad :op2 reza :op3 pahlavi )  )  )
possible :arg1 ( throw :arg1 ( shah :arg2-of ( have-org-role :arg1 ( country :arg1-of ( trust :arg0 this )  :arg1-of ( ally :arg0 - )  :mod other )  )  )  :mod overboard )  :arg1-of cause :polarity - :purpose-of ( offer :arg0 situation :arg1 ( solution :mod positive )  :purpose ( administrate :arg1 serious )  )
possible :arg1 ( achieve :arg1 ( release :arg1 ( hostage :location ( country :name ( name :op1 iran )  :wiki iran )  )  :arg1-of ( result :arg0 revolution :arg2 ( establish :arg1 ( regime :mod theocratic )  )  )  )  )  :polarity -
attempt :arg1 ( free :arg0 force :arg1 hostage )  :mod-of ( fiasco :arg0-of ( compound :arg2 ( country :name ( name :op1 united :op2 states )  :poss-of ( prestige :arg2-of ( blow :arg1 this )  )  :wiki united_states )  :time late )  )
release :arg1 ( person :arg0-of ( have-org-role :arg2 diplomat )  :arg1-of incarcerate )  :arg1-of ( follow :arg2 ( negotiate :arg1 ( 444 :quant-of ( temporal-quantity :unit day )  )  :arg1-of ( mediate :arg0 ( government-organization :arg0-of ( govern :arg1 ( country :name ( name :op1 algeria )  :wiki algeria )  )  )  )  )  )  :time after :time final
provoke :arg0 ordeal :arg1 ( and :op1 ( feel :arg0-of ( oppose :arg1 ( country :name ( name :op1 iran )  :wiki iran )  )  :arg1 ( solidarity :arg1-of wave )  :location home )  )
debacle :mod-of ( influence :arg0 ( country :arg1-of ( have-org-role :arg0 person :arg2 ( president :arg1-of ( elect :arg2 ( person :name ( name :op1 reagan )  :wiki ronald_reagan )  :time ( date-entity :year 1980 )  )  )  )  :name ( name :op1 iran )  :wiki iran )  :arg1 ( person :name ( name :op1 jimmy :op2 carter )  :wiki jimmy_carter )  :arg1-of significant )
argo :arg0-of ( recount :arg1 episode :location ( story :arg0-of ( bring :arg1 ( victory :mod small )  :arg2 ( country :name ( name :op1 america )  :wiki united_states )  )  :mod this )  )  :mod ( film :arg1-of ( direct :arg0 ( person :mod actor :name ( name :op1 ben :op2 affleck )  )  )  )
escape :arg0 ( person :arg0-of ( seize :arg1 embassy :mod just :op1-of before )  :arg1-of employ :quant 6 )
peripeteia :time ( after :time-of ( end :arg0 they :arg0-of ( reside :arg1 ( country :arg1-of ( have-org-role :arg2 ambassador )  :name ( name :op1 canada )  :wiki canada )  )  :arg1 some )  )
sci :arg1-of ( cover-up :mod-of ( story :medium-of ( help :arg0 ( government-organization :arg1-of ( collaborate :arg0 ( authority :arg1-of succeed :mod ( country :name ( name :op1 canada )  :wiki canada )  :mod ( country :mod-of ( passport :arg1-of ( leave :arg0 they :arg2 ( person :arg0-of ( survey :arg1 location :purpose blockbust )  :arg0-of ( have-org-role :arg1 ( crew :mod film )  :arg2 member )  )  )  )  :name ( name :op1 canada )  :wiki canada )  )  )  :name ( name :op1 cia )  :wiki central_intelligence_agency )  :arg2 ( country :name ( name :op1 iran )  :wiki iran )  )  :mod extravagant )  )
combine :arg1 genr
require :arg1 ( assist :arg1 ( city-district :name ( name :op1 hollywood )  :wiki hollywood )  :arg1-of ( conceive :arg0 ( plan :arg1 ( person :arg1-of expert :name ( name :op1 the )  )  )  )  :mod-of of )
report :arg0 ( person :arg0-of specialize :mod-of magazine )  :arg1 ( project :mod film )  :arg2 ( story :arg1-of believe )  :op1-of ( and :op2 ( organize :arg1 ( conference :mod press )  )  :op3 ( office :domain ( company :arg0-of ( produce :mod fictitious )  )  :mod real )  )
and :op1 ( keep :arg1 ( detail :arg1 ( operation :op1 ( long :arg1 time )  )  )  :arg2 secret )  :op2 ( draw :arg1 film :arg2 ( memory :poss ( person :name ( name :op1 tony :op2 mendez )  )  )  )
mix :arg0 ( peculiar :arg0 ( person :name ( name :op1 affleck )  )  :arg1 film )  :arg1 of :arg2 genr
and :op1 ( double :arg0 small :arg1 victori )  :op2 ( cross :arg0 ( politics :arg0-of ( thrill :arg1 ( and :arg1-of ( same :arg1-of ( cap :arg0 time )  )  :op1 movie )  )  :arg1-of ( realistic :arg0 hand )  :op1-of incisive )  :arg1 another )  :op3 ocean :op4 eleven
alternate :arg1 mood :arg2 ( film :arg1-of ( relate :arg2 ( portray :arg0 - :arg1 ( event :arg1-of ( same :arg0 side :arg1-of ( differ :arg0 ( city :name ( name :op1 tehran )  :wiki tehran )  :mod big )  )  )  :arg2 ( film :op1 ( time :mod-of news )  )  )  :purpose-of ( show :arg0 ( sequence :mod ( title :arg0-of ( sharp :arg1 ( documentary :mod-of style )  )  )  )  :arg1 ( photo :mod iconic )  )  )  )
lace :arg0 ( section :arg1-of light :source ( city-district :name ( name :op1 hollywood )  :wiki hollywood )  )  :arg1 ( hand :mod other )  :arg2 ( and :op1 irony :op2 ( exaggeration :mod little )  )
and :arg0-of ( meet :arg1 ( table :op1-of ( around :location-of ( situation :arg1-of ( debate :arg0 suit :arg2 man )  )  )  )  :arg2 then :op1-of ( phone :name ( office :mod-of corridor )  )  )  :op1 ( headquarters :poss ( government-organization :name ( name :op1 cia )  :wiki central_intelligence_agency )  )  :op2 ( agency :mod other )  :source-of scene
manage :arg0 ( person :name ( name :op1 ben :op2 affleck )  )  :arg1 ( restart :arg1 ( career :topic ( style :mod extraordinary )  )  )
and :op1 ( become :arg1 ( actor :arg1-of deride )  :arg2 ( have-org-role :arg1-of respect :arg2 director )  )  :op2 act :op3 ( target :arg1 ( comment :mod ironic )  :polarity - )
and :op1 ( movie :domain argo :mod screen :mod big )  :op2 ( town :arg1-of ( thrill :arg1-of ( crime :arg0 ( date-entity :year 2010 )  :arg1-of ( follow :arg2 ( go :arg1 ( thing :arg3-of ( dark :arg0 ( date-entity :year 2007 )  :arg1 movie )  :name ( name :op1 gone :op2 baby )  )  )  )  )  )  )
take :arg0 it :arg1 picture :arg1-of ( have-org-role :arg0 ( city :name ( name :op1 boston )  :poss-of hometown :wiki boston )  :arg2 director )  :arg2 also :arg3 place :polarity -
feel :arg1 ( early :time-of ( film :location ( above :op1 ( standard :mod ( city-district :name ( name :op1 hollywood )  :wiki hollywood )  )  )  )  )  :arg2 ( location :arg1-of ( differ :arg0 ( thing :arg2-of characteristic )  )  )  :mod atmosphere
feature :arg0 ( city :location-of ( where :mod ( country :name ( name :op1 affleck )  )  )  :name ( name :op1 tehran )  :wiki tehran )  :arg2-of ( show :arg0 ( person :name ( name :op1 affleck )  )  :arg1 it )  :op1-of ( by :op2 ( country :name ( name :op1 canada )  :wiki canada )  )
flood :arg1 lucid :purpose-of ( come :arg1 ( feel :arg1 ( and :op1 ( take :arg0 ( scene :mod ( good :degree most )  :poss film )  :arg1 place :manner street :manner ( reconstruct :arg1 ( event :mod real )  )  )  :op2 confusion :op3 ( surprise :arg1 impressively )  )  :arg1-of ( create :arg0 ( sequence :arg1-of open :poss ( siege :topic embassy )  )  :arg2 once )  )  :condition ( take :arg0 history :arg1 turn :mod sudden )  )
fictitious :mod-of ( scene :arg1-of ( effect :arg1-of resemble :arg1-of ( achieve :arg0 ( and :op1 ( person :name ( name :op1 affleck )  :poss-of team )  :op2 ( person :arg1-of fake :arg2-of ( staff :arg1 ( bazaar :location ( city :name ( name :op1 tehran )  :wiki tehran )  )  )  )  )  )  )  )
action :mod ( too :location ( place :quant ( many :degree too )  )  )  :quant much
tell :arg1 ( story :arg0-of ( offer :arg1 ( scene :arg1-of ( bite :arg2 nail )  :quant many )  :arg1-of ( issue :arg1-of ( tackle :arg0 ( director :arg2-of ( have-org-role :arg0 - :arg1 film )  )  )  )  )  )
chase :arg0 - :arg1 runway :arg1-of ( follow :arg0 reality :arg0-of ( seem :arg1 ( fetch :arg1 ( scene :arg1-of ( come :arg0 amr-unknown :mod elegantly :mod this )  :time-of ( avert :arg0 ( call :arg0 ( some :quant-of ( embellishment :frequency occasional )  )  :arg1 phone :arg2 all :location ( country :arg0-of ( work :arg1 little )  :name ( name :op1 america )  :wiki united_states )  )  :arg1 ( crisis :arg1-of loom )  :location ( airport :mod ( city :name ( name :op1 tehran )  :wiki tehran )  )  )  )  )  :arg2 ( far :degree quite )  )  )
show :arg0 it :arg1 ( need :arg0 argo :arg1 divergence :arg1-of weak :arg1-of come )  :arg2 ( event :mod-of ( many :mod too )  :mod-of ( many :mod-of place )  :mod-of too )
and :op1 ( and :op1 character :op2 ( deserve :arg0 ( person :name ( name :op1 alan :op2 arkin )  :op1-of ( and :arg0-of ( play :arg1 role :arg2 ( assistant :arg1-of ( charm :arg2 - :mod great )  :location ( city-district :name ( name :op1 hollywood )  :wiki hollywood )  )  )  :op2 ( person :mod-of ( one :manner far :mod only )  :name ( name :op1 john :op2 goodman )  :poss-of ( film :mod this )  )  )  )  :arg1 ( room :quant more )  )  )
and :arg2-of ( interest :arg0 it :arg1 70 :arg1-of reasonable )  :op1 ( lose :arg0 ( person :name ( name :op1 affleck )  )  :arg1 film :arg2-of ( pull :arg0 dramatic :arg1 little )  )  :op2 ( watch :arg1 film :arg1-of possible )  :op3 ( produce :arg1 it )  :op4 ( retro :mod-of ( style :mod ( evocative :mod-of ( of :mod-of thriller )  )  )  )
captivate :arg0 it :mod really :polarity -
testify :arg0 particular :arg1 ( and :arg1-of ( view :arg0 ( history :arg1-of remind )  :arg2 ( control :arg1-of ( will :manner ( do :arg0 service :arg1 this )  )  :manner-of secret :manner-of ( powerful :arg1 all )  :mod all )  :manner way :mod ( exaggerate :arg1 amr-unknown )  )  )
rule :arg1 ( blow :arg0 ( and :op1 banana :op2 circus )  :arg1 balloon )
announce :arg1 ( compete :arg1 ( or :arg1-of propose :op1 ( regulate :arg1 absurd :mod most )  :op2 ( organization :name ( name :op1 eu )  :wiki european_union )  )  )  :time-of ( decide :arg1 ( issue :arg1-of ( poll :arg0 server )  )  :time ( now :time-of ( charge :arg0 most :arg1 absurd :arg2 ( every :quant-of ( temporal-quantity :unit year )  )  :mod bank )  )  )
prompt :arg0 we :arg1 ( story :arg0-of ( tell :arg1 ( large :degree most :mod-of company )  :arg2 pravo :time ( poll :arg0 nach :arg1 organis )  :time patrik )  :arg0-of ( manage :arg1 level :arg2 ( ' :op1 ( continent :name ( name :op1 europe )  :wiki europe )  )  )  )  :arg2 ( by :time-of ( plan :arg0 ( organization :name ( name :op1 eu )  :wiki european_union )  :arg1 ( take :arg1 woman :arg3 of :op1-of 40 :op1-of quota :time ( late :degree most )  )  :arg2 percentage-entity )  )
decide :arg0 ( organization :arg1-of insure :name ( name :op1 european :op2 court )  )  :arg1 ( unify :arg0 ( absurditi :arg1-of nominate :time ( late :degree most )  )  :arg1 premium :purpose ( and :op1 instance :op2 man :op3 woman )  )  :time recent
cause :arg0 ( constitute :arg0 they :arg1 ( risk :arg1 ( until :op1 now )  :arg2 insurer )  :condition-of ( price :arg1 ( insure :arg0 woman :arg1 life )  )  )  :arg1 low
possible :arg1 ( nominate :arg0 ( organization :name ( name :op1 eu )  :wiki european_union )  :arg1 ( anyone :arg0-of ( end :arg1 year :op1-of of )  )  :arg2 until :op1-of by )  :topic-of ( idea :arg1-of ( believe :arg0 other )  )
inform :arg1 ( take :arg0 ( end :arg1 of )  :arg1 place :arg1-of actual :arg1-of vote :time until :time ( date-entity :year 2013 )  :time then )
cause :arg0 ( contain :arg0 they :arg1 ( quantity :mod small :quant-of ( substance :mod toxic :op1-of ( or :op2 rule )  )  )  :arg1-of ( significant :arg2-of ( raise :arg0 ( cage :mod chicken :poss-of size )  :arg1 ( price :arg0 relative :arg1 egg )  :time ( year :mod this )  )  )  :arg2 ( ban :arg0 ( organization :name ( name :op1 eu )  :wiki european_union )  :arg1 ( thermometer :mod mercury )  )  )  :arg1 ( harm :arg0 ( fuel :arg2-of ( include :arg0 ( we :arg0-of ( regulate :arg1 reliable :mod controversy )  )  :arg1 ( addition :mod ( bio :mod-of ingredient )  :mod mandatory )  :arg1-of possible )  )  :arg1 environment :manner consequently )  :mod just
and :arg0-of ( withdraw :arg1 ( light :arg0 classic :arg1 bulb )  )  :arg1-of criticize :op1 ( use :arg1 term :arg1-of ban :arg2 of )  :op2 butter :op3 ( come :op1-of under :time previous )
banana :arg0-of ( measure :arg1 ( centimetr :quant 14 )  )  :mod rate
demand :arg1 ( city :name ( name :op1 brussels )  :wiki brussels )  :op1-of ( or :arg1-of ( defend :mod usual )  :op2 state :op3 group :op4 of :op5 ( demand :arg1 it :arg2-of ( promote :arg0 ( country :arg0-of ( threaten :arg1 bank :arg1-of ( veto :arg0 state )  )  :name ( name :op1 czech :op2 republic )  :wiki czech_republic )  :arg1 interest :mod just )  )  )  :op1-of ( or :arg1-of ( lobby :arg0 group )  :arg1-of ( decide :arg0 ( machine :arg0-of ( make :arg1 often )  )  :op1-of under :time ( pressure :arg1 or :mod-of this :mod-of ( industry :mod commerce :mod that )  )  )  )
and :op1 ( display :arg1 ( quality :arg1-of ( recommend :arg0 least :time 14 )  :arg1-of lobby :arg1-of ( high :degree most )  :arg1-of measure :mod that :mod of :mod banana :mod example :mod interest :op1-of ( and :op2 ( organization :name ( name :op1 eu )  :wiki european_union )  )  )  :polarity - )  :op2 anomalou :op3 curvature
defend :arg0 ( organization :arg0-of ( say :arg1 ( standard :arg0-of ( complicate :arg1 trade )  :arg1-of exist :mod nation :mod disjoint )  )  :name ( name :op1 european :op2 commission )  :wiki european_commission )  :arg1 only
and :arg2-of ( relate :arg1 ( norm :arg0-of ( refer :arg1 ( waste :arg1-of ( cause :arg0 ( directiv :arg1-of exist )  )  :mod food )  )  :arg1-of ( soften :arg0 ( organization :name ( name :op1 eu )  :wiki european_union )  :concession ( oppose :arg0 ( state :mod certain )  )  :time already )  )  )  :op1 fruit :op2 vegetabl
say :arg0 ( year :mod last )  :arg1 ( child :arg0-of ( inflate :arg1 ( they :arg0-of ( supervise :arg1 parental )  )  :arg1-of ( possible :arg1-of ( age :arg0 ( 8 :quant-of ( temporal-quantity :unit year )  )  )  )  :polarity - )  :arg1-of warn :arg1-of sell :arg1-of ( balloon :arg0 inflatable )  :mod that :op1-of under )  :arg1-of ( possible :arg1-of ( poll :arg0 ( winn :arg1-of ( prize :arg0 1 :arg1-of possible )  )  )  )  :arg1-of ( regulate :arg0 ( organization :name ( name :op1 eu )  :wiki european_union )  )
cause :arg1 ( suffocation :mod child )  :arg1-of ( indicate :arg0 ( research :arg1 ( other :mod-of toy )  :arg2-of ( point-out :arg0 ( organization :name ( name :op1 eu )  :wiki european_union )  :arg1 here :arg1-of balloon )  )  )  :mod main
apply :arg1 ( restrict :arg1-of resemble )  :arg2 child :purpose ( use :arg0 ( age :duration ( temporal-quantity :quant 14 :unit year )  )  :arg1 ( blower :mod party )  )  :time now
conceive :arg1 ( idea :mod strange )  :degree too :location home
possible :arg0 ( former :mod-of yugoslav )  :arg1 ( use :arg0 ( everyone :arg0-of ( hold :arg1 ( post :mod official )  )  :part-of ( organization :arg1-of ( have-org-role :arg0 ( person :arg2-of ( relate :arg1 ( rule :arg0 ( country :name ( name :op1 republic :op2 of :op3 macedonia )  )  :domain-of ( absurd :manner fairly )  )  )  :mod ( continent :name ( name :op1 europe )  :wiki europe )  :mod individual )  :arg2 official )  :name ( name :op1 eu )  :wiki european_union )  )  :arg1 term :op1-of ( and :op2 ( recommend :arg1 ( use :arg0 ( country :name ( name :op1 macedonia )  :wiki republic_of_macedonia )  :arg1 ( organization :mod acronym :name ( name :op1 fyrom )  )  :arg1-of ( instead-of :location ( sensitive :arg1 ( topic :prep-for ( country :name ( name :op1 greece )  :wiki greece )  )  )  )  )  )  )  :polarity - )
hold :arg0 ( organization :arg1-of ( have-org-role :arg0 state :arg2 member )  :name ( name :op1 eu )  :wiki european_union )  :arg1 ( of :mod ( volume :arg1-of ( regulate :mod example )  )  )  :arg2 ( provision :arg0 food )  :mod stock :mod ( also :mod-of ( afore :mod-of absurditi )  :mod-of ( nominate :arg0 ( economist :arg1-of ( liberal :arg1-of ( collaborate :arg0 server )  )  :mod-of association )  :arg1 aside )  )
stipulate :arg0 ( organization :name ( name :op1 eu )  :wiki european_union )  :arg1 ( provision :mod maximum :mod food :quant volume )  :time ( day :arg0-of ( possible :arg1 present )  :part-of ( entry :poss ( we :op1-of cr )  )  )
mushroom :mod ( volume :arg0-of ( preserve :arg1 ( incur :arg0 instance :arg1 ( penalize :arg1-of high )  :arg1-of ( exceed :arg0 ( country :name ( name :op1 czech :op2 republic )  :wiki czech_republic )  :degree thereaft )  )  )  :arg1-of permit )
cause :arg0 country :arg1 ( or :arg1-of ( request :arg0 organiser :arg2 ( fund :arg1 ( impress :arg1 idea :arg1-of poll )  )  )  :op1 ( thing :arg1-of allocate :arg1-of ( do :arg0 ( they :arg0-of ( pay :arg1 certain :mod also :mod of )  )  :polarity - )  :arg1-of ( suggest :arg0 coastline )  :arg1-of fund )  )
contrast :arg2 ( come :arg1 ( idea :mod this )  :arg3 ( country :name ( name :op1 prague )  )  :polarity - :source ( city :name ( name :op1 brussels )  :wiki brussels )  )
cause :arg0 we :arg1 ( we :arg0-of ( do :arg1 sea :polarity - )  :arg1-of handicap )
ask :arg0 we :arg1 ( thing :arg0-of ( declare :arg1 agriculture :arg3 back )  :arg1-of ( refund :arg0 ( organization :arg1-of ( have-org-role :arg0 ( person :name ( name :op1 we )  :quant ( autumn :mod-of ( date-entity :year 2004 )  )  )  :arg2 minister )  :name ( name :op1 european :op2 union )  :wiki european_union )  )  )
cause :arg0 ( and :op1 good :op2 cereal )  :arg1 ( buy :arg1 warehouse :arg1-of ( call :arg2 ( intervene :arg1 state )  )  :arg1-of harvest :op1-of ( and :arg2-of ( force :arg0 he :arg1 ( export :arg1 ( argue :arg1 there )  )  )  :op2 full )  )
recommend :arg0 ( port :op1-of ( away :time-of further :time-of ( country :name ( name :op1 czech :op2 republic )  :wiki czech_republic )  )  )  :arg1 ( pay :arg0 ( organization :name ( name :op1 eu )  :wiki european_union )  :arg1 ( hundred :mod million )  :arg1-of ( say :arg0 ( person :name ( name :op1 palas )  )  )  :arg1-of ( cause :arg0 ( monetary-quantity :unit euro )  )  )
meet :arg0 ( organization :name ( name :op1 european :op2 commission )  :wiki european_commission )  :arg1 ( halfway :mod cr )  :manner ( organize :arg1 ( tender :arg1 ( purchase :arg1 cereal )  :arg2 ( country :arg0-of ( access :arg1 sea )  )  )  )  :op1-of - :time final
mean :arg1 this :arg1-of specific :arg1-of ( request :arg0 ( country :arg0-of ( request :arg1 ( offer :arg1 foreign )  :arg2 ( fund :arg1 ministry :arg1-of ( subsidize :arg2 fund )  )  )  :arg1-of ( have-org-role :arg0 region :arg2 minister )  :name ( name :op1 us )  :wiki united_states )  :arg2 ( fund :arg1 ( city :name ( name :op1 brussels )  :wiki brussels )  )  )
bizarre :mod ( organization :name ( name :op1 eu )  :wiki european_union )  :mod-of ( legislation :domain-of except )
contrast :arg1 effort :arg2 ( and :arg1-of ( say :arg0 ( person :arg0-of ( have-org-role :arg1 ( organization :name ( name :op1 eu )  :wiki european_union )  :arg2 member )  :arg1-of expert :quant ( number :arg1-of ( recognize :arg1-of ( deserve :arg0 entire )  )  )  )  )  :arg2-of ( become :arg1 ( possible :arg1 regulation )  :manner ( well :manner-of ( target :arg0 ( state :arg0-of ( criticize :arg1 among )  )  :arg1 of )  )  )  :op1 regulate :op2 effective :op3 ( develop :arg1 ( more :mod-of operation )  )  )
contrast :arg2 ( push :arg0 ( state :arg0-of ( have-org-role :arg1 ( organization :name ( name :op1 eu )  :poss-of ( fund :arg0-of ( issue :arg0-of ( draw :arg1 project :arg1-of ( say :arg0 ( person :arg1-of expert )  )  )  :mod ( important :degree more )  )  )  :wiki european_union )  :arg2 member )  )  :arg1 ( anything :arg0-of ( strengthen :arg1 ( integrate :arg1 ( continent :name ( name :op1 europe )  :wiki europe )  )  :mod common )  :mod hardly )  :time ( meet :mod budget )  )
flare :arg0 ( emotion :arg1-of ( fight :arg0 cr :arg2 ( label :arg0 ( country :mod other )  :arg1 ( product :arg1-of ( succeed :arg0 just :polarity - :time always )  :mod tradition )  :mod particular )  :location ( city :name ( name :op1 brussels )  :wiki brussels )  )  )  :arg1 right
century :mod ( 19th :arg0-of ( fight :arg1 ( reach :arg0 tradition :arg1 ( rum :arg0-of ( rename :arg1 tuzemak :arg3 ( person :arg0-of manufacture )  )  :mod tuzemsky )  :arg2 ( temporal-quantity :quant 6 :unit year )  :direction back :location here )  :purpose ( protect :arg0 ( and :op1 ( country :name ( name :op1 germany )  :wiki germany )  )  :arg1 ( label :arg1 ( tvaruzky :mod ( thing :name ( name :op1 olomoucke )  )  )  )  )  )  )  :unit-of temporal-quantity
and :op1 ( possible :arg1 ( give :arg1 ( appellation :mod rum )  :arg2 product )  :polarity - )  :op2 ( sugar-cane :arg1-of ( distil :arg0 only )  :mod cane )  :op3 sugar-cane :op4 beet
add :arg0 ( wafer :mod ( country :name ( name :op1 carlsbad )  )  )  :arg1 ( hop :arg0 ( and :mod ( renowned :mod world )  :op1 gorgonzola :op2 ( ham :arg1 ( and :op1 ( cheese :mod feta :op1-of alongside )  :op2 ( marzipan :mod ( country :name ( name :op1 germany )  :wiki germany )  :source lubeck )  )  )  )  :arg1 ( country :name ( name :op1 zatec )  )  )  :arg2 ( list :arg1 ( product :arg1-of register :poss ( organization :name ( name :op1 eu )  :wiki european_union )  )  :mod official )  :op1-of ( and :arg0-of carp )  :op2-of ( and :op1 ( person :name ( name :op1 pohorelicky )  )  )
show :arg0 ( proudly :mod also )  :arg1 ( and :arg1-of ( possible :arg1-of protect )  :op1 ( organization :arg0-of ( stamp-out :arg1 of )  :name ( name :op1 eu )  :wiki european_union )  :op2 gingerbread :op3 tube )
say :arg0 ( person :name ( name :op1 okamura )  )  :arg1 ( contrast :arg1 ( want :arg0 person :arg1 ( save :arg0 i :arg1 republic )  )  :arg2 ( amateur :domain i )  )
decide :arg0 ( person :arg0-of ( have-org-role :arg2 senator )  )  :arg1 ( want :arg0 they :arg1 ( run :arg1 ( have-org-role :arg2 president )  :arg0 they )  :mode interrogative )
or :op1 senator :op2 ( have-org-role :arg0 this :arg1 ( about :mod - )  :arg2 president )  :source-of i
run :arg0 ( i :arg0-of ( work :arg1 ( everything :location ( country :poss we )  )  :manner problem )  )  :arg1 ( post :mod any )  :polarity - :time then
age :arg1 ( person :arg0-of ( roam :arg1 ( thieve :arg0 twenty :arg1 ( past :quant-of ( temporal-quantity :unit year )  )  )  )  :arg0-of ( retire :arg1 ( and :op1 ( increase :arg0 ( i :arg0-of ( watch :arg1 any :arg1-of long :arg1-of possible :polarity - )  )  :arg1 tax )  )  )  :arg1-of ( rob :arg0 country )  :op2-of ( and :op1 about )  )
ambition :arg0 ( i :op1-of politician )  :polarity -
try :arg0 ( i :arg0-of ( change :arg1 thing )  )  :arg1 ( find :arg1 solution :arg0 i )  :arg2 ( i :arg0-of ( see :arg1 ( something :arg1-of ( like :arg0 i :polarity - )  )  )  )
contrast :arg1 ( influence :arg0 i :arg1 thing :arg2-of ( choose :arg0 ( i :arg0-of ( turn :direction forty :op1-of since :op1-of ( and :op2 ( man :domain ( i :arg1-of ( depend :polarity - :polarity - )  )  :mod ( party :polarity - )  )  )  :time already )  )  :mod other )  )  :arg2 ( stand :arg1 ( or :op1 senator :op2 ( have-org-role :arg2 president )  )  )
contrast :arg1 ( reach :arg0 ( you :arg0-of ( take :arg1 you :purpose ( castle :wiki schönbrunn_palace )  :time ( after :op1 that :quant short )  )  )  :arg1 ( government-organization :name ( name :op1 senate )  :wiki united_states_senate )  :time already )
turn :arg0 you :arg1 back :arg1-of be :arg2 ( vote :arg1 ( you :arg0-of ( do :arg1 this )  )  )  :mode interrogative :polarity -
say :arg0 ( i :arg0-of ( base :arg1 ( castle :wiki schönbrunn_palace )  :arg1-of ( result :arg1-of ( elect :arg0 ( government-organization :name ( name :op1 senate )  :wiki united_states_senate )  :arg2 ( fight :arg1 i )  )  )  )  )  :arg1 ( entire :mod-of time )
add :arg0 ( i :arg0-of ( elect :arg1 i :arg2 senator )  )  :arg1 ( stand :arg1 ( i :arg0-of ( have-org-role :arg2 president )  )  )  :time late
realize :arg0 ( i :poss-of goal )  :arg1 vision :arg1-of ( allow :arg0 ( tool :domain post )  :time ( post :polarity - )  )
need :arg0 ( i :arg0-of ( influence :mod ( great :degree most )  )  )  :arg1 ( and :op1 ( strong :arg1 ( mandate :arg1-of possible )  :degree most )  )
contrast :arg1 ( try :arg0 ( anyone :arg1-of ( trample :arg0 we )  )  :arg1 ( change :arg0 just :arg1 thing )  :arg1-of ( want :arg0 ( we :arg0-of ( swear :arg1 nation :time ( pub :op1-of ( or :op2 television )  )  )  )  :arg1-of trouble :polarity - )  )
add :arg0 media :arg1 ( and :op1 ( mislead :arg1 public )  :op2 ( mistake :arg1 ( free :arg0-of ( lie :arg1-of free )  :arg3 speech )  )  )  :beneficiary this
or :op1 ( bribe :arg0 i :arg1 ( person :arg0-of report )  :arg1-of allege :purpose example )  :op2 ( allege :arg0 i :arg1 ( person :arg0-of ( advise :arg1 ( person :name ( name :op1 jiri :op2 paroubek )  )  )  )  )
let :arg1 talk
and :op1 ( siege :arg1-of ( castle :arg0 material )  )  :op2 ( disclose :arg0 ( you :poss-of finance )  :arg1 asset )  :op3-of ( and :op1 thesi :op2 ( thing :arg1-of ( responsible :mod politics :mod ( criminal :arg1 twenty )  )  :mod retroactive )  )
need :arg0 you :arg1 ( change :arg1 law :arg0 you )  :arg2 this
possible :arg1 ( propose :arg0 whole :arg1 ( law :mod this )  :arg3 ( government-organization :arg1-of ( have-org-role :arg0 ( you :domain-of power )  :arg2 president :polarity - )  :mod only :name ( name :op1 senate )  :op1-of and :wiki united_states_senate )  )
solve :arg0 you :arg1 this :arg2 amr-unknown :mode interrogative
guide :arg1 ( tour :arg1 ( citizen :arg2-of ( lobby :arg0 ( i :arg1-of ( carry-out :arg1-of succeed )  )  )  )  )  :arg1-of ( work :arg0-of ( trade :arg1-of free )  )
delay :arg1 public :arg1-of ( cause :arg0 ( reject :arg1 ( someone :arg1-of ( come :arg3 ( or :op1 ( idea :mod good )  :op2 left :op3 ( right :arg1 problem )  )  )  :arg1-of ( squabble :mod politics )  )  :manner deliberate )  )
stand :arg1 ( i :arg0-of ( chance :arg1 ( gain :arg1 ( support :arg0 ( side :mod parliament )  :arg1 far )  )  :arg2 good :time ( man :arg0-of ( depend :arg1 all :polarity - )  :mod ( party :polarity - )  )  )  )
or :op1 ( pigeonhole :arg1 ( any :mod-of side )  :manner-of ( take :arg0 i :arg1 ( and :op1 ( apply :arg0 ( we :poss-of country )  )  )  :arg1-of possible :arg2-of ( hold :arg0 i :arg1 advantage :op1-of ( good :degree most )  )  )  :mod politics )  :op2 dogma
see :arg0 you :arg1 left :arg3 ( person :source ( right :arg1 interrogative :op1-of or )  )
seem :arg1 ( tend :arg1 they :arg2 ( put :arg1 i :arg2 left :arg0 they )  )  :arg2 viewpoint
matter :arg1 ( little :beneficiary ( or :op1 left :op2 ( right :arg1 i )  )  )  :mod just :polarity -
move :arg1 ( i :op1 important )  :direction forward
bring :arg0 i :arg1 person :arg1-of ( want :concession ( right :arg1 someone :arg2 it :op2-of ( or :op1 left )  :polarity - )  :mod just :arg0 i )  :manner together
and :op1 ( support :arg0 i :arg1 ( solution :mod good :mod public :mod any )  :condition ( put :arg0 ( organization :name ( name :op1 kscm )  :op1-of ( or :op2 ( organization :name ( name :op1 ods )  )  )  )  :arg1 they :arg2 forward :mod even )  :time always )  :op2 ( oppose :arg0 i :arg1 ( idea :arg1-of bad )  :mod ( way :arg1-of same )  )
populist :arg1-of ( call :arg0 someone :arg2 you :time-of ( angry :poss you )  )
confirm :arg0 you :arg1 this :arg1-of ( be :arg0 interrogative )  :manner ( state :arg0 you )  :polarity -
and :op1 ( goal :domain ( you :arg0-of ( plan :arg1 company :arg2 you :mod business )  )  :mod ideal :mod also :quant some )  :op2 vision
try :arg0 you :arg1 ( come :arg1 you )
contrast :arg1 ( possible :arg1 ( call :arg0 some :arg2 populism )  )  :arg2 ( work :arg0 ( thing :arg1-of ( speak :arg0 i )  :arg1-of propose :quant all )  :arg1 elsewhere :op1-of ( or :op2 ( put :arg0 ( person :arg1-of expert )  :arg1 they :arg2 forward )  )  :time already )
contrast :arg2 ( leave :arg1 you :arg2 ( slogan :mod just )  :manner ( support :arg1 parliament )  )
last :arg0 you :arg1 ( long :arg1 that )  :polarity - :time politics
say :arg3 ( pass :arg1 ( and :op1 ( responsible :arg1 material )  )  :arg1-of ( succeed :arg0 you :arg1-of ( talk :arg0 ( you :arg0-of ( walk :arg1 public )  )  :op1-of ( and :arg1-of ( believe :arg0 you :arg1-of criminal :mode interrogative )  :op1-of or )  )  )  )
alternative :arg0 i :polarity -
possible :arg1 ( put :arg0 we :arg1 this :arg1-of ( cause :arg0 ( and :op1 ( try :arg0 ( i :arg0-of ( convince :arg1 ( politician :op1-of ( and :op2 ( person :arg0-of report )  :op3 public )  )  )  :arg0-of ( need :arg1 convince )  )  :arg1 side )  )  )  )
ask :arg0 ( i :arg0-of ( pass :arg1 ( and :op1 ( responsible :arg1 ( politician :op1-of ( and :op2 judge :op3 ( person :name ( name :op1 attorney :op2 general )  )  )  )  :arg1-of criminal )  :op2 ( person :arg0-of serve :mod civil )  )  :arg2 law )  )  :arg1 ( broadcast :arg1 television :arg1-of ( arrange :arg0 ( problem :polarity - )  )  :mod ( live :arg1 material )  )  :arg2 ( person :arg0-of ( lead :arg1 ( party :mod parliament )  )  :arg0-of ( have-org-role :arg1 ( elect :arg1 i )  :arg2 president )  )
and :arg1-of possible :op1 ( need :arg0 ( they :arg0-of ( want :arg1 this :polarity - )  )  :arg1 ( explain :arg1 case :arg0 they )  )
need :arg0 ( figure :arg0-of ( point :arg1 issue )  :arg1-of strong )  :arg1 ( pressure :arg1 ( scene :mod politics )  :mod some )  :mod just
achieve :arg1 ( thank :arg1 ( elect :arg1 ( president :arg2-of have-org-role )  :arg1-of direct :arg3-of ( take :arg1 instance )  )  )  :arg2 ( pressure :arg0 public )
say :arg0 i :arg1 ( or :op1 ( genius :domain ( i :domain-of ( amateur :domain i )  )  :polarity - )  :op2 intellectual )  :manner frank
look :arg0 ( i :arg0-of ( share :arg1 opine :arg2 ally :arg3 ( and :op1 vision )  )  )
and :op1 ( start :arg0 i :location politics :mod just )  :op2 ( look :arg0 i :arg1 ( support :arg1 agenda :mod majority )  )
contrast :arg1 ( try :arg0 ( i :arg0-of work )  :arg1 ( progress :arg1 thing :polarity - )  )  :arg2 ( and :op1 ( return :arg1 ( i :arg0-of ( finish :arg1 ( temporal-quantity :quant 6 :unit year )  :arg2 ( sector :arg1-of private )  )  )  )  )
sound :arg0 it :arg1 ( try :arg1 ( save :arg0 ( little :arg1-of ( resemble :arg2 ( person :name ( name :op1 okamura )  )  )  )  :arg1 ( country :name ( name :op1 czech :op2 republic )  :wiki czech_republic )  )  )
saviour :domain i :polarity -
know :arg0 i :arg0-of ( cause :arg1 ( ask :arg0 i :arg1 ( run :arg0 ( they :domain-of alone )  :arg1 senate )  :arg2 acquaintanc )  )  :arg1 ( achieve :arg0 i :arg1 anything :polarity - )
decline :arg0 ( person :arg4-of ( go :arg0 i :arg1 workload )  :name ( name :op1 radim :op2 jancura )  )
heat :arg1-of light :arg2 ( oil :arg1-of ( activity :arg1-of ( uncover :arg0 ( person :name ( name :op1 jana :op2 lorencova )  )  :arg2 ( journalist :arg1-of ( support :arg0 i :arg1-of cause )  :mod investigative )  )  :mod fraudulent )  )
contrast :arg1 ( put :arg0 i :arg1-of ( cause :arg0 ( discontent :degree really :domain person )  )  :arg2 forward )  :arg2 ( doubt :arg0 i :time now )
and :op1 ( go :arg0 person :polarity - :purpose vote )  :op2 ( vote :arg0 ( percentage-entity :value sixty )  :arg1 ( person :arg0-of ( lead :arg1 establish )  )  :manner most )
independent :mod-of ( person :mod only :poss-of ( senate :mod i )  :quant 2 )
difficult :domain ( enforce :arg1 change )  :domain ( senate :arg1-of ( vote :arg0 person )  )
fight :arg0 i :arg1 ( elect :arg1 ( or :op1 ( have-org-role :arg0 example :arg2 mayor )  :op2 ( president :mod region :mod council )  )  :arg1-of direct )  :arg2 vision :time nonetheles
be :arg1 ( consider :arg0 party :arg1 you :mode interrogative )
consider :arg0 i :arg1 ( i :arg0-of ( verify :arg1 ( money :arg0-of ( have-org-role :arg1 party :arg2 member )  :purpose ( do :arg0 every :arg1 ( clean :arg1 background )  :polarity - )  )  :purpose-of time )  )  :arg1-of cause :time yet
hold :arg0 ( account :mod transparent )  :arg1 ( i :arg0-of ( campaign :arg1 ( person :arg0-of ( have-org-role :arg1 thousand :arg2 president )  )  :arg2 20 :mod even )  :arg0-of ( money :polarity - )  )  :arg3 just
money :mode interrogative :polarity - :poss you
contrast :arg1 ( your :arg1-of resemble )  :arg1-of ( talk :arg0 you :arg2 ( disclosur :mod finance )  :mode interrogative )
estimate :arg0 i :arg1 ( asset :arg1-of ( private :arg0 ( 60 :op1-of around )  )  )
collect :arg0 i :arg1 artwork :arg2 few :op1-of ( and :location ( country :name ( name :op1 prague )  :op1-of around )  :mod-of apartment :mod-of 8 :op2 ( organization :mod-of worth :mod-of ( 25 :mod-of 3.5 )  :name ( name :op1 aston :op2 martin )  )  :op3 ( organization :name ( name :op1 skoda :op2 superb )  )  :poss-of ( land :mod-of ( worth :domain i :location around )  )  )  :op1-of ( account :mod ( another :mod-of apartment )  )
and :arg0-of ( cause :arg1 woman :condition-of ( dream :arg0 boy :arg1 ( organization :name ( name :op1 aston :op2 martin )  )  )  )  :op1 ( drive :arg0 i :arg1 car )  :op2 gallant :op3 ( fight :arg0 ( person :arg1-of ( like :arg0 i :time always )  :name ( name :op1 james :op2 bond )  )  :arg1 ( and :op1 evil :op2 villainy )  :arg2 way :mod also )
contrast :arg0 60 :arg1 ( drive :arg0 ( you :arg0-of ( campaign :arg1 ( worth :location-of asset )  )  )  :arg1 ( organization :name ( name :op1 aston :op2 martin )  )  :mode interrogative )  :arg2 ( money :polarity - :poss you )
contrast :arg1 ( say :arg0 you :arg1 ( want :arg0 you :arg1 ( change :arg1 republic :arg0 you )  )  )  :arg2 ( keen :arg1 you :arg2 ( put :arg1 money )  :polarity - )
inspire :arg0 this :arg1 ( confidence :quant much )  :polarity -
campaign :arg0 i :arg1 15 :arg3 -
recommend :arg1 ( take :arg0 i :arg1 loan )  :mode interrogative
put :arg0 i :arg2 ( campaign :arg1 2.5 )  :time already
evidence :arg0 - :arg1 ( sponsor :arg0 ( i :arg1-of ( interest :arg0 fact :arg2 program :mod real )  )  :arg1 - :mod any )
obligate :arg1 ( i :arg0-of ( pay :arg1 campaign )  )  :arg2 ( thing :polarity - )
cover :arg0 ( pay :arg0 ( i :arg0-of ( receive :arg1 senator )  )  )  :arg1 ( expend :arg2-of campaign )  :mod basic
possible :arg1 ( live :arg0 i :arg1 it :condition-of ( pay :arg0 i :arg1-of possible :arg2 ( person :arg0-of ( have-rel-role :arg1 i :arg2 son )  :mod-of ( language :mod-of ( school :arg1-of ( cost :mod-of ( thousand :mod 30 :mod-of ( temporal-quantity :unit month )  )  )  )  :name ( name :op1 english )  :wiki english_language )  )  :mod instance :polarity - )  )  :polarity -
stand :arg1 ( i :arg2-of ( interest :arg1 ( i :domain-of money )  :mod only )  )  :arg2 elect :polarity -
cause :arg0 ( possible :arg1 ( live :arg0 you :arg1 ( you :poss-of business )  )  :arg1-of cause :mode interrogative )  :arg1 still
say :arg0 ( you :arg0-of do )  :arg1 ( put :arg0 you :arg1 this :arg2 hold )  :mode interrogative :polarity -
depend :arg0 this :arg1 ( rate :mod pay )
reduce :arg0 ( i :arg0-of promise )  :arg1 activity :manner partial
take :arg0 deputy :arg1 example :manner ( have-org-role :arg1 ( agency :location spring :mod travel )  :arg2 ceo )
like :arg0 person :arg1 i :arg2 ( samaritan :arg0-of ( save :arg1 republic )  )
contrast :arg2 ( live :arg0 i :arg1 something :mod also )
businessman :poss ( you :domain-of ( month :unit-of ( temporal-quantity :mod usual :mode interrogative )  )  )
thousand :era-of 400 :op1-of ( i :mod-of ( 2 :mod still )  )
and :op1 ( end :arg0 i :arg1 ( activity :arg0 ( i :arg1-of ( become :arg2 ( have-org-role :arg2 president )  )  )  :arg1 business )  :time then )
interview :arg0 full :arg1 ( possible :arg1 ( issue :arg0 saturday :arg1 of :arg1-of read )  )
prove :arg0 architect :arg1 ( true :mod that :mod adventure :op1-of ( and :op2 ( head :arg1 ( draw :arg1 ( photo :mod 2 :mod just :mod mountain )  )  )  :op3 example :op4 of :op5 ( recent :arg0-of ( erect :arg1 ( literal :mod-of book )  )  )  )  :polarity - )
say :arg0 ( i :arg0-of ( build :arg1 side )  :arg0-of ( think :arg1 by )  :arg0-of ( look :arg1 road :arg1-of ( interest :arg0 ( something :arg1-of ( provide :arg0 ultimate :arg2 ( person :name ( name :op1 &quot; )  )  )  )  :arg2 passer )  :arg1-of ( look :arg0 fun :op1-of ( and :op2 futuristic )  )  )  )
comment :arg1 ( thing :arg1-of ( build :arg0 beauty )  )  :location-of ( base :arg1 ( person :arg0-of ( have-org-role :arg2 technician )  :op1-of and )  :location nearby :location it :location definite :location ( firm :arg1-of major )  :location it )
wonder :arg0 i :arg1 ( need :arg0 person :arg1 ( library :mod another )  :op1-of ( and :mod this :op2 day :op3 age )  )
ipad :op2-of ( and :op1 ( internet :location everyone )  :op3 ebook )
or :op1 ( go :arg0 ( library :arg1-of volunteer :mod ( style :mod old )  :mod this :op1-of nowadays )  :arg1 1 )  :op2 ( wrong :arg0 - :arg1 i :mode interrogative )
hold :arg1 ( record :arg1-of ( special :arg0 ( gate :op1-of ( outside :location-of ( town :arg1-of sleepy :location-of ( merit :arg0 ( country :name ( name :op1 rotterdam )  )  :arg1 visit :degree bare )  )  )  )  )  )
literacy :mod-of ( rate :arg1-of ( low :arg2 ( country :mod-of ( person :arg1-of reside :mod-of municipality )  :name ( name :op1 netherlands )  :poss-of whole :wiki netherlands )  :degree most )  )
feature :arg0 ( bridge :arg1-of ( recreate :op2-of ( and :op1 ( contribute :arg0 ( educate :arg1-of ( general :arg0 pretty )  )  :arg1 ( decide :arg1 ( counteract :arg0 ( number :quant-of ( year :unit-of temporal-quantity )  )  :arg1 ( situation :mod asinine :mod this )  )  )  :arg2-of ( reinforce :arg1 ( miniatur :arg1-of concrete )  :arg1-of paint )  )  )  )  :mod fictitious :quant 7 )  :arg1 ( note :mod euro )
limit :arg1 ( succeed :arg0 ( offense :arg1-of educate )  )
acknowledge :arg0 ( father :arg2-of ( have-rel-role :arg0 statistic :arg1 ( city :arg0-of ( build :arg1 library )  )  )  )  :arg1 ( way :arg1-of ( become :arg2 master )  :mod only )  :op1-of and
bar :arg0 audaciou :arg1 ( chart :mod-of ( master :op3-of ( and :op1 ( person :arg0-of ( turn :arg1 project :arg2 ( book :location ( arm :op1-of ( and :op2 ( grin :arg1 cynical :prep-on face )  )  )  )  :op1-of and :op3-of ( and :op1 building :op2 ( composure :mod customary )  )  :time ( hear :arg1 5 :arg2 compete )  :time ( date-entity :year 2003 )  )  :name ( name :op1 winy :op2 maas )  )  :op2 ( mvrdv :arg1-of base :mod firm )  :op4 ( produce :arg1 humorou )  :op5 often )  )  )
and :op1 ( look :arg0 panel :arg1 bewilderment :arg1-of judge :mod still )  :op2 ( choose :arg0 ( he :arg0-of ( word :arg1 municipality :example expressive )  :arg0-of ( suitable :arg1 ( back :arg1 dear )  :example action :time now )  )  :arg1 presentation :arg1-of shoulder :arg1-of stack :arg1-of shrug :arg1-of prop :example-of impertinent :op1-of ( and :op2 ( form :mod size )  :op3 pyramid :op4 ( round-up :arg1 off )  )  )
suggest :arg0 ( organization :name ( name :op1 spijkenisse :op2 book :op3 mountain )  )  :arg1 ( thing :arg0-of ( cause :arg1 ( call :arg1-of cause )  )  :domain this )
lift :arg1 ( mountain :mod ( monetary-quantity :quant million :unit euro )  :mod 30 )  :time ( late :op1 ( temporal-quantity :quant nine :unit year )  )
and :op1 ( building :poss-of ( office :mod post :op3-of ( and :arg1-of ( include :arg0 ( project :domain it :mod revitalisation )  :arg2 ( total :arg0 adjacent :arg1 dwelling :arg2 50 )  :mod also )  :op1 ( park :mod ( car :mod underground )  )  :op2 supermarket :op4 apartment )  )  :quant ( number :mod small )  )  :op2 ( house :mod terrace )
begin :arg1 ( place :arg1-of ( compete :arg0 ( organization :mod-of ( date-entity :year 2012 )  :name ( name :op1 at )  )  )  :arg1-of award )  :mod-of ( date-entity :month 11 )
date-entity :time-of ( nominate :arg0 ( organization :name ( name :op1 dutch :op2 national :op3 wood :op4 award )  )  :arg1 project :mod also :time addition )  :year 2012
expect :arg0 ( nothing :arg1-of ( offer :arg0 ( area :arg1-of ( modern :arg0 thu :op1-of post )  :mod pedestrian :op1-of ( and :op2 ( hall :mod ( ugly :mod stunningly )  :mod town )  )  )  )  :mod more )  :arg1 ( find :arg0 ( facad :mod white )  :arg1 ( plant :mod dairy )  :time now )  :arg2 ( retort :arg1 until :arg1-of ( bolster :arg0 ( piece :mod ( architecture :time contemporary )  )  )  :mod ( town :mod small )  :mod faceles )  :op1-of behind
and :arg1-of ( build :arg0 ( country :name ( name :op1 spijkenisse )  )  :mod public :mod culture :time ( history :arg0-of ( exist :arg1 now )  )  )  :op1 foremost
journey :arg1 book :arg1-of long
impression :arg0 ( organization :location ( beneath :op1 ( dome :mod cheese )  )  :mod-of book :name ( name :op1 eldorado :op2 of )  )
reveal :arg1 ( and :location-of ( climb :arg0 lift :arg1 ( centre-left :poss ( massif :mod mountain )  )  )  :op1 ( joy :domain space :mod true )  :op2 literature )  :time ( scale :arg0 fact :arg1 ( topography :location foot )  )
and :op1 ( speak :arg0 ( lamp :mod ( street :mod elegant )  )  :arg1 ( language :mod unmistakable :mod ( square :mod ( town :mod public )  )  )  :op3-of ( and :op1 bright :op2 ( fire :arg0 ( space :arg1-of open :arg1-of ( glaze :arg4 throughout )  :mod interior )  :arg1 ( floor :arg1-of clink )  )  )  )
ambiance :arg1-of perfect :mod urban
and :op1 ( benchmark :mod ( park :location-of lookout )  )  :op2 girl :op3 ( play :arg0 ( and :op1 dog :op2 boy )  :arg1 football :arg2 you :op1-of already )
and :op1 everywhere :op2 book :op3 ( book :source book )
shelve :arg0 ( book :arg0-of ( run :arg1 along )  :arg1-of ( normal :op1-of ( and :arg0-of ( say :arg2 ( person :arg1-of ( pleasant :arg0 usual :op2-of ( and :op1 ( dark :arg0 there :arg1 space )  :op3 impersonal )  )  :name ( name :op1 &quot; )  )  )  :op2 facade :op3 centre-left )  )  )  :arg1 large
and :op1 ( turn :arg0 we :arg2 head )  :op2 ( configuration :mod spatial :mod classics )  :op3 ( turn :arg1 ( area :arg1-of read )  :op1-of inside )
and :arg0-of ( use :arg1 ( organization :name ( name :op1 interior :op2 of :op3 the )  )  :manner cleverly )  :op1 ( person :name ( name :op1 bücherberg )  )  :op2 office :op3 ( library :mod internet )  :op4 ( club :mod chess )  :op5 ( centre-left :mod environment )  :op6 ( room :mod ( support :arg0 centre-left :arg1 technical )  :mod central )
shelve :arg1 particular :arg1-of black :arg1-of ( act :manner simultaneous :prep-as ( clad :arg0 1 :arg1 wall :manner-of ( special :arg1 feature )  :op1-of ( and :op2 parapet :op3 ( railing :beneficiary stairway )  )  )  )  :arg2 book
and :domain-of foreign :op1 appear :op2 feel :op3 scent
hard :arg1 ( person :arg0-of ( engineer :arg1 construct )  :arg1-of ( die :manner even )  :op2-of ( and :arg0-of ( shake :arg1 ( person :arg0-of head )  :arg2 ( material :arg2-of ( construct :arg1-of ( know :polarity - )  )  )  )  :op1 architect )  )
request :arg0 ( country :name ( name :op1 &quot; )  )  :arg1 of :arg2 ( organization :name ( name :op1 &quot; )  )  :purpose ( explain :arg0 ( we :arg0-of ( work :arg1 material :location here )  :arg0-of ( want :arg1 recyclable )  )  :arg1 ( person :arg0-of ( project :arg1 ( manage :arg1 municipality )  )  :name ( name :op1 &quot; )  )  )
and :arg1-of ( stumble :arg0 we :arg2 day :location across :manner ( use :arg0 ( farm :mod ( thing :name ( name :op1 frisian )  )  )  :arg1 ( product :arg1-of ( suitable :arg0 thus-far )  :mod waste )  :arg2 agriculture )  )
use :arg0 base :arg1 ( fabric :arg1-of thick :mod artificial :mod millimetre )  :arg2 layer :duration ( many :op1 ( temporal-quantity :unit year )  )  :location ( and :op1 greenhous :op2 field )  :location ( country :name ( name :op1 netherlands )  :wiki netherlands )
and :op1 ( save :arg0 ( it :domain-of inexpensive )  :arg1 time )
and :op1 ( last :arg1 ( textile :arg1-of thin )  :arg2 ( season :quant 2 )  )  :op2 ( dispose :arg1 ( bulk :mod-of waste )  :time then )
press :arg1 fabric :arg2 ( board :arg0 library :arg1 ( time :location ( quantity :mod this )  )  :arg1-of thick :mod ( centimetre :quant 4 )  )
and :consist ( mixture :arg2-of ( resemble :arg1 ( smell :arg1 ( material :arg1-of ( dark :op1-of ( and :arg2-of ( change :arg0 ( plastic :arg1-of call :arg1-of cause )  :arg1 colour :op3-of ( and :op1 ( heat :op1-of under )  :op2 pressure )  )  :op2 homogeneou :op3 robust )  )  )  )  )  )  :op1 ( smell :arg1 car :mod new )  :op2 ( smell :arg1 train )
summit :poss ( you :arg0-of ( reach :arg1 ( step :op1-of after :quant 105 )  )  )
contrast :arg1 literature :arg2 also :purpose ( end :arg1 ( journey :arg1-of ( long :arg2 ( 500 :quant-of ( distance-quantity :unit meter )  )  )  )  :time-of ( reward :arg1 you :arg2 ( view :arg0 city :arg1-of fantastic :op1-of ( and :op2 ( croquett :mod dutch )  :op3 ( tree :arg1-of pot :source-of ( ficu :mod-of ( only :polarity - )  )  )  )  )  )  )
contrast :arg1 ( provide :arg0 this :arg1 atmosphere )  :arg2 ( regulate :arg0 important :arg1 ( humid :arg1 air :arg2-of ( range :arg0 most :arg1 mountain :mod literary )  )  )
soul :mod new
contrast :arg1 spite :arg2 ( build :arg0 ( you :arg0-of ( say :arg1 ( person :name ( name :op1 &quot; )  )  )  :arg0-of ( believe :arg1 it :mod hardly )  :arg0-of ( showcase :arg1 ecology :arg1-of ( panel :arg0 glass )  :arg2 area :op1-of project )  )  :arg1 of :arg2 many :mod this )
and :op1 ( cool :arg0 ( it :arg1-of heat )  :arg1 ( use :arg1 ( heat :location geothermal )  )  )
briefly :arg1-of ( shine :arg0 ( person :arg0-of ( cover-up :arg1 glass )  :name ( name :op1 bücherberg )  )  :arg2 interior :arg3 sun :mod only :mod only )  :mod ( sunny :op1 ( temporal-quantity :unit ( day :mod even )  )  )
and :op1 ( provide :arg1 shade )  :op2 ( absorb :arg0 ( beam :arg0-of ( glue :arg1 wood )  :arg1-of ( position :location ( angle :mod ( right :beneficiary ( facade :consist-of glass )  )  )  )  :arg1-of laminate :arg1-of broad )  :arg1 ( majority :quant-of sunlight )  )
pleasant :arg1 ( temperature :mod indoor )  :degree very
blind :arg0-of ( take :arg1 rest :arg3 care )  :arg1 roll :mod ( automatic :mod full )
venture :arg0 ( person :name ( name :op1 stefan :op2 spermon )  )  :arg1 ( it :mod-of ( sector :poss-of sceptic )  )  :arg2 ( library :mod new :mod-of initial )  :time already
visit :arg0 ( person :name ( name :op1 lisette :op2 verhaig )  )  :mod also :time already
cause :arg0 too :arg1 ( teach :arg1 cynthia :arg2 ( refer :arg1 even :arg2 ( long :arg1 overdue :arg2 soul )  )  )
collect :arg0 ( few :mod just :op1 ( temporal-quantity :unit week )  )  :arg1 ( slash :arg2-of ( donate :arg1 book :arg2-of ( invite :arg1 ( citizen :mod every )  :time inauguration )  )  )  :arg1-of ( personal :arg0 reason )
fill :arg0 this :arg1 ( gap :location ( library :arg1-of ( stock :arg2 item :degree full :op1-of time :time yet )  )  :mod optics )  :arg2 - :location current
succeed :arg1 concept
shelve :domain-of ( full :prep-to capacity )
say :arg0 library :arg1 architect :arg2 ( winy :mod-of maa )  :arg2-of ( bad :arg0 nothing :arg1 half )  :arg2-of empty
think :arg0 ( i :arg0-of ( thank :arg1 ( person :arg1-of ( invite :arg0 ( we :arg0-of ( build :arg1 new :arg2-of ( bond :arg0 certain :arg1 this )  )  )  )  :arg1-of ( reside :arg0 every )  )  :arg2 now )  )  :arg1 that
know :arg0 ( everyone :poss-of book )  :arg1 build
decoration :mod just :mod ( even :mod-of it )
succeed :arg0 ( organization :name ( name :op1 mvrdv )  )  :arg1 ( master :arg1 ( discipline :arg1-of ( refer :arg0 ( jargon :mod ( person :arg0-of specialize )  )  )  :mod master )  :arg2 ( form :arg1 identity )  )  :arg2 such
write :arg0 ( country :name ( name :op1 spijkenisse )  )  :arg1 ( history :mod literary )
possible :arg1 ( young :op1-of ( and :op2 ( educate :polarity - )  )  )
point :arg1-of start :domain this :mod ultimate :topic identity
mean :arg1 ( country :name ( name :op1 germany )  :wiki germany )  :arg2 ( play :arg1 ( great :mod-of role )  )
abstain :arg0 ( country :name ( name :op1 germany )  :wiki germany )  :arg1 vote :purpose ( vote :arg1 ( incorporation :poss ( country :name ( name :op1 palestine )  :wiki state_of_palestine )  )  )
say :arg0 ( person :name ( name :op1 stephen :op2 szabo )  )  :arg1 ( walk :arg1 ( line :arg1-of thin :mod diplomacy )  :arg2 ( do :arg0 ( expert :topic ( relation :arg0 ( country :name ( name :op1 us )  :wiki united_states )  :arg1 ( continent :name ( name :op1 europe )  :wiki europe )  )  )  :arg1 ( city :name ( name :op1 berlin )  :wiki berlin )  )  )
within :mod ( status :arg1-of ( observe :arg0 ( country :name ( name :op1 palestine )  :op3-of ( against :op1 ( begin :arg0 at :arg1 ( of :mod-of week )  )  :op2 ( vote :arg0 ( country :name ( name :op1 germany )  :wiki germany )  :arg1 it :arg2-of ( signal :arg0 initial :arg1 that )  )  )  :wiki state_of_palestine )  :arg2 ( organization :name ( name :op1 united :op2 nations )  :wiki united_nations )  )  :arg1-of apply )
abstain :arg0 ( city :name ( name :op1 berlin )  :wiki berlin )  :arg1 vote :time subsequent
interrogative
do :arg0 ( person :mod ( country :name ( name :op1 israel )  :wiki israel )  )  :arg1-of ( support :arg0 ( country :name ( name :op1 germany )  :wiki germany )  :polarity - )  :location gaza_strip :prep-on ( person :name ( name :op1 stephen :op2 szabo )  )
cautious :arg1 ( country :arg0-of ( relation :arg1-of ( special :arg0 now )  :arg2 ( country :name ( name :op1 israel )  :wiki israel )  )  :name ( name :op1 germany )  :wiki germany )
believe :arg0 i :arg1 ( support :arg1 position )  :polarity - :time ( time :arg1-of ( same :arg0 either )  )
want :arg0 ( country :name ( name :op1 germany )  :wiki germany )  :arg1 ( demonstrate :arg1 ( depend :polarity - )  :arg0 country )  :arg2 ( critical :arg1 ( country :name ( name :op1 israel )  :wiki israel )  :degree too )
establish :arg1 ( zone :mod ( fly :arg1 ( date-entity :year 2011 )  :polarity - )  )  :arg2-of ( come :arg1 ( abstain :arg0 ( country :name ( name :op1 germany )  :wiki germany )  :arg1 vote :manner likewise :time ( uprise :location ( country :name ( name :op1 libya )  :wiki libya )  :time ( date-entity :month 3 )  )  )  )
implement :arg0 ( military :name ( name :op1 nato )  :wiki nato )  :arg1 this :manner ultimate
find :arg0 ( country :arg0-of ( come :arg4 ( affair :mod international :mod important )  )  :arg0-of ( adopt :arg1 ( position :arg1-of clear )  )  :arg1-of do :name ( name :op1 germany )  :wiki germany )  :arg1 difficult :mode interrogative
yes
cause :arg0 speak :arg1 ( manage :arg0 ( country :name ( name :op1 usa )  :wiki united_states )  :arg1 ( policy :source-of ( move :arg1 ( policy :arg0-of ( cause :arg1 that )  :mod just :mod foreign )  :arg2 away :arg2-of ( favor :arg1 ( policy :mod foreign :mod ( country :name ( name :op1 germany )  :wiki germany )  )  )  :mod indeed )  )  )
aggravate :arg0 fact :arg1 ( situation :arg1-of ( cohere :arg0 ( continent :name ( name :op1 europe )  :wiki europe )  :op1-of ( and :op2 ( policy :mod standardise )  )  )  :mod this :mod - )
find :arg0 ( country :name ( name :op1 germany )  :wiki germany )  :arg1 ( catch :arg1 ( front :quant 2 )  )  :time thus-far
expect :arg1 ( play :arg0 they :arg1 ( role :arg0-of ( depend :degree more :polarity - )  )  )  :arg2 it :op1-of ( yet :op2 ( something :arg1-of ( accustom :polarity - )  :domain this )  )
contrast :arg1 ( policy :arg1-of ( believe :arg0 ( i :arg0-of ( find :manner way :manner still :manner they :manner ( role :mod this )  )  )  )  :arg1-of ( normal :arg0 more )  :mod foreign )  :arg2 route
or :arg1-of ( resemble :arg0 ( policy :mod foreign )  :arg2 that )  :op1 ( country :name ( name :op1 france )  :wiki france )  :op2 ( country :name ( name :op1 great :op2 britain )  :wiki united_kingdom )
cause :arg0 ( amr-unknown :arg1-of specific )  :arg1 ( policy :arg1-of ( normal :arg2 perspective )  :arg1-of ( entail :arg0 ( country :name ( name :op1 germany )  :wiki germany )  :arg2 interrogative )  :mod foreign )
show :arg0 it :arg1 ( will :arg1 ( adopt :arg1 ( position :topic ( matter :arg1-of ( depend :op1-of ( or :op2 ( country :arg0-of ( partner :arg1 ( continent :name ( name :op1 europe )  :wiki europe )  )  :name ( name :op1 usa )  :wiki united_states )  )  :polarity - )  :mod international )  )  )  )
and :op1 ( export :arg0 ( country :name ( name :op1 russia )  :wiki russia )  )  :op2 ( relation :arg0 ( country :mod-of ( policy :arg1-of ( motivate :arg0 ( policy :mod economy )  :arg1-of ( believe :arg0 i )  )  :mod foreign )  :name ( name :op1 germany )  :wiki germany )  :arg1 ( or :location-of such :op1 ( country :name ( name :op1 china )  :wiki china )  :op2 ( country :name ( name :op1 near :op2 east )  )  )  :arg2 ( region :mod certain )  )
and :arg1-of ( protect :arg0 must :mod-of interest :mod-of it )  :op1 ( differ :arg1 ( economy :mod ( country :name ( name :op1 germany )  :poss-of interest :wiki germany )  )  :arg2 ( of :mod that )  :manner certain :mod extent )  :op2 ( power :mod ( other :arg0-of major )  )  :op3 therefore :op4 ( country :name ( name :op1 germany )  :wiki germany )
obligate :arg1 ( interest :arg0-of ( influence :arg1 attitude )  :arg0-of ( conflict :arg1 interrogative :location ( country :name ( name :op1 near :op2 east )  )  :op1-of ( and :op2 ( vote :arg0 ( organization :name ( name :op1 un )  :wiki united_nations )  )  )  )  :mod economy :mod this )
thing :arg0-of ( major :arg1 ( market :location ( country :name ( name :op1 near :op2 east )  )  :mod revenue :op2-of ( and :op1 hand )  :poss ( country :mod particular :name ( name :op1 germany )  :wiki germany )  )  )  :name ( name :op1 gulf :op2 states )
contrast :arg0 care :arg1 ( affront :arg1 public :polarity - )  :arg2 ( elite :location ( country :mod ( language :name ( name :op1 arabic )  :wiki arabic_language )  )  :mod also )
play :arg0 this :arg1 role :time ( case :mod any )
side :arg0 ( entire :polarity - )  :arg1 ( relation :arg0 ( i :arg0-of ( want :arg0-of ( ascribe :arg1 this )  :arg1 ( much :degree too :mod-of weight )  :polarity - )  )  :arg1 this )
consider :arg0 ( country :name ( name :op1 germany )  :wiki germany )  :arg2-of ( play :arg0 nonetheles :arg1 it :mod-of ( important :mod-of role )  )
vote :arg1 ( country :name ( name :op1 palestine )  :wiki state_of_palestine )  :arg1-of ( vote :arg2-of ( abstain :arg0 ( country :arg0-of ( relation :arg1 such :arg1-of damage :arg2 ( country :name ( name :op1 usa )  :wiki united_states )  )  :arg1-of have :name ( name :op1 germany )  :wiki germany )  :arg1 ( decide :arg1 interrogative :mod important )  )  )
think :arg0 i :arg1 ( prevail :arg0 ( understand :arg1 ( position :mod ( country :name ( name :op1 germany )  :wiki germany )  )  :mod great )  :arg1 ( and :op1 ( country :name ( name :mod even :op1 usa )  :wiki united_states )  )  )  :location ( continent :name ( name :op1 europe )  :wiki europe )
think :arg0 ( i :arg1-of ( case :location ( matter :arg0-of ( regard :arg1 ( country :name ( name :op1 libya )  :wiki libya )  )  )  )  )  :arg1 ( fracture :domain this :domain-of dramatic )  :polarity -
earn :arg1 ( country :name ( name :op1 germany )  :wiki germany )  :arg2 ( respect :degree ( degree :mod certain )  )  :mod even :op1-of perhaps
signal :time ( after :time-of ( take :arg1 country :arg2 ( thing :arg0-of ( play :mod international )  )  :manner serious :op1-of ( and :op2 ( consider :arg0 all :arg1 interest )  )  )  )
opine :arg0 diverse :arg0-of ( regard :arg1 ( initiative :mod ( country :name ( name :op1 palestine )  :wiki state_of_palestine )  )  )  :arg1 ( continent :name ( name :op1 europe )  :wiki europe )
speak :arg0 ( country :arg0-of ( favor :arg1 veto )  :name ( name :op1 usa )  :wiki united_states )  :arg1-of clear :time ( hand :mod other )
opine :arg0 interrogative :arg1 ( nation :location ( continent :name ( name :op1 europe )  :wiki europe )  :quant many )  :arg1-of differ :arg3 ( and :arg0-of be :op1 ( country :name ( name :op1 usa )  :wiki united_states )  )
exist :arg1 ( differ :arg1 due :mod this )  :arg2 ( policy :mod domestic )  :time always
think :arg0 i :arg1 ( deal :arg0 ( government-organization :arg0-of govern )  :arg1 ( understand :arg0 ( situation :mod ( continent :name ( name :op1 europe )  :wiki europe )  :mod-of secret )  :op1-of ( person :name ( name :op1 obama )  :wiki barack_obama )  )  :mod great :mod actual )
here :arg0-of ( public :arg1 ( voice :arg1 ( position :mod this :op1 ( government-organization :arg0-of govern :arg1-of natural )  )  )  :arg2 ( politics :mod-of situation )  )
opine :arg1 ( differ :arg0-of ( appear :arg1 they :time always )  :arg1-of actual :domain-of ( vast :arg1-of ( believe :arg0 it )  :polarity - )  )
cause :arg0 quite :arg1 ( and :arg1-of ( look :arg0 you :arg1-of ( relation :arg0 ( person :arg0-of ( have-org-role :arg2 minister )  :name ( name :op1 obama )  :wiki barack_obama )  )  )  :op1 prime :op2 ( person :arg0-of ( enthuse :arg1 policy )  :name ( name :op1 obama )  :poss-of really :wiki barack_obama )  )  :polarity -
and :arg0-of ( reconcile :arg1 ( relation :arg0 hand :arg1 close :arg2 ( country :name ( name :op1 israel )  :wiki israel )  )  :domain-of ( difficult :arg1-of ( find :arg0 ( country :arg1-of do :name ( name :op1 germany )  :wiki germany )  :mode ( interrogative :mode-of ( position :poss ( partner :arg1 ( organization :name ( name :op1 eu )  :wiki european_union )  :mod ( important :degree most )  )  )  )  :op1-of ( and :op2 other )  )  )  )  :op1 ( country :name ( name :op1 usa )  :wiki united_states )
think :arg0 i :arg1 ( make :arg0 ( this :mod precise )  :arg1 ( difficult :beneficiary ( country :name ( name :op1 germany )  :wiki germany )  :domain thing )  )
and :op1 ( country :name ( name :op1 germany )  :wiki germany )  :op2 ( cohere :arg1 ( simple :arg1 it :degree little )  :arg1-of ( case :polarity - :time current )  )  :op3 ( policy :mod ( continent :name ( name :op1 europe )  :wiki europe )  :mod standardise )
and :op1 ( drive :arg0 they :arg1 matter :arg1-of instead-of :arg2 ( authority :arg1-of ( wide :arg0 thu )  )  :direction forward :source position )
do :arg0 they :arg1 this :arg2 ( thing :name ( name :op1 euro :op2 . )  )  :manner precise
urge :arg1 ( continent :name ( name :op1 europe )  :wiki europe )  :arg2 ( position :mod ( continent :name ( name :op1 europe )  :wiki europe )  :mod standardise )  :purpose-of ( role :arg0-of lead :arg1-of ( take :arg0 ( country :name ( name :op1 germany )  :wiki germany )  :arg1-of ( believe :arg0 i )  :time future )  )
task :arg1-of simple :beneficiary ( country :arg0-of ( relation :arg1 - :arg2 ( country :name ( name :op1 israel )  :wiki israel )  :topic-of account )  :name ( name :op1 germany )  :wiki germany )  :domain this
subject :arg0-of ( sensitive :time always )  :domain this
think :arg0 i :arg1 ( clear :arg1 ( country :name ( name :op1 germany )  :wiki germany )  :arg2 ( play :arg0 they :arg1 ( role :arg0-of ( depend :degree more :polarity - )  )  )  )  :mod yet
view :arg0 ( country :arg1-of do :name ( name :op1 germany )  :wiki germany )  :arg1 ( play :arg1 ( role :poss ( thing :arg0-of ( play :mod international )  :arg1-of ( want :arg0 ( country :arg0-of ( assume :arg1 ( role :mod lead )  )  :name ( name :op1 germany )  :wiki germany )  :mod actual :mode interrogative )  :mod important )  )  )
or :op1 ( find :arg0 ( country :name ( name :op1 germany )  :wiki germany )  :arg1 ( role :mod leadership :mod difficult )  :mod still :mode interrogative )
difficult :arg1-of ( find :arg2 ( play :arg1 ( role :mod ( prominent :degree more )  )  )  :mod still :op3-of ( and :op1 ( use :arg1 ( country :name ( name :op1 germany )  :wiki germany )  :mod still :polarity - )  :op2 ( continue :arg0 country :arg1 ( comfortable :arg1 ( obvious :arg1 reason )  :polarity - )  )  )  )
become :arg0 ( we :arg0-of ( look :arg1 ( crisis :mod euro )  )  :arg3-of ( assume :arg0 ( country :name ( name :op1 germany )  :wiki germany )  :arg1 ( role :mod ( prominent :degree more )  )  :arg2 various )  :poss-of ( time :mod every )  )  :arg1 ( feel :arg0-of ( oppose :arg1 ( country :name ( name :op1 germany )  :wiki germany )  )  )  :arg2 apparent :condition example
matter :arg1-of ( simple :arg0 this :arg2 ( country :name ( name :op1 germany )  :wiki germany )  :op1-of - )
problem :arg1-of same :domain ( this :time-of ( want :arg0 one :arg1 ( surround :arg1 ( country :mod hostile )  )  :polarity - )  )  :mod actual :mod old
much :mod-of ( more :arg1-of ( stand :arg0 ( country :name ( name :op1 usa )  :wiki united_states )  :mod this )  :degree-of ( difficult :mod-of ( position :poss ( country :name ( name :op1 germany )  :wiki germany )  )  )  )
opine :op2-of ( and :op1 ( diverse :degree most )  :op3 ( and :op1 receptive :op2 neighbour :op3 ( easy :arg0 this :arg1 it :polarity - )  )  )
diminish :arg0 ( influence :arg0 ( country :arg0-of ( fill :arg1 gap :mode interrogative )  :name ( name :op1 usa )  :wiki united_states )  )  :arg1 ( vacuum :arg1-of ( feel :arg0 ( organization :name ( name :op1 eu )  :wiki european_union )  :op2-of ( yet :op1 ( politics :mod ( continent :name ( name :op1 europe )  :wiki europe )  )  )  :polarity - :time current )  :mod this )  :arg1-of continue
great :mod-of ( role :arg1-of ( play :arg0 ( country :name ( name :op1 germany )  :wiki germany )  :manner simple )  )
vie :arg0 la :arg1 ( thing :degree-of ( popular :arg0 they :arg1 ( make :arg1 ( and :arg1-of ( comfortable :arg0 they :arg2-of ( resemble :arg1 it )  :mod even :mod even :polarity - :polarity - )  )  )  :arg2 c :degree ( more :mod even )  )  )  :arg2 expressive
and :arg0-of ( expert :arg1 ( person :mod politics :op1-of ( and :arg1-of ( come :manner together :purpose ( research :arg0 ( person :mod academia )  :arg1 ( thing :arg2-of ( challenge :arg1 ( community :mod transatlantic )  )  )  )  )  )  )  )  :op1 ( person :arg0-of ( have-org-role :arg1 ( organization :name ( name :op1 transatlantic :op2 academy )  :poss institute )  :arg2 ( director :location ( city :name ( name :op1 washington )  :wiki washington,_d.c. )  )  )  :arg1-of associate :name ( name :op1 stephen :op2 szabo )  )  :op2 ( continent :name ( name :op1 europe )  :wiki europe )  :op3 ( continent :name ( name :op1 north :op2 america )  :wiki north_america )
transatlantic :arg0-of ( relation :arg1 ( and :op1 ( person :arg0-of ( have-org-role :arg1 ( organization :name ( name :op1 german :op2 marshall :op3 fund )  )  :arg2 member :time he )  :name ( name :op1 szabo )  )  :op2 ( policy :mod ( country :name ( name :op1 germany )  :wiki germany )  )  :op3 ( policy :mod foreign :mod ( country :name ( name :op1 us )  :wiki united_states )  )  )  :arg2 also )
mean :arg1 sudden :arg2 ( and :op1 ( organization :name ( name :op1 &quot; )  )  :op2 ( person :arg1-of ( protect :arg1-of ( brand :arg2 ( country :name ( name :op1 china )  :wiki china )  )  )  :arg2-of ( become :arg1 ( country :name ( name :op1 china )  :wiki china )  )  :name ( name :op1 &quot; )  )  )
lauren :op2-of ( name :name-of ( thing :mod ( likewise :mod-of ( brand :domain ( person :domain-of polo :name ( name :op1 armani )  )  :mod famou :mod world )  )  )  :op1 ralph )
person :name ( name :mode interrogative :op1 armani :op2 polo )
whatsoever :domain ( do :arg0 ( one :arg0-of ( hide :arg1 ( brand :arg1-of ( register :manner official )  )  :location ( country :name ( name :op1 china )  :wiki china )  :op1-of behind )  )  :arg1 nothing :arg2 ( company :mod original :name ( name :mod this )  )  :op1-of full )
create :arg0 ( person :arg0-of ( sue :arg1-of ( provide :arg2 ( protect :arg1-of ( enjoy :mod nonetheles )  )  )  :polarity - )  :arg1-of actual :name name )
and :op1 ( clear :arg0 ( any :mod-of right )  :arg1 they :op1-of ( then :op1-of even )  :polarity - )
say :arg0 ( country :arg1-of ( become :arg2 ( person :arg0-of ( infringe :arg1 amr-unknown :arg1-of ( copyright :arg0 specialis )  :arg2 ( world-region :name ( name :op1 far :op2 east )  :wiki far_east )  )  :mod within :name ( name :op1 &quot; )  )  :time-of ( increase :arg0 it :arg1 ( difficult :degree more )  :arg2 ( firm :mod law )  )  )  :name ( name :op1 china )  :wiki china )  :arg1 lawyer :arg2 ( person :arg1-of ( protect :arg0 foreign :mod-of brand )  :name ( name :op1 &quot; )  )
every :mod-of ( week :arg0-of ( case :arg1 desk :arg2 land :mod new )  )
possible :arg0 ( letter :arg1-of ( require :arg0 ( copycat :quant all )  )  :mod additional :quant few )  :arg1 ( register :arg0 they :arg1 brand )
become :arg1 ( organization :arg0-of ( register :prep-in place )  :name ( name :op1 gucci )  )  :arg2 ( person :name ( name :op1 lu-gucci )  )  :manner simple :mod thu
apparel :mod ( sport :mod-of ( manufacture :arg0 ( country :arg0-of ( copy :arg1 ( manner :mod this )  :arg2 ( legally :mod also )  )  :mod-of company :name ( name :op1 germany )  :wiki germany )  :arg1 of :mod such )  )  :mod-of puma
open :arg0 ( person :name ( name :op1 pattloch )  )  :arg1 ( file :arg0-of ( contain :arg1 registration :instrument ( office :location ( country :name ( name :op1 peking )  )  :mod trademark )  )  )
fashion :arg1-of ( retail :arg0 ( person :mod ( country :mod-of ( company :arg0-of ( copyright :arg1 ( thing :name ( name :op1 ( df :mod ( person :name ( name :op1 zegna )  :name ( name :name-of brand )  )  )  :op2 puma )  )  :arg2 alias :topic-of ( date-entity :day 14 :month 9 :year 2010 )  )  :arg0-of ( help :arg1 there :manner name :mod also )  )  :name ( name :op1 china )  :wiki china )  )  :arg2 ( person :name ( name :op1 ermenegildo :op2 zegna )  )  )
and :op1 ( copy :arg1 ( property :mod intellectual )  :arg2-of ( champion :arg0 ( country :name ( name :op1 china )  :wiki china )  :arg1 world )  )  :op2 ( infringe :arg1 ( know :arg1 fact :mod well )  )
counterfeit :arg1 ( good :arg1-of ( exclusive :mod almost )  :arg1-of ( sell :arg0 ( store :mod ( department :mod ( level :mod multi-national )  )  )  )  )  :purpose ( major :arg1 city )
possible :arg1 ( take :arg1 ( he :arg0-of ( trademark :arg1 office )  :arg0-of ( protect :arg1 already :mod-of elsewhere )  :arg1-of ( have-rel-role :arg0 ( person :name ( name :op1 pattloch )  )  :arg2 client )  )  :arg1-of case :arg1-of ( grant :arg2 ( country :mod-of company :name ( name :op1 china )  :wiki china )  )  :arg1-of ( differ :arg0 howev :arg2 ( behalf :mod-of of )  :mod slight )  :arg1-of ( use :arg0 he :arg2 name :mod ( right :mod-of ( official :mod full )  )  )  :op1-of ( against :mod action :mod-of ( fact :mod that )  )  )
bang :arg1 ( call :arg0 ( country :name ( name :op1 china )  :wiki china )  :arg1 this :arg2 ( brand :mod passenger )  )
bang :arg1 ( base :arg1 word )
refer :arg0 this :arg1 ( woman :arg0-of ( latch :arg1 ( man :mod rich :op1-of onto )  )  )
unaware :compared-to ( wrong :mod any )  :domain ( authority :mod ( country :name ( name :op1 china )  :wiki china )  )
and :op1 ( harm :arg1 must :mod this )  :op2 business :op3 ( fight :arg0 we :arg1 ( thing :arg2-of ( challenge :arg1 ( person :name ( name :op1 &quot; )  )  )  )  :op1-of ( against :op2 it )  )
disappear :arg0 uniqueness :arg1 ( damage :arg0 image :arg1 enormous )  :arg1-of ( water-down :arg0 brand :arg2 it :direction down )
and :op1 ( loss :mod finance )  :op2 ( process :arg1 ( product :arg1-of ( case :manner especially )  :mod expensive :mod flagship )  :arg1-of ( cost :arg0 million :arg2 ( amount :arg1-of affect :mod branch )  )  )
say :arg0 ( information :source ( organization :mod ( company :mod ( research :arg0 ( item :mod luxury )  :arg1 market :op1-of ( volume :quant-of ( monetary-quantity :unit euro )  )  )  )  :name ( name :op1 clsa )  )  )  :arg1 ( market :domain ( country :arg1-of ( grow :arg0 15 :manner ( fast :degree most )  :op1-of and )  :name ( name :op1 china )  :wiki china )  :mod ( large :degree most )  )
and :op1 ( cost :arg0 ( deletion :mod ( entry :arg1-of dubious )  )  :arg1 ( penny :arg1-of ( achieve :arg0 ( registry :arg1-of trademark )  :domain-of difficult )  :mod pretty )  )
possible :arg1 ( last :arg0 ( outcome :mod ( certain :polarity - )  )  :arg1 process :arg2 ( temporal-quantity :quant 9 :unit year )  )
cause :arg0 ( court :arg0-of ( dismiss :arg1 case )  )  :arg1 ( period :arg1-of ( long :time ( after :time-of ( report :arg0 ( person :name ( name :op1 pattloch )  )  :arg1 instance :op1-of of )  )  )  :mod-of ( time :time-of ( raise :arg1 ( market :arg1-of ( object :name name )  :arg1-of become :mod reality )  )  )  )
say :arg0 ( person :name ( name :op1 pattloch )  )  :arg1 ( possible :arg1 ( unlucky :domain ( complainant :arg3-of ( pay :arg0 he :arg1 ( money :arg1-of ( infringe :arg2 ( trademark :arg1 plagiarist :location ( country :name ( name :op1 china )  :wiki china )  )  )  )  :mod even )  )  )  )
prevail :arg0 law :arg1 jungle :location here :time sometimes
relate :arg0 ( case :arg1 famou )  :arg1 ( element :mod graphic )  :mod also
pump :arg0 ( organization :arg0-of ( manufacture :arg1 ( construct :arg1 ( machinery :arg1-of ( manufacture :arg0 ( organization :arg1-of ( battle :arg1-of legal :arg1-of ( lose :arg0 ( organization :name ( name :op1 daimler )  )  :time ( date-entity :year 2009 )  )  )  :name ( name :op1 sany )  )  )  )  )  )  :arg1-of ( acquire :arg0 company :time recent )  :arg1-of concrete :name ( name :op1 putzmeister )  )  :arg1 ( country :name ( name :op1 germany )  :wiki germany )
permit :arg1 ( use :arg0 ( company :mod ( country :name ( name :op1 china )  :wiki china )  )  :arg1 ( emblem :arg0-of ( resemble :arg2 ( star :mod ( thing :name ( name :op1 mercedes )  )  )  )  )  )  :time ( today :mod even )
and :arg0-of ( dispute :arg1-of ( arbitrate :op1-of ( and :arg1-of ( use :arg0 ( thing :name ( name :op1 volvo :op2 - :op3 purchaser :op4 geely )  )  :mod original :op1-of ( and :op2 blue :op3 ( resemble :arg0 ( logo :mod white )  :arg2 logo )  )  )  :op2 ( force :arg2 change )  )  )  )
look :arg1 ( direction :mod other )  :arg2-of ( use :arg1 ( crocodile :mod famou )  :location ( city :name ( name :op1 hong :op2 kong )  :wiki hong_kong )  :op3-of ( and :op1 ( lose :arg0 ( organization :arg0-of fashion :mod house :name ( name :op1 lacoste )  )  :arg1 ( suit :location ( country :name ( name :op1 china )  :wiki china )  )  )  :op2 ( country :name ( name :op1 singapore )  :wiki singapore )  :poss-of copycat )  )
unaware :compared-to ( wrong :mod any )  :domain ( authority :mod ( country :name ( name :op1 china )  :wiki china )  )
and :op1 ( staff :arg1 ( date-entity :year 2010 )  :arg1-of ( limit :arg0 ( country :location-of ( office :arg0-of acknowledge :mod ( trademark :arg1 ( organization :arg1-of bottleneck :name ( name :op1 ctmo )  )  )  )  :name ( name :op1 peking )  )  )  )  :op2 equipment
report :arg0 year :arg1 thing :arg1-of ( return :arg1-of ( follow :arg0 past )  :arg1-of ( work :arg0 emergency :arg1-of flow :arg2-of ( regard :arg0 this :arg1 situation )  )  :arg1-of normal )
appeal :arg1 thu :arg3-of ( proceeding :arg1 ( stock :arg1-of ( reduce :arg2 ( percentage-entity :value 22 )  )  )  :arg1-of ( process :polarity - )  )
close :arg0 ( more :quant ( percentage-entity :value 75 )  )  :arg1 ( case :arg0 ( previous :mod-of year )  :arg1 almost :mod such )
nonetheles :arg0-of ( resolve :arg1 office :arg1-of ( wait :arg0 ( appeal :mod still )  )  )
remedy :arg1 ( expensive :degree very :domain this )
impose :arg0 figure :arg1 often :arg2 ( case :location ( country :name ( name :op1 china )  :wiki china )  )
third :arg1-of ( trademark :arg1-of ( protect :arg0 almost :purpose-of ( application :arg1-of ( submit :arg2 ( organization :name ( name :op1 ctmo )  )  :extent more :time ( year :mod past :mod-of ( date-entity :year 2010 )  )  )  :quant more )  )  :quant 1.4 )
inform :arg0 ( person :arg0-of lead :mod globe )  :arg1 ( authority :mod ( country :arg0-of ( succeed :arg1 ( trademark :arg1 ( application :mod new )  )  :arg3-of ( mean :arg1 this :op2-of ( and :op1 record )  )  )  :name ( name :op1 china )  :wiki china )  )  :arg1-of ( come :arg0 ( time :mod tenth )  )
apply :arg1 ( inventory :arg1-of ( trademark :arg1-of ( valid :arg2 ( total :arg1 number )  )  )  )  :arg1-of ( same :arg0 5.5 )
receive :arg1 ( monetary-quantity :quant ( 1.8 :quant-of fee )  :unit yuan )  :time ( date-entity :year 2011 )
mean :arg1 this :arg1-of average :arg2 ( put :arg2 simple )  :compared-to ( cost :arg0 ( apply :mod each )  :arg1 ( or :op1 ( monetary-quantity :unit yuan )  :op2 ( monetary-quantity :quant 160 :unit euro )  )  )
appeal :arg0 ( person :arg0-of ( case :arg1 business :arg2 family :time-of ( see :arg1 amount :arg1-of possible )  )  :name ( name :op1 freudenberg )  )  :arg0-of ( cost :arg1 this :arg2 many )  :arg1 ( apply :arg0 ( country :name ( name :op1 germany )  :wiki germany )  )
contest :arg0 group :arg1 ( plagiarist :mod ( country :name ( name :op1 china )  :wiki china )  )  :arg2 ( more :op1 ( temporal-quantity :quant 7 :unit year )  )
of :arg0-of ( copy :arg1 motorcycle :arg2-of ( manufacture :arg0 company :arg1 ( vehicle :quant ( part :arg1-of ( expose :arg0 ( do :arg0 ( country :name ( name :op1 germany )  :wiki germany )  :arg1 fact )  :arg1-of manage )  )  )  :mod ( law :polarity - )  )  )
copycat :arg0-of ( secure :arg1 ( right :beneficiary ( brand :mod ( person :name ( name :op1 freudenberg )  )  )  :mod ( country :name ( name :op1 china )  :wiki china )  )  :mod still )
say :arg0 ( person :arg0-of ( have-org-role :arg1 ( organization :name ( name :op1 board :op2 of :op3 management )  )  :arg2 chairman )  :name ( name :op1 hanno :op2 wentzler )  )  :arg1 ( something :arg1-of ( miss :arg0 we :arg2 ourselv :purpose ( protect :arg0 ( specialiti :location ( city :name ( name :op1 munich )  :wiki munich )  :mod chemical )  :arg1 ( name :name-of family )  :arg1-of ( possible :polarity - )  :location ( country :name ( name :op1 germany )  :wiki germany )  )  )  :domain this )
appeal :arg0 ( company :arg1-of ( base :arg0 ( city :arg1-of ( dismiss :arg0 ( office :arg1-of ( trademark :time then )  )  :mod also )  :name ( name :op1 munich )  :wiki munich )  )  )
prove :arg1 ( person :arg0-of ( continue :arg1 ( contest :arg0 ( party :arg0-of oppose )  :arg1 matter :arg2 ( day :mod this )  )  )  :name ( name :op1 freudenberg )  )  :arg2 right :location ( instance :mod next :quant 2 )
care :arg1 ( attend :arg1-of ( pay :arg0 you )  )  :degree extreme
pend :arg1 matter :time ( before :op1 ( government-organization :name ( name :op1 supreme :op2 court )  :wiki supreme_court_of_new_south_wales )  )  :time now
conclude :arg0-of ( bring :arg1 matter :arg2-of ( confident :arg1 ( person :name ( name :op1 wentzler )  )  )  :op1-of ( and :op2 ( praise :arg1 ( professionalism :poss court )  )  )  )  :mod positive
say :arg0 he :arg1 ( and :op1 ( expensive :mod-of time :mod-of ( take :arg0 extreme :arg1 money :arg1-of ( process :op1-of ( and :op2 nerve )  )  )  )  :quant lot )  :mod also
possible :arg1 ( calculate :arg1 ( cost :arg1 ( old :quant ( temporal-quantity :unit century )  )  :arg1-of ( look :arg0 ( archive :arg1 company :location even )  :location record :purpose ( provide :arg1 proof )  )  :arg1-of internal )  :manner bare )
offer :arg0 unsuccessfully :arg1 ( oppose :arg0 ( 5 :quant-of ( temporal-quantity :unit year )  )  :arg1 ( 6 :arg1-of high :mod-of ( figure :op1-of ( sum :arg0-of ( settle :arg1 ( monetary-quantity :unit euro )  )  )  )  )  :op1-of party )
say :arg0 worth :arg1 ( person :name ( name :op1 &quot; )  )  :condition ( show :arg0 this :arg1 ( amr-unknown :degree-of ( much :mod-of this )  )  )
danger :arg0-of ( threaten :arg1 ( spill :arg0 ( world-region :name ( name :op1 far :op2 east )  :wiki far_east )  :arg1 ( back :location ( continent :name ( name :op1 europe )  :wiki europe )  )  )  :mod even )
particularly :arg2-of ( secure :arg0 imitator :arg1 name :time there )  :time-of ( unprotect :mod-of brand )
want :arg0 ( and :op1 shoe :op2 leather )  :arg1 ( register :arg0 ( manufacture :arg0 ( country :name ( name :op1 germany )  :wiki germany )  :arg1 ( country :name ( name :op1 china )  :wiki china )  )  :arg1 ( label :mod ( person :name ( name :op1 freudenberg )  )  )  :arg2 example )
prevent :arg1 register :arg1-of ( manage :manner nonetheles :op2-of ( yet :op1 ( group :arg0-of ( vacate :arg1 ( sector :domain this :mod business )  :arg1-of long )  )  )  )
say :arg0 ( you :arg0-of ( pay :arg1 ( attend :arg0 extreme :arg1-of care )  )  )  :arg1 ( person :name ( name :op1 &quot; )  )
conduct :arg0 ( country :name ( name :op1 china )  :op1-of both :wiki china )  :arg1 business :arg1-of ( care :arg0 ( company :arg1-of ( advise :arg0 ( and :op1 he :op2 ( person :name ( name :op1 pattloch )  )  )  )  )  :degree very )
say :arg0 ( country :arg0-of ( rely :arg1 ( recommend :arg0 foreign :arg1 everything :arg1-of ( register :arg0 also )  )  :arg1-of ( suffice :arg0 it :mod right :polarity - )  :arg1-of ( trademark :arg0 international )  )  :name ( name :op1 china )  :poss-of ( way :mod any )  :wiki china )  :arg1 ( protect :arg1 worthy )
possible :arg1 ( expensive :degree ( more :compared-to ( register :arg1 otherwise :mod-of fee )  :mod much )  :domain cost )
hurdle :arg2-of ( loose :arg0 ( person :arg0-of ( use :arg1 name :purpose-of ( fee :arg1-of ( pay :arg0 they :frequency probable )  :arg1-of oppose :mod ( license :arg1 ( actual :arg1 fact )  )  :mod party )  )  :name ( name :op1 freudenberg )  )  :arg1 ( drama :arg1-of ( trademark :arg1-of ( explain :arg0 ( person :name ( name :op1 wentzler )  )  )  )  )  )  :mod final
or :op1 ( force :arg1 ( we :time ( sector :location-of market :mod respective )  )  :arg2 alternatively )
stomp :arg0 ( disease :mod-of ( day :time-of world )  :name ( name :op1 aids )  :wiki hiv/aids )  :arg1 sing :arg1-of help
and :op1 ( rehearse :arg0 choir )  :op2 ( delight :arg1 ( person :arg1-of ( orphan :mod ( disease :name ( name :op1 aids )  :wiki hiv/aids )  )  )  :location ( country :name ( name :op1 swaziland )  )  )
overcome :arg0 ( link :duration history )  :arg3 ( more :degree far :degree-of ( distance :arg1 ( distance-quantity :unit kilometer )  )  )
pump :arg0 lady :arg1 shoe :op1-of ( and :arg1-of attempt :op2 ( man :arg0-of ( beat :arg1 ( floor :arg1-of parquet :op1-of ( and :op2 ( quick :arg1 ( that :mod just )  )  )  )  )  :arg0-of ( find :arg1 ( boot :arg0 cowboy :arg1 basketball :arg1-of ( stamp :arg0 of )  )  :manner loafer )  )  :quant all )
2 :quant 1 :quant-of ( 3 :quant-of 4 )
swell :arg0 ( person :arg0-of sing :poss-of voice )  :arg1 ( and :op1 alto :op2 bas :op3 tenor :op4 soprano )  :op1-of ( and :op2 surge :op3 beguile :op4 ( haunt :arg1 ( then :mod only )  )  )  :time slow
and :op1 ( rise :arg0 ( he :arg0-of ( gesture :arg1 shoe :arg1-of smooth :mod wild :time yet )  :arg0-of ( bring :arg1 ensemble :mod together )  )  :arg1 ( person :name ( name :op1 fiete :op2 hopf )  )  :arg2 ( conductor :mod ( old :quant ( temporal-quantity :quant 29 :unit year )  )  )  :mod almost )
and :op1 ( evening :domain it )  :op2 music :op3 ( practise :arg0 ( organization :name ( name :op1 imbongi :op2 choir )  )  :arg1 ( song :mod new )  :location ( room :poss ( organization :name ( name :name-of ( country :name ( name :op1 heidelberg )  :poss monday )  :op1 institute :op2 for :op3 medical :op4 psychology :op5 in )  )  )  )
range :arg1 ( person :arg0-of ( sing :arg1 fifteen )  :arg1-of age )  :arg2 ( man :mod ( maintain :arg0 ( 23 :quant-of ( temporal-quantity :quant 69 :unit year )  )  :arg1 old )  )  :arg3 ( geneticist :mod human )
mean :arg0 ( by :op1 obani )  :arg1 ( each :arg0-of ( differ :arg1 text :arg2 extreme :op2-of ( and :op1 voice )  :polarity - )  :arg0-of ( speak :arg1 eleven :arg2 ( person :arg2-of ( mean :arg1 zulu :mod that )  :mod million :op1-of ( and :op2 ( country :name ( name :op1 south :op2 africa )  :wiki south_africa )  :op3 ( country :name ( name :op1 botswana )  :wiki botswana )  :op4 lesotho :op5 malawi :op6 ( country :name ( name :op1 mozambique )  :wiki mozambique )  :op7 ( part :mod-of swaziland :mod-of of )  )  )  :arg3 ( language :mod foreign )  )  )  :arg2 ( piece :arg1-of simple )
help :arg1 ( help :arg0 other )
say :arg0 ( organization :name ( name :op1 united :op2 nations )  :part ( program :arg1-of ( battle :arg2 ( disease :name ( name :op1 aids )  :wiki hiv/aids )  )  )  :wiki united_nations )  :arg2-of ( infect :arg1 ( person :arg1-of ( 34 :part-of around )  )  :location world :location ( around :op1 ( disease :name ( name :op1 hiv )  :wiki hiv/aids )  )  )  :location ( estimation :part unaid )
live :location ( country :name ( name :op1 south :op2 africa )  :wiki south_africa )  :purpose this
orphan :arg1 ( person :location ( country :name ( name :op1 swaziland )  )  )  :mod ( disease :name ( name :op1 aids )  :wiki hiv/aids )
positive :domain ( percentage-entity :part-of population :value ( 40 :op1-of ( more :mod meanwhile )  )  )  :mod ( disease :name ( name :op1 hiv )  :wiki hiv/aids )
voice :arg0-of ( find :arg1 ( sponsor :arg0 ( person :arg1-of ( orphan :arg0 ( village :poss ( country :name ( name :op1 esitjeni )  )  )  :mod ( disease :name ( name :op1 aids )  :wiki hiv/aids )  )  :quant 180 )  :location ( country :name ( name :op1 germany )  :wiki germany )  )  )  :arg1 ( organization :name ( name :op1 africa :op2 association )  )
attend :arg0 ( 70 :domain this )  :arg1 ( school :mod-of secondary )
possible :arg1 ( become :arg1 you :arg2 ( sponsor :arg0 15 )  :arg3 ( monetary-quantity :op2-of ( or :op1 20 )  :unit euro )  )  :manner ( temporal-quantity :unit month )
guarantee :arg0 this :arg1 ( money :mod child )  :purpose ( and :op1 school :op2 ( thing :arg1-of ( uniform :mod school )  )  :op3 ( meal :arg1-of warm )  :op4 ( country :location-of ( day :mod each )  :name ( name :op1 gogo :op2 centre )  )  )
mean :arg0 ( organization :name ( name :op1 imbongi )  )  :arg1 ( or :op1 storytell :op2 worshipp )
contrast :arg1 ( possible :arg1 ( speak :arg0 1 :arg1 bantu :arg3 language :manner fluently )  )  :arg2 ( possible :arg1 ( sing :arg0 they :arg1 - :arg2 ( region :mod this )  )  )
mean :arg0 ( song :arg1-of ( practise :arg0 choir )  :op1-of ( almost :quant-of ( temporal-quantity :unit year )  )  )  :arg1 ( continent :name ( name :op1 africa )  :wiki africa )  :op3-of ( and :arg1-of ( bring :arg0 they )  :op1 then :op2 they :op2-of ( and :location-of ( language :time ( soft :arg0 foreign :arg1 this )  )  :op1 now :op3 ( come :arg0 back :arg1 they :op1-of original )  )  )
lie :arg1 ( village :arg2-of ( rely :arg0 away :arg1 ( power :poss ( choir :mod ( country :name ( name :op1 germany )  :part north :wiki germany )  )  )  )  )  :arg2 ( west :part-of ( kingdom :mod swaziland )  )  :purpose ( flight :arg1 vocal :mod ( distance-quantity :unit kilometer )  )
infect :arg1 ( percentage-entity :mod forty )
straw :consist ( hut :op2-of ( and :op1 ( mud :arg1-of simple :domain some )  :op3 ( majority :op2-of ( and :op1 ( live :arg0 person :arg1 still :location there :time around )  :op3 child )  )  )  )
virus :arg2-of ( succumb :arg0 they :arg1 ( person :arg0-of ( have-rel-role :arg1 - :arg2 parent )  )  )  :mod ( disease :name ( name :op1 hiv )  :wiki hiv/aids )  :mod ( more-than :op1 300 )
expectancy :arg1-of ( low :compared-to ( world :poss-of ( rate :mod ( disease :arg1-of ( infect :arg0 region )  :name ( name :op1 hiv )  :wiki hiv/aids )  )  )  :degree most )  :mod life :op1-of ( and :arg1-of ( say :arg0 ( organization :name ( name :op1 unicef )  )  :manner ( suffer :arg0 ( country :name ( name :op1 swaziland )  :quant all )  :arg1 ( illness :arg1-of ( foreshadow :arg0 you :arg2 ( country :name ( name :op1 esitjeni )  )  :mod small )  )  :arg1-of ( high :degree most )  )  )  )
practise :arg0 ( population :arg1-of ( risk :arg1-of ( reduce :arg1-of prove )  :arg2 ( contract :arg0 half :arg1 virus )  )  )  :arg1 circumcision :degree bare
and :op1 ( percentage-entity :op2-of ( more-than :op1 forty )  )  :op2 ( carry :arg0 ( person :location ( country :name ( name :op1 swaziland )  )  )  :arg1 ( virus :name immunodeficiency )  )  :op3 ( die :arg1 you )  :op4 ( rare :arg0 thirti :arg1 mid :manner mean :polarity - )
contrast :arg1-of educate :arg2 ( lack :arg1 ( care :arg0 early :mod parental )  :arg2 ( only :polarity - )  :manner-of ( see :arg0 food :arg1 ( child :quant many )  :arg1-of ( clothe :arg0 ( everything :mod else )  )  :arg2-of ( contrast :arg0 practical :arg1 ( visit :arg0 ( organization :arg0-of ( trip :arg1 group :time ( date-entity :mod-of ( continent :name ( name :op1 africa )  :wiki africa )  :year 2005 )  )  :name ( name :op1 choir )  )  :arg1 village )  )  :medium street :op2-of ( and :op1 foremost )  )  )
opportunity :mod ( any :arg2-of ( leave :arg0 school :arg1 certificate :op1-of ( country :mod poor :mod particular )  )  )  :mod bare
commit :arg1 ( few :quant-of ( monetary-quantity :unit euro )  )  :arg1-of ( private :arg0 day )  :arg2 ( send :arg0 individual :arg1 child :arg2 school :op1-of ( and :op2 ( enable :arg0 ( meal :arg1-of ( warm :arg0 initial )  )  :arg1 ( slash :op1 she )  )  )  :time year )
voice :arg0 late :arg1 ( look :arg0 since :arg1 ( person :arg1-of ( orphan :arg0 ( disease :name ( name :op1 aids )  :wiki hiv/aids )  )  )  :arg1-of ( establish :arg0 choir )  :degree then :mod ( just :mod-of ( level :mod professional :mod almost )  :mod-of year )  :op1-of after )  :arg2 ( continent :name ( name :op1 africa )  :wiki africa )
fact :topic ( infect :arg1-of ( transmit :time sexual )  )
disease :arg1-of ( transmit :arg0 ( most :degree-of important )  )  :domain amr-unknown :mod sexual :mode interrogative
include :arg1 ( and :op1 syphili :op2 chlamydia :op3 gonorrhoea )  :arg2 ( thing :name ( name :op1 bacterial :op2 stis )  )
and :op1 ( disease :domain ( sti :mod common :mod viral )  :name ( name :op1 hiv )  :wiki hiv/aids )  :op2 ( virus :mod ( papilloma :mod human )  )  :op3 ( genitali :mod herp )  :op4 hepatiti
belong :arg0 ( and :op1 crab :op2 scabi )  :arg1 ( sti :mod parasitic )
affect :arg1 ( group :domain amr-unknown :mod main :mode interrogative )
occur :arg0 ( and :op1 syphili :op2 gonorrhoea )  :arg1 ( other :mod-of ( man :prep-with-of intercourse )  )  :manner man :mod primary
understand :arg0 ( institute :arg0 ( person :arg0-of ( contact :arg1 man :instrument ( mean :arg0-of ( case :arg1 syphili :arg1-of ( report :arg0 4 )  :quant all )  :arg0-of ( transmit :arg1 ( country :name ( name :op1 germany )  :wiki germany )  )  )  :mod sexual )  :name ( name :op1 robert :op2 koch )  )  :arg1 5 )
fungal :arg2-of ( transmit :arg0 ( disease :arg1-of ( occur :arg0 ( and :op1 ( infect :arg1 chlamydia )  :op2 trichomoniasi :op3 candidiasi :op4 gonorrhoea :op5 virus )  :arg1-of frequent )  )  :arg1 ( papilloma :mod human )  :op1-of ( heterosexual :mod-of adult )  :time sexual )
newly :manner-of ( contract :arg0 ( group :mod this )  :arg1 ( case :arg1 ( disease :arg1-of find :name ( name :op1 hiv )  :wiki hiv/aids )  :arg2 ( spread :arg0 ( adult :location ( country :mod this :op1-of and )  :mod heterosexual )  :arg1 ( disease :name ( name :op1 hiv )  :wiki hiv/aids )  :arg1-of ( low :mod relative )  )  )  :quant ( around :op1 ( percentage-entity :value 20 )  )  )
population :mod-of ( group :consist-of ( person :mod young )  :mod other )  :topic-of ( infect :arg1 chlamydia :domain-of ( common :degree ( more :mod much )  )  )
and :op1 ( say :arg0 ( survey :arg0 15 :arg1 ( continent :name ( name :op1 europe )  :wiki europe )  )  :arg1 ( affect :arg0 ( quarter :mod ( infect :arg1 25 :quant all )  :quant 3 )  :arg1 ( person :mod young )  :arg2 age )  )
find :arg0 ( person :mod young )  :arg1 ( virus :mod ( papilloma :mod human )  )  :arg1-of frequent :location ( country :mod this )  :mod also
develop :arg0 ( number :mod infect )  :manner amr-unknown :mode interrogative
notifiable :domain ( disease :arg1-of ( transmit :arg2 - )  :mod sexual :quant all )
say :arg0 ( institute :arg0 ( person :name ( name :op1 robert :op2 koch )  )  :arg1 ( date-entity :year 2011 )  )  :arg1 ( double :arg0 more :arg1 ( number :mod ( infect :arg2 syphili )  )  :arg2 case :purpose case :time ( date-entity :year 2001 )  )
newly :manner-of ( contract :arg1 ( case :arg1 ( disease :domain ( since :op1 ( date-entity :year 2007 )  )  :name ( name :op1 hiv )  :wiki hiv/aids )  :quant ( number :arg1-of decline )  )  )
case :arg1 ( around :op1 ( date-entity :year 2011 )  )
tenth :domain ( this :domain-of ( few :compared-to ( year :mod previous )  )  )  :quant around
indicate :arg0 symptom :arg1 ( disease :arg0-of ( transmit :time sexual )  )  :mode interrogative
cause :arg0 disease :arg1 ( ulcer :location ( area :arg1-of ( discomfort :arg1-of urinate )  :op1-of ( and :op2 discharge :op3 ( pain :arg1 infectiou :arg1-of low )  :op4 ( blister :op2-of ( or :mod abdominal :op1 genital :op3 wart )  )  )  )  )  :arg1-of possible
cause :arg0 ( they :arg1-of ( remain :arg0 undetect :degree thus-far )  )  :arg1 ( or :op1 ( pain :polarity - )  :op2 ( symptom :mod other :mod any )  )  :time often
possible :arg1 ( protect :arg0 you :arg1 yourself :manner amr-unknown )  :mode interrogative
possible :arg1 ( reduce :arg0 condom :arg1 ( risk :arg2 contraction )  :time ( offer :arg0 they :arg1 ( protect :arg2 ( percentage-entity :value 100 )  )  :polarity - )  )
transmit :arg0 occasional :arg1 ( disease :quant ( pathogen :arg1-of ( pass :arg1-of ( possible :arg0-of ( cause :arg1 this )  :mod also )  :manner ( infect :arg1 smear :op1-of ( and :op2 ( contact :arg0 sexual :arg1 bodily :manner close )  )  )  )  )  )
recommend :arg0 ( and :op1 foremost :op2 ( person :arg1-of expert )  :op3 ( change :arg1 ( partner :mod sexual )  :arg1-of frequent )  )  :arg1 ( undergo :arg2 ( examine :arg1 person :arg1-of regular )  )
possible :arg1 ( and :arg1-of ( diagnose :time early )  :op1 cure :op2 ( avoid :arg0 ( consequence :arg1-of long )  :arg1 ( majority :quant-of sti )  )  )
add :arg0 all :arg1 ( money :arg0-of ( donate :mod sponsorship :op1-of ( through :op1-of ( and :op2 ( mean :arg1 ( raise :arg0 choir :arg1 fund :location ( across :op1 ( whole :mod-of ( country :name ( name :op1 germany )  :wiki germany )  )  )  )  :polarity - )  )  )  )  )
say :arg0 ( country :name ( name :op1 &quot; )  )  :arg1 chairperson :arg2 ( person :arg1-of ( associate :arg0 of )  :arg2-of ( send :arg0 we :arg1 ( monetary-quantity :unit euro )  :arg1-of ( total :arg0 in )  :op1-of around :time already )  :name ( name :op1 &quot; )  )
and :op1 ( assure :arg1 self )  :op2 assertive :op3 woman :op4 ( manage :arg0 ( person :name ( name :op1 zodwa :op2 dlamini )  )  :arg1 money :arg2 ( country :name ( name :op1 germany )  :wiki germany )  :location village )
make :arg0 she :arg1 ( sure :arg0 ( person :arg1-of orphan :poss-of ( accommodation :mod good )  )  :arg1 grandmother )  :arg2 example
pillar :domain ( person :arg0-of ( call :arg1 ( lady :mod old )  )  :name ( name :op1 gogos )  )  :poss village
punctually :arg1-of ( live :arg0 ( person :arg1-of orphan :quant 14 )  :op1-of ( and :op2 ( provide :arg1 roof :arg2 ( person :arg0-of ( head :arg1 ( child :arg0-of ( uniform :arg1 school )  :poss-of ( class :mod school )  )  )  )  )  :op3 ( sure :arg1 some )  )  )  :mod-of ( every :mod-of day )
than :mod ( more :mod-of ( child :arg1-of ( hunger :arg0 ( person :arg0-of ( cook :arg1 2 )  :arg0-of cook :arg1-of ( associate :arg0 ( anyone :arg0-of ( arrive :arg1 ( thing :arg0-of ( single :arg1 woman )  :arg1-of ( same :arg2 earn :op1-of ( from :mod salary )  )  :arg2-of ( shelter :arg0 anyone :arg1 amr-unknown )  :mod at :mod-of khanyisile :polarity - )  :arg2 left )  )  )  )  )  :mod 200 :mod ( every :mod-of day )  )  )
voice :arg0 addition :arg1 ( school :arg0-of ( build :arg1 ( and :arg1-of ( organize :arg0 ( health :arg0-of ( organize :arg1 many )  )  )  :arg1-of ( coop :arg0 chicken )  :op1 together :op2 ( test :arg0 village :arg1 ( disease :name ( name :op1 hiv )  :wiki hiv/aids )  )  )  :location 2 )  :arg1-of ( sew :arg0 ( establish :arg1 ( continent :name ( name :op1 africa )  :wiki africa )  )  )  )
grant :arg1 wrap :arg2 ( person :arg0-of ( keep :arg1 thing :arg1-of clear :instrument ( way :mod ( good :degree most )  )  )  )  :arg2-of ( take :arg0 ( country :mod entire :op1-of ( throughout :location-of ( illness :topic-of attitude )  )  )  :arg1 ( nothing :domain this )  )
king :poss-of ( wife :quant 14 )
say :arg0 ( disease :name ( name :op1 aids )  :wiki hiv/aids )  :arg1 ( person :arg0-of ( cause :arg1 ( associate :arg0 it :arg1 sexuality )  )  :name ( name :op1 &quot; )  )  :arg2-of ( taboo :arg0 absolute :arg1 subject )
king :mod-of ( this :domain-of ( strange :beneficiary ( country :poss-of ( wife :quant 14 :quant official )  )  :mod actual )  )
monarch :arg2-of ( have-org-role :arg0 ( person :mod last :mod absolute )  :arg1 ( country :arg3-of ( know :arg1 ( lifestyle :arg1-of ( excessive :arg0 ( thing :arg0-of ( have-org-role :arg2 king )  :name ( name :op1 mswati :op2 iii )  )  )  )  )  :name ( name :op1 sub-saharan :op2 africa )  )  )
place :consist-of democracy
possible :arg1 ( attribute :arg0 ( number :quant-of ( decade :unit-of temporal-quantity )  :time past )  :arg1 ( fact :arg0-of ( quick :arg1 ( spread :arg1 ( virus :mod ( disease :name ( name :op1 hiv )  :wiki hiv/aids )  :op1 ( factor :mod other )  )  )  )  )  :arg2 ( lifestyle :arg1-of ( sanction :manner official )  :mod this )  :mod also )
factor :domain-of ( number :mod large :quant-of ( person :arg0-of ( carry :arg1 virus :path ( across :op1 country )  )  :arg0-of ( work :arg2 ( person :arg0-of migrate )  )  )  )  :mod another
contrast :arg1 ( use :arg1 hardly :arg2 ( free :arg1-of condom :arg1-of ( say :arg0 ( person :name ( name :op1 there )  )  :arg2 they )  :arg1-of corner :arg2 every )  )
prescribe :arg0 culture :arg1 ( otherwise :mod-of flesh )  :arg2 flesh
and :op1 melancholy :op2 ( spirit :arg0-of ( fight :arg1 ( know :arg0 ( continent :poss-of ( tip :mod south )  :prep-with-of many )  :arg1 ( or :op1 ( temporal-quantity :quant 3 :unit year )  )  :mod still :source ( newspaper :name ( name :op1 the :op2 times )  :poss apartheid :wiki los_angeles_times )  )  )  )  :op3 confidence :op4 ( esteem :arg0 2 :arg1 ( self :arg1-of ( black :arg0 every )  )  :op2-of ( and :op1 ( sing :arg0 ( choir :arg0-of ( travel :arg1 ( exchange :arg1 culture :arg1-of promote )  :arg4 ( country :name ( name :op1 southern :op2 africa )  )  )  )  :arg1 song )  )  )
contrast :arg1 ( bring :arg0 ( degree :degree-of recognize :mod this )  :arg1 ( morale :mod only )  )  :arg2 ( shed :arg0 ( soldier :mod ( border :arg2 ( face :arg0 ( person :arg0-of ( sing :arg1 song :medium ( language :arg1-of ( black :arg0 - )  )  )  :mod white )  :arg1 grim )  )  :mod some )  :arg1 ( tear :quant few )  :mod even :op2-of ( and :op1 joy :poss-of ( bus :mod full )  )  )
lead :arg0 journey :arg2 ( country :location-of ( visit :arg0 ( person :arg0-of sing :arg0-of sponsor )  :arg1 child )  :name ( name :op1 esitjeni )  )  :time always
know :arg0 map :arg1 more :condition ( possible :arg1 ( find :arg0 you :arg1 ( village :mod small )  :degree bare )  :mod even )  :location ( valley :location ( river :wiki river_thames )  )  :mod well
say :arg0 ( light :arg0 ' :arg1 ( person :arg0-of ( go :arg1 that )  )  )  :arg1 there
and :op1 ( sing :arg1 ( room :location-of rehearsal )  :arg1-of ( flight :arg0 back )  :arg1-of stomp :arg1-of ( visit :arg0 you )  :arg1-of ( see :arg0 you :arg1-of ( light :arg0 too )  )  :example-of ( distance-quantity :unit kilometer )  )
discover :arg0 ( government-organization :mod-of ( product :name ( name :op1 messenger )  :wiki yahoo!_messenger )  :name ( name :op1 nasa )  :wiki nasa )  :arg1 ice :arg2 ( organization :name ( name :op1 mercury )  )
evidence :arg1 ice :arg1-of ( find :arg0 ( probe :arg0 ( product :name ( name :op1 messenger )  :wiki yahoo!_messenger )  )  :location ( planet :mod-of ( organization :name ( name :op1 mercury )  )  )  )
think :arg1 it :arg2 ( thick :arg1 ( cover-up :arg1 ice )  :arg1-of possible :arg2 ( metr :quant 20 )  )
prove :arg0 ( government-organization :name ( name :op1 nasa )  :wiki nasa )  :arg1 ( exist :arg0 ( agency :mod ( country :name ( name :op1 us )  :wiki united_states )  :mod space )  :arg1 ice :arg4 ( organization :mod planet :name ( name :op1 mercury )  )  )
show :arg0 ( planet :arg1-of lie :arg1-of ( freeze :arg0 ( do :arg0 sun :arg1 it )  )  :arg1-of close )  :arg1 water :arg1-of ( study :arg0 3 :arg0-of ( publish :arg1 thursday )  :arg1-of ( specialize :arg0 ( person :poss-of science :poss-of ( magazine :wiki time_[magazine] )  )  )  )
shadow :arg1 ( find :arg0 ( probe :arg0 ( product :name ( name :op1 messenger )  :wiki yahoo!_messenger )  )  :arg1 evidence )  :arg2-of ( lie :arg1 ( region :location-of ( cover-up :arg1 ice )  :poss planet )  :mod permanent )
think :arg0 perhaps :arg1 ( this :arg0-of ( thick :arg1 ( centimetr :quant 30 )  :arg2 ( metr :quant 20 )  :op2-of ( and :op1 east )  )  )
or :arg2-of ( come :arg0 perhaps :arg1 water :arg3 ( asteroid :arg0-of ( impact :arg1 ( organization :name ( name :op1 mercury )  )  )  )  :manner ( presume :arg1 also )  )  :op1 comet
say :arg0 ( scientist :mod chief )  :arg1 ( link :arg0 one :arg1 ( discover :arg0 - :arg1 ice )  :arg2 ( exist :arg1 ( thing :name ( name :op1 sean :op2 solomon )  )  :arg1-of ( probe :arg0 ( product :name ( name :op1 messenger )  :wiki yahoo!_messenger )  )  :part-of ( life :location planet )  )  )
possible :arg1 ( reach :arg0 ( temperature :location ( organization :name ( name :op1 mercury )  )  )  :arg2 ( celsius :mod degree )  )
say :arg0 that :arg1 ( possible :arg1 ( help :arg0 ( thing :arg1-of find )  :arg1 ( explain :arg1 ( region :arg1-of ( reach :time-of ( and :op1 water :op2 ( block :arg1-of build :mod other :part-of life )  )  )  :mod other :mod-of ( system :mod solar )  )  )  )  )
and :op1 unknown :op10 ( deploy :arg1 universe :location ( city :name ( name :op1 phoenix )  :wiki phoenix,_arizona )  )  :op11 ( research :arg1 depth )  :op2 majority :op3 of :op4 ( inhabit :arg0 ( planet :name ( name :op1 earth )  :wiki earth )  :arg1 there )  :op5 probe :op6 telescope :op7 small :op8 robot :op9 such
infinite :op1 ( transmit :arg0 they :arg1 image :arg2 ( planet :name ( name :op1 earth )  :wiki earth )  :mode ( peephol :mod small )  :time ( time :destination ( time :poss expanse )  )  )
come :arg1 ( image :mod this )  :arg3 ( camera :arg1-of ( institute :arg0 ( person :name ( name :op1 max :op2 planck )  )  )  :arg1-of ( develop :arg0 ( person :arg0-of research :mod ( country :name ( name :op1 germany )  :wiki germany )  )  )  )
dwarf :arg0 ( organization :mod planet :name ( name :op1 ceres )  :op1-of plus )  :arg1 8 :beneficiary ( system :mod solar :poss we :poss-of planet )
say :arg0 ( define :arg0 ( organization :domain-of ( planet :polarity - )  :name ( name :op1 ceres )  )  :arg1 ( term :arg1-of ( issue :arg0 ( organization :name ( name :op1 international :op2 astronomical :op3 union )  )  :time ( date-entity :year 2006 )  )  )  :mod new )  :arg1 ( organization :name ( name :op1 neptune )  :op1-of ( behind :time-of ( orbit :arg1 pluto :location ( around :op1 sun )  )  )  )  :arg1-of resemble
mean :arg1 star :arg2 ( see :arg0 ( family :arg0-of ( show :prep-on-of ( record :arg0 section :arg1 ( image :mod this )  :arg2 telescope :arg3 infrar )  )  :poss-of portrait :poss-of of )  :arg1 ( star :mod ( old :degree most )  )  :arg3-of ( dot :arg0 blue :arg1 ( difficult :arg3-of ( pink :arg0 ( generation :mod countless )  :arg1 ( colour :arg0-of ( deliver :arg1 star :arg3 ( born :mod new )  :prep-on room )  )  )  :arg3-of ( identify :arg0 while )  :degree more )  )  )
discover :arg0 ( telescope :mod spitz )  :arg1 ( region :arg0-of ( form :arg1 star )  :mod this )  :arg2 away :location ( constellation :domain ( w :mod-of 5 )  :mod cassiopeia )  :time ( distance :arg0 ( temporal-quantity :arg2-of ( light :arg0 unromantically )  :unit year )  :arg1 scientist )
glow :arg0 of :arg1 ( star :arg1-of die )  :arg2 ( capture :arg0 ( government-organization :name ( name :op1 nasa )  :wiki nasa )  :arg1 spitz :arg2-of ( shimmer :arg1 this )  :prep-on telescope )
consist :arg1 ( ring :arg1-of ( eject :arg0 star :arg2 ( process :arg1 die :arg1-of ( shape :mod-of donut )  )  )  )  :arg2 material
create :arg0 ( away :op1 ( planet :name ( name :op1 earth )  :wiki earth )  )  :arg1 ( star :mod new )  :manner ( huge :mod-of ( country :name ( name :op1 trifid :op2 nebula )  )  )  :op1-of ( and :arg1-of ( light :arg2 ( temporal-quantity :unit year )  )  :op2 dust )  :source gas
galactic :arg0-of ( deliver :arg1 ( photo :arg1-of ( shoot :arg0 ( government-organization :name ( name :op1 nasa )  :wiki nasa )  :arg2 telescope :mod spitz )  :mod this :mod of )  :manner room )
refer :arg1 ( star :arg1-of ( see :arg0 sister :arg1-of possible :arg1-of ( bare :arg0 7 :arg2 eye :time night )  )  :mod-of cluster )  :mod also
come :arg1 ( person :mod colour )  :accompanier telescope :mod really
look :arg0 ( organization :name ( name :op1 helix :op2 nebula )  )  :arg1 ( observe :arg1-of ( resemble :arg2 ( eye :part-of red )  )  )  :direction back :location ( photo :mod infrar :mod this )
locate :arg1 it :arg1-of ( light :arg0 ( aquariu :mod-of constellation :op1 700 )  :arg2 ( temporal-quantity :unit year )  )  :arg2 away
result :arg1 ( acquire :arg0 it :arg1 ( continent :name ( name :op1 north :op2 america )  :wiki north_america )  :mod this :op1-of similarity :op1-of title )  :arg2 continent
and :op1 ( normal :arg1-of ( combine :arg0-of ( produce :arg1 ( colouring :mod spectacular )  )  )  )  :op2 infrar :op3 photography
possible :arg1 ( star :arg1-of ( capture :arg0 full :arg3 ( infrar :value-of detector )  :mod only :prep-on ( use :arg0 beauty :arg1 it :arg2 telescope )  :prep-on-of ( baby :mod this )  )  )
puzzle :arg0 ( occur :arg1 amr-unknown :mod this )  :arg1 astronomy :arg2 field :mod ( great :degree most )  :op3-of ( and :op1 ( planet :name ( name :op1 saturn )  :wiki saturn_[mythology] )  :op2 ring )
trace :manner-of ( disappear :arg1 ( planet :name ( name :op1 saturn )  :poss-of ( moon :mod-of ( remnant :domain they :location perhaps :mod-of ( temporal-quantity :quant 4.5 :unit year )  )  )  :wiki saturn_[mythology] )  )
hubble :mod-of ( telescope :op2-of ( and :op1 ( large :degree most :quant 1 )  )  :source-of ( picture :mod sharp )  )  :op1-of ( organization :name ( name :op1 whirlpool :op2 galaxy )  )
photograph :arg1 ( galaxy :arg1-of spiral )  :arg1-of ( become :arg0-of ( depend :arg1 colouring )  :arg1-of possible :arg2 ( work :arg0 art :domain-of genuine )  )
show :arg0 ( photograph :arg1-of ( publish :arg0 ( organization :name ( name :op1 european :op2 southern :op3 observatory )  )  )  )  :arg1 ( country :name ( name :op1 trifid :op2 nebula )  )  :arg1-of ( light :arg2 ( temporal-quantity :op1-of away :quant several :quant thousand :unit year )  )  :location ( constellation :mod ( thing :name ( name :op1 sagittarius )  )  )
stem :arg0 ( person :arg0-of ( divide :arg1 ( core :poss ( birth :arg0 3 :arg1 star :time 3 )  )  :arg2 part :arg3 ( stripe :arg1-of dark :consist-of dust )  )  :name ( name :op1 trifid )  :name name )  :arg1 trifidu :arg1-of ( divide :arg2 part )  :arg2 ( word :mod ( language :name ( name :op1 latin )  :wiki latin )  )
photograph :arg0 astronomer :arg1 ( sign :topic ( collide :arg1 ( collide :arg0 ( temporal-quantity :arg2-of ( light :arg1 another )  :quant 400 :unit year )  :arg1 earth :arg2-of ( destine :arg1 ( merge :arg1 ( galaxy :arg1-of ( move :arg0 core :manner rapid )  )  :quant 2 )  )  )  :mod cosmic )  )  :time ( constellation :mod ( thing :name ( name :op1 ophiuchus )  )  )
capture :arg0 ( telescope :mod hubble )  :arg1 ( birth :arg1 ( star :arg0-of ( spiral :arg1 ( 83 :mod ( vehicle :name ( name :op1 m1 )  :wiki m1_abrams )  )  :mod-of galaxy )  )  :mod this )
prefer :arg0 technical :arg1 ( catherine :mod-of wheel )  :arg1-of possible :arg1-of ( resemble :arg2 amr-unknown )  :arg2 southern :arg2-of ( call :arg0 anyone :arg1 it :arg1-of ( nickname :arg0 it )  :op1-of by :polarity - )  :mod abbreviation
show :arg0 ( photo :arg1-of ( take :arg0 ( telescope :mod space )  )  )  :arg1 ( section :part-of ( person :name ( name :op1 iris :op2 nebula )  )  )  :arg2 ( constellation :mod ( thing :name ( name :op1 cepheus )  )  :mod-of hubble )
consist :arg1 ( nebula :arg0-of ( standard :arg1 ( dust :mod house )  :arg1-of ( light :arg0 small :arg2 ( temporal-quantity :op1-of away :unit year )  )  )  )  :arg2 ( particle :consist-of dust )
put :arg1 ( image :mod this )  :arg2 ( image :arg1-of ( capture :arg0 ( telescope :mod various )  )  :mod ( ray :mod x )  )  :mod together
show :arg0 it :arg1 ( ring :consist-of ( hole :arg1-of ( black :consist ( temporal-quantity :arg2-of light :op1-of ( away :op2 ( planet :name ( name :op1 earth )  :wiki earth )  )  :quant 430 :unit year )  )  )  )
person :domain-of 273 :name ( name :op1 arp )  :poss-of ( government-organization :location hubble :name ( name :op1 nasa )  :purpose-of ( picture :arg0 ( telescope :mod space )  :arg1 ( group :consist-of galaxy :mod this )  )  :wiki nasa )
call :arg0 ( person :arg0-of ( have-org-role :arg1 ( galaxy :arg1-of spiral :mod large )  :arg2 scientist )  )  :arg1 ( date-entity :year 1810 )
nebula :mod this :mod ( home :beneficiary ( group :arg1-of ( bright :arg0 star :degree most )  :consist-of ( star :mod young )  :location ( thing :name ( name :op1 milky :op2 way )  :poss we )  )  )
cradle :arg1 ( continue :arg1 ( youngster :mod new )  :arg1-of produce )  :mod ( star :mod this )
produce :arg0 ( connect :arg0 5000 :arg1 ( cloud :mod this :mod star )  :arg2 ( country :name ( name :op1 rosette :op2 nebula )  )  )  :arg1 ( star :mod baby :mod new )  :arg1-of ( continue :arg0 ( temporal-quantity :arg2-of light :unit year )  )  :direction ( away :op1 ( planet :name ( name :op1 earth )  :wiki earth )  )  :time likewise
exist :arg1 dust :arg2 gas :arg2-of ( black :arg1 ( hole :mod small )  )  :location ( galaxy :arg1-of ( bright :arg0 only )  :arg1-of shine :mod this )  :polarity -
comprise :arg1 universe :arg2 hydrogen :arg3 ( bang :arg1 big :op1-of ( after :arg1-of ( come :arg1-of ( presume :arg0 researcher )  :mod only )  :quant short )  )  :mod primary
view :arg0 we :arg1 universe :arg2 ( most :degree-of ( important :mod-of telescope )  )
think :arg0 year :arg1 ( invent :arg0 ( person :name ( name :op1 hans :op2 lipperhey )  )  :arg1 telescope :condition ( use :arg0 ( person :name ( name :op1 galileo :op2 galilei )  )  :arg1 device :arg2 ( observe :arg1 star :time late :arg0 person )  :op1-of before )  :time ( date-entity :year 1608 )  )  :concession even
and :op1 ( become :arg1 ( mirror :arg1 ( telescope :mod optics )  )  :arg2 ( large :manner increase )  :time ( since :op1 then )  )  :op2 ( provide :arg0 ( they :domain-of ( profound :arg1-of increase )  )  :arg1 insight )
telescope :mod ( large :compared-to world :degree most )  :op1 ( city :arg2-of ( near :arg0 ( date-entity :year 1947 )  :arg1 ( organization :location-of ( telescope :mod ( country :name ( name :op1 hale )  )  )  :name ( name :op1 palomar :op2 observatory )  )  :op1-of ( 30 :quant-of ( temporal-quantity :op1-of period :unit year )  )  :op1-of ( country :name name :wiki united_kingdom )  :op2-of ( until :op1 ( date-entity :year 1975 )  )  )  :name ( name :op1 san :op2 diego )  :wiki san_diego )
show :arg0 mirror :arg1 ( image :topic diameter )  :arg2 ( metr :era-of 5 )
large :mod-of ( organization :beneficiary-of ( home :mod-of ( country :location-of ( state :name ( name :op1 arizona )  :wiki arizona )  :name ( name :op1 usa )  :wiki united_states )  )  :name ( name :op1 binocular :op2 telescope )  )
metr :arg0-of ( mirror :arg1 ( view :arg0 ( diameter :mod each )  :arg1 space :arg1-of ( enable :arg0 it )  )  :quant 2 )
metr :consist diameter :op1 ( work :arg0 ( mirror :mod alone )  :arg2 ( thing :location ( island :location ( country :name ( name :op1 la :op2 palma )  )  :mod ( thing :name ( name :op1 canarian )  )  )  :name ( name :op1 gran :op2 telescopio :op3 canarias )  )  :domain-of huge :mod inner )
segment :arg1 ( mirror :poss ( organization :location ( country :name ( name :op1 south :op2 africa )  :wiki south_africa )  :mod ( thing :name ( name :op1 southern )  )  :name ( name :op1 african :op2 large :op3 telescope )  )  )  :arg1-of ( cost :arg1-of reduce )
eleven :op1-of ( around :quant-of ( metr :arg2-of ( achieve :arg1 diameter :location ( spite :compared-to this )  )  )  )
inclination :arg1-of ( movement :arg1-of ( limit :op2-of ( and :arg2-of ( disadvantage :arg1 ( method :mod construct :mod inexpensive :mod this )  )  :op1 ( clamp :arg1 telescope :arg2 angle :mod secure )  )  )  )
telescope :arg0-of ( fix :arg1 ( angle :mod inclination :mod also )  )  :location ( state :name ( name :op1 texas )  :wiki texas )  :mod ( country :name ( name :op1 hobby :op2 eberly )  )
set :arg1 amr-unknown :arg1-of ( gather :arg1-of ( light :arg1-of high )  :mod-of capacity )  :mod apart
reflector :mod ( large :arg4-of ( low :arg0 of :arg2 telescope :arg3 ( compare :arg0 spite :arg1 it )  :mod this :prep-on mirror :prep-on ( match :arg0 diameter :arg1 that :mod even )  )  :degree most :mod-of world )
listen :arg0 ( person :arg0-of research )  :arg1 ( signal :location space :mod extraterrestrial )  :arg1-of ( help :arg0 ( telescope :location ( country :name ( name :op1 arecibo )  )  :mod radio )  :arg2 ( country :name ( name :op1 puerto :op2 rico )  )  )  :arg1-of possible
metr :mod ( radio :mod-of telescope )  :mod-of diameter
possible :arg1 ( assist :arg1 every :arg1-of ( make :arg0 ( he :arg0-of ( process :op2-of ( slash :op1 ( she :arg0-of ( search :arg1 intelligence :arg1-of ( own :arg0 computer )  )  :arg0-of ( available :arg1 capacity )  )  )  )  )  )  )
view :arg0 ( organization :name ( name :op1 eso )  )  :arg1 ( organization :name ( name :op1 european :op2 southern :op3 observatory )  )  :arg2 ( thing :name ( name :op1 chilean :op2 andes )  )
live :arg1 ( thing :beneficiary-of ( home :domain this )  :mod very :name ( name :op1 large :op2 telescope )  )  :arg2 name
possible :arg1 ( focus :arg0 telescope :arg1 mirror :arg2 ( spectrum :mod ( infrar :arg1-of total )  :mod medial :poss 4 )  :mod also )
plan :arg1 ( thing :mod extremely :mod ( continent :name ( name :op1 europe )  :wiki europe )  :name ( name :op1 large :op2 telescope )  )  :mod also :time ( locate :arg1 ( organization :location ( country :name ( name :op1 chile )  :wiki chile )  :name ( name :op1 eso :op2 observatory )  )  :manner likewise )
and :op1 ( span :arg0 ( mirror :mod main :poss it )  :arg1 ( metr :mod full :quant 42 )  :op1-of ( mirror :mod-of element )  :op1-of almost )
expect :arg0 image :arg1 ( early :degree most )  :polarity - :time ( until :op1 ( date-entity :year 2018 )  )
telescope :domain-of ( large :degree most )  :location ( world :poss-of ( person :name ( name :op1 mauna :op2 kea )  )  )  :location ( volcano :mod ( thing :name ( name :op1 hawaiian )  :op2-of ( until :op1 ( date-entity :year 2007 )  )  )  )  :mod ( thing :name ( name :op1 keck )  )  :quant 2
mirror :arg0 they :arg1 each :arg2 ( distance-quantity :poss-of ( diameter :mod each )  :unit meter )  :quant 2
and :arg1-of ( help :arg2 ( organization :name ( name :op1 keck :op2 telescopes )  )  :arg2-of ( look :arg0 ( organization :name ( name :op1 mauna :op2 kea :op3 observatory )  )  :arg1 heaven :arg1-of possible :location ( alongside :op1 ( organization :name ( name :op1 keck :op2 telescopes )  )  )  )  )  :op1 ( telescope :mod ( organization :name ( name :op1 subaru )  )  )  :op2 ( organization :name ( name :op1 irttf )  )
thirty :op1 ( build :arg0 ( telescope :mod huge :mod new :mod another )  :arg1 ( organization :name ( name :op1 mauna :op2 kea )  )  :manner ( diameter :consist-of metr :mod mirror )  :mod also )
impression :arg0 ( you :arg0-of ( marvel :arg1-of possible :location here )  )  :arg1 artist
provide :arg0 ( telescope :mod space :mod hubble )  :arg1 ( insight :location space :mod ( important :degree most )  )
supply :arg1 image :time ( since :op1 ( date-entity :arg1-of ( distant :mod-of world )  :day 24 :month 4 :year 1990 )  )
possible :arg0 ( telescope :arg1-of ( search :arg0 ( person :name ( name :op1 kepler )  )  :arg2 ( planet :mod ( solar :mod extra )  )  :mod especially :time ( since :op1 ( date-entity :month 3 :year 2009 )  )  )  :mod space )  :arg1 inhabitable :arg2 any
announce :arg0 ( government-organization :name ( name :op1 nasa )  :wiki nasa )  :arg1 ( identify :arg1 ( candidate :mod planetary )  :time ( since :op1 ( begin :arg1 mission )  )  )  :time ( date-entity :day 2 :month 2 :year 2011 )
document :mod ( image :arg0-of ( prepare :arg1 ( telescope :mod space :poss ( person :name ( name :op1 kepler )  )  )  :arg1-of ( launch :arg0 final )  )  )
launch :arg1 ( person :name ( name :op1 james :op2 webb :op3 space :op4 telescope )  )  :arg4 space :location board :time ( date-entity :mod ( organization :name ( name :op1 jwst )  )  :op1-of ( early :degree most )  :year 2018 )  :time ( rocket :name ( name :name-of thing :op1 ariane5 )  )
mirror :mod ( primary :poss 6.5 )  :poss ( telescope :mod space :mod infrar )  :poss-of ( diameter :consist-of metr )
and :op1 ( star :arg1-of ( search :arg0 1 :arg1-of ( task :arg0 telescope )  )  :arg1-of ( bang :arg0 big :arg1-of ( emerge :arg0 galaxy :mod that :op1-of after )  )  :arg1-of light )
' :part ( south :arg1-of ( exist :arg2 ( assume :arg0 ( person :arg0-of ( have-org-role :arg2 scientist )  )  :arg1 ( that :mod-of ice )  )  :mod ( also :mod-of ( at :mod-of mercury )  )  )  :mod-of pole )
pole :mod ( north :arg0-of ( support :arg1 this :location much :purpose-of ( data :arg1-of ( orbit :arg0 - :location ( around :op1 planet )  :mod ( product :name ( name :op1 messenger )  :wiki yahoo!_messenger )  )  :mod reliable )  )  :quant close )
indicate :arg0 ( measure :arg2 radar )  :arg1 ( ice :location ( country :domain-of ( temporal-quantity :unit decade )  :name ( name :op1 mercury )  )  )
possible :arg1 ( certain :time now )  :purpose ( launch :arg1 ( probe :arg0 ( person :arg1-of orbit :name ( name :op1 mercury )  )  :arg1 scientist :arg1-of thank :mod ( product :name ( name :op1 messenger )  :wiki yahoo!_messenger )  )  :time ( date-entity :year 2004 )  )
age :arg1 ( drink :arg1 butter :op1-of ( and :op2 live )  )  :duration ( temporal-quantity :unit year )
reach :arg0 ( person :quant many )  :arg1 ( age :location ( country :name ( name :op1 azerbaijan )  )  :mod biblical )
museum :mod ( longevity :mod even )
young :degree ( compare :arg1 ( hunt :arg0 old :arg1 ( evidence :arg1 ( temporal-quantity :quant 97 :unit year )  :location country )  )  :manner still )
reach :arg0 ( person :arg0-of ( consider :arg1 biblical :arg1-of ( possible :mod almost )  :location ( country :name ( name :op1 azerbaijan )  )  )  :quant many )  :arg1 age
museum :mod ( longevity :mod even )
young :degree ( compare :arg1 ( hunt :arg0 old :arg1 ( evidence :arg1 ( temporal-quantity :quant 97 :unit year )  :location country )  )  :manner still )
and :arg2-of ( describe :arg1 ( journey :arg0 ( organization :name ( name :op1 talysh :op2 mountains )  )  )  :arg1-of possible )  :op1 wild :op2 romantic
rumble :arg0 minibu :arg1 ( and :arg1-of wind :op1 street :op2 ( hill :mod wood :mod densely :time past )  :op3 ( river :arg1-of rage )  :op4 ( farmhous :arg1-of simple )  )
and :arg1-of ( think :arg0 you :arg2-of ( forgive :arg1 you :arg1-of possible )  )  :op1 ( green :arg0 ( country :name ( name :op1 black :op2 forest )  )  :arg1 everywhere )  :op2 lush
and :op1 ( south :arg1-of ( deep :arg0 away :mod-of ( distance-quantity :unit ( kilometer :mod ( just :mod-of few )  )  )  )  :domain this :part-of ( country :arg1-of ( border :arg2 ( country :name ( name :op1 iran )  :wiki iran )  )  :name ( name :op1 azerbaijan )  )  )
and :arg1-of ( speak :arg0 ( they :arg0-of ( live :arg1 ( life :arg1-of long )  :op2-of ( and :arg1-of ( know :arg1-of except :degree much )  :op1 ( person :consist ( group :mod ( ethnic-group :name ( name :op1 caucasian )  :wiki caucasian_race )  :name ( name :name-of thing :op1 talysh )  :poss-of ( home :domain this )  )  )  )  )  :arg1-of ( perfect :arg0 - )  )  )  :op1 ( thing :name ( name :op1 persian )  )  :op2 ( thing :name ( name :op1 azeri )  )
stop :arg1 ( organization :name ( name :op1 lerik )  )  :mod-of final
overpower :arg0 ( country :arg0-of ( fit :arg1 ( picturesque :mod-of ( mountain :arg1-of ( landscape :quant all )  )  )  :polarity - )  :name ( name :op1 soviet :op2 union )  :wiki soviet_union )  :arg1 architecture :arg1-of ( burst :arg0 ( town :mod small )  )
and :location city :op1 ( come :arg1 ( person :arg0-of ( rare :arg1 baku )  :arg0-of ( journey :arg1 ( capital :mod-of ( too :mod-of arduous )  )  )  :arg0-of ( tour :arg1 ( from :op1 ( continent :name ( name :op1 europe )  :wiki europe )  )  )  )  )  :op2 here :op3 ( country :mod-of ' :name ( name :op1 azerbaijan )  )
take :arg0 ( travel :arg1 ( it :domain-of ( track :arg1-of ( single :arg0 8 )  :mod just )  )  :arg2 ( route :mod ( much :degree too )  )  )  :arg1 ( temporal-quantity :unit hour )  :arg2 ( distance-quantity :unit kilometer )
arrive :arg1-of ( thank :arg0 ( sea :location-of ( oil :poss country )  :name ( name :op1 caspian :op2 sea )  :wiki caspian_sea )  :location ( wealth :mod fabulou )  )  :location here :manner ( province :wiki helmand_province )  :polarity - :time yet
convince :arg1 ( person :arg2-of ( take :arg0 ( organization :name ( name :op1 lerik )  )  :arg1 ( attract :arg0 48 :arg1 ( person :arg0-of tour )  )  )  :name ( name :op1 pilata :op2 fatulayeva )  :time yet )
say :arg0 ( person :arg2-of ( celebrate :arg0 festival :arg1 world )  :mod ( old :degree most )  :op5-of ( and :op1 ( become :arg1 ( country :name ( name :op1 &quot; )  )  :arg2 famou :time ( date-entity :month 5 )  )  :op2 due :op3 ( person :arg0-of ( contest :arg1 we :arg2 year )  :name ( name :op1 song )  :wiki - )  :op4 next )  )  :arg1 ( person :name ( name :op1 &quot; )  )
likely :arg0 ( only :compared-to kind )  :arg1 ( have-org-role :arg0 she :arg1 ( museum :mod longevity )  :arg2 director :op1-of world )  :degree most
document :arg0 point :arg1 ( photo :mod white )  :location ( area :location-of ( live :arg1 ( life :location here :poss 8 :poss dozen )  )  )  :location 100 :mod old
have-rel-role :arg0 ( person :domain this )  :arg1 ( he :age ( temporal-quantity :quant ( 120 :mod here )  :unit year )  :domain-of old )  :arg2 grandfather
father :arg0 he :arg1 136 :time ( age :arg1 ( child :mod another )  )
say :arg0 ( person :arg1-of ( shepherd :arg0 person )  :domain ( star :mod ( unrivall :poss-of ( temporal-quantity :unit year )  )  :poss museum )  :name ( name :op1 shirali :op2 muslimov )  )  :arg1 ( live :arg1 old )
exist :arg0 birth :arg1 ( confirm :arg0 certificate :arg1 this )  :polarity -
age :arg1 ( claim :arg1 ( seem :arg1 extreme )  :arg1-of doubt :arg1-of ( confirm :arg0 lifespan :arg1-of ( give :op1-of and )  :arg1-of long :example ( temporal-quantity :unit year )  )  )
and :arg2-of ( bear :arg0 he :arg1 ( explain :arg0 ( date-entity :year 1973 )  :arg1 ( person :arg1-of die :name ( name :op1 &quot; )  )  )  :location here :time ( date-entity :year 1805 )  )  :op1 region
and :op1 child :op2 ( say :arg0 ( man :arg1-of ( marry :arg0 136 )  )  :arg1 ( father :arg1 ( person :arg0-of ( have-rel-role :arg2 daughter )  :mod another )  :time ( age :arg0 3 :arg1 23 )  )  :op1-of and )
cause :arg1 ( miscalculate :arg0 ( person :name ( name :op1 shirali :op2 muslimov )  )  :arg1 ( age :arg0 ( couple :op1 ( temporal-quantity :unit decade )  )  :arg1 person )  :mode interrogative )
contrast :arg2 ( hear :arg0 ( person :name ( name :op1 rembrandt :op2 scholz )  )  :arg1 ( person :arg0-of ( impress :arg1 ( age :location ( world-region :name ( name :op1 central :op2 asia )  :wiki central_asia )  )  )  :arg0-of ( live :arg1 ( institute :arg0 ( person :name ( name :op1 max :op2 planck )  )  :arg1 ( age :arg1-of research )  :location ( country :name ( name :op1 rostock )  )  )  )  )  :mod also )
say :arg0 ( country :name ( name :op1 pakistan )  :wiki pakistan )  :arg1 ( large :degree ( extreme :mod also )  :degree ( very :degree-of ( old :mod-of ( man :mod-of ( country :name ( name :op1 &quot; )  )  )  )  )  :mod-of number )  :arg2 ( person :arg1-of ( find :arg0 ( person :mod elderly :op1-of ( or :op2 ( country :name ( name :op1 china )  :wiki china )  :op3 ( country :name ( name :op1 japan )  :wiki japan )  :op4 ( country :name ( name :op1 &quot; )  )  )  )  :arg1-of possible :arg2 ( there :op1-of while )  :manner area :manner ( number :arg1-of ( high :arg0 strikingly :arg2 of )  )  :manner also :manner extreme :manner some )  :name ( name :op1 &quot; )  )
lack :arg0 particular :arg1 documentation :domain-of due :purpose ( birth :arg0 - :arg1 ( age :arg1 - :time-of ( proof :mod science )  )  :arg1-of register )
melt :arg0 glass :arg1 butter :time ( day :mod every )
remain :arg0 ( person :arg0-of ( reach :arg1 ( age :arg1 ( regularity :arg1-of strike )  )  )  :location ( region :arg1-of ( surround :arg0 biblical :arg2 ( organization :name ( name :op1 lerik )  )  )  )  )  :arg1 fact
age :arg1 current :duration ( temporal-quantity :op1-of ( old :mod-of ( individual :quant 20 )  )  :quant 100 :unit year )
cause :arg0 ( old :degree ( very :mod interrogative )  )  :arg1 ( live :arg0 ( person :domain-of many )  :location here :manner south )
explain :arg0 ( person :arg0-of ( guide :arg1 ( travel :arg0 ( thing :name ( name :op1 azeri )  )  :arg1 ( special :arg1 ( genetic :mod ( thing :name ( name :op1 talysh )  )  )  )  )  )  :name ( name :op1 farid :op2 mugimzadeh )  )  :arg1 this
contrast :arg0 diet :arg1 ( believe :arg0 ( thing :mod museum :name ( name :op1 director :op2 fatulayeva )  )  )
and :op1 ( possible :arg0 ( science :mod-of ( perspective :mod nutrition )  )  :arg1 ( consider :arg0-of ( seem :arg1 plausible :arg2 many :manner really :manner either :polarity - )  :arg1 healthy :arg2 especially )  :arg2 bread :op3-of ( and :arg1-of ( love :arg0 diet )  :op1 ( meat :mod-of ( product :mod dairy )  )  :op2 ( drink :arg0 notion :arg1 ( glass :quant-of ( butter :arg1-of ( melt :arg0 ( rich :mod-of calorie )  )  )  )  )  )  )
tiny :op2-of ( or :op1 young :op3 ( settle :arg1 far :mode interrogative )  :op4 - :op5 ( town :mod ( country :name ( name :op1 lerik )  )  )  :op6 ( live :arg1 ( life :mod-of ( way :manner-of ( keep :arg0 ( country :name ( name :op1 cengemiran )  )  :arg1 person )  :mod tradition )  )  )  :op7 ( person :name ( name :op1 rubaba :op2 mirzayeva )  )  )
young :degree ( compare :arg1 ( 97 :quant-of ( temporal-quantity :unit year )  )  :manner still )  :domain ( she :domain-of old )  :location area
descend :arg0 ( person :arg1-of ( claim :arg0 ( person :arg0-of ( live :location ( house :arg1-of simple :arg1-of ( typical :mod-of ( region :mod ( country :name ( name :op1 caucasus )  )  :mod entire )  )  :mod wood )  )  :name ( name :op1 mirzayeva )  )  )  )  :arg1 143
and :op1 ( roll :arg0 she :arg1 ( churn :arg0 ( she :arg1-of ( sit :arg2 floor )  )  :arg1 butter )  :direction backwards :manner ( forward :arg1 tirelessly )  )
and :op1 ( roof :mod this )  :op2 ( have-rel-role :arg0 ( person :arg0-of ( live :arg1 ( grandparent :mod-of ( time :mod some )  )  :op1-of ( under :op2 here )  )  :mod eight )  :arg1 ( person :arg0-of ( have-rel-role :arg1 both :arg2 daughter )  )  :arg2 son )
run :arg0 ( child :domain-of around :mod small )  :arg2 also :quant 2
typical :arg1 ( thing :name ( name :op1 armadu )  )  :mod-of ( glass :arg1-of bulge :location-of ( serve :arg1 ( guest :arg2-of ( prepare :arg1 tea :time kitchen )  )  )  )
reveal :arg0 ( she :arg0-of ( plait :arg1 ( rank :arg0 she :arg1 stand :arg1-of ( conceal :arg0 ( she :arg0-of ( dark :arg1 blond )  )  )  :arg1-of long :arg1-of perfect :op4-of ( and :op1 ( person :name ( name :op1 mirzayeva )  )  :op2 white :op3 tooth :op5 file :op6 ( beneath :mod-of headscarf )  )  )  )  :arg1-of ( have-rel-role :arg0 person :arg2 son )  )  :arg1 proudly
and :op1 ( fall :arg0 ( i :arg0-of ( lose :arg1 colour :op1-of or )  :arg0-of ( wash :arg1 hair :arg2 milk :time always )  )  )
say :arg0 ( i :arg0-of ( use :arg1 ( shampoo :arg0 nev :arg1 either )  )  )  :arg1 ( person :name ( name :op1 &quot; )  )
enough :domain ( live :arg1 ( pension :mod monthly )  )
potatoe :arg1-of ( possible :arg0 pea :time ( only :time ( ever :time-of ( eat :arg0 ( she :poss ( farm :poss she )  )  :arg1 tomato )  )  )  )
buy :arg0 i :arg1 grocery :arg3 supermarket :arg4 ( life :mod whole :poss i )  :time once
tell :arg0 ( she :arg1-of ( have-rel-role :arg0 ( person :op1-of army )  :arg2 husband )  )  :time then
thing :arg2-of ( bad :arg0 ( thing :arg1-of second :name ( name :op1 world :op2 war )  :op1-of after )  :arg1 time )
become :arg0 everything :arg2 ( person :arg0-of ( have-rel-role :arg1 ( person :domain-of rudd :name ( name :op1 however )  )  :arg2 father )  :mod belov )  :extent good
seem :arg1 strange :arg2 ( come :arg0 propaganda :arg3 ( mouth :poss ( lady :mod old )  )  )
resemble :arg1 ( country :arg1-of ( govern :arg0 nation )  )  :arg2 ( have-org-role :arg0 ( person :arg0-of ( have-rel-role :arg2 father )  :mod-of ( figure :op1-of ( around :location-of ( revolve :arg0 ( cult :op1-of yet )  )  )  )  )  :arg1 ( country :location-of ( limit :arg1-of ( know :degree practical :polarity - )  )  :name ( name :op1 azerbaijan )  )  :arg2 dictator )
and :op1 ( hold :arg0 ( he :arg1-of ( have-rel-role :arg0 ( person :poss-of helm )  :arg2 son )  :op1-of late )  :arg1 power :time ( until :op1 ( date-entity :year 2003 )  )  )  :op2 ( person :name ( name :op1 ilham )  )
deprivation :location ( country :name ( name :op1 azerbaijan )  :poss-of elderly )  :polarity -
possible :arg1 ( live :arg0 ( person :arg0-of ( receive :arg1 ( manat :location ( around :op1 ( sum :arg1-of ( same :arg2 ( temporal-quantity :unit month )  )  )  )  :quant 230 )  :arg2 pension )  :arg2-of ( local :arg0 ( monetary-quantity :unit euro )  :arg1 context )  :name ( name :op1 mirzayeva )  )  :arg1 amount :mod comfort )
and :op1 perhaps :op2 ( person :arg0-of ( have-rel-role :arg1 ( respect :arg1 we :arg1-of ( deep :arg0 culture )  :arg1-of ( long :degree grey )  :arg1-of ( enjoy :arg0 elderly )  )  :arg2 son )  :mod right )
and :op1 ( live :arg0 ( they :arg0-of love :arg0-of care )  :manner ( family :arg1-of extend )  )  :op2 happy
possible :arg1 ( long :arg1 then :arg1-of ( live :purpose-of ( reason :domain this :mode interrogative :polarity - )  )  )
notion :arg0-of ( omit :arg1 constitution :mod ( right :mod-of human )  )  :mod-of of
return :arg1 revolution :arg4 ( city :name ( name :op1 cairo )  :wiki cairo )
reveal :arg0 ( demonstrate :arg1-of compete :location ( city :name ( name :op1 cairo )  :wiki cairo )  )  :arg1 ( division :arg1-of deep )  :location country
dispute :arg1 ( constitution :arg1-of ( base :arg2 ( law :topic sharia )  )  :time future )  :degree fiercely
hold :arg0 ( president :arg2-of ( have-org-role :arg1 ( country :name ( name :op1 egypt )  :wiki egypt )  )  )  :arg1 emotion :direction back :polarity -
transition :arg1 we
say :arg0 ( he :arg1-of ( succeed :arg0 it :arg1-of sure :arg1-of ( make :arg0 and :arg2 ( responsible :arg0 i :op1-of ( and :op2 before :op3 person :op4 before :op5 ( person :name ( name :op1 god )  :wiki god )  )  )  )  )  )  :arg1 ( state :mod-of television )
aim :arg1 ( speech :poss he )  :arg2 ( population :arg1-of ( enlighten :arg0 ( person :mod ( religious-group :name ( name :op1 muslim )  :wiki muslim )  :op3-of ( and :op1 ( religious-group :location-of particular :name ( name :op1 christian )  :wiki christian )  :op2 ( person :arg1-of liberal )  :op4 secularist )  )  )  :quant entire )  :op1-of ( ethnic-group :name ( name :op1 copt )  :wiki copts )
fear :arg1 ( estrange :arg2 ( oppose :arg1 all :arg1-of bewilder )  :manner hopelessly :op1-of until :time now )
fear :arg1 they :arg2 ( country :name ( name :op1 god :op2 state )  )  :time ( mercy :poss ( organization :degree ( powerful :arg1 ( country :name ( name :op1 nile )  )  )  :name ( name :op1 muslim :op2 brotherhood )  :wiki muslim_brotherhood )  )
say :arg0 ( person :name ( name :op1 according )  )  :arg1 ( and :op1 constitution :op2 court :op3 ( increase :arg0 ( authority :arg0-of ( revolution :arg1 ( rescue :arg0 ( authority :arg0-of ( restrict :arg1 temporary )  :arg0-of of )  :arg1 authority )  )  :arg1-of ( own :arg0 ( he :arg0-of ( speak :arg1 almost )  )  )  )  )  )
sure :arg0 really :arg1 ( want :arg0 ( person :arg0-of ( hold :arg1 doctorate )  :arg0-of ( engineer :arg1 old )  :age ( temporal-quantity :quant 61 :unit year )  )  :arg1 ( save :arg0 southern )  :arg4 ( state :mod entire :name ( name :op1 california )  :poss-of ( american :op1-of ( name :name-of thing :op2 university )  )  :wiki california )  )  :op3-of ( and :op1 ( person :mod ( country :name ( name :op1 egypt )  )  )  :op2 world )  :polarity -
recommend :arg1 ( deprive :arg0 power :arg1 judiciary )  :mode interrogative
cause :arg0 ( article :arg1-of ( push :arg0 ( thing :arg1-of ( dominate :arg0 aspect )  :mod ( religious-group :name ( name :op1 islam )  :wiki islam )  :name ( name :op1 ( constituent :mod ( person :mod 110 )  )  :op2 assembly )  )  )  :mod 234 )  :arg1 ( concern :arg1 ( actual :arg1 fact )  )  :quant some
judicature :arg0-of ( justify :arg1 ( draft :arg0 also :arg1 constitution :arg2 ( principle :mod-of ( religious-group :mod law :name ( name :op1 islam )  :wiki islam )  )  :medium previous )  :arg1-of case )
principle :domain ( amr-unknown :mod yet )  :mod-of interrogative
favor :arg0 ( person :mod ( religious-group :name ( name :op1 islamism )  :wiki islam )  )  :arg1 ( interpret :arg1 ( law :topic sharia )  :mod strict )  :arg2-of ( use :arg1 ( and :op1 ( formulation :mod woolly )  :op2 ( room :purpose ( manoeuvre :arg1-of legal :arg1-of result )  )  )  :arg1-of ( concern :op2-of ( and :op1 ( remain :arg0 this :arg3 ( subject :arg2 interpret )  :op1-of and )  )  )  )
add :arg0 ( article :arg0-of ( mean :arg1 this )  :arg0-of ( issue :arg1 law :arg3-of ( affect :arg0 ( criminal-organization :arg0-of ( consult :arg1 ( country :arg0-of ( influence :arg1 of :arg2 whole :arg3 institution :example ( religious-group :name ( name :op1 sunni )  )  :example ( religious-group :name ( name :op1 islam )  :wiki islam )  :mod ( great :mod-of throughout )  )  :poss-of ( important :mod most :mod-of ( religious-group :name ( name :op1 islam )  :wiki islam )  )  )  )  :name ( name :op1 al :op2 qaeda )  :wiki al-qaeda )  :prep-on sharia )  :mod all )  )  :arg1 newly :arg1-of ( suggest :arg0 least )  :arg3 1
contrast :arg1 ( result :arg1 ( legislation :arg1-of ( oversee :arg0 clergy :arg2-of ( mean :arg1 this )  )  )  :arg2 ( incapacitation :poss judiciary )  )  :arg2 ( possible :arg0 de :arg1 necessarily :polarity - )
draft :arg0 constitution :arg1-of ( open :arg2 interpret )  :domain-of much
continue :arg1 ( uphold :arg0 military :arg1 ( jurisdiction :mod ( civil :mod ( problematic :mod also )  )  )  )
serve :arg0 court :arg1 ( rule :arg1 this )  :arg1-of ( suppress :arg1-of oppose )
follow :arg2 ( fall :arg1 ( have-org-role :arg2 dictator )  )  :arg2-of ( imprison :arg0 civilian :arg1 military )
say :arg0 ( state :arg0-of ( protect :arg1 character :mod also )  :arg0-of ( draft :arg1 ( recommend :arg1 true )  )  )  :arg1 ( and :op1 ( promote :arg0 ( family :arg0-of ( of :arg1 ( country :name ( name :op1 egypt )  :wiki egypt )  )  )  :arg1 ( and :arg1-of value :arg1-of moral )  )  )
and :op1 ( control :arg0 ( institution :mod state )  :arg1 content :arg2-of ( use :arg1 ( article :mod this )  :arg1-of possible :arg2-of ( formulate :arg0 ( perspective :arg1-of legal )  :arg1 this :time ( manner :arg1-of ( clear :degree such :polarity - )  )  )  :mod even )  )  :op2 ( art :mod cinema )  :op3 literature
censorship :mod-of ( plain :mod-of ( language :location-of ( nothing :domain this :mod other )  )  )
equal :arg1 ( man :op1-of ( and :op2 woman )  )  :arg1-of ( establish :arg0 incidental :arg1-of ( explicit :arg0 ( article :polarity - )  )  )
prohibit :arg0 another :arg1 ( insult :arg0 ( person :name ( name :op1 mohamed )  :op1-of ( and :op2 emissari )  )  :arg1 prophet :op1-of ( or :op2 slander )  )
and :op1 ( constitute :arg1 insult )  :op2 ( recommend :arg1 ( sanction :arg3 this )  )  :op3 ( remain :arg3 ( clear :polarity - )  )
state :arg0 ( person :arg0-of forbid :arg1-of insult )  :arg1 formulation :arg1-of ( dubious :arg0 equally )
jurist :arg1-of ( expend :arg2 ( joke :arg2 ( caricature :arg1 ( have-org-role :arg2 president )  :arg1-of be :arg1-of ( suffice :op1-of ( or :mode interrogative )  )  )  )  )
cause :arg0 ( resemble :arg1 ( interpret :arg1-of ( open :arg0 ( he :arg0-of ( submit :arg1 referendum :arg2 very )  :mod-of word )  )  )  )  :arg1 ( much :arg1-of ( draft :arg0 ( person :arg0-of ( sign :arg1 ( and :op1 that :op2 ( person :mod ( country :name ( name :op1 egypt )  )  )  :op3 soon )  )  :arg1-of submit :name ( name :op1 open )  )  )  )
revolution :arg1 back
superior :arg1 ( person :mod ( religious-group :name ( name :op1 islamism )  :wiki islam )  :poss-of ( strength :arg1-of ( combat :arg1-of ( gather :arg0 ( oppose :arg1 ( temporal-quantity :unit week )  )  )  )  )  )
and :op1 ( gather :arg0 thousand :arg1 evening :location ( country :location ( city :name ( name :op1 cairo )  :wiki cairo )  :name ( name :op1 tahrir :op2 square )  )  )  :op2 ( pledge :arg1 ( bring :arg0 ten :arg1 ( charter :arg0 friday :arg1 ( name :op1 unity )  :arg1-of ( come :arg4 ( effect :arg1 unfamiliar )  :mod even :op1-of before )  )  )  )
say :arg0 ( we :arg1-of ( revolution :arg2 victoriou :op1-of ( and :op2 back )  )  )  :arg1 ( candidate :arg1-of ( elect :arg0 place :arg2 ( person :arg0-of ( have-org-role :arg2 president )  )  )  )  :arg2 ( person :name ( name :op1 &quot; )  )
and :op1 peace :op2 prize :op3 winn :op4 former :op5 ( head :arg0 ( person :arg0-of ( belong :arg1 ( rubbish :mod-of ( tip :mod-of history )  )  )  :arg0-of ( explain :arg1 that :arg1-of ( draft :mod constitution )  )  :name ( name :op1 noble )  )  :arg1 of )  :op6 ( organization :name ( name :op1 noble )  )
accuse :arg0 ( he :arg0-of ( want :arg0-of ( lead :arg1 ( against :mod coup :op1 democracy )  )  :arg1 ( product :mod ( sm :mod ( organization :name ( name :op1 via )  )  :mod-of service )  :name ( name :op1 twitter )  :wiki twitter )  )  )  :arg1 ( person :arg0-of ( follow :arg1 of )  )
say :arg0 ( he :arg0-of ( have-org-role :arg2 member )  :arg0-of ( oppose :arg1 ( say :arg1 ( and :op1 ( call :arg0 he :arg1 ( go :arg0 we )  :arg2 referendum )  :op2 palace )  )  )  )  :arg1 of :arg1-of overthrow
state :arg0 ( we :arg0-of ( tire :arg1 ( blood :mod-of of )  )  :arg0-of ( grow :polarity - :time yet )  )  :arg1 ( politician :arg1-of ( oppose :arg0 ( country :name ( name :op1 egypt )  :wiki egypt )  :arg1-of ( quote :arg0 media :arg2 ( person :arg1-of ( have-rel-role :arg0 we :arg2 brother )  :name ( name :op1 &quot; )  )  )  )  :polarity - )  :arg1-of ( atone :arg0 yet )
render :arg0 ( referendum :arg1-of ( oversee :arg0 they :arg1-of ( want :arg1-of ( signal :op2-of ( and :op1 ( judge :quant several )  )  )  :polarity - :arg0 they )  )  )  :arg1 invalid
book :name ( name :op1 koran )  :poss ( we :mod-of constitution )  :wiki quran
contrast :arg1 ( pray :arg1 mass :location ( side :mod other )  :location ( outside :op1 ( thing :name ( name :op1 cairo :op2 university )  )  )  )  :arg2-of ( choose :arg0 ( they :domain-of cautious )  :arg1 ( square :wiki - )  :condition-of ( gather :arg0 ( organization :arg1-of ( organize :mod well )  :name ( name :op1 muslim :op2 brotherhood )  :wiki muslim_brotherhood )  :arg1 ( counter :arg1 ( demonstrate :arg1 - )  )  :arg1-of act )  )
mean :arg1 ( shout :arg1 ( take :arg0 ( person :arg1-of apply :name ( name :op1 god )  :wiki god )  :arg1 law :op3-of ( and :arg1-of veil :op1 woman :op2 ( person :arg0-of ( follow :arg1 of )  )  :op4 person :op5 demand :quant many )  )  )
mean :arg0 we :arg1 ( demand :arg0 they :op1-of ( and :op2 ( protest :arg0 expressive :arg1 ( book :name ( name :op1 koran )  :wiki quran )  )  :op3 constitution )  )  :arg1-of ( cleanse :arg0 country )
provoke :arg1 ( event :arg1-of ( verge :arg0 ( struggle :arg1 ( control :arg1 ( country :arg0-of ( begin :arg1 everything )  :arg1-of symbolize :name ( name :op1 tahrir :op2 square )  )  )  )  :time ( war :mod civil )  )  )  :arg1-of ( likely :degree most )
want :arg0 ( person :arg0-of ( follow :arg1 this )  )  :arg0-of risk :arg1 ( something :arg1-of ( clear :degree quite )  )  :polarity -
state :arg0 ( organization :name ( name :op1 muslim :op2 brothers )  )  :arg1 ( express :arg0 ( loud :op1-of ( and :op2 ( clear :arg1 and )  )  )  :arg1 ( favor :arg1 ( draft :arg0 constitution )  )  )  :op1-of both
move :arg0 country :arg1 ( box :arg1-of ( decide :arg0 population :arg1-of ( let :purpose-of time :time now )  )  :mod ballot )  :arg1-of recommend :arg2 direction :direction forward
favor :arg0 majority :arg1 ( it :poss-of certainty )  :arg1-of ( draft :arg0 ( person :mod ( religious-group :name ( name :op1 islamism )  :wiki islam )  )  )
appear :arg0 ( do :arg1 human :mod right :polarity - )  :arg1 even :arg2 once
and :op1 recommend :op2 ( last :arg1 ( process :arg1 constitutive :arg2-of ( force :arg1 ( person :arg1-of ( furious :arg0 all )  :name ( name :op1 hafez :op2 abu :op3 saeda )  )  )  :mod this )  :arg2 until :mod actual )  :op3 recommend :op4 ( involve :arg1 ( group :mod ( interest :arg0 society )  )  )
mubarak :op1 ( have-org-role :arg0 ( right :mod human :part ( 48 :quant-of ( temporal-quantity :unit year )  )  :part old )  :arg1 ( organisation :mod ( country :name ( name :op1 egypt )  :wiki egypt )  )  :arg2 ( chairman :op2-of ( and :arg0-of ( defend :arg1 ( organization :name ( name :op1 muslim :op2 brotherhood )  :wiki muslim_brotherhood )  )  :op1 ( lawyer :mod ( right :mod human )  )  :op3 ( imprison :arg1 court :op1-of or )  )  )  )
contrast :arg1 ( share :arg0 ( he :poss-of world )  :arg1 view :arg1-of ( cause :polarity - )  )  :arg2 ( indivisible :arg1-of cause :domain ( right :mod human )  )
and :op1 ( batter :arg1 he )  :op2 ( condemn :arg1 he )  :op3 ( imprison :arg1 he )  :purpose this
appear :arg0 even :arg1 ( he :arg0-of ( bemoan :arg1 ( discuss :arg0 ( and :op1 now :op2 ( term :mod ( right :mod-of human )  )  :op3 ( constitution :mod new )  )  :arg1 ( organization :name ( name :op1 &quot; )  )  :polarity - )  )  )  :arg2 once
resign :arg0 lawyer :arg1 ( extend :arg1 power :arg4 ( branch :mod all :part-of ( government-organization :arg0-of ( govern :arg1 state )  )  :quant 3 )  )  :arg2 ( person :name ( name :op1 mursi )  )
breach :arg1 ( rule :mod ground )  :mod blatant :op2-of ( and :op1 ( measure :mod this )  :op3 ( guide :arg0 ( country :name ( name :op1 egypt )  :wiki egypt )  :arg1 democracy :arg2 ( dictatorship :mod new )  )  )
suspend :arg0 ( effective :arg0-of ( complain :arg1 ( person :name ( name :op1 &quot; )  )  )  :arg1-of ( have-org-role :arg0 society :arg2 ( president :arg1-of ( strengthen :arg0 ( of :arg1-of ( instead-of :arg2 civil )  )  )  )  )  )  :arg1 it
possible :arg1 ( function :arg0 democracy :arg1 ( organization :mod ( civil :mod-of society )  )  :mod yet :polarity - )
and :op1 ( person :arg0-of ( feel :arg1 abandon )  :name ( name :op1 saeda )  )  :op2 ( country :name ( name :op1 nile )  )  :op3 ( mixture :location-of ( battle :arg1 ( direction :mod ideology )  :arg1-of ( observe :arg0 ( community :mod international :mod even )  )  )  )  :op4 curiosity :op5 excitement
possible :arg1 ( come :arg1 this :direction back :purpose haunt )
mean :arg1 ( let :arg0 ( you :arg0-of ( loose :arg1 ( control :arg0 you :arg1 that :arg1-of possible :arg1-of long :polarity - )  )  )  :arg1 monster :condition 1 )  :arg1-of ( warn :arg0 demonstrator )
smelly :mod ( world :arg1-of ( be :arg0 ( country :name ( name :op1 norway )  :wiki norway )  :arg2 interrogative )  :mod this )  :mod-of fish
contrast :arg1 ( live :arg0 ( person :arg0-of ( high :arg1 standard :degree most )  :arg0-of ( enjoy :arg1 ( of :quant 1 )  )  :mod ( country :name ( name :op1 norway )  :wiki norway )  :quant 5 )  :arg1 ( world :mod just :polarity - )  :location ( continent :name ( name :op1 europe )  :wiki europe )  )
possible :arg1 ( connect :arg1-of ( succeed :arg0 ( country :poss-of secret )  )  :arg2 ( appetite :arg1-of ( local :arg2 exceeding )  )  :mod some :time smelly )  :mode ( interrogative :mode-of fish )
take :arg1 ( select :arg1 ( cheese :arg0-of ( ripe :arg1 over )  )  )
place :arg2 ( midst :poss ( pile :poss ( kit :arg1-of dirty :mod wet :mod soccer )  )  )
leave :arg1 week
delicaci :mod ( great :arg1-of ( smell :arg0 you :arg1-of ( numb :arg2 nose )  :time now )  )  :mod ( country :name ( name :op1 norway )  :wiki norway )
hour :unit-of ( temporal-quantity :op1-of about :poss i :quant 3 :source ( country :mod-of ( small :mod-of ( town :name ( country :name ( name :op1 fagernes )  )  )  )  :name ( name :op1 oslo )  )  )
and :arg1-of ( hanging :arg0 snow :location ( air :poss ( spectacular :mod-of scenery )  )  :manner ( present :mod ( that :domain-of odour )  :time ever )  )
and :arg0-of ( depend :arg1 ( resemble :arg0 you :arg1 smelly :arg2 fish )  )  :op1 ( sprinkle :arg1 trout :arg2 salt )  :op2 ( ferment :arg0 water :arg1 year )
flock :arg0 ( person :arg0-of ( captivate :arg1 food )  :arg1-of ( set :arg0 ( dark :arg0 here :arg1 most )  :arg2 this :op1-of ( and :op2 ( turn :arg0 weather :arg2 cold )  )  )  :mod ( country :name ( name :op1 norway )  :wiki norway )  )  :arg2 ( festival :arg1-of ( devote :arg0 ( country :name ( name :op1 fagernes )  )  )  )
contrast :arg1 ( call :arg0 ( person :arg0-of ( run :arg2-of ( charge :arg0 general :arg1 festival )  )  :arg1-of ( say :arg0 aquavit )  :name ( name :op1 &quot; )  )  :arg1 rakfisk :arg1-of ( cause :arg0 ( and :op1 ( eat :arg0 ( you :arg0-of ( swallow :arg2 glass )  )  :arg1 it :arg2 of )  :op2 raw :op3 then )  )  )  :arg2 also :arg2-of ( local :arg0 ( time :mod full )  :arg1 firefight )
and :op1 ( knock-down :arg0 ( person :arg0-of ( eat :arg1 ( cube :arg1 fish :arg1-of ( drink :arg0 all )  :mod little )  :time around )  )  :arg1 quantity :direction back )
say :arg0 ( person :arg0-of ( resemble :arg1 ( aquavit :degree more )  :arg2 rakfisk )  :mod some )  :arg1 ( person :name ( name :op1 &quot; )  )
possible :arg1 ( kill :arg0 drink :arg1 smell )
try :arg0 i :arg1 ( piece :quant few )
sushi :arg1-of ( bad :condition ( possible :arg1 ( avoid :arg0 you :arg1 ( pass :arg1 - :arg1-of ( journey :arg1-of long :mod bus )  :time nose )  )  )  :degree - )  :mod-of slice
and :location-of ( soak :arg0 autumn :arg1 ( refrigeration :mod pre )  :arg2 ( volume-quantity :mod airtight :unit barrel )  :purpose ( differ :arg0 product :arg1 fish :manner very )  )  :op1 ( poverty :mod-of stricken )  :op2 ( country :name ( name :op1 norway )  :wiki norway )  :op3 water :op4 salt
and :op1 ferment :op2 ( take :arg0-of ( knock :arg1 ( sense :arg1-of ( doubt :polarity - )  )  )  :manner ( depth :mod winter )  :op1-of ( and :op2 ( eat :arg1 alcohol )  :time then )  )
thousand :arg1-of ( force :arg2 ( leave :arg1 ( country :arg0-of ( search :arg1 ( generation :mod only )  :arg2 work )  :poss ( person :mod ( country :name ( name :op1 norway )  :wiki norway )  )  )  :purpose ( emigrate :arg1 main :arg4 ( country :name ( name :op1 us )  :wiki united_states )  )  )  )
and :arg0-of ( attract :arg1 ( person :arg0-of ( immigrate :arg1 ( percentage-entity :value 13 )  )  )  )  :op1 ( expand :arg1 population :manner fast :polarity now )  :op2 job :op3 wage :op4 ( system :arg0-of ( care :arg1 ( high :arg1 more )  )  :mod comprehensive )
stream :arg0 ( and :op1 ( person :source ( country :name ( name :op1 sweden )  :wiki sweden )  )  )  :arg1 ( work :arg0 ( country :name ( name :op1 norway )  :wiki norway )  :arg1 ( rival :arg1 ( long :arg1 ( rich :degree far :polarity - )  )  :mod old )  )
signify :arg0 ( country :name ( name :op1 norway )  :wiki norway )  :arg1 something :arg2 ( rather :mod-of past :mod-of smelly :mod-of vital :mod-of of )  :arg2-of ( see :arg0 important )
dish :arg1 ( possible :arg1 ( buy :arg0 you :arg1 it )  )  :mod ( expensive :degree more )
contrast :arg1 ( everything :mod ( expensive :mod-of ( beer :mod ( glass :mod small )  :op1-of ( or :op2 ( knock :arg0 you :arg1 ( each :example-of 9 :mod-of 14 )  :arg2 back :mod sandwich )  )  )  )  )  :arg2 then
and :frequency often :op1 ( seem :arg0 ( globe :mod-of ( news :mod-of agenda )  )  :arg1 ( like :arg0 ( country :name ( name :op1 norway )  :wiki norway )  :arg1 ( way :mod ( that :op1 - )  )  :arg2 most )  )
and :op1 ( gun :arg0 ( extremism :mod racist :mod ( wing :mod right )  )  :arg1 ( person :arg0-of ( mention :arg1 ( person :domain-of ( loath :location here :mod still )  )  )  :name ( name :op1 anders :op2 breivik )  :name name )  )  :op2 ( kill :arg1 ( and :mod ( last :mod-of year )  :op1 ( man :quant 77 )  :op2 woman :op3 child )  )
refer :arg0 shooting :arg2 7 :arg2-of ( instead-of :arg1 ( incident :mod 22nd )  )
and :op1 ( murder :mod ( such :arg2-of ( capable :arg1-of ( believe :arg0 ( person :arg0-of ( find :arg1 ( difficult :degree very )  )  :mod ( country :name ( name :op1 norway )  :wiki norway )  )  )  :location ( country :arg1-of ( love :arg0 peace )  )  )  :mod-of brutality )  )
and :op1 ( grow :arg1 since :time ( early :mod-of 1970 :mod-of ( of :quant 1 )  )  )  :op2 ( oil :mod-of ( industry :mod gas :mod ( big :degree most )  :mod behind :mod world :mod ( country :mod-of present :name ( name :op1 norway )  :wiki norway )  )  )  :op3 ( lie :arg1 much )  :op4 ( wealth :mod day )
contrast :arg1 ( oil :mod-of ( reason :mod only )  )  :arg2 ( and :arg1-of ( mature :arg0 ( we :arg0-of ( hand :arg1 ( round :arg0 waitress :arg1 tray )  )  )  )  :arg1-of ( say :arg0 ( we :arg0-of ( do :arg0-of ( cause :arg1 well :polarity - )  :arg1 ( thing :name ( name :op1 &quot; )  )  )  )  )  :op1 ( person :name ( name :op1 &quot; )  :op1-of ( and :op2 ( she :arg0-of ( long :arg1 hair :arg2 blue )  )  :op3 blond :op4 startlingly :op5 eye :op6 image )  )  :op2 of :op3 rakfisk )
say :arg0 you :arg1 ( we :domain-of ( person :mod prudent )  )
resemble :arg1 ( most :quant-of person )  :arg2 ( that :domain-of ( flawles :domain ( language :name ( name :op1 english )  :part-of she :wiki english_language )  :mod here )  )
showy :degree ( very :arg2-of ( like :arg0 we :arg1 ostentation :polarity - )  )  :domain we :polarity -
contrast :arg1 ( all :arg1-of ( invest :arg0 ( country :arg0-of ( handle :arg1 ( wealth :mod oil )  :manner ( careful :degree very )  )  :name ( name :op1 norway )  :wiki norway )  :arg2 ( fund :arg0 industry :arg1-of special )  :purpose ( benefit :arg0 ( generation :time future )  )  )  )  :arg2 ( percentage :consist-of money :mod small )
crash :arg1 - :arg4-of ( lead :arg0 ( country :arg0-of ( keep :arg1 ( everyone :arg0-of ( throw :arg1 money :arg2 around )  :mod else )  :arg2 purse )  :arg1-of ( bind :arg0 string :arg1-of ( tight :arg0 they )  )  :name ( name :op1 norway )  :wiki norway )  :arg1 ( year :unit-of temporal-quantity )  )  :mod finance :mod globe
say :arg0 ( we :arg1-of ( hike :arg0 ( we :arg0-of ski :arg0-of ( go :arg1 happy :arg1-of long :arg1-of possible :arg4 summer :op2-of ( and :op1 winter )  )  )  )  )  :arg1 ( person :name ( name :op1 &quot; )  )
and :arg0-of ( eat :arg1 ( laugh :arg0 carefree :arg1 rakfisk :arg1-of ( add :arg0 she )  )  )
and :op1 ( stand :arg2 snow )  :op2 ( queue :arg0 i :purpose ( eat :arg0 something :arg1 ( enough :quant-of ( rakfisk :poss i )  )  )  )
something :arg1-of ( differ :op1-of ( and :op2 succulent )  )  :arg1-of taste :domain ( burg :mod elk )  :mod certain :mod now
contrast :arg1 ( fish :mod that )  :arg2 ( more :mod-of evening )
or :arg1-of ( vote :arg0 guest :purpose ( stay :arg0 perhaps :arg1 i :arg2-of ( challenge :arg0 ( nasally :degree most )  :arg1 fish )  :location hotel )  :time-of ( host :arg0 ( good :degree most )  :arg1 ( dinner :mod rakfisk )  :arg2 ( venu :quant number )  )  )
surround :arg0 ( tie :mod ( bow :arg0 compere )  )  :arg1 ( plate :mod rakfisk )  :arg1-of ( live :arg1-of ( link :arg2 tv )  )
resemble :arg1 it :arg2 ( contest :arg1 ( thing :name ( name :op1 eurovision )  )  :arg3 song )
do :arg0 you :arg1 ( good :degree most :mod-of fish )  :arg2 ( organization :mod mountain :name ( name :op1 &quot; )  :op1-of interrogative )  :arg2-of ( score :arg0 amr-unknown :arg1 there )
point :location here :mod we :mod-of ( person :name ( name :op1 &quot; )  )
laught :arg1-of clap
fall :arg0 ( man :arg0-of ( overcome :manner aquavit :manner perhaps )  )  :arg1 chair
fume :op1-of or :source ( fish :mod ( that :mod-of all )  )
face :arg0 ( country :name ( name :op1 mexico )  :wiki mexico )  :arg1 start :arg1-of tough
expect :arg0 population :arg1 ( and :arg1-of mix :arg1-of ( face :arg0 ( thing :arg2-of ( challenge :arg1 ( look :arg0 ( company :name ( name :op1 bbc )  :wiki bbc )  :arg1 ( grant :arg1 ( take :arg0 ( country :arg1-of ( have-org-role :arg0 incoming :arg2 president )  :name ( name :op1 mexico )  :wiki mexico )  :arg1 office :arg1-of prepare )  )  )  )  )  :arg2 he )  )
bad :arg1 ( traffic :location ( country :name ( name :op1 mexico :op2 city )  )  )  :compared-to present :mod particular
steel :consist ( ring :arg3-of ( erect :arg1 ( city :arg1-of congest )  :time ( since :op1 ( cut :arg0 monday :arg1 ( route :arg1-of key :quant several )  :op1-of ( and :arg0-of ( cause :arg1 road )  :op2 capital :op3 chaos :poss-of ( good :degree most )  )  )  )  )  )
contrast :arg1 ( work :arg0 ( person :arg0-of ( stop :arg1 aim :polarity - )  :arg0-of commute :arg0-of ( get :arg1 ( person :arg0-of ( protest :arg1 ( reach :arg1 parliament )  )  :arg1-of prevent )  )  )  )
and :op1 ( take :arg0 ( person :arg0-of ( have-org-role :arg1 ( country :name ( name :op1 mexico )  :wiki mexico )  :arg2 ( president :arg1-of ( will :arg0 saturday :arg1-of receive )  )  :location new )  :arg0-of ( have-org-role :arg2 president )  )  :arg1-of nation :arg1-of run :location sash )
face :arg0 he :arg1 ( task :arg1-of complicate )
contrast :arg0 ( 6 :quant-of ( temporal-quantity :unit year )  )  :arg1 ( perform :arg0 ( country :name ( name :op1 mexico )  :wiki mexico )  :manner economy )  :arg2 ( grip :arg0 country :arg0-of ( claim :arg1 ( life :arg1-of ( estimate :arg0 outgoing )  )  :time already )  :arg1 drug :arg2 war )  :time ( administrate :arg1 ( person :name ( name :op1 felipe :op2 calderon )  )  )
commit :arg0 i :arg1 ( person :mod ( country :arg1-of ( govern :arg0 ( government-organization :arg0-of ( reduce :arg1 violence :arg2 ( person :arg0-of ( have-org-role :arg1 ( organization :name ( name :op1 &quot; )  )  :arg2 president )  :arg0-of ( tell :arg2 ( person :mod ( country :name ( name :op1 us )  :wiki united_states )  :name ( name :op1 barack :op2 obama )  :wiki barack_obama )  :time ( early :mod-of ( week :mod this )  )  :time mr )  :name ( name :op1 &quot; )  )  )  )  )  :name ( name :op1 mexico )  :wiki mexico )  )  :mod great
propose :arg0 i :arg1 ( strategy :arg0-of ( allow :arg1 ( achieve :arg1 ( aim :mod that )  )  )  :mod security :mod new )
rub :arg0 before :arg1 ( president :arg2-of ( have-org-role :arg0 ( he :arg0-of ( have-org-role :arg1 ( country :name ( name :op1 mexico )  :wiki mexico )  :arg2 governor :location state )  :poss-of home )  :arg1 ( country :arg0-of ( experience :arg1 ( politics :op1-of previous )  )  :name ( name :op1 us )  :wiki united_states )  )  )  :arg1-of ( shoulder :arg0 state )
opine :arg0 ( person :arg0-of lead :mod new )  :arg2-of ( divide :arg1 ( state :arg0-of ( surround :arg1 capital )  :arg1-of sprawl :arg1-of populate )  :location ( ground :arg1-of stomp :mod old )  )
man :mod straightforward
remember :arg0 example :arg1 he :mod fondly :op1-of ( person :mod-of ( bravo :op2-of ( name :name-of ( thing :poss-of ( town :mod bucolic )  )  :op1 del )  )  :name ( name :op1 valle )  :wiki - )
and :op1 ( tourism :arg1-of ( boost :arg2-of ( credit :arg0 ( person :arg0-of reside )  )  )  )  :op2 ( infrastructure :mod build :mod resort )
and :arg1-of ( improve :arg0 vast :arg2 road :arg3-of ( drive :arg0 ( you :arg0-of ( reach :arg1 the :arg2 town )  )  :arg1-of possible :arg2 mr :extent along :extent of :extent 1 :extent ' :extent pena :extent nieto :extent new )  :extent ( replace :arg0 it )  )  :arg1-of ( crack :arg2 bumpy )  :example-of motorway
hang :arg0 and :arg1 ( plaqu :arg0-of ( bear :arg1 ( name :mod-of ( change :arg1 climate )  :mod-of ( museum :arg1-of impress :arg1-of modern :mod interactive )  )  )  )  :arg2 ( centre-left :mod sport )  :location outside :mod also
say :arg0 ( we :arg0-of bring :arg0-of ( look :arg1 pri )  :arg0-of ( have-rel-role :arg1 hernandez :arg2 friend )  )  :arg1 ( and :op1 ( change :arg1 congressman :arg1-of ( last :arg0 about )  :op2-of ( and :op1 real )  )  :op2 ( politics :arg0-of ( ally :arg2 olvera :location state )  )  :op3 mr :op4 ( party :mod ' :mod nieto )  )
hope :arg0 we :arg1 economy :op1-of ( and :op2 ( true :mod interesting )  :op3 ( change :arg0 country :arg1 ( need :arg0 we :arg1 badly )  )  )  :op3-of ( and :op1 ( term :mod particularly )  :op2 security )
oust :arg1 ( organization :name ( name :op1 pri )  :name power )  :arg2 ( date-entity :degree ( person :name ( name :op1 vicente :op2 fox )  :quant ( 81 :quant-of ( temporal-quantity :op1-of unbroken :unit year )  )  )  :year 2000 )  :time after
admit :arg0 ( thing :name ( name :op1 congressman :op2 olvera )  )  :location ( organization :name ( name :op1 los :op2 pinos )  :poss-of ( palace :op1-of ( outside :location-of ( expect :arg0 ( person :name ( name :op1 enrique :op2 pena :op3 nieto )  )  :arg1 party :quant much )  )  :poss ( person :arg0-of ( have-org-role :arg2 president )  )  )  )  :time ( after :op1 ( 12 :quant-of ( temporal-quantity :unit year )  )  )
and :op1 ( he :arg0-of ( oppose :arg1 characterisation )  :arg0-of ( lack :arg1 substance )  :arg0-of ( reject :arg1 new )  :arg0-of ( have-org-role :arg2 president )  )
excellent :arg0 country :arg1 ( commit :arg1 he :op1-of very :op1-of ( man :op1-of ( straightforward :degree very )  )  )
excellent :arg0 ( he :arg0-of ( know :arg1 someone :manner-of ( listen :arg0 he :arg1 amr-unknown )  )  )  :arg1 ( and :op1 statesman :op2 above :op3 all )
contrast :arg2 ( impression :arg1 ( side :mod other :poss ( state :arg1-of ( have-org-role :arg0 ( person :quant many )  :arg2 governor :time former )  )  )  :polarity - )
contrast :arg1 ( cobble :arg0 ( person :arg1-of ( know :arg0 also )  :name ( name :op1 valle )  :wiki - )  :arg1 street )  :arg2 ( possible :arg1 sharp :polarity - )
suburb :part-of ( country :arg0-of ( tuck :arg1 ( flyover :mod motorway :op1-of ( many :quant-of way )  )  :arg3 away )  :name ( name :op1 mexico :op2 city )  )
and :domain ( problem :topic municipality )  :op1 and :op2 ( gritty :mod also )  :op3 urban
and :op1 ( call :arg1 military :arg2 ( help :arg1 ( tackle :arg1 ( gang :arg0-of ( operate :location neighbourhood )  :mod drug )  )  )  :time ( early :op1 ( year :mod this )  )  )  :op2 ( acute :domain ( violence :prep-against woman )  :mod particular )
alone :arg1-of ( landfill :arg0 ( temporal-quantity :op1-of past :quant 2 :unit year )  :mod-of ( site :arg0-of ( patch :arg1 wasteland )  :arg0-of ( murder :arg1 ( woman :quant ( dozen :poss-of ( body :arg1-of dump )  )  )  )  :mod vast )  )
mr :mod-of ( person :arg0-of ( have-org-role :arg1 ( country :location-of ( city :mod ( violent :degree notorious )  )  :name ( name :op1 ciudad :op2 juarez )  )  :arg2 governor :arg2-of ( innocent :arg1 ( woman :arg1-of ( murder :arg0 much :compared-to-of ( synonymou :domain place )  )  )  :purpose-of ( high :arg1 rate )  )  :condition-of ( kill :arg1 ( woman :quant more-than )  :location ( state :location ( country :name ( name :op1 mexico )  :wiki mexico )  )  )  )  :name ( name :op1 pena :op2 nieto )  )
say :arg0 ( he :domain-of office )  :arg1 mr :arg2 ( critic :arg2-of ( fail :arg0 ( he :arg0-of ( address :arg1 ( problem :mod-of ( of :mod-of while )  )  :mod adequate )  )  :mod ( good :degree most )  )  )
accuse :arg0 they :arg1 ( administrate :arg1 they )  :arg1-of bad :arg2 ( turn :arg1 ( eye :arg1-of blind )  )
rundown :mod-of ( neighbourhood :arg2-of ( typical :arg1 ( home :arg1-of concrete :poss ( person :arg0-of ( struggle :arg1 ( fight :arg0 ( she :arg0-of ( show :arg1 ( i :arg1-of ( have-rel-role :arg0 ( person :mod late :topic-of photo )  :arg2 daughter )  )  )  )  :arg1 tear :direction back )  )  :name ( name :op1 irinea :op2 buendia )  )  :poss ( person :name ( name :op1 mariana :op2 luna )  )  )  )  )
say :arg0 ( version :mod ( official :quant ( date-entity :year 2010 )  )  :mod event )  :arg1 ( commit :arg0 ( person :name ( name :op1 mariana )  )  :arg1 suicide )
believe :arg0 family :arg1 ( murder :arg0 partner :arg1 she )
recall :arg0 ( person :arg1-of ( wash :arg0 ( she :arg1-of ( seem :arg0 ( she :arg2-of ( arrive :arg0 i :arg1 it )  :op1-of house )  )  )  )  :name ( name :op1 &quot; )  )  :arg1 body
and :mod rigor :op1 ( she :arg1-of sign )  :op2 ( beat-up :arg1 morti :arg2 already )
look :arg0 picture :arg1 ( person :name ( name :op1 mariana )  )  :condition ( recount :arg0 ( person :arg0-of ( have-rel-role :arg2 mother )  )  :arg1 story )  :location wall :time ( next :op1 ( cross :arg2-of ( bear :arg1 ( word :arg1-of ( single :arg2 justice )  )  )  )  )
say :arg0 family :arg1 ( deny :arg0 that :arg1 they )  :arg2 exact
resemble :arg1 ( treat :arg0 ( authority :arg0-of ( make :arg1 ( trouble :arg1 i :arg1-of ( gossip :mod old )  :arg1-of whine )  )  )  :arg1 state :arg2 i )
say :op2-of ( and :op1 ( accept :arg0 one :arg1 ( they :arg0-of ( want :arg1 amr-unknown )  )  :manner simple )  :op3 shut )
contrast :arg1 ( ca :mod that )  :arg2 ( and :arg1-of ( say :arg0 she )  :arg1-of ( cause :arg0 there :polarity - )  :op1 irregulariti :op2 omission :quant ( many :mod right )  )
come :arg1 ( person :arg0-of ( have-org-role :arg2 president )  :arg0-of ( receive :arg1 sash )  :name ( name :op1 pena :op2 nieto )  )  :arg3 ( responsible :arg1 saturday :mod heavy )
affect :arg0 ( crime :arg0 ( time :location office :poss priority )  :arg1 ( 6 :quant-of ( temporal-quantity :op1-of past :unit year )  )  :mod violent )  :arg1 ten :op1-of ( and :op2 ( promise :arg0 ( president :arg2-of ( have-org-role :arg1 ( country :name ( name :op1 mexico )  :wiki mexico )  )  :mod new )  :arg1 ( thousand :poss family )  )  )
say :arg0 ( he :arg0-of ( have-org-role :arg1 ( he :arg0-of ( have-org-role :arg1 congressman :arg2 governor )  )  :arg2 president )  :arg0-of ( same :arg1 of :arg2 kind )  :arg1-of ( hope :arg0 i :arg2 ' )  )  :arg1 pri :arg2 ( person :name ( name :op1 valle )  :op1-of del :wiki - )
fear :arg0 family :arg1 ( amr-unknown :arg1-of exact :degree-of victim :domain that )  :degree most
mistreatment :arg1-of ( contend :arg0 ( person :arg0-of prosecute :arg2-of ( complain :arg0 ( person :arg0-of man :name ( name :op1 bradley )  :wiki - )  :arg1 about :polarity - )  )  )
claim :arg0 ( person :arg0-of ( abuse :arg1 confinement :arg1-of ( try :arg0 ( person :arg0-of prosecute )  )  )  :arg0-of ( man :arg1 ' )  :arg1-of counter :name ( name :op1 bradley )  :wiki - )  :arg1 of
hear :arg0 ( state :name ( name :op1 virginia )  :wiki virginia )  :arg1 ( focus :arg0 military :arg1 brig :arg1-of man :arg2 time )
dismiss :arg0 ( want :arg0-of ( harsh :arg1 confinement )  :arg1 ground :mod defense )  :arg1 that :mod case
accuse :arg1 ( military :arg1-of private :name ( name :op1 army )  :wiki united_states_army )  :arg2 ( steal :arg1 thousand :arg2 ( classify :arg1 document )  )
charge :arg0 ( he :arg0-of ( complain :arg1 about :arg2 ( opportunity :arg2-of ( miss :arg0 ( country :mod-of history :name ( name :op1 u.s. )  :wiki united_states )  :arg1 multiple )  )  )  :arg0-of ( allege :arg1 ' :arg2 ( suffer :arg0 he :arg1 custody :arg2 military :mod mistreatment )  )  )  :arg1 ( person :arg1-of ( man :arg0 ( military :name ( name :op1 army )  :wiki united_states_army )  )  :arg1-of private :name ( name :op1 bradley )  :wiki - )  :arg2 ( leak :arg1 ( large :degree most )  :arg2-of ( classify :arg0 of :arg1 material )  )  :manner ( try :arg0 ( person :arg0-of prosecute )  :arg1 ( establish :arg1 friday )  )  :mod that
show :arg1 ( complain :arg1 ( treat :arg1 ( person :arg0-of ( have-org-role :arg1 ( state :name ( name :op1 maryland )  :wiki maryland )  :arg2 officer )  :mod unit )  )  )  :arg1-of ( man :arg1-of ( hear :arg0 - )  :arg1-of ( examine :arg1-of ( cross :arg2 while )  )  )  :arg2 ( man :arg0 ( thing :arg1-of ( assert :op1-of meade )  :domain ( prosecute :arg0 record :arg1 9 :op1-of ( temporal-quantity :unit month )  :op1-of detention )  :name ( name :op1 maj :op2 . :op3 ashden :op4 fein )  )  :arg1 ( state :name ( name :op1 virginia )  :wiki virginia )  :arg2 ( visit :arg1 ( temporal-quantity :unit week )  )  )
testify :arg0 ( he :arg0-of ( consider :arg1 suicide )  :arg1-of ( come :op2-of ( and :op1 ( harsh :arg1 ( he :arg0-of ( man :arg1 motion )  :arg0-of ( amount :arg1 ( punish :arg1 enough )  )  :arg0-of ( cross :arg1 ( examine :arg1 ( hear :arg0 during :arg1-of defend )  )  )  :arg0-of ( dismiss :arg1 ground :arg1-of case )  :poss-of ( confinement :mod that )  )  )  )  :time day :time after )  :poss-of while )  :arg1 custody
accuse :arg1 ( analyze :arg1 ( intelligence :mod ( military :name ( name :op1 army )  :wiki united_states_army )  )  :arg1-of ( arrest :time ( date-entity :month 6 )  )  )  :arg2 ( steal :arg1 ( thousand :consist-of ( document :arg1-of classify )  )  :condition ( serve :arg0 ( date-entity :year 2010 )  :location ( country :name ( name :op1 iraq )  :wiki iraq )  )  )
publish :arg0 ( thing :name ( name :op1 wikileaks )  )  :arg1 material :medium online :mod then
confirm :arg0 ( thing :name ( name :op1 wikileaks )  )  :arg1 ( source :domain ( person :name ( name :op1 manning )  )  :poss information )
fill :arg0 form :arg1 ( person :arg0-of ( have-org-role :arg1 ( hear :arg0 ( he :arg0-of ( heighten :arg1 confinement )  :arg0-of ( hold :arg1 status :time ( date-entity :year 2010 )  :time ( date-entity :month 4 :year 2011 )  )  )  :arg1 friday :arg1-of man :arg1-of review )  :arg2 officer )  :arg1-of ( meet :arg1-of ( man :arg0 ( he :poss-of detention )  )  :time after )  )
ask :arg0 officer :arg2 ( question :arg1 ( person :name ( name :op1 manning )  )  )  :op1-of ( and :op2 ( write :arg1 ( thing :arg2-of respond )  )  )
excellent :arg0 ( he :arg0-of ( rate :arg1 facility :arg2 ( form :arg0-of ( acknowledge :arg1 ( ask :arg1 ( professional :degree very )  )  )  )  )  :arg0-of ( treat :arg1 ( person :arg0-of guard )  :arg2 friday )  :arg0-of ( treat :arg2 and )  )  :arg1 overall
show :arg0 form :arg1 ( complain :arg1 ( mistreatment :arg1-of direct )  :polarity - )  :condition ( ask :arg0 ( person :arg0-of contend :arg0-of ( have-org-role :arg2 officer )  )  :arg1 treat :arg2 ( person :name ( name :op1 manning )  )  :mod even )
contrast :arg1 ( record :polarity - )  :arg2 ( and :op1 ( concern :arg0 through :arg1 ( person :arg0-of ( have-org-role :arg2 officer )  :arg0-of talk :arg0-of ( visit :arg1 ( and :arg1-of ( express :arg0 ( person :arg0-of ( respond :arg1 that )  :name ( name :op1 manning )  )  :arg2 about :mod verbally )  :op1 ( concern :arg0 he :arg1 issue )  )  )  :arg0-of address )  )  :op2 ( indicate :arg0 they :arg1 ( issue :arg0 they )  )  )
say :arg0 ( i :arg0-of ( bring :arg1 ( something :arg1-of ( do :arg0 it :polarity - :polarity - )  :arg1-of mean :polarity - )  )  )  :arg1 ( and :arg1-of ( discuss :arg0 issue :arg1-of ( write :arg0 they )  )  :op1 ( concern :arg0 down :arg1 necessarily :time after )  )  :arg1-of man
express :arg0 ( he :arg1-of ( treat :arg0 ( he :arg1-of ( complain :arg0 ( he :arg0-of ( ask :arg1 lind :arg1-of ( man :arg0 ( military :name ( name :op1 army )  :wiki united_states_army )  )  :arg2 col :mod also )  :arg0-of ( do :arg1 why :polarity - )  :arg1-of judge )  )  )  :mod about :op1-of during :time ( date-entity :month 1 )  :time ( date-entity :year 2011 )  )  )  :arg1 ( examine :arg1 board :arg1-of meet )  :arg2 ( think :arg1 suicidal )  :time ( early :mod-of ( form :mod-of ( temporal-quantity :unit month )  )  )
intend :arg0 ( he :arg0-of prevent :arg0-of ( injure :arg1 ( status :arg1-of downgrade )  :mod of )  )  :arg1 during :arg1-of ( reply :arg0 ( person :name ( name :op1 manning )  )  )  :arg1-of meet :mod that
say :arg1 ( put :arg0 military :arg1 they :arg2 ( status :mod restrictive :mod this )  :purpose ( protect :arg1 ( watch :arg1 ( step :location below )  :mod suicide )  :op1-of ( and :arg1-of ( safe :arg0 other )  )  )  )
say :arg0 i :arg1 ( quality :arg1-of ( fine :arg0 i )  :arg1-of ( increase :arg0 ( i :arg0-of ( want :arg1-of ( know :arg0 ( i :arg0-of ( want :arg1 and :arg2 ( person :arg2-of staff )  )  )  )  :arg2 off )  :arg0-of ( get :arg1 status )  )  :arg2 life )  :arg1-of ( enjoy :arg0 ( country :name ( name :op1 &quot; )  )  )  :mod expressive :op1-of of )  :arg1-of ( man :arg0 viewpoint )
testify :arg0 ( person :arg1-of ( hold :arg0 he :arg2 ( nearly :op1 2 :op2 ( temporal-quantity :unit month )  )  :location ( name :op1 kuwait )  :time ( before :op1 ( transfer :arg2 brig :time ( organization :mod-of ( state :name ( name :op1 virginia )  :wiki virginia )  :name ( name :op1 marine :op2 base :op3 quantico :op4 in )  )  )  )  )  :name ( name :op1 manning )  )  :arg1 ( arrest :arg1 7 :op1-of ( and :op2 ( transfer :arg0 thursday :arg1 ( date-entity :year 2010 )  :arg2 ( country :name ( name :op1 iraq )  :wiki iraq )  )  )  )
say :arg0 ( he :poss-of ( name :op1 kuwait )  )  :arg1 ( and :op1 ( pass :arg1 ( he :arg0-of ( contemplate :arg1 suicide )  )  :arg2 there :time once )  )  :time heat
say :arg0 ( he :arg0-of ( know :arg1 ( happen :arg0 - :arg1 or )  :arg1-of allow )  )  :arg1 ( distress :arg1 ( world :mod outside )  )
say :arg0 ( i :arg0-of ( shrink :arg1 ( person :name ( name :op1 &quot; )  )  :mod ( just :mod-of world )  )  )  :arg1 thursday :arg1-of ( man :arg0 ( cage :mod that )  )
think :arg0 i :arg1 ( die :arg1 ( i :poss-of ( cage :mod that )  )  )
say :arg0 ( person :name ( name :op1 manning )  )  :arg1 ( and :op1 ( country :name ( name :op1 quantico )  )  :op2 ( hour :unit-of ( temporal-quantity :quant 23 )  )  )  :manner-of ( spend :arg0 ( he :poss-of ( company :polarity - )  )  :arg1 ( cell :mod small )  :arg2 ( 21 :quant-of ( temporal-quantity :unit hour )  )  :arg3 ( temporal-quantity :quant most :unit day )  :op1-of ( more :mod often )  :time once )
say :arg0 ( person :arg0-of ( allow :arg1 ( and :op1 blanket :op2 ( flop :arg1 flip )  :op3 ( clothes :quant some )  :op4 glass )  :arg2 ( he :domain-of only )  )  :name ( name :op1 manning )  )  :arg1 mattres
say :arg0 he :arg1 ( try :arg0 he :arg1 ( keep :arg1 ( move :arg1 he )  :arg0 he )  :arg1-of ( sleep :op1-of ( or :op2 ( lie :manner down :mod even )  )  :time day )  :arg1-of ( cause :arg0 rule )  )
say :arg0 ( person :name ( name :op1 manning )  )  :arg1 ( sleep :arg0 he :arg2 ( light :source ( outside :op1 ( cell :poss-of eye )  )  )  :time always )
say :arg0 ( person :arg0-of guard :arg0-of ( see :arg1 face :arg1-of ( possible :polarity - )  )  :arg1-of ( roll :arg0 he )  )  :arg1 ( wake-up :arg0 they :arg1 ( roll :arg1 night :mod back )  )
object :arg0 formal :arg1 ( treat :arg1 ( person :arg0-of ( file :arg1 lawyer )  :name ( name :op1 manning )  )  :arg1-of man :arg2 1 :time ( date-entity :year 2011 )  )
move :arg0 ( name :op1 kansas )  :arg1 ( person :name ( name :op1 manning )  )  :arg2 ( prison :location ( country :name ( name :op1 fort :op2 leavenworth )  )  :mod military )  :time ( date-entity :month 4 :year 2011 )
testify :arg0 ( he :arg0-of ( force :arg1 after :arg2 ( he :arg0-of ( count :arg1 ( head :arg0 ( person :arg0-of ( guard :arg1 front )  :op1-of ( and :op2 ( other :mod-of during :mod-of inmate )  )  )  :arg1 morning )  )  :mod-of cell )  )  :arg0-of ( allege :arg1 ( ask :arg0 ( he :arg0-of ( force :arg1 ( stand :mod-of naked )  )  )  :arg1 ( friday :mod also )  :arg1-of judge :arg2 about )  )  :arg0-of ( sleep :arg1 naked :arg2 night )  )  :arg1 thursday
testify :arg0 ( person :arg0-of ( head :arg1-of count )  :name ( name :op1 manning )  )  :arg1 ( chance :arg1 ( cover :arg2 blanket )  :arg1-of ( give :arg2 he )  )
infer :arg1 ( he :arg0-of ( recommend :arg1 ( he :arg0-of ( acknowledge :arg1 ( he :arg0-of ( drop :arg1 it )  :arg0-of ( order :arg1 - )  )  )  :arg1-of ( blanket :arg0 ( he :arg0-of guard )  )  :arg1-of cover )  :arg1-of drop :arg1-of ( possible :arg1-of contrast )  )  :arg0-of ( say :arg1 ( man :arg1 friday )  )  :arg1-of ( question :arg0 under :arg1-of judge )  )
cause :arg0 night :arg1 ( show :arg0 ( he :arg0-of ( attempt :arg1 of )  )  :arg1 he :arg1-of ( have-org-role :arg0 ( person :arg0-of ( testify :arg1 thursday )  :arg1-of ( force :arg0 ( he :arg0-of ( sleep :arg1 naked :arg2 previous )  )  :arg2 ( danger :polarity - )  :mod that )  :name ( name :op1 manning )  )  :arg2 officer )  )
contrast :arg1 flip :arg2 ( do :arg0 ( he :arg0-of ( use :arg1 of :arg1-of possible :arg2 waistband )  :arg2-of ( tell :arg0 ( he :arg0-of ( say :arg1 that )  :arg0-of ( hurt :arg1 ( he :arg0-of flop )  )  )  :arg1 ( person :arg0-of ( have-org-role :arg2 officer )  :name ( name :op1 manning )  )  )  )  :arg0-of ( cause :arg1 ( or :op1 underwear )  )  :polarity - )
testify :arg0 ( person :name ( name :op1 manning )  )  :arg1 ( underwear :op1-of ( and :arg4-of ( remove :arg1 ( night :mod that )  :arg2 cell )  :op2 ( flop :arg1 flip )  :op3 glass )  )
hope :arg1 ( take :arg1 ( thing :arg1-of experience )  :manner confinement :op2-of ( and :op1 judge :op3 ( reduce :arg1 ( sentence :arg1 account )  :arg2 ( he :arg1-of ( convict :arg1-of recommend :arg2 court :time ( martial :arg0-of ( expect :arg1 ( begin :arg1 ( next :mod-of ( year :op1-of early )  )  )  )  )  )  )  :manner sharp )  )  )  :arg2 ( he :poss-of lawyer )
say :arg0 defend :arg1 ( plan :arg1 ( and :op1 ( offend :compared-to-of less )  :op2 ( fight :arg0 ( person :arg0-of ( plead :arg1 ( guilty :arg1 person )  )  :name ( name :op1 manning )  )  :arg1 ( charge :arg1 ( extreme :degree too )  :mod other )  )  )  )
schedule :arg1 hear :arg2 ( resume :arg0 ( person :arg0-of ( argue :arg1 ( warrant :arg1 ( condition :mod detention )  )  )  :arg0-of prosecute :arg0-of ( expect :arg1 argue )  )  :arg1 ( weekend :mod this )  )
detaine :arg2-of ( govern :arg1 ( rule :arg2-of ( accord :arg1 ( person :arg1-of ( hold :arg1-of ( maintain :arg0 ( government-organization :name ( name :op1 pentagon )  :wiki the_pentagon )  )  )  :name ( name :op1 manning )  )  )  )  )  :mod ( custody :mod maximum )  :quant all
include :arg1 ( and :arg0-of ( cause :arg1 ( publish :arg1 intelligence :medium internet )  :time wrongfully )  :op1 ( aid :arg0 ( count :arg1 ( person :name ( name :op1 manning )  )  )  :arg1 ( person :arg0-of ( have-rel-role :arg2 enemy )  )  )  :op2 ( transmit :arg1 ( information :arg1-of ( defend :mod nation )  )  )  :op3 ( or :op1 ( property :mod public )  :op2 record )  )
possible :arg1 ( he :arg0-of ( sentence :arg1 life )  :arg0-of ( face :arg1 all )  :arg1-of ( convict :arg0 ( he :arg0-of count )  )  )
thing :mod-of ( crisis :mod identity :mod-of i )  :name ( name :op1 mexican-american )
say :arg0 he :arg1 ( force :arg1 many :arg2 ( leave :arg1 ( country :arg0-of ( lack :arg1 ( opportunity :mod there )  )  :name ( name :op1 mexico )  :wiki mexico )  :arg2-of cause )  )
say :arg0 he :arg1 ( remind :arg0 they :arg1 ( person :mod ( country :name ( name :op1 mexico )  :wiki mexico )  )  :op2-of ( and :op1 ( tend :arg2 ( fault :arg0 ( person :mod ( country :name ( name :op1 mexico )  :wiki mexico )  )  :arg1 leave :arg1-of hard )  )  )  )
say :arg1 ( catch :arg1 ( thing :name ( name :op1 mexican-americans )  )  :arg4 ( world :quant 2 )  )
and :op1 way :op2 ( arrive :arg0 ( i :arg0-of ( trip :arg1 ( country :name ( name :op1 mexico :op2 city )  )  :time recent )  )  :arg1 ( immigrate :arg1 bare :arg1-of process )  :arg4 ( area :arg1-of ( get :arg0 ( i :arg1-of stump )  )  )  )  :op2-of ( down :op1 concourse )
point-out :arg0 ( person :mod ( country :name ( name :op1 mexico )  :wiki mexico )  )  :arg1 ( thing :arg1-of ( mean :arg0 ( line :quant 2 )  :arg2 ( thing :domain-of foreigner :mod another :name ( name :op1 signs )  )  )  :name ( name :op1 signs )  :quant 1 )  :arg2 ( sign :arg1 way )
stand :arg1 ( i :arg0-of ( go :arg2-of ( sure :polarity - )  )  )  :arg2 there :duration ( few :op1 ( temporal-quantity :unit second )  )
call :arg0 ( i :arg1-of ( grow-up :arg0 ( state :name ( name :op1 california )  :wiki california )  )  )  :arg1 ( country :name ( name :op1 mexico )  :wiki mexico )  :arg2 ( life :mod entire )
refer :arg0 ( person :arg0-of ( have-rel-role :arg1 i :arg2 friend )  :arg1-of ( have-rel-role :arg0 ( person :arg1-of ( describe :location ( city :name ( name :op1 new :op2 york )  :wiki new_york_city )  )  :op2-of ( or :op1 irish_republican_army )  )  :arg2 friend )  :poss-of ( way :manner-of ( same :arg0 ( shorthand :poss it )  :arg1 ethnic )  :poss ( country :name ( name :op1 italy )  :wiki italy )  )  )  :arg1 ( city :name ( name :op1 boston )  :wiki boston )
thing :arg1-of ( settle :arg0 i )  :mod late :name ( name :op1 later )
contrast :arg2 ( country :domain this :name ( name :op1 mexico )  :wiki mexico )
and :op1 ( person :arg0-of ( have-rel-role :arg2 grandfather )  :poss-of homeland )  :op2 ( need :arg1 ( or :op1 shorthand :op2 hyphen )  :polarity - )
country :name ( name :domain i :op1 america )  :time simple :wiki united_states
interview :arg0 ( language :mod that )  :arg1-of ( end :arg1-of ( handle :arg1-of ( speak :arg0 i :arg3 ( language :mod ( good :mod enough )  :name ( name :op1 spanish )  :wiki spanish_language )  )  )  :mod either )
contrast :arg1 i :arg2 ( and :example-of vocabulary :op1 native :op2 ( i :arg0-of ( shake :arg1 accent :arg2 i :polarity - :polarity - )  )  )
and :arg1-of ( cause :arg0 ( thing :name ( name :op1 extranjeros )  )  )  :op1 ( get :arg0 ( i :poss-of ( passport :mod ( country :name ( name :op1 u.s. )  :wiki united_states )  )  )  :manner line )
think :arg0 ( i :arg1-of ( visit :arg0 ( thing :name ( name :op1 ( pena :mod ( thing :name ( name :op1 president :op2 - :op3 elect :op4 enrique )  )  )  :op2 nieto )  )  :purpose ( meet :arg0 ( government-organization :name ( name :op1 white :op2 house )  :wiki white_house )  :arg1 ( person :arg0-of ( have-org-role :arg1 ( country :name ( name :op1 mexico )  :wiki mexico )  :arg2 president )  :name ( name :op1 obama )  :wiki barack_obama )  )  )  )  :arg1 ( moment :mod that )  :time ( week :mod this )
and :op1 drug :op2 ( trade :arg0 usual :arg1 ( agenda :arg1-of ( immigrate :arg0 this :arg1-of ( meet :arg0 ( person :arg0-of ( lead :arg1 ( country :quant 2 )  )  )  )  )  )  )
eager :arg0 ( person :name ( name :op1 pena :op2 nieto )  )  :arg1 ( talk :arg0 ( person :arg1-of ( stay :arg0 reason :arg1-of likely :arg3 venture :location ( country :name ( name :op1 mexico )  :wiki mexico )  :time now )  :mod ( country :name ( name :op1 mexico )  :wiki mexico )  )  :arg1 ( grow :arg0 just :arg1 ( economy :mod ( country :name ( name :op1 mexico )  :wiki mexico )  :poss ( country :name ( name :op1 united :op2 states )  :wiki united_states )  )  )  )  :mod also
and :op1 ( country :name ( name :op1 canada )  :wiki canada )  :op2 ( create :arg0 ( he :arg0-of ( partner :arg1 ( country :name ( name :op1 united :op2 states )  :wiki united_states )  )  :arg0-of want )  :arg1 ( bloc :arg0-of ( trade :location ( continent :name ( name :op1 north :op2 america )  :wiki north_america )  )  :mod ( style :mod ( organization :name ( name :op1 european :op2 union )  :wiki european_union )  )  )  :op1-of and )
vow :arg1 ( continue :arg0 ( he :arg0-of ( offer :arg1 specific :mod even :polarity - )  )  :arg1 ( war :arg0 ( country :name ( name :op1 mexico )  :wiki mexico )  :arg1 cartel :op1-of ( against :location drug )  )  :op1-of and )
and :op1 complicate :op2 ( fill :arg0 ( relation :arg0 ( country :name ( name :op1 mexico )  :wiki mexico )  :arg2 ( country :name ( name :op1 united :op2 states )  :wiki united_states )  )  :arg2 ( feel :arg1-of hard )  )
and :op1 ( fact :arg2-of ( give :arg0 ( person :mod ( country :name ( name :op1 america )  :wiki united_states )  :mod most )  :arg1 ( think :arg1 half :mod probable )  )  )  :op2 ( invade :arg1 ( country :name ( name :op1 mexico )  :wiki mexico )  :time ( date-entity :year 1848 )  )  :op3 ( force :arg0 ( country :name ( name :op1 united :op2 states )  :wiki united_states )  :arg1 ( person :arg0-of lead )  :arg2 ( sign :arg1 territory :time ( point :mod rifle )  :arg0 person )  )
contrast :arg1 ( term :manner-of ( think :arg0 ( person :mod ( country :name ( name :op1 mexico )  :wiki mexico )  )  :arg1 ( temporal-quantity :polarity - :unit minute )  :arg2 everywhere )  :mod ( temporal-quantity :unit century )  :part reminder )
say :arg0 ( person :arg0-of ( complain :arg1 elite :arg2 ( person :arg0-of ( encroach :arg1 amr-unknown :arg2 ( neighbor :arg2 sovereignty )  )  :mod ( country :name ( name :op1 america )  :wiki united_states )  )  )  :arg0-of ( have-org-role :arg1 ( country :name ( name :op1 u.s. )  :wiki united_states )  :arg2 official )  :quant ( temporal-quantity :unit minute )  )  :arg1 ( and :arg0-of ( cause :arg1 ( anything :arg1-of ( critical :arg0 bit :arg2 ( country :name ( name :op1 mexico )  :wiki mexico )  )  )  )  :arg2-of ( hear :arg1 ( press :mod ( country :name ( name :op1 mexico )  :wiki mexico )  )  :arg1-of ( start :arg0 you )  )  )
and :op1 ( go :arg0 ( child :mod ( country :name ( name :op1 montezuma )  )  )  :arg1 warpath )
and :op1 ( relation :arg0 ( country :location-of ( live :arg1 ( thing :name ( name :op1 mexican-americans )  :quant more )  )  :mod yet :name ( name :op1 united :op2 states )  :wiki united_states )  :arg1 35 :arg1-of ( challenge :degree really )  :arg2 ( country :name ( name :op1 mexico )  :wiki mexico )  )
want :arg0 you :arg1 ( talk :arg1 ( feel :arg1-of hard )  :arg0 you )  :mode interrogative
plenty
and :op1 ( country :name ( name :op1 mexico )  :wiki mexico )  :op2 winner :op3 loser :op4 ( person :op1-of ( and :op2 ( provide :arg0 country :arg2 it :polarity - )  :op3 opportunity :op4 other )  )
and :op1 ( shut-down :arg0 ( person :arg1-of ( have-rel-role :arg0 ( person :consist-of ( ancestry :arg1-of ( live :arg0 you :location ( city :arg1-of ( resemble :arg2 ( or :op1 ( city :name ( name :op1 los :op2 angeles )  :wiki los_angeles )  :op2 ( city :name ( name :op1 vegas )  :wiki las_vegas )  :op3 ( city :name ( name :op1 phoenix )  :wiki phoenix,_arizona )  :op4 ( city :name ( name :op1 denver )  :wiki denver )  :op5 ( country :name ( name :op1 san :op2 antonio )  )  :op6 ( cause :arg0 ( reason :mod only )  )  )  )  )  )  :mod ( country :name ( name :op1 mexico )  :wiki mexico )  )  :quant many )  :arg2 ( grandparent :op2-of ( or :op1 parent )  )  )  )  :arg1 ( some :mod-of point )  :location ( country :location-of opportunity :name ( name :op1 mexico )  :wiki mexico )  )  :op2 ( go :arg0 ( we :poss-of ( tree :poss family )  )  :arg1 north )
and :op1 ( fit :arg0 - :arg1 ( person :mod that )  :arg2 ( profile :arg0-of ( dark :arg1 skin )  )  :frequency ( often :degree ( more :arg1-of ( educate :arg2 ( village :mod poor )  :mod little )  )  )  )
and :op1 we :op2 we :op3 loyal :quant offspr
country :name ( name :op1 mexico )  :polarity - :wiki mexico
and :example-of ( dream :arg1 we )  :op1 ( lose :arg0 we :arg1 ( sight :arg1 fact )  :arg1-of possible :purpose-of ( take :arg0 it :arg1 job :manner good :op3-of ( and :example-of ( and :op1 even )  :op1 ( go :arg0 we :arg1 school :arg1-of possible :arg1-of dream :arg1-of live :time now )  :op2 good )  :polarity - )  )  :op2 ( live :location ( country :name ( name :op1 mexico )  :wiki mexico )  )
contrast :arg1 ( possible :arg1 ( fuzzy :time sometimes )  )  :arg2 ( loyal :arg1 we :arg1-of ( clear :arg0 ( identity :poss we )  )  )
country :name ( name :op1 united :op2 states )  :poss it :wiki united_states
resemble :arg1 we :arg2 ( do :arg0 ( person :arg0-of ( rule :arg1 besides )  :mod ( country :name ( name :op1 mexico )  :wiki mexico )  :mod elite :quant many )  :arg1 class :polarity - )
feel :arg1 mutual
and :arg1-of ( look :arg0 down :arg1-of defeat :arg1-of ( suffice :arg0 ( country :name ( name :op1 mexico )  :wiki mexico )  :polarity - )  :arg1-of ( inferior :arg0 stock )  :arg1-of humiliate )  :arg1-of ( see :arg0 they :arg1-of remind )
tie :arg0 ( language :domain-of ( good :mod enough )  :name ( name :op1 spanish )  :poss we :wiki spanish_language )  :arg1 we :arg2 ( country :arg1-of ( strong :mod enough )  :name ( name :op1 mexico )  :wiki mexico )
exist :arg0 all :arg1 we :arg1-of fail :arg1-of ( see :arg0 they )
fail :arg0 family :arg1 we :arg1-of ( leave :arg0 they :polarity - )  :location ( country :name ( name :op1 mexico )  :wiki mexico )  :polarity -
contrast :arg1 nonetheles :arg2 ( lose :arg0 ( country :location-of ( live :condition-of ( find :arg0 we :example silk :location behind :manner ourselv :manner ( trap :arg1 curtain )  :manner - :time now )  )  :name ( name :op1 united :op2 states )  :wiki united_states )  :arg1 soul :op1-of and )
and :op1 ( bear :location ( country :name ( name :op1 guadalajara )  )  )  :op2 ( come :arg1 ( person :arg0-of ( remind :arg1 ( cause :arg0 friction :arg1 ( and :op1 ( person :mod ( country :name ( name :op1 mexico )  :wiki mexico )  )  :op2 ( thing :name ( name :op1 mexican-americans )  )  :op3 ( person :arg0-of ( grasp :arg1 ( and :op1 ( country :name ( name :op1 mexico )  :wiki mexico )  :op2 ( resent :arg0 ( person :mod ( country :name ( name :op1 america )  :wiki united_states )  )  :arg1 they )  )  :arg1-of firm )  :mod ( country :name ( name :op1 mexico )  :wiki mexico )  )  )  )  :arg2 i )  :arg0-of ( have-rel-role :arg1 i :arg2 wife )  )  :arg2 child :arg4 ( country :name ( name :op1 united :op2 states )  :wiki united_states )  )
see :arg0 she :arg1 ( country :name ( name :op1 u.s. )  :poss-of citizen :wiki united_states )  :arg1-of ( while :arg0 she )  :location country :mode 2
feel :arg0 ( i :arg0-of ( know :arg1 ( person :mod ( country :name ( name :op1 america )  :wiki united_states )  :mod ( country :name ( name :op1 mexico )  :wiki mexico )  )  :arg1-of ( resemble :arg2 either )  )  )  :arg1 ( many :mod meanwhile )  :arg2 they :polarity -
contrast :arg1 ( love :arg0 ( we :domain-of ( person :name ( name :op1 los :op2 tigres :op3 del :op4 norte )  )  )  :arg1 listen :arg2 ( band :mod ( country :name ( name :op1 mexico )  :wiki mexico )  )  )  :arg2 ( person :mod also :name ( name :op1 bruce :op2 springsteen )  )
contrast :arg1 ( root :arg0 you :arg1 you :compared-to-of ( good :compared-to ( world :mod both )  :degree most )  )
see :arg0 we :arg1 ( person :mod ( country :name ( name :op1 america )  :wiki united_states )  )  :location ( country :name ( name :op1 mexico )  :wiki mexico )
and :op1 ( country :name ( name :op1 united :op2 states )  :wiki united_states )  :op2 ( consider :arg0 we :arg1 ( country :name ( name :op1 mexico )  :wiki mexico )  )
want :arg0 ( i :arg0-of ( learn :arg1 ( person :arg0-of ( lead :arg1 intelligentsia )  :mod ( country :arg0-of ( relation :arg1-of ( complicate :arg0 now :degree ( further :mod even )  )  :arg2 ( country :name ( name :op1 diaspora )  )  )  :name ( name :op1 mexico )  :wiki mexico )  :quant some )  :time trip )  )  :op2-of ( and :op1 part )
interest :arg0 ( thing :arg1-of ( put :arg0 ( want :arg0 they )  :arg1-of ( work :arg0 ( country :name ( name :op1 united :op2 states )  :wiki united_states )  )  :arg2 makeshift )  :name ( name :op1 they )  )  :arg1 ( represent :arg0 ( country :name ( name :op1 mexico )  :wiki mexico )  :arg1 ambassador )
tell :arg0 ( we :arg0-of ( visit :arg1 ( country :mod great )  :arg2 this :op1-of ( and :op2 ( pressure :arg1 ( strengthen :arg0 ( person :arg0-of lead :mod politics )  :arg1 ( tie :arg1 ( country :name ( name :op1 mexico )  :wiki mexico )  )  )  )  )  )  )  :arg1 fellow :arg2 ( person :mod ( country :name ( name :op1 america )  :poss we :wiki united_states )  )
yeah
that :quant -
feel :arg1-of hard :mod too :quant many
and :op1 violence :op2 ( country :mod great )  :op3-of ( and :arg2-of ( sure :arg0 drug :arg1 income :polarity - )  :op1 inequality :op2 ( corrupt :arg1 many :mod rampant :op1-of and )  )
amigo :poss ( you :poss i )
fair :degree that
and :op1 half :op2 ( accept :arg0 they :arg1 ( treat :arg0 it :arg1 amr-unknown :arg1-of ( forgive :arg0 ( person :arg0-of ( ready :arg1 yet :polarity - )  :mod ( country :name ( name :op1 mexico )  :wiki mexico )  :mod some )  )  :arg2 ( country :name ( name :op1 mexico )  :wiki mexico )  )  :time then )  :op3 fact :op4 ( hold :arg0 ( country :name ( name :op1 mexico )  :wiki mexico )  :arg1 ( person :arg0-of ( grudge :arg1 ( treat :arg0 ( country :name ( name :op1 united :op2 states )  :wiki united_states )  :arg1 ( person :arg0-of ( have-org-role :arg1 family :arg2 member )  )  :arg2 ( recent :degree more :quant much )  )  )  :mod ( country :name ( name :op1 america )  :wiki united_states )  :quant some )  :mod still )
hmmm
think :arg0 i :arg1 we :degree more :location ( country :name ( name :op1 mexico )  :wiki mexico )
battle :mod ( old :mod-of ( world-region :mod new :name ( name :op1 middle :op2 east )  :wiki middle_east )  )
possible :arg1 ( foundation :arg1-of ( likely :polarity - )  :mod peace )  :manner yet :op2-of ( and :arg1-of ( cease :arg0 ( country :name ( name :op1 israel )  :wiki israel )  )  :op1 ( organization :name ( name :op1 hamas )  :wiki hamas )  )
possible :arg1 ( and :location ( world-region :name ( name :op1 middle :op2 east )  :poss ever :wiki middle_east )  :op1 ( person :mod ( ethnic-group :name ( name :op1 arab )  :wiki arabs )  )  :op2 ( ethnic-group :name ( name :op1 jew )  :wiki jews )  )  :mode ( interrogative :mode-of ( peace :arg1-of last )  )
suggest :arg0 ( round :mod another :mod bloodshed )  :arg1 ( vain :domain ( hope :mod such :mod any )  )
and :op1 more :op2 140 :op3 ( country :name ( name :op1 palestine )  :wiki state_of_palestine )  :op4 ( person :arg1-of ( kill :arg0 they )  :mod ( country :name ( name :op1 israel )  :wiki israel )  :op2-of ( and :degree most :op1 6 :op3 ( and :op1 ( and :op1 ( land :arg0 civilian :arg1 ( argue :arg0 usual :arg1 building :arg1-of ( reduce :arg0 score )  :arg1-of ( start :arg0 it )  :op1-of futile )  :arg1-of ( near :arg0 gaza_strip :arg2 ( country :name ( name :op1 israel )  :wiki israel )  :location ( city :location-of ( and :location city :location ( city :name ( name :op1 jerusalem )  :wiki jerusalem )  :op1 holy )  :location-of metropolis :name ( name :op1 tel :op2 aviv )  :wiki tel_aviv )  :time time )  )  )  :op2 missile )  )  )  :quant rubble
contrast :arg2 ( change :arg0 all :arg1 ( world-region :name ( name :op1 middle :op2 east )  :wiki middle_east )  :condition ( stick :arg1 ( and :op1 ( person :mod ( country :name ( name :op1 israel )  :wiki israel )  )  )  :arg1-of seem :arg2 ( conflict :arg0 ( country :name ( name :op1 palestine )  :wiki state_of_palestine )  :mod ancient )  )  :location around )
and :arg1-of ( catch :arg0 - :arg1-of resemble :location ( turmoil :mod region )  :op2-of ( and :op1 ( throw :arg0 ( spring :mod ( ethnic-group :name ( name :op1 arab )  :wiki arabs )  )  :arg1 piece :arg2 air )  )  )  :op1 ( country :name ( name :op1 palestine )  :wiki state_of_palestine )  :op1-of or :op2 ( person :mod ( country :name ( name :op1 israel )  :wiki israel )  )
before :arg1-of ( struggle :arg1-of bloody :arg2 this )
possible :arg1 ( break-up :arg0 just :arg1 ( stalemate :mod lethal )  )  :arg1-of ( think :arg0 reason )
or :arg1-of win :op1 ( lose :arg1 war )
hard :arg1 ( justify :arg1-of ( look :arg0 optimism :location sight :time now )  )  :degree very
hold :arg0 21st :arg1 ( agree :arg1 ( fight :arg0 ( week :mod this )  :arg1-of ( strengthen :arg0 ( side :mod both )  :arg2 hawk )  )  :arg1-of ( cease :arg0 even )  :mod-of ( date-entity :month 11 )  )
claim :arg0 ( movement :arg0 ( religious-group :name ( name :op1 islamism )  :wiki islam )  :arg0-of ( rule :arg1 gaza_strip :time ( since :op1 ( date-entity :year 2007 )  )  )  )  :arg1 ( force :arg0 ( person :arg0-of ( take :arg1 drub :mod even :time gaza_strip )  :arg0-of ( lead :arg1 ( organization :name ( name :op1 hamas )  :wiki hamas )  )  )  :arg1 ( person :mod ( country :name ( name :op1 israel )  :wiki israel )  )  :arg2 back )
and :arg1-of ( bottle :arg0 ( person :arg0-of ( lead :arg1 some )  :arg0-of ( fail :arg1 planet :arg1-of ( destroy :arg0 ( country :name ( name :op1 israel )  :wiki israel )  )  :op3-of ( and :op1 ( crowd :arg0 most :arg1 wretch )  :op2 corner :op4 ( organization :name ( name :op1 hamas )  :wiki hamas )  )  )  :arg1-of ( kill :arg0 despite )  )  )  :op1 gaza_strip :op2 person
bitter :mod-of ( rival :arg0-of ( run :arg1 ( country :name ( name :op1 palestine )  :part ( bit :mod other )  :wiki state_of_palestine )  :location ( country :name ( name :op1 fatah )  )  :time current )  :arg1 ( country :mod-of ( faction :arg1-of ( moderate :arg1-of ( gain :arg0 ( organization :name ( name :op1 hamas )  :wiki hamas )  :arg2 ( country-region :name ( name :op1 west :op2 bank )  :wiki west_bank )  :mod indeed )  :degree more )  )  :name ( name :op1 palestine )  :wiki state_of_palestine )  )
conclude :arg0 ( person :arg0-of ( lead :arg1 ( organization :mod moreover :name ( name :op1 hamas )  :wiki hamas )  )  :arg1-of possible )  :arg1 side :mod-of time
and :op1 ( gain :arg0 ( person :mod ( religious-group :name ( name :op1 islamism )  :wiki islam )  )  :arg1 clout )  :op2 ( powerful :arg1 ( across :op1 ( world :mod ( ethnic-group :name ( name :op1 arab )  :wiki arabs )  )  )  )  :op3 rich :op4 ( person :arg0-of ( have-rel-role :arg1 ( organization :name ( name :op1 hamas )  :wiki hamas )  :arg2 friend )  )
cause :arg0 ( country :name ( name :op1 turkey )  :wiki turkey )  :arg1 ( and :arg0-of ( cause :arg1 ( and :op1 of :op2 ( rich :degree most )  :op3 ( dynamic :mod most )  )  )  :op1 ( take :arg1 ( power :mod region :mod resurgent :mod that )  :arg1-of ( ally :arg0 ( state :location-of ( world-region :name ( name :op1 gulf )  :wiki persian_gulf )  )  :arg2 ( country :name ( name :op1 israel )  :wiki israel )  :mod once )  :arg2 ( close :degree most )  :arg3 1 )  :op2 ( organization :name ( name :op1 hamas )  :wiki hamas )  :op3 ( country :name ( name :op1 qatar )  :wiki qatar )  )
sway :arg1 through :arg2 ( hold :arg1-of ( cum :arg2 north :op1-of ( party :op1-of ( and :arg1-of ( possible :arg1-of bend )  :arg1-of ( say :arg0 ( person :mod ( organization :name ( name :op1 hamas )  :op1-of jubilant :wiki hamas )  )  :arg2-of ( curve :arg1 ( crescent :mod ( religious-group :name ( name :op1 islamism )  :wiki islam )  )  :op1-of ( around :op2 ( country :name ( name :op1 israel )  :wiki israel )  :op3 ( country :name ( name :op1 lebanon )  :wiki lebanon )  )  )  )  :op2 ( person :arg0-of ( rebel :arg1 of )  )  :op3 ( increase :arg0 ( country :name ( name :op1 syria )  :wiki syria )  :arg1 ( religious-group :name ( name :op1 islamism )  :wiki islam )  )  :op4 ( person :arg1-of topple :name ( name :op1 assad )  :name ( name :op1 bashar )  :wiki bashar_al-assad )  :op5 down :op6 ( country :arg2-of ( ally :arg1 ( menace :arg1 king )  )  :name ( name :op1 jordan )  :wiki jordan )  :op7 ( organization :name ( name :op1 hamas )  :wiki hamas )  )  )  )  :mod militia )
and :op1 pivotal :op2 ( country :mod-of ( ethnic-group :name ( name :op1 arab )  :wiki arabs )  )  :op3 ( change :arg0 ( country :name ( name :op1 egypt )  :wiki egypt )  :arg1 ( far :arg1-of ( populate :arg0 ( south :arg0-of ( have-org-role :arg1 ( organization :name ( name :op1 muslim :op2 brotherhood )  :poss-of muhammad :wiki muslim_brotherhood )  :arg2 president )  :arg1-of ( rise :arg0 ( above :op1 all )  )  :arg1-of ( flank :arg0 ( country :name ( name :op1 israel )  :wiki israel )  )  )  :degree most )  )  :arg1-of ( balance :arg0 region )  )
downfall :op1-of ( until :time-of ( run :arg0 ( despot :mod secular )  :arg1 ( country :name ( name :op1 egypt )  :wiki egypt )  :arg2 ( organization :name ( name :op1 hamas )  :poss ( person :name ( name :op1 hosni :op2 mubarak )  :poss-of ( time :quant little )  :wiki hosni_mubarak )  :wiki hamas )  :duration ( temporal-quantity :quant 30 :unit year )  :time ( date-entity :year 2011 )  )  )
opine :arg1-of popular :arg1-of contrast :arg2-of ( subject :arg1 ( person :arg0-of lead :arg1-of ( have-rel-role :arg0 ( person :domain ( organization :name ( name :op1 brotherhood :op2 is )  )  :op1-of ( and :op2 ( organization :name ( name :op1 hamas )  :wiki hamas )  )  )  :arg2 cousin )  )  :degree more )
possible :arg1 ( emerge :arg0 ( organization :name ( name :op1 hamas )  :wiki hamas )  :arg1 ( actor :arg1-of ( shut-down :arg0 ( and :op1 ( country :name ( name :op1 israel )  :wiki israel )  :op2 ( country :name ( name :op1 america )  :wiki united_states )  )  :arg1-of ( possible :polarity - )  :degree even )  )  )  :time ( future :mod-of diplomacy )
conclude :arg0 meanwhile :arg1 ( thing :arg1-of opposite :arg2-of ( draw :arg0 ( country :name ( name :op1 israel )  :wiki israel )  :arg1 hardliner )  )
put :arg1 ( organization :name ( name :op1 hamas )  :wiki hamas )  :arg2 box :direction back :time ( term :mod military )
prove :arg1 it :op3-of ( and :op1 ( oppose :arg0 ( country :name ( name :op1 israel )  :wiki israel )  :arg1 dome :arg1-of iron )  :op2 ( missile :mod-of system )  :op4 worth :op5 many :op6 of :op7 ( organization :arg0-of ( destroy :arg1 missile )  :name ( name :op1 hamas )  :wiki hamas )  )
sleep :arg0 ( person :mod ( country :name ( name :op1 israel )  :wiki israel )  )  :arg1 ( soundly :degree more )  :duration while
and :op1 ( blame :arg0 ( country :location ( continent :name ( name :op1 europe )  :wiki europe )  :location also :name ( name :name-of ( organization :wiki hamas )  :op1 hamas )  :quant many )  :arg1 ( country :domain-of steadfast :name ( name :op1 america )  :wiki united_states )  :arg2 ( start :arg0 ever :arg1 ( round :mod ( late :degree most )  :mod-of violence )  :op1-of ( diplomacy :mod-of term )  )  )
prosper :arg0 ( country :location ( above :mod all )  :name ( name :op1 israel )  :wiki israel )  :arg1 ( person :arg0-of ( have-org-role :arg2 ( minister :arg0-of ( ignore :arg1 ( process :arg0 especially :arg1 peace )  :degree large )  :mod prime )  )  :name ( name :op1 netanyahu )  :wiki benjamin_netanyahu )
and :op1 ( person :arg0-of bomb :arg2-of ( free :arg0 ( chunk :mod main )  :arg1 ( country :arg0-of ( kill :arg1 ( rocket :source gaza_strip )  :location ( around :op1 ( person :arg1-of thank :mod ( country :name ( name :op1 israel )  :wiki israel )  :quant 30 )  )  :time ( since :op1 ( date-entity :year 2004 )  )  )  :name ( name :op1 israel )  :wiki israel )  :arg3 suicide :degree fair )  )  :op2 ( bite :location ( country-region :name ( name :op1 west :op2 bank )  :wiki west_bank )  )  :op3 ( protect :arg0 barrier :arg1 ( settlement :arg0-of ( continue :arg1 ( expand :arg1 ( law :mod international )  :time illegality )  )  :mod ( religious-group :name ( name :op1 jew )  :wiki jews )  :mod ( country :mod-of state :name ( name :op1 palestine )  :wiki state_of_palestine )  )  )
sit :arg0 ( hawkish :degree-of ( lot :mod ( more :mod even )  )  )  :arg1 ( person :arg0-of ( merge :arg1 ( party :arg0-of ( elect :arg1 1 )  :arg0-of ( run :arg1 22nd )  :mod ( organization :name ( name :op1 likud )  )  )  :arg2 ( person :name ( name :op1 lieberman )  :wiki joe_lieberman )  )  :mod mr :name ( name :op1 netanyahu )  :wiki benjamin_netanyahu )  :arg2 pretty
coddle :arg1 ( country :mod twisty :name ( name :op1 palestine )  :wiki state_of_palestine )  :manner ( give :arg1 state )  :mode interrogative
fire :arg0 ( interrogative :mode-of ( do :arg0 ( compatriot :mod just )  :arg1 ( they :arg0-of ( run :arg1 ( country-region :name ( name :op1 west :op2 bank )  :wiki west_bank )  :mod really )  )  :location gaza_strip )  )  :mod-of rocket :polarity -
and :op1 ( keep :arg1 ( they :arg0-of ( raise :arg1 person )  :arg1-of ( head :arg0 person )  )  :arg2 ( behind :op1 ( wall :mod that )  )  :op1-of good )  :op2 smite
possible :arg1 ( change :arg1 ( calculate :arg0 ( spring :manner yet :mod ( ethnic-group :name ( name :op1 arab )  :wiki arabs )  )  :arg1 and )  )  :purpose-of ( win :arg0 hardliner )
and :arg2-of ( take :arg0 ( person :arg0-of ( love :arg1 ( country :name ( name :op1 israel )  :wiki israel )  :mod little )  :arg2-of ( tackle :arg0 priority :arg1 ( difficulty :location home )  )  :mod ( religious-group :name ( name :op1 islamism )  :wiki islam )  )  :arg1 power :location ( country :name ( name :op1 egypt )  :wiki egypt )  :mod even )  :op1 elsewhere
of :mod ( that :mod-of ( ethnic-group :mod 4 :mod big :mod-of ( combine :arg0 ( country :arg0-of ( defend :arg1 budget )  :name ( name :op1 israel )  :wiki israel )  :arg2 it )  :mod-of neighbour :name ( name :op1 arab )  :wiki arabs )  )
superpower :arg0-of ( start :arg0-of ( help :arg1 ( mend :arg1 economy )  :arg2 ( government-organization :arg0-of govern :mod ( ethnic-group :name ( name :op1 arab )  :wiki arabs )  :mod new )  :mod hardly )  :arg1 war )  :arg1-of local
and :op1 ( augur :arg0 ( work :arg0 ( thing :mod pragmatic :name ( name :op1 mr :op2 morsi )  )  :arg1 ( obtain :arg1 ( cease :arg1 that )  )  :arg3 ( person :name ( name :op1 barack :op2 obama )  :wiki barack_obama )  )  )  :op2 ( possible :arg1 ( mark :arg1 ( start :arg1 something )  :mod just )  )
recommend :arg1 ( look :arg0 ( person :mod ( country :name ( name :op1 israel )  :wiki israel )  )  :arg1 ( term :arg1-of long )  :mod too )
determine :arg1 self :arg2-of ( right :arg1 ( country :arg0-of ( occupy :arg1 territory :mod ( much :time ( explode :arg1 bus :location ( city :name ( name :op1 tel :op2 aviv )  :wiki tel_aviv )  :time ( week :mod this )  )  )  )  :name ( name :op1 israel )  :wiki israel )  :topic-of ( country :arg0-of ( explode :purpose-of ( bind :arg0 ( keg :arg1-of powder :arg1-of ( create :arg0 deprive )  )  :arg1 day )  )  :arg0-of ( become :arg1 ( rest :part-of ( world :mod ( ethnic-group :name ( name :op1 arab )  :wiki arabs )  )  )  :arg2 ( democracy :degree more )  )  :name ( name :op1 palestine )  :wiki state_of_palestine )  )
undermine :arg0 repression :arg1 democracy :location ( state :mod ( religious-group :name ( name :op1 jew )  :wiki jews )  )  :op1-of ( and :op2 ( exacerbate :arg0 ( demography :arg0-of ( swell :arg1 ( population :mod ( ethnic-group :name ( name :op1 arab )  :wiki arabs )  )  )  )  :arg1 this )  )  :time already
toll :arg1-of exact :arg1-of ( grow :arg0 ( mission :arg1-of ( bloody :arg0 ( organization :arg1-of ( knock :arg0 ( year :unit-of ( temporal-quantity :op1-of ( few :mod every )  )  )  )  :name ( name :op1 hamas )  :path back :wiki hamas )  )  :prep-against gaza_strip )  )  :mod diplomacy
need :arg0 ( side :mod both )  :arg1 ( prod :arg0 outsider )
sense :arg1 most :arg2 ( person :arg0-of ( trumpet :arg1 one :arg3-of ( remain :arg0 ( territory :arg1-of ( cede :arg0 ( country :name ( name :op1 israel )  :wiki israel )  :arg2 ( state :quant 2 )  )  :purpose security )  :arg1 ( answer :arg1 ( world :mod outside )  )  )  )  :op1-of ( and :op2 ( newspaper :mod this )  )  :poss ( side :mod both )  )
hope :arg0 small :arg1 ( give :arg0 cease :arg1 ( leverage :arg0-of ( push :arg1 ( cause :arg0 ( short :mod-of term )  )  )  :quant ( more :quant little )  )  :arg2 outsider )
and :op1 ( swap :arg0-of ( base :arg1 ( state :mod ( religious-group :name ( name :op1 jew )  :wiki jews )  )  :arg2 ( boundary :time ( date-entity :year 1967 )  )  :topic-of ( idea :arg1-of ( accept :arg0 ( organization :name ( name :op1 hamas )  :wiki hamas )  :arg1-of ( persuade :arg0 ( country :arg0-of ( stop :arg1 ( flow :arg1 arm :location ( and :op1 ( country :mod-of ( gaza_strip :arg4-of along )  :name ( name :op1 turkey )  :wiki turkey )  :op2 ( country :name ( name :op1 qatar )  :wiki qatar )  )  )  )  :name ( name :op1 egypt )  :wiki egypt )  :arg1-of ( place :manner good )  )  :arg2 now )  )  )  :arg1 land )  :op2 ( city :arg1-of ( share :arg0 ever )  :name ( name :op1 jerusalem )  :wiki jerusalem )
recommend :arg1 ( press :arg0 ( outsider :mod ( ethnic-group :name ( name :op1 arab )  :wiki arabs )  )  :arg1 ( organization :name ( name :op1 hamas )  :wiki hamas )  :mod also :purpose ( come :manner together )  )  :op1-of ( and :op2 ( country :name ( name :op1 fatah )  )  )
statehood :arg1-of ( bid :arg0 ( country :mod-of ( state :arg1-of ( create :purpose-of ( do :arg0 that :arg1 more )  )  )  :name ( name :op1 palestine )  :wiki state_of_palestine )  :location ( organization :name ( name :op1 un )  :wiki united_nations )  :mod imminent )  :mod virtual
mr :name ( name :name-of ( person :wiki barack_obama )  :op1 obama )  :poss-of ( country :name ( name :op1 israel )  :name ( table :mod-of also )  :wiki israel )
neglect :arg0 he :arg1 ( present :arg1 plan :arg2 peace :arg0 he )  :time term
look :arg0 he :arg1 ( reluctant :topic draw )  :direction ( back :mod-of ( government-organization :name ( name :op1 white :op2 house )  :quant just :wiki white_house )  )
sight :arg1 ( this :domain-of short )  :manner woefully
interest :arg1 ( country :name ( name :op1 america )  :wiki united_states )  :arg2 ( world-region :arg1-of stable :name ( name :op1 middle :op2 east )  :wiki middle_east )  :mod vital
mean :arg1 that :time ( settle :arg0 ( country :name ( name :op1 israel )  :wiki israel )  :arg1 ( country :name ( name :op1 palestine )  :wiki state_of_palestine )  :arg2 and :mod peace )
come :arg1 ( law :mod cigarette :topic ( package :arg1 plain )  )  :arg4 ( force :location ( country :name ( name :op1 australia )  :wiki australia )  )
emblazon :arg0 ( and :op1 ( warn :arg1 ( smoke :arg0 all :arg1 ( same :arg1 ( brand :consist-of tobacco )  )  )  )  :op2 ( part :part-of body )  )  :arg1 ( box :arg1-of ( green :arg0 diseased :arg1-of dull )  )
and :op1 first :op2 law :op3 cigarette :op4 tobacco :op5 ( package :arg0 ( country :mod-of world :name ( name :op1 australia )  :wiki australia )  :arg1 plain )  :op6 ( come :arg1 ( person :arg1-of ( have-rel-role :arg0 ( person :arg1-of ( smoke :op4-of ( and :op1 ( child :arg2-of ( green :arg0 olive :arg1 covering )  :mod ( body :op2-of ( and :op1 ( diseased :mod ( of :mod ( picture :mod gruesome )  )  )  :op3 part :op4 depiction )  )  )  :op2 baby :op3 ill )  )  )  :arg2 parent )  :arg2-of ( replace :arg0 ( force :mod into )  :arg1 brand )  :mod colour :op2-of ( and :op1 logo :op3 ( generic :mod-of drab )  )  )  )
and :op1 ( image :op2-of ( and :op1 ( vary :arg0 saturday :arg1 ( warn :arg0 mandatory :arg1 health )  )  )  )  :op2 ( differ :arg1 ( pack :arg1 all )  :arg2 name :mod only )  :op3 ( print :arg1 this :location ( font :arg2-of ( identical :arg0 apart :arg1 brand )  :mod small )  )
package :arg0 ( regime :poss ( it :poss-of ( world :poss-of ( strict :degree most )  )  )  )  :arg1 tobacco
say :arg0 ( government-organization :arg0-of ( govern :arg1 ( country :name ( name :op1 australia )  :wiki australia )  )  :arg0-of ( aim :arg1 ( smoke :arg1-of ( strip :arg0 ( person :mod young )  :mod-of ( habit :mod ( of :mod-of glamour )  )  )  :arg1-of deter )  )  )  :arg1 federal
age :arg0 ( person :arg0-of ( start :arg1 ( chance :arg0 - :arg1 ( take :arg0 they :arg1 26 )  :arg2 ( percentage-entity :quant 99 )  )  :arg1-of ( study :arg1-of ( rely :arg0 it )  :arg1-of show )  )  :arg1-of smoke )
crown :arg0 ( child :arg0-of ( link :arg1 ( idea :op1-of of )  :arg2 princes )  :arg2-of ( brand :arg0 tobacco :arg1 ( study :arg0 ( person :name ( name :op1 &quot; )  )  :arg0-of ( show :arg1 example )  :arg1-of cite :arg1-of ( have-org-role :arg0 health :arg2 minister )  )  :arg1-of ( try :arg0 ( you :arg0-of ( see :arg1 kid :arg1-of possible )  :arg0-of ( understand :arg1 message :degree very )  :arg0-of ( say :arg1 federal )  :arg1-of ( age :arg0 even :arg2 that :time early )  )  )  :arg2-of ( sell :arg0 company :arg1 through )  )  )  :arg1 logo
and :op1 ( change :arg1 ( smoke :arg1 world :arg1-of while :arg1-of ( low :arg0 ( country :name ( name :op1 australia )  :wiki australia )  )  :arg1-of ( impact :arg0 little )  :arg1-of ( profit :arg0 multinational )  )  :arg1-of ( will :arg0 rate )  )  :op2 ( step :arg1 ( country :arg0-of ( consider :arg1 other )  )  :arg1-of resemble )
hard :arg1 ( lobby :arg0 ( industry :consist-of tobacco )  :arg1 law )
say :arg0 ( firm :consist-of tobacco )  :arg1 ( boost :arg0 ( they :arg0-of ( lead :arg4 ( cigarette :arg1-of cheap :arg1-of ( access :degree more )  )  )  )  :arg1 ( trade :mod ( market :arg1-of black )  )  )
say :arg0 legislation :arg1 ( of :mod-of ( organization :mod ( country :name ( name :op1 australia )  :wiki australia )  :name ( name :op1 &quot; )  )  )  :arg2 ( person :name ( name :op1 &quot; )  )  :arg2-of ( intend :arg0 there :arg1 consequence :mod serious )
bring :arg0 counterfeiter :arg1 ( lot :quant-of ( product :op1-of more )  )  :op3-of ( and :op1 ( country :name ( name :op1 china )  :wiki china )  :op2 ( country :name ( name :op1 indonesia )  :wiki indonesia )  )  :purpose ( sell :arg1 this :location ( street :location ( country :name ( name :op1 australia )  :wiki australia )  )  )
say :arg0 other :arg1 ( boost :arg0 law :arg1 business )
say :arg0 ( person :arg0-of ( import :arg1 ( of :mod ha )  )  :name ( name :op1 sandra )  )  :arg1 ( and :name ( name :op1 philip )  :op1 since :op2 ( country :mod-of tobacco :name ( name :op1 britain )  :wiki united_kingdom )  :op3 ( country :mod-of imperial :name ( name :op1 britain )  :wiki united_kingdom )  :op4 morri :op5 ( country :name ( name :op1 japan )  :wiki japan )  :op6 ( lose :arg2-of ( shoot :arg0 ( package :mod unpalatable )  :arg1 ( nothing :op1-of ( almost :quant-of ( temporal-quantity :quant ( 2 :quant-of ago )  :unit month )  )  )  )  :arg2-of ( cover :arg0 silicon :arg1 mask )  :arg2-of ( high :arg0 ( country :name ( name :op1 australia )  :wiki australia )  :arg1 court )  :arg2-of ( challenge :arg1 law )  )  )  :arg1-of ( demand :arg0 ( family :mod ( small :mod-of business )  )  :op1-of ( cigarette :arg1-of case )  )
say :arg0 ha :arg1 ( and :op1 ( sell :arg0 ( person :name ( name :op1 zico )  )  :arg1 ( outlet :arg1-of wholesale )  )  :op2 ( await :arg1 ( stock :mod new )  )  )
business :mod good :mod this
say :arg0 ( person :arg1-of expert :arg1-of ( plan :arg0 ( demography :degree very )  :arg1-of ( hitch :mod potential )  :arg1-of ( target :arg0 ( media :mod society :mod-of popularity )  )  )  )
advertise :arg3 tv :op1-of ( and :op2 sport :op3 sponsorship :op4 ( require :arg2 ( person :arg0-of ( hide :arg1 cigarette :arg2 view )  :arg0-of sell :quant most )  :op1-of ( and :arg1-of ( ban :arg0 ( law :mod ( country :arg2-of ( move :arg1 ( market :consist-of tobacco )  :medium online :time after )  :name ( name :op1 australia )  :wiki australia )  :quant series )  )  )  )  )
advertise :arg0 ( country :arg0-of ( restrict :arg1 ( site :location overseas )  :arg1-of ( possible :arg2-of contrast :polarity - )  )  :arg1-of ( ban :arg0 ( and :op1 ( company :arg1-of local )  :op2 site )  )  :name ( name :op1 australia )  :wiki australia )  :arg1 web
say :arg0 ( you :arg0-of ( research :arg1 ( health :mod public )  :arg2 ( city :name ( name :op1 sydney )  :wiki sydney )  )  )  :arg1 becky :arg2 freeman :arg2-of ( compel :arg0 ( you :arg0-of ( market :arg2 left :op2-of ( and :op1 tobacco :op3 ( get :arg0 you :arg1 this :mod only )  :op4 ( promote :arg0 ( window :mod small )  :arg1 product :arg2 online )  )  )  )  :arg1 place )
note :arg0 ( person :arg0-of ( increase :op1-of ( and :mod ( product :mod such :name ( name :op1 twitter )  :wiki twitter )  :op2 ( society :mod brand :mod-of site )  :op3 ( publication :name ( name :op1 youtube )  :wiki youtube )  :op4 ( company :name ( name :op1 facebook )  :wiki facebook )  )  )  :name ( name :op1 freeman )  )  :arg1 ( review :arg1-of ( average :arg0 media :arg2 ( person :name ( name :op1 joe )  :wiki joe_paterno )  )  :mod-of of )
ask :arg0 ( we :arg0-of ( go :arg1 cigarette :arg1-of ( trouble :arg0 they )  :arg1-of ( love :arg0 ( citizen :arg0-of ( private :arg1 just )  :mod-of really )  )  :op1-of and )  )  :arg1 ( or :arg1-of ( market :arg0 video :arg1-of ( involve :arg0 company :arg3 interrogative )  )  )
say :arg0 ( organization :name ( name :op1 british :op2 american :op3 tobacco )  )  :arg1 ( focus :arg0 ( country :name ( name :op1 australia )  :wiki australia )  :arg1 ( industry :arg1-of market )  :arg2 ( deal :arg2 ( rule :mod new )  )  )
and :op1 ( country :arg3-of pay :name ( name :op1 ukraine )  :wiki ukraine )  :op2 ( country :arg2-of ( trade :arg0 ( country :arg0-of ( claim :arg1 ( organization :name ( name :op1 world :op2 trade :op3 organisation )  )  )  :arg0-of ( restrict :arg2 ( fair :polarity - )  )  :arg1-of ( trade :arg0 ( country :poss-of none )  :arg1-of significant :arg2 ( country :name ( name :op1 australia )  :wiki australia )  )  )  )  :name ( name :op1 honduras )  :wiki honduras )  :op3 ( country :arg0-of ( challenge :arg1 ( rule :mod new )  :purpose-of ( go :arg0 industry :arg4 far )  )  :name ( name :op1 dominican :op2 republic )  )
likely :arg0 ( date-entity :mod mid :year 2013 )  :arg1 ( rule :arg0 ( organization :name ( name :op1 wto )  )  )
say :arg0 ( person :name ( name :op1 plibersek )  )  :arg1 ( hold :arg0 ( government-organization :arg0-of ( govern :arg1 ( country :mod other )  )  :arg0-of package )  :arg1 ( discuss :arg1 ( consider :arg1 ( law :arg1-of resemble )  )  )  )
mandatory :arg0-of ( warn :arg1 photograph :example-of ( country :domain ( country :name ( name :op1 canada )  :wiki canada )  )  )  :time ( date-entity :year 2001 )
extend :arg0 they :arg1 ( and :op1 ( country :name ( name :op1 brazil )  :wiki brazil )  :op2 ( country :name ( name :op1 turkey )  :wiki turkey )  :op3 ( country :name ( name :op1 ukraine )  :wiki ukraine )  )  :arg2 ( more :op1 40 )  :arg4 country :time now
consider :arg1 ( law :mod tough )  :location ( country :name ( name :op1 britain )  :wiki united_kingdom )  :op1-of ( and :op2 ( country :name ( name :op1 new :op2 zealand )  :wiki new_zealand )  :op3 ( country :name ( name :op1 south :op2 africa )  :wiki south_africa )  :op4 ( country :name ( name :op1 india )  :wiki india )  )
remain :arg1 ( person :arg0-of smoke :location ( country :name ( name :op1 australia )  :wiki australia )  :quant many )  :arg3 defiant
affect :arg1 ( i :arg0-of ( do :arg1 picture )  )  :polarity -
ignore :arg0 i :mod just
say :arg0 ( you :arg0-of ( grab :arg1 ( put :arg0 ( and :op1 smoke )  :arg1 it :arg2 away )  :arg2 ( he :arg0-of ( pack :arg2 photograph )  :arg0-of ( purchase :arg1 mouth :arg2 of )  )  :mod just )  )  :arg1 tumour :arg2 ( person :name ( name :op1 &quot; )  )
and :op1 honest :op2 ( stop :arg0 i :arg1 ( reason :mod only )  :location there )  :op3 i :op4 ( girl :mod little )
shelve :arg1-of ( stack :arg1-of ( hard :arg1-of ( package :arg0 ( thing :arg1-of uniform )  :arg1-of ( say :arg0 ( person :arg0-of ( run :location ( city :mod central :name ( name :op1 sydney )  :wiki sydney )  )  :arg0-of ( have-org-role :arg1 ( tobacconist :arg1-of pack )  :arg2 king )  :name ( name :op1 james :op2 yu )  )  )  )  )  )
say :arg0 ( person :name ( name :op1 yu )  :wiki jiang_yu )  :arg1 ( take :arg0 it :arg1 ( 4 :quant-of ( temporal-quantity :unit hour )  )  :arg1-of ( unload :arg0 ( i :arg1-of ( take :arg0 it :arg1-of use :arg2 ( temporal-quantity :unit hour )  )  )  )  :arg1-of deliver :arg2 i :time now )
say :arg0 ( he :arg0-of ( throw :arg1 he :arg1-of ( do :arg0 ( we :arg1-of ( fine :arg0 ( we :arg0-of ( go :arg1 ( okay :arg0 they :arg1 ( we :arg0-of ( shut-down :arg1 shop )  )  )  :arg1-of ( recommend :arg0 ( government-organization :arg0-of ( ban :arg1 ( and :op1 altogether )  :mod just )  :arg0-of govern )  )  :arg4 then )  )  )  )  )  :arg2 air )  )  :arg1 hand
constantly :arg0-of ( plug :arg1 ( bad :arg1 all :arg1-of ( bore :arg0 it )  :arg1-of be :polarity - )  )
arrive :arg0 ( plane :mod another )  :arg1 ( this :mod-of ( holiday :mod ( festival :name ( name :op1 thanksgiving )  :wiki thanksgiving )  )  )  :arg2-of ( wait :arg0 ( and :op1 ( we :poss-of plane )  :op2 difficulty :purpose-of ( spend :arg0 i :arg1 ( temporal-quantity :arg2-of ( expect :arg1 mechanics :polarity - )  :quant 5 :unit hour )  :arg2 airport )  )  :arg1 we )
cause :arg0 ( i :arg0-of ( think :arg1 subject :manner ( plenty :quant-of ( time :mod boredom )  )  )  )
lie :arg0 i :arg1 you :polarity -
mention :arg0 ( book :op1-of ( and :accompanier-of distraction :op2 magazine :op3 iphon )  )  :arg1 ( duty :arg2-of ( free :arg1 ( shop :arg1 ( flight :arg1 ( day :domain-of ( tedious :degree pretty :degree even )  :mod half )  :arg2-of ( wait :arg1 airport )  )  )  )  )  :polarity -
contrast :arg1 ( come :arg1 ( and :arg0-of increase :op1 ( person :arg0-of ( praise :arg1 boredom )  :mod academia )  :op2 ( develop :arg1 child :arg2-of ( expert :arg1 person )  )  :quant some )  )
say :arg0 they :arg1 ( and :arg1-of ( occasion :arg0 ( we :arg0-of ( bore :arg1 child )  :arg1-of ( right :arg0 it :mod all )  )  )  )
brain :op1-of ( force :purpose ( foster :arg0 ( it :arg0-of ( go :arg1 ( tangent :arg2-of interest )  )  )  :arg1 creativity :manner perhaps )  )
cause :arg0 ( and :example most )  :arg1 ( or :arg1-of ( plug :arg0 ( consistent :op1-of almost )  )  :arg1-of ( experience :manner-of ( benefit :arg0 we :arg1 boredom :manner - )  )  :domain this :op1 screen :op2 another :op3 ( temporal-quantity :unit day )  )
cause :arg1 ( recommend :arg1 ( embrace :arg0 we :arg1 boredom )  :mode interrogative )
yes
and :degree -
contrast :arg1 i :arg2 back
leisure :mod-of ( time :mod all :mod-of advent :op1 ( resemble :arg1 ( assume :arg0 i :arg1 ( phenomenon :domain boredom :mod ( recent :degree relative )  )  )  :arg2 ( person :quant many )  )  :quant more )
say :arg0 ( person :arg0-of ( have-org-role :arg1 ( country :name ( name :op1 greece )  :op1-of ( and :op2 ( religious-group :name ( name :op1 roman :op2 catholic )  :wiki catholic_church )  :op3 history :op4 ( person :arg0-of ( author :arg1 boredom )  :op2-of ( and :op1 ( country :name ( name :op1 canada )  :wiki canada )  :op3 history :op4 ( organization :mod-of ( date-entity :year 2011 )  :name ( name :op1 not )  )  )  )  )  :wiki greece )  :arg2 professor :polarity - )  :name ( name :op1 not )  )
say :arg0 ( he :arg2-of ( long :arg0 actual :arg1 history :degree very )  )  :arg1 boredom
date :arg1 ( pompeii :location-of wall )  :arg1-of ( graffiti :arg1-of ( language :name ( name :op1 latin )  :part about :wiki latin )  :arg2 boredom )  :arg2 ( temporal-quantity :unit century )
question :arg0 there :arg1 ( amr-unknown :arg1-of ( define :arg0 we :arg2 boredom :time then )  )
say :arg0 ( person :arg0-of ( have-org-role :arg1 psychology :arg1-of associate :arg2 professor )  :name ( name :op1 john :op2 d. :op3 eastwood )  )  :arg1 ( and :arg0-of ( differ :arg1 ( way :quant ( many :mod-of ( country :name ( name :op1 canada )  :wiki canada )  :mod-of ( organization :location ( country :name ( name :op1 ontario )  )  :name ( name :op1 york :op2 university )  )  )  )  )  :op1 ( define :arg1 trouble )  :op2 discuss )
contrast :arg1 ( want :arg0 ( he :arg0-of ( engage :arg1 ( person :arg0-of ( satisfy :arg1 ( person :name ( name :op1 eastwood )  :wiki clint_eastwood )  )  :arg1-of activity )  )  :arg0-of ( define :arg1 colleagu :op1-of ( and :arg1-of experience )  :op5-of ( and :op1 ( put :arg1 literature :arg1-of ( look :arg1-of research :time after )  )  :op2 idea :op3 ( focus :arg1 front )  :op4 ( person :arg0-of ( have-org-role :arg1 group :arg2 professor )  :op1-of 100 )  )  )  )  :arg1 boredom )
contrast :arg1-of ( say :arg0 he )  :arg2 ( want :arg0 amr-unknown :arg1 ( person :arg0-of ( engage :arg1 ( separate :arg1 boredom :arg2 apathy )  :polarity - )  )  )
say :arg0 ( he :arg0-of ( do :arg1 something :arg2-of ( urge :arg1 apathy :polarity - )  )  )
say :arg0 ( he :arg0-of ( attend :arg1 disruption :arg1-of process :arg1-of ( sense :time ( time :mod that )  )  :arg1-of ( low :arg2 ( and :op1 mood )  )  :arg1-of associate )  :arg0-of ( experience :mod core )  :arg0-of ( pass :arg1 slow )  )  :arg1 ( boredom :mod of )
possible :arg1 ( sound :arg1 boredom :manner ( resemble :arg1 ( lot :degree awful )  :arg2 depression )  )
contrast :arg2 ( say :arg0 ( person :arg0-of ( have-org-role :arg2 professor )  :name ( name :op1 eastwood )  :wiki clint_eastwood )  :arg1 ( tend :arg1 ( relate :arg1 they :arg1-of possible )  :arg1-of ( bore :arg0 ( person :arg0-of ( see :arg1 problem )  )  )  :arg2 ( see :arg0 ( person :arg0-of depress )  :arg1 ( problem :example ( or :op1 world )  )  :arg2 environment )  )  )
think :arg0 we :arg1 sometimes :arg2-of ( concentrate :arg0 ( we :arg1-of ( bore :arg0 we )  )  :arg1 difficult :mod just )
point-out :arg0 ( person :arg0-of ( have-org-role :arg1 journal :arg2 professor )  :name ( name :op1 eastwood )  :wiki clint_eastwood )  :arg1 ( and :op1 ( he :arg0-of ( experiment :arg1 science :time early )  :arg0-of ( listen :arg1 ( person :arg0-of ( participate :arg1 ( attend :arg0 article :arg1 perspectiv :arg1-of ( term :arg0 boredom )  :arg1-of appear :arg1-of ( define :arg0 ( study :arg1-of mean :arg1-of mind )  )  )  )  )  :manner tape )  )  :op2 colleagu :op3 ( person :arg0-of ( read :arg1 ( magazine :wiki time_[magazine] )  )  )  :time ( date-entity :month 9 )  )
cause :arg0 ( level :arg1-of ( low :arg2 bare :arg3 ( hear :arg0 other :arg1 it :arg1-of ( hear :arg0 group :arg3 some :op1-of ( and :arg1-of ( relate :arg2 television :polarity - )  :op2 loud :op3 ( program :poss next )  )  )  :arg3 room )  )  )  :arg1 ( hear :arg0 ( do :arg0 while :arg1 group :arg3 noticeable )  :arg1 soundtrack :arg3 - :quant all )
contrast :arg1 ( report :arg0 ( one :arg0-of ( hear :arg1 ( tv :mod ( level :arg1-of low )  )  )  )  :arg1 ( boredom :quant more )  )  :arg2 ( sure :arg1 ( other :mod-of ( group :quant 2 )  )  :op1-of ( and :op2 ( attribute :arg0 ( they :arg1-of ( concentrate :arg0 difficult )  )  :arg1 ( difficult :mod that )  :arg2 boredom )  )  :polarity - )
say :arg0 boredom :arg1 ( attend :arg0 disruption :arg1-of ( try :arg0 ( you :arg0-of ( have-org-role :arg2 professor )  )  :arg2-of focus )  :arg1-of associate :arg1-of possible :arg1-of mark :arg2 ( or :arg0-of ( task :arg1 difficult )  :arg0-of ( author :arg1 ( study :arg0 neuroscience )  :arg2 and )  :arg1-of engage )  :arg2-of lead )
distract :arg0 ( line :arg0-of ( help :arg1 music :arg1-of ( bore :arg0 you :polarity - )  )  :location factory )  :arg1 ( look :arg0 ( you :arg0-of ( do :arg1 ( something :arg1-of ( dull :arg0 other )  )  )  )  :arg1 hand :arg1-of ( bad :arg1-of widget )  :arg1-of possible :arg1-of such )
alert :arg1 person :arg1-of ( keep :manner-of ( help :arg1 ( combat :mod actual )  :arg1-of ( possible :arg1-of ( know :arg0 we :prep-in fact :time now )  )  :op4-of ( and :arg1-of ( say :arg0 he )  :op1 ( squirm :purpose ( see :arg1 ( sign :arg1 boredom )  )  )  :op2 doodle :op3 often )  )  )  :manner ( physical :degree more )
say :arg0 ( person :arg0-of ( have-org-role :arg2 professor )  :arg1-of ( sit :arg1-of ( force :arg0 information )  :arg2 still )  :name ( name :op1 &quot; )  )  :arg1 ( and :arg0-of ( retain :arg1 more )  :arg1-of allow :op1 ( research :arg0-of ( show :arg1 that )  :arg1 kid )  :op2 ( learn :arg0 ( fidget :arg0 amr-unknown :arg1 that )  :arg1 more )  )
delay :arg0 ( person :arg0-of speak :arg1-of ( drone :arg0 ( particular :mod-of ( tedious :mod-of movie )  )  )  )  :arg1 ( flight :arg1 ( experience :arg0 ( we :quant all )  :arg1 boredom :arg2 ( point :mod some )  )  )
contrast :arg2 ( likely :arg1 ( bore :arg0 other :arg1 ( individual :quant some )  )  :degree more )
the :manner-of ( develop :arg0 ( person :arg0-of ( measure :arg2 this )  :arg0-of ( research :arg2 scale )  :arg2-of ( help :arg0 1980 )  )  :arg1 pronenes :manner boredom )
cause :arg0 ( and :arg1-of ( include :arg2 ( thing :arg1-of ( resemble :arg2 scale )  :arg1-of question :arg1-of ( do :arg0 i :op1-of ( and :op2 repetitive :op3 monotonou )  :polarity - )  :quant many )  )  :op1 i :op2 i :op3 ( everything :mod time )  )  :arg1 ( interest :mod-of many )
say :arg0 ( person :arg0-of ( have-org-role :arg1 psychology :arg2 professor :time ( organization :arg1-of ( come :purpose ( need :arg0 ( external :mod-of stimulation )  :arg1 especially :extent more :op1-of and )  )  :name ( name :op1 university :op2 of :op3 west :op4 florida )  )  )  :name ( name :op1 stephen :op2 vodanovich )  )  :arg1 ( discover :arg0 ( person :arg0-of ( use :arg1 ( scale :mod such )  )  :arg0-of ( research :arg1 ( tend :arg1 ( boy :arg2-of ( bore :arg1 ( more :degree-of often )  :compared-to girl )  )  )  )  )  :arg1 variety )
contrast :arg1 ( pretty :degree-of ( jade :arg0 lot :arg1 teenager :arg1-of general )  )
conduct :arg1 ( experiment :arg0 ( and :arg1-of ( develop :arg2 8 :mod community )  :op1 ( have-org-role :arg0 ( person :name ( name :op1 reed :op2 larson )  )  :arg1 7 :arg2 professor :op1-of 400 )  :op2 ( state :name ( name :op1 illinois )  :wiki illinois )  )  :arg1 human :beneficiary-of ( contact :arg0 ( he :arg1-of ( beep :arg0 day )  )  :arg1 ( and :op1 ( person :arg0-of ( have-rel-role :arg1 ( teenager :op1-of almost )  :arg2 parent )  )  )  )  )  :time ( date-entity :year 1991 )
say :arg0 ( he :arg0-of ( say :arg1 adolescent )  :arg0-of ( find :arg1 school :manner percentage-entity :manner 32 )  :arg0-of ( do :arg1 school :arg3 - :op2-of ( and :op1 ( bore :arg0 they )  :op3 homework :op4 while )  )  :arg0-of ( bore :arg1 percentage-entity )  )  :arg1 23
say :arg0 ( person :arg0-of ( have-rel-role :arg2 parent )  )  :arg1 ( bore :arg0 ( 3 :era percentage-entity )  :arg1 they )  :arg2 ( hand :mod other )
say :arg0 ( thing :name ( name :op1 professor :op2 larson )  )  :arg1 ( know :arg0 he :arg1 ( high :arg1 21 :compared-to ( boredom :mod-of ( percentage :time ( late :op1 ( temporal-quantity :unit year )  )  :time now )  )  :op1-of ( or :op2 low )  )  :polarity - )
contrast :arg1 ( know :arg0 ( he :arg0-of ( control :arg1-of ( give :arg0 ( child :mod large )  :arg2 they :polarity - )  :mod lot )  :arg0-of ( want :arg1 amr-unknown )  :arg0-of ( peak :arg1 period )  )  :arg1 ( adolescence :location boredom )  )  :arg2 ( say :arg0 he :arg1 ( and :arg1-of cause :op1 teenager )  )
cause :arg1 ( question :arg1 ( boredom :arg1-of ( be :arg0 back )  :domain-of ( good :compared-to you :mode interrogative )  )  :mod original )
cause :arg0 ( possible :arg0-of ( research :arg0-of show )  :arg1 ( lead :arg2 ( take :arg0 person :arg1 ( risk :arg1-of ease :mod physical :mod absurd )  :op1-of ( or :op2 ( gamble :arg1 ( substance :arg0-of ( abuse :arg1 sometimes :arg2 - )  )  )  :op3 ( indulge :arg1 way )  )  )  :manner extreme )  )
say :arg0 ( thing :arg2-of ( study :arg1 ( issue :arg2 more )  )  :name ( name :op1 professor :op2 vodanovich )  )  :arg1 ( discuss :arg0 ( and :op1 boredom )  :arg1 ( and :arg1-of ( connect :arg0 ( temporal-quantity :quant 2 :unit decade )  :arg2 creativity )  :op1 ( hand :mod other )  :op2 ( philosopher :quant many )  :op3 ( person :arg0-of write )  )  )
say :arg0 ( you :arg0-of ( recommend :arg1 ( do :arg0 ( you :arg0-of ( tell :arg1 brain :arg2 boredom :mod way )  :arg0-of ( have-org-role :arg1 ( of :mod-of psychology )  :arg2 professor )  )  :arg1 something :arg2 else )  )  )  :arg1 ( gary :mod-of marcu )
contrast :arg1 ( brain :polarity - )  :arg2 ( know :arg0 most :arg1 ( thing :arg1-of appropriate )  :time always )
and :arg1-of ( will :arg0 it )  :op1 ( cook :arg0 you :arg1 guitar )  :op2-of ( and :op1 ( use :arg0 ( you :arg0-of ( bore :arg1 happy )  )  :arg1 energy :arg1-of play )  )
contrast :arg1 ( possible :arg1 ( happy :domain ( term :mod short )  )  :arg2-of ( contrast :arg1 ( long :arg1 you )  )  :condition ( watch :arg0 you :arg1 tv :arg2 - )  )
contrast :arg1 anymore :arg2 ( he :arg0-of ( learn :arg1 amr-unknown :arg2 ( self :arg1-of regulate :arg1-of ( say :arg0 ( he :arg2-of ( give :arg0 you :arg1 ( and :arg1-of cause )  :arg1-of possible :arg2-of ( bore :arg1 child )  )  )  )  :arg1-of ( entertain :arg2 or )  :arg1-of ( have-org-role :arg2 professor )  )  :polarity - )  :arg2-of ( bore :arg1 - )  )
say :arg0 ( he :arg0-of ( transfer :arg1 situation :example other :manner ( self :arg1-of regulate )  )  )  :arg1 and
contrast :arg1 ( self :arg0-of ( control :arg1 ( other :mod-of area )  )  :arg1-of entertain :arg1-of ( learn :arg0 kid :mod just :polarity - )  :op1-of more )  :arg2 get
think :arg0 i :arg1 ( want :arg0 we :arg0-of ( celebrate :arg1 boredom )  :arg1 really :polarity - )
recommend :arg1 ( critical :arg1 we :degree too )
recommend :arg2 ( goal :arg0-of ( feel :arg1 comfortable :arg2 ( chatter :arg1 ( and :op1 technology )  :manner constant :mod ( activity :arg1 rather )  )  :location away )  :poss we )
agree :arg0 ( person :arg0-of ( have-org-role :arg2 professor )  :name ( name :op1 eastwood )  :wiki clint_eastwood )
contrast :arg1 boredom :arg2 ( say :arg0 ( he :arg2-of ( desire :arg1 ( connect :arg0 frame :arg1 meaningful :arg2-of ( agonize :arg0 it :arg1 restless )  )  )  )  :arg1 something )  :arg2-of ( bore :arg0 we :arg1 more :arg1-of ( need :arg0 we )  )
say :arg0 he :arg1 ( and :op1 ( unplug :arg1 ( time :mod down )  :manner ( way :domain ( search :arg0 person :arg2 amr-unknown :mod really )  )  )  :op2 enjoy )
say :arg0 ( he :arg0-of ( engage :arg1 noise :arg2-of ( find :arg0 we :arg1 way :arg1-of ( hard :arg0 ( environment :mod in )  )  :manner ' )  )  :arg0-of ( shut :arg1 down )  :arg1-of ( overstimulate :arg0 constant )  )  :arg1 it
playbook :beneficiary ( thing :name ( name :op1 new :op2 marijuana :op3 law )  )  :polarity ( - :quant ( country :name ( name :op1 colorado )  )  )
possess :arg0 ( person :arg0-of study :op2-of ( and :op1 ( person :arg0-of ( face :arg1 ( charge :arg1 ( something :arg1-of ( legal :arg0 19 :location ( across :op1 ( state :mod this )  )  :time soon )  )  :mod criminal )  )  :name ( name :op1 anthony :op2 orozco )  )  :op3 ( thing :arg0-of ( play :arg1 ( college :mod community )  :arg2 ( country :name ( name :op1 colorado )  :part southeast )  :arg3 soccer )  )  )  )  :arg1 ( nugget :arg1-of ( use :arg0 he :arg2 ( smoke :arg1 pipe :arg0 he )  :op2-of ( and :op1 marijuana )  )  :quant few )
say :arg0 ( thing :name ( name :op1 mr. :op2 orozco )  )  :arg1 ( drive :arg0 ( he :arg0-of ( pull :arg1 they :location ( border :arg2 ( name :op1 kansas )  :arg2-of ( near :arg1 plain )  )  )  )  :location ( country :name ( name :op1 lamar )  )  :time ( day :location 9 )  )  :op1-of ( and :op2 ( person :arg0-of ( have-rel-role :arg2 friend )  :quant few )  )
issue :arg0 ( and :op1 ( possess :arg1 100 )  )  :arg1 ( thing :name ( name :op1 mr. :op2 orozco )  )  :op1-of ( and :op2 ( give :arg1 ( date :mod court )  )  )  :purpose ( paraphernalia :mod drug )  :time ( after :op1 ( find :arg0 ( officer :arg2-of ( have-org-role :arg1 police )  )  :arg1 marijuana )  :time-of ( summon :arg0 car :arg1 ( carry :arg0 ( each :arg1-of ( offend :mod petty )  )  :arg1 fine )  )  )
say :arg0 ( person :arg2-of ( resemble :arg1 ( person :arg1-of ( treat :arg1-of ( get :arg0 we )  )  :arg2-of criminal )  )  :name ( name :op1 &quot; )  )  :arg1 mr.
contrast :arg1 he :mode interrogative
answer :arg0 location :arg1 ( use :arg0 ( recreation :arg0 marijuana :arg1 ( amount :mod small )  )  :arg1-of ( legalize :arg0 ( vote :arg0 ( certain :polarity - )  :arg1 law :time ( after :duration ( temporal-quantity :unit week )  )  )  )  :arg1-of ( case :arg0 drug )  :time-of ( depend :arg0 minor :arg1 less )  )
and :op1 ( drop :arg0 ( organization :arg0-of ( approve :arg1 ( measure :arg1 ( case :arg1 marijuana :mod misdemeanor )  :arg1-of resemble )  )  :name ( name :op1 washington :op2 state )  )  :arg1 hundred :location here :time already )
and :op1 ( charge :arg1 adult :arg1-of ( stop :arg0 ( department :part-of police )  )  :purpose ( possess :arg1-of ( sanction :time ( once :op1 ( take :arg1 ( effect :arg0 law )  :time ( week :arg1-of ( come :arg0 21 )  :unit-of temporal-quantity )  )  )  )  :compared-to-of old :mod scale :mod small )  )  :op2 ( temporal-quantity :unit year )
contrast :arg2 ( and :op1 ( cite :arg0 ( person :arg0-of ( vow :arg1 ( press :arg1 ( country :location-of ( precinct :mod ( conservative :degree more )  )  :name ( name :op1 colorado )  )  :arg2 ( case :arg1 marijuana )  :direction ahead )  )  :arg0-of prosecute )  :arg1 ( person :arg0-of ( possess :arg1 exist )  )  :mod still )  )
vote :arg0 ( town :quant several )  :arg1 ( block :arg0 ( mountain :mod ( world-region :name ( name :op1 west )  :wiki western_world )  )  :arg1 ( shop :mod ( retail :arg1 ( same :arg1 time )  )  :mod state :mod ( license :arg1 ( suburb :location ( city :name ( name :op1 denver )  :wiki denver )  )  )  :mod marijuana :mod new )  :arg2 ( open :arg1 community )  )
say :arg0 ( i :arg0-of ( do :arg1 amr-unknown :arg2 next :polarity - )  :arg0-of ( know :arg1 ' )  :arg2-of ( quick :arg0 ( thing :arg0-of ( evolve :arg1 ( city :name ( name :op1 denver )  :wiki denver )  )  :arg0-of ( cause :arg1 ( east :mod ( just :mod-of of )  )  )  :mod this )  :arg1 that )  )  :arg1 oat :arg2 ( person :arg0-of ( have-org-role :arg1 aurora :arg2 ( chief :op1 police )  )  :name ( name :op1 daniel :op2 ortega )  :wiki daniel_ortega )
scratch :arg0 regulator :arg1 ( person :arg0-of ( head :arg1 ( organization :name ( name :op1 washington :op2 state )  )  )  )  :mod also
and :op1 ( produce :time ( license :mod-of system )  )  :op2 ( manufacture :arg1 all )  :op3 ( distribute :arg0 ( and :op1 ( look :arg0 they :arg1 ( guide :arg1 ( deadline :dayperiod-of ( date-entity :day 1 :month 12 :year 2013 )  )  )  )  )  )
say :arg0 they :arg1 ( and :arg2-of ( regulate :arg0 ( country :name ( name :op1 colorado )  )  :arg1 ( recreationally :purpose ( use :arg1 ( or :op1 good :op2 ( bad :arg0 marijuana :arg1 most )  )  :mod medicine )  )  :source-of ( state :op1-of ahead )  )  :op1 now )
say :arg0 they :arg1 ( person :arg0-of ( have-org-role :arg1 ( organization :name ( name :op1 &quot; )  )  :arg2 spokesman )  :arg1-of ( guide :arg0 ( country :arg0-of ( regulate :arg1 ( market :arg0-of ( cause :arg1 good )  )  :degree more )  :name ( name :op1 &quot; )  )  )  :name ( name :op1 &quot; )  )
contrast :arg2 ( possible :arg1 ( do :arg0 ( place :op1-of ( or :op2 system )  :polarity - )  :arg1 more )  :time ( suggest :arg1 ( work :arg1-of possible )  :arg1-of ( concede :arg0 ( thing :name ( name :op1 mr. :op2 smith )  )  )  )  )
say :arg0 ( he :arg1-of ( follow :arg0 ( precedent :mod real :polarity - )  )  )  :arg1 ( there :mod-of ' )
contrast :arg1 ( possess :arg0 state :arg1 ( take :arg0 effect :arg1-of ( leave :arg0 6 :mod also )  :arg1-of ( call :arg0 i :arg2 ( city :name ( name :op1 washington )  :wiki washington,_d.c. )  :mod law )  :mod 502 :time ( date-entity :month 12 )  )  :arg1-of ( legalize :arg0 year )  :arg2-of ( exist :arg1 yet :polarity - )  )  :arg2 ( license :mod-of ( system :mod ( during :mod ( limbo :mod of )  )  )  )
prohibit :arg1 school :example ( foot :op1-of ( or :op2 playground :op3 ( center :arg1-of ( care :arg0 child )  :location-of park )  )  :op4-of ( and :op1 thorny :op2 ( question :arg1 mechanics )  :op3 ( resolve :arg1 ( during :mod-of time )  :location ( state :arg0-of ( mandate :arg1 adequate )  :location-of ( balance :arg1 ( access :arg1 ( license :mod-of marijuana )  )  :arg1-of ( resemble :arg2 amr-unknown )  )  )  )  )  )  :location cannabis :location business
say :arg0 ( country :mod-of metropolitan :name ( name :op1 &quot; )  )  :arg1 ( center :arg1-of ( have-org-role :arg0 ( person :arg0-of ( research :arg1 ( group :arg1-of ( form :time ( recent :degree ( more :degree-of ( difficult :domain it :domain ( license :mod-of cannabis )  :domain business :domain nowhere :op1-of site )  )  )  )  )  )  :name ( name :op1 &quot; )  )  :arg2 spokesman )  :part-of cannabis :part-of legal )  :condition ( area :mod urban :mod-of particular )  :time area
announce :arg0 ( he :arg0-of ( prosecute :arg1 ( or :arg1-of ( stop :arg1-of ( charge :arg0 anyone )  )  :arg1-of ( temporal-quantity :unit year )  :op1 old :op2 ( and :op1 police :op2 ( person :arg0-of ( crime :arg1 that )  )  :op3 ( effective :arg1 immediate )  )  )  )  :arg0-of ( violate :arg1 marijuana :location small )  :arg0-of ( send :arg1 21 :arg1-of ( long :location ( city :location-of ( attorney :wiki - )  )  )  :arg1-of ( have-org-role :arg0 person :arg2 officer )  :location chief :polarity - )  :poss-of 21 )  :arg1 e-mail
say :arg0 ( thing :name ( name :op1 chief :op2 oates )  )  :arg1 ( and :arg0-of ( regulate :arg1 ( grower :mod ( marijuana :mod medicine )  )  )  :op1 ( enforce :arg0 police :arg1 ( code :mod city )  )  :op2 ( pursue :arg0 they :arg1 ( person :arg0-of ( traffic :arg1 drug :mod still )  )  :op1-of ( and :op2 ( person :arg0-of deal )  )  )  )
attorney :arg0-of ( represent :arg1 ( district :arg1-of ( weld :arg0 north )  :arg1-of ( buck :arg0 ken )  )  :arg1-of ( view :arg0 ( county :wiki pingtung_city )  :mod strict )  )  :wiki -
say :arg0 ( he :arg1-of treat )  :arg1 ( continue :arg0 office :arg1 ( pursue :arg1 ( case :arg1 ( possess :arg1 marijuana )  )  )  :arg2 ( way :manner-of ( press :arg1 user )  )  )  :time after :topic ( vote :arg0 most )
or :arg1-of ( possess :arg2-of ( charge :arg1 many :arg1-of ( face :arg0 ( person :mod 119 )  :condition ( face :arg1 ( charge :arg0 ( right :mod-of now )  :arg1 less :mod other )  )  )  )  )  :op1 ( mass-quantity :quant 2 :unit ounce )  :op2 marijuana
obligate :arg2 ( thing :arg0-of prosecute :arg0-of ( offend :arg1 that )  :arg1-of ( state :arg0 office :arg1-of ( say :arg0 we :arg1-of ( occur :arg0 ( they :arg1-of crime )  )  :arg1-of ( buck :arg0 mr. )  :time time )  )  )
marijuana :mod-of ( initiative :arg1-of ( reject :arg0 ( person :arg0-of vote )  :arg2 ( country :location rural :name ( name :op1 mesa :op2 county )  :topic-of ( complicate :arg1 respond :location ( place :arg1-of resemble :mod even )  )  )  )  )
possess :arg0 junction :arg1 city :arg1-of ( long :arg2 county )  :arg1-of ( cite :arg0 police :polarity - )  :arg2 ( amount :mod small :mod ( large :degree most )  )  :mod adult :mod-of of
contrast :arg1 ( decide :arg0 county :arg1 ( dismiss :arg1 all )  :mod also :time ( possess :arg1 of :arg1-of case :arg1-of pend )  :time - :time-of ( decide :arg1 ( district :mod-of ( attorney :wiki - )  )  )  )  :arg2 ( support :arg0 hautzing :arg1 that )
say :arg0 ( he :arg1-of ( change :arg0 until )  )  :arg1 ( continue :arg0 i :arg1 ( enforce :arg0 time :arg1 law )  :arg1-of ( waste :arg0 i )  :arg1-of ( think :arg0 ( i :arg0-of ( do :arg1 it :polarity - )  )  )  )
and :destination-of ( bring :arg0 ( person :arg0-of ( vote :arg1 ( country :name ( name :op1 colorado )  )  )  :arg0-of ( support :arg1 ( measure :arg0 ( percentage-entity :value 55 )  )  )  )  :arg1 ( marijuana :mod recreation )  :arg2 ( fold :arg1 ( government-organization :arg0-of govern )  )  )  :op1 ( system :arg1-of simple :arg1-of legal )
and :op1 contradictory :op2 ( lay :arg0 state :location ( state :arg0-of ( experiment :arg1 ( person :arg0-of ( have-org-role :arg2 official )  :arg1-of local )  :arg1-of green :mod big )  )  :manner-of ( deep :location ambivalence )  :manner-of ( bare :arg0 ( react :arg1 across )  :arg1 among )  )
say :arg0 ( district :mod-of attorney )  :arg1 sean :arg2 mcallist :op2-of ( and :op1 barrier :op3 ( represent :arg0 ( city :arg0-of ( have-org-role :arg1 ( reform :arg0 ( culture :mod ' )  :arg1 of :arg2 marijuana )  :arg2 spokesman :arg2-of ( local :arg0 it )  )  :name ( name :op1 denver )  :wiki denver )  :arg1 law :op1-of marijuana :op1-of amr-unknown :op1-of lawyer )  :op4 defendant )
say :arg0 ( he :arg1-of legal :arg2-of ( accept :arg0 they :arg1 this :arg1-of ( do :arg0 ( person :arg1-of ( prosecute :arg0 of )  :mod that :poss-of life )  :mod still )  :manner really :polarity - )  )  :arg1 ( much :arg1-of ( cause :arg0 ( they :arg0-of spend )  )  )
resemble :arg1 ( marijuana :location ( and :arg1-of ( poise :arg2 ( become :arg0 ( state :arg0-of ( treat :arg1 ( amount :mod small )  )  )  :arg1 ( country :name ( name :op1 colorado )  )  :arg2 ( case :arg1 ( legalization :mod drug )  :purpose ( test :arg0 ( city :name ( name :op1 washington )  :wiki washington,_d.c. )  :mod nation )  )  )  )  )  )  :arg2 alcohol
await :arg0 ( they :arg0-of ( plan :arg1 ( and :op1 ( advocate :arg1 federal )  :op2 ( person :arg0-of ( have-org-role :arg1 ( state :arg1-of legalize )  :arg2 official )  )  )  :arg2 ( frontier :mod new )  )  )  :arg1 direction :arg2 ( government-organization :arg0-of govern :arg0-of ( plan :arg1 ( treat :arg1 ( and :op1 ( cultivate :arg1 ( crime :arg0 federal )  :arg2 marijuana )  )  :arg2 sale )  :mod still )  )  :mod also :mod anxious
hope :arg0 ( marijuana :arg1-of advocate :arg1-of legalize )  :arg1 ( thing :arg1-of ( yield :arg0 ( organization :name ( name :op1 justice :op2 department )  )  )  )
allow :arg0 ( government-organization :arg0-of ( operate :arg1 ( high :arg0 federal :arg1 profile )  :purpose-of ( business :mod ( medicine :mod-of marijuana )  )  )  :arg0-of govern )  :arg1 ( and :op1 ( city :name ( name :op1 washington )  :wiki washington,_d.c. )  :op2 ( state :mod other :quant 16 )  )  :manner most :time ( despite :op1 ( arrest :arg1 ( person :arg0-of ( have-rel-role :arg2 ( patient :mod ( marijuana :mod medicine )  )  )  :op1-of ( and :op2 ( person :arg0-of sell )  )  )  :quant some )  )
say :arg0 ( thing :name ( name :op1 a. :op2 sabet )  )  :arg1 ( likely :arg1 ( balk :arg0 they :arg1 ( allow :arg0 drug :arg1 ( allow :arg0 ( shop :arg0-of ( administrate :arg1 ( person :arg0-of ( advise :time former :topic policy )  )  )  :mod ( recreation :arg0 - :arg1 marijuana )  :mod ( state :arg0-of regulate )  )  :prep-under ( law :mod new )  )  :purpose ( person :name ( name :op1 obama )  :wiki barack_obama )  )  )  :arg1-of ( while :arg0 ( probable :domain ( beat :arg0 ( person :arg0-of ( have-org-role :arg2 ( agent :mod drug )  )  :arg0-of ( seize :arg1 ( bag :mod small :mod-of drug )  )  )  :arg1 door )  )  )  )
wait :arg1 ( city :location ( country :name ( name :op1 colorado )  )  :quant several )  :arg2 ( act :arg0 ( authority :mod federal )  )  :polarity -
approve :arg0 ( government-organization :arg0-of govern :arg1-of local :quant some )  :arg1 moratorium :arg2 ( shop :mod new :mod any :mod marijuana )  :time ( before :mod even :op1 ( thing :name ( name :op1 election :op2 day )  )  :op2 ( possible :arg1 ( open :arg0 any :arg1 ( year :mod even :op1-of about )  :op1-of before )  )  )
and :op1 ( likely :arg1 ( pass :arg0 ( city :arg1-of ( ban :duration ( temporal-quantity :quant 6 :unit month )  )  :location ( world-region :name ( name :op1 west )  :wiki western_world )  :location ( country :name ( name :op1 montrose )  )  )  :time ( week :mod next :mod ( last :mod-of week )  )  )  )
say :arg0 ( we :arg0-of ( have-org-role :arg2 member )  :arg1-of ( position :arg0 ( want :arg0 ( we :arg0-of ( do :arg1 license )  )  :arg1 ( put :arg1 ( and :op1 somebody :op2 then )  :arg2 big )  :polarity - )  )  )  :arg1 ( bob :arg0 ( issue :arg0 federal )  :arg1 nicholson )
vote :arg0 ( community :poss we )  :arg1 ( amend :mod this )
versu :arg1-of ( look :arg0 we :arg1-of ( vote :arg0 community )  :arg1-of ( vote :arg0 state )  )
question :arg1 ( awful :mod lot )
bully :arg0 ( person :name ( name :op1 petronella :op2 wyatt )  )  :arg1 i :arg2 ( country :mod-of ( political-party :name ( name :op1 tory )  :wiki conservative_party_[uk] )  :name ( name :op1 oxford )  )
view :arg0 today :arg1 it :arg2 ( person :arg0-of ( study :arg1 university )  :arg0-of attack )  :mod just :polarity -
remember :arg0 i :arg1 ( i :arg0-of ( dream :arg1 place :polarity - )  :arg0-of ( win :arg1 oxford )  )  :arg2 time :polarity -
encourage :arg0 ( country :name ( name :op1 greece )  :wiki greece )  :arg1 symposium :arg2 ( free :arg1 world :arg1-of ( blush :arg0 wine )  :arg1-of tolerate :arg1-of ( civilize :arg0 pillar )  :arg2 ( think :arg0 ( i :arg0-of ( imagine :arg1 amr-unknown )  :arg0-of ( learn :arg1 of :arg2 ( great :degree most )  )  :arg1-of ( have-rel-role :arg0 ( person :arg0-of ( have-rel-role :arg1 i :arg2 father )  :op2-of ( and :op1 both :op3 i :op4 elder )  )  :arg2 brother )  )  :arg1 and )  :arg2-of ( modern :arg0 seat :arg1 day )  :arg3 dual )
scandal :arg1-of ( precipitate :arg0 ( i :arg1-of ( pack :arg2 bag :location history )  :arg2-of ( read :arg0 ( i :arg0-of ( take :arg1 yet :arg2 college :arg3 2 :arg4 place :duration ( temporal-quantity :unit week )  )  )  :arg1 ( eighti :mod late )  )  )  :arg2 life )
and :op1 ( cry :arg0 ( person :arg0-of ( break-up :arg1 down )  :arg0-of ( have-rel-role :arg1 i :arg2 father )  )  )
baffle :arg1 ( person :arg0-of ( have-rel-role :arg2 friend )  )
cause :arg0 ( i :arg0-of ( quit :arg1 ( mine :mod next :mod room )  )  :arg0-of ( even :arg1 standard )  )  :arg1 ( fellow :arg1-of ( object :arg0 i )  :arg1-of ( claim :arg0 diary )  :mod-of sex :mod-of undergraduat )
cause :arg0 ( depart :arg0 i :arg0-of ( force :arg1 ( person :arg0-of ( announce :arg1 wilson )  :arg0-of ( write :arg1 n )  )  :arg2 ( chip :arg1 mug )  )  :arg1 waggishly :arg2 ( i :arg0-of ( drink :arg1 of )  )  )  :arg1 that
droll :domain truth :quant less
run :arg0 i :direction away
and :op1 ( bully :arg2-of ( subject :arg0-of ( cause :arg1 ( run :arg0 yes )  )  :arg1 i )  :mod ( systematic :mod-of intimidate )  )
or :op1 name :op2 fact :op3 ( come :arg1 i :arg3 ( school :arg1-of ( private :arg0 - )  )  )  :poss-of account
suppose :arg1 ( enlightenment :arg1-of ( cradle :mod this )  )  :op2-of ( and :op1 ( persecute :arg1 ( i :domain-of ( reason :mod only )  )  )  :op3 ( bigot :op1-of ( and :mod both :op2 barbaric :op3 ( person :mod late :name ( name :op1 woodrow :op2 wyatt )  )  )  )  :op4 ( person :arg0-of ( have-rel-role :arg2 father )  )  :op5 ( and :op1 ( person :arg0-of ( advise :arg1 ( person :arg1-of ( support :arg0 i :mod ( political-party :name ( name :op1 conservative )  :wiki conservative_party_[uk] )  )  :name ( name :op1 thatcher )  :wiki margaret_thatcher )  )  :mod ( profile :arg1-of high )  )  )  )
ask :arg0 you :arg1 ( bring :arg1 this :time now )  :arg1-of possible
suggest :arg0 ( report :time recent )  :arg1 ( suffer :arg0 ( generation :consist-of ( person :arg0-of ( study :mod ( right :mod-of centre-left )  )  )  :mod new )  :arg1 ( persecute :arg1-of resemble )  )  :mod well
equal :arg1 ( protect :arg0 ( group :arg0-of ( demand :arg1 ( and :op1 ( institutionalise :domain-of such )  :op2 ( increase :arg1 ( hatr :poss ( person :arg0-of ( study :mod ( political-party :name ( name :op1 tory )  :wiki conservative_party_[uk] )  )  :source ( country :name ( name :op1 oxford )  )  )  )  )  )  :op1-of ( and :op2 ( person :mod gay )  :op3 ( person :arg1-of disable )  :op4 ( minority :mod ethnic )  )  :time ( week :mod last )  )  )  :arg1-of same )  :mod right
cause :arg0 ( political-party :name ( name :op1 conservative )  :quant-of of :wiki conservative_party_[uk] )  :arg1 ( feel :arg1 unwelcome :arg1-of make :op3-of ( and :arg1-of ( view :arg0 ( person :arg0-of ( have-org-role :arg2 member )  )  :arg2 politics :mod ( common :mod-of junior )  :mod room :mod college )  :arg1-of ( isolate :arg1-of ( activity :op1-of often )  )  :arg1-of personal :op1 ( claim :arg1 they )  :op2 attack )  )
opine :arg0 college :arg1 ( free :arg1-of ( ensure :arg0 committee )  :arg1-of ( air :arg0 ( want :arg0 they :arg0-of create :arg0-of ( equal :arg1 opportunity )  :arg1 post )  )  :arg1-of possible )
and :op1 ( person :arg0-of ( study :arg1 politics )  :op4-of ( and :arg1-of ( bright :arg0 wonderland )  :op1 ( help :arg0 situation :arg1 ( recent :mod-of ( company :name ( name :op1 bbc )  :wiki bbc )  )  :polarity - )  :op2 ( documentary :value 2 )  :op3 right )  )  :op2 ( political-party :arg1-of portray :name ( name :op1 tories )  :wiki conservative_party_[uk] )  :op3 ( neo :mod-of nazi )
feature :arg0 it :arg1 ( person :arg0-of ( have-org-role :arg1 ( organization :name ( name :op1 oxford :op2 university :op3 conservative :op4 association )  )  :arg2 president :time former )  :arg0-of ( suit :mod silver )  :arg1-of graduate :name ( name :op1 joe :op2 cooke )  )  :purpose ( travel :arg1 ( and :op1 sport :op2 ( cane :arg1-of ( top :arg0 ( organization :name ( name :op1 ouca )  )  :arg2 silver )  )  )  :arg2 ( organization :name ( name :op1 rolls-royce )  )  )
say :arg0 ( person :arg0-of ( study :arg1 ( other :mod-of university )  )  :arg1-of ( treat :arg1-of ( scapegoat :arg0 ( political-party :arg0-of ( introduce :arg1 ( fee :mod tuition )  )  :name ( name :op1 conservative )  :wiki conservative_party_[uk] )  )  :arg1-of high )  )  :arg1 they
bias :arg0 ( political-party :arg0-of ( leave :arg1 ( grow :arg1 that )  )  :arg0-of ( tell :arg1 sunday :arg2 newspaper :mod association )  :arg0-of ( black :arg1 ( president :arg2-of ( have-org-role :arg0 ( city :name ( name :op1 nottingham )  :wiki nottingham )  :arg1 of )  :mod ( vice :mod 20 )  )  )  :name ( name :op1 conservative )  :wiki conservative_party_[uk] )  :arg1 university :arg2 there :mod wing
meet :arg1-of ( club :arg0 ( we :arg1-of ( resemble :arg2 bullingdon )  :arg1-of ( assume :arg0 person )  )  )
say :arg0 ( person :name ( name :op1 samuel )  )  :arg1 ( protect :arg1 ( person :arg0-of ( propose :arg1 motion )  :arg0-of study :mod history )  :mod great )  :arg2-of ( comfortable :arg0 ( country :name ( name :op1 samuel )  )  :arg1 ( person :arg0-of ( have-org-role :arg1 ( organization :mod of :name ( name :op1 samuel )  )  :arg2 ( president :arg1-of ( elect :arg0 19 :arg2 ( say :arg0 ( person :mod towards )  :arg1 there )  )  )  )  :arg0-of ( deteriorate :arg1 attitude :arg2 ( person :arg0-of ( have-org-role :arg1 ( organization :name ( name :op1 samuel )  )  :arg2 member )  )  )  :mod while :name ( name :op1 samuel )  )  :mod climate :mod such :mod ( right :mod-of centre-left )  :mod 21 :polarity - )
say :arg0 she :arg1 ( discuss :arg0 intellectual :arg1 welfare :arg1-of ( threaten :arg1-of ( pose :arg0 this :arg2 of )  :arg2 atmosphere )  :arg2 ( person :arg0-of ( have-org-role :arg2 member )  )  :manner well )
minority :mod ( country :location-of ( temporal-quantity :op1-of ( few :mod i )  :unit week )  :name ( name :op1 oxford )  )
go :arg0 i :arg1 ( 18 :arg1-of ( shy :arg0 ( old :mod-of year )  :arg2 ( date-entity :year 1986 )  )  )  :manner 9
hatr :poss-of ( political-party :name ( name :op1 conservative :op2 party )  :poss-of ( febrile :quant most )  :wiki conservative_party_[uk] )
vote :arg0 university :arg1 ( refuse :arg1 ( person :name ( name :op1 thatcher )  :wiki margaret_thatcher )  :arg2 ( person :arg0-of ( study :time former )  )  )  :arg1-of ( cause :arg0 ( cut :arg1 degree )  )  :op1-of ( before :quant year )  :purpose ( high :arg1 ( fund :arg1 ( educate :arg0 honorary )  )  )
shudder :arg0 ( person :name ( name :op1 stalin )  :wiki joseph_stalin )  :arg1 atmosphere :arg2 apprehension
and :op1 ( don :arg0 other :arg1 ( each :arg1-of ( taste :arg0 i )  )  )  :op2 ( come :arg0 wormwood :arg1 ( person :arg0-of study :mod new :poss-of socialise )  )  :time ( week :mod ( fresher :quant ( temporal-quantity :op1-of few :unit day )  )  )
contrast :arg1 ( don :arg0-of ( taunt :arg1 ( undergraduat :arg1-of relish :mod ( political-party :name ( name :op1 tory )  :wiki conservative_party_[uk] )  )  )  )  :arg2 ( find :arg0 i :arg1 ( only :polarity - )  )
and :arg1-of strike :op1 politics :op2 ( person :arg0-of ( mine :arg1 of )  )  :op3 privatisation :op4 ( oppose :arg0 ( government-organization :arg0-of ( sanction :arg1 ( against :op1 apartheid )  )  :arg0-of ( govern :arg1 ( country :name ( name :op1 south :op2 africa )  :wiki south_africa )  )  :arg0-of ( bring :arg1 into )  :arg0-of ( panel :arg1 tutorial :mod wood :part room )  )  )
and :arg1-of ( involve :arg0 ( one :arg0-of ( text :arg1-of ( translate :arg1-of ( follow :arg0 france )  )  )  )  :arg2 ( language :name ( name :op1 english )  :wiki english_language )  )  :op1 i :op2 ( unprepar :domain i )  :quant ( 18th :quant-of ( temporal-quantity :unit century )  )
say :arg0 ( person :name ( name :op1 &quot; )  )  :arg1 ( don :arg1 ( person :arg0-of ( decease :arg1 ( person :arg0-of ( please :arg1 paragraph )  :arg0-of ( translate :arg1 first )  :time now )  )  :name ( name :op1 &quot; )  )  )
stumble :arg0 i
resemble :arg0 ( big :domain ( person :name ( name :op1 pitt )  )  )  :arg1 ( face :poss-of ( man :mod small )  )  :arg2 ( batter :arg0 bile :arg1 cake )
learn :arg0 ( do :arg0 ( he :arg0-of demand )  :arg0-of ( refuse :arg1 ( stupid :mod just )  :arg2 they )  :arg1 thatcherit )  :op1-of ( or :mode interrogative :op2 france )
giggle :arg1 undergraduat :mod other
prick :arg0 tear :arg1 back :arg2 eye
cause :arg0 ( take :arg0 you :arg1 basic :arg1-of ( suggest :arg0 i :arg2 you )  :arg2 france :arg3 some :polarity - :time ( time :arg2-of ( spare :arg0 lesson )  :mod that )  )  :arg1 ( busy :arg1-of ( snarl :arg0 pitt )  :degree too :mod-of socialise )
disconsolate :mod-of ( figure :arg1-of ( walk :arg0 i :direction back )  :mod room )
and :op1 ( sit :arg0 ( evening :mod that )  :arg1 ( i :arg0-of ( tap :arg1 shoulder :arg1-of ( feel :arg0 i :time then )  :arg1-of light )  )  :arg2 ( dinner :location college )  )
introduce :arg0 jam :arg1 ( person :arg0-of ( have-org-role :arg2 member )  :arg0-of ( study :arg1 ( language :name ( name :op1 english )  :wiki english_language )  )  :age ( temporal-quantity :unit year )  :domain it )
say :arg0 ( he :arg2-of ( know :arg0 i :arg1 you :op1-of amr-unknown )  )  :arg1 kindly
resemble :arg1 i
pick-up :arg1 ( anyone :arg2-of ( suspect :arg1 ( political-party :name ( name :op1 tory )  :wiki conservative_party_[uk] )  )  )
contrast :arg1 ( know :arg0 i :arg0-of ( cause :arg1 ( bad :arg0 you )  )  :arg1 ( bad :arg0 it :arg1 enough )  :arg2-of ( close :arg0 they :arg1 ( person :arg0-of ( have-rel-role :arg1 ( person :name ( name :op1 thatcher )  :wiki margaret_thatcher )  :arg2 father )  )  )  )
fresher :manner-of ( pretend :arg0 ( political-party :name ( name :op1 tory )  :wiki conservative_party_[uk] )  :arg1 they :arg4 ( political-party :name ( name :op1 labour )  :wiki labour_party_[uk] )  :degree most )
attempt :arg0 i :arg2 ( dissimulate :arg1 late :arg2 ( pub :arg1-of local )  )
say :arg0 ( person :name ( name :op1 thatcher )  :wiki margaret_thatcher )  :arg1 ( everything :arg1-of ( agree :arg0 i :arg1-of ( insist :arg0 i )  :polarity - )  )
prove :arg1 ( succeed :arg1 ( ploy :mod this )  :polarity - )
say :arg0 you :arg1 ( temporal-quantity :unit year )  :arg1-of ( mean :arg2 ( person :arg0-of ( have-rel-role :arg1 ( person :arg0-of study :poss-of ironically )  :arg2 daughter )  :poss-of pig :poss-of fascism :poss-of of )  )
contaminate :arg0 you
refrain :arg1 ( person :arg0-of study :mod other )
perverted :arg1-of dirty :domain i
ask :arg0 ( political-party :arg2-of ( do :arg0 amr-unknown :arg1 sex )  :name ( name :op1 tories )  :wiki conservative_party_[uk] )  :arg1 1 :mode interrogative
beat :arg0 they :arg1 ( each :mod-of other )  :arg2 they :arg3 - :mode interrogative
feel :arg0 ( i :arg2-of ( feel :arg0 ( person :mod homosexual )  :time ( before :op1 ( legislation :arg1-of liberal :poss ( organization :name ( name :op1 sixties )  )  )  )  )  )  :arg1 way
possible :arg1 ( lead :arg0 i :arg1 ( life :arg1-of normal :location ( country :name ( name :op1 oxford )  )  )  :time ever )  :mode interrogative
meet :arg0 ( i :arg1-of ( resemble :arg2 mind )  )  :arg1 person :arg2-of ( force :mode interrogative )  :time ( after :op1 dark :time-of only )
and :op1 ( turn :arg0 ( i :arg0-of ( suppress :arg1 ( inclination :arg1-of ( natural :mode interrogative )  )  )  )  :arg2 ( political-party :name ( name :op1 labour )  :wiki labour_party_[uk] )  )
stretch :arg1 ( temporal-quantity :quant 3 :unit year )  :arg2 ( purgatory :op1-of ( and :op2 ostracism )  )  :purpose isolate :time ( before :op1 i )
don :arg0 ( political-party :mod ( only :mod-of open )  :name ( name :op1 tory )  :wiki conservative_party_[uk] )  :arg2 ( person :arg0-of ( have-org-role :arg1 ( history :mod modern )  :arg2 professor )  :arg1-of ( base :arg2 college )  :name ( name :op1 norman :op2 stone )  )
contrast :arg1 ( political-party :name ( name :op1 conservative )  :wiki conservative_party_[uk] )  :arg2 ( and :op1 ( person :arg0-of ( advise :arg1 ( person :name ( name :op1 thatcher )  :poss-of ( speech :arg1-of ( write :arg0 ( person :arg0-of ( hate :arg1 he )  :mod ( only :polarity - )  )  )  )  :wiki margaret_thatcher )  :topic ( policy :mod foreign )  )  )  )
hardly :op1 ( ever :mod-of ( there :time-of he )  )
and :op1 ( loathe :arg0 ( he :arg0-of ( view :arg1 history :arg1-of adhere :mod determinist :mod marxist )  )  :arg1 place :arg3 and )  :op2 province :op3 petty
professorship :location ( organization :location ( country :name ( name :op1 bilkent )  )  :location ( country :name ( name :op1 ankara )  :poss ( he :poss-of ( country :name ( name :op1 turkey )  :wiki turkey )  )  )  :name ( name :op1 university )  )  :time ( date-entity :year 1997 )
tell :arg0 he :arg1 happy :arg2 i :arg3 you :polarity - :time here
and :op1 ( open :arg0 family :arg1 more )  :op2 metropolitan :op3 ( person :arg0-of ( have-rel-role :arg1 ( person :arg0-of ( commute :arg1 ( begin :arg0 i :arg1 house )  )  :arg0-of ( have-rel-role :arg1 ( i :arg0-of ( find :arg1 ( city :name ( name :op1 london )  :wiki london )  :manner refuge )  )  :arg2 parent )  )  :arg2 friend )  :poss-of mind )
tell :arg0 ( i :arg1-of ( have-rel-role :arg2 father :arg0 person )  )  :arg1 ( hate :arg0 i :arg1 ( country :name ( name :op1 oxford )  )  :op1-of ( and :op2 why )  )  :arg2 person
incredulou :domain he
accept :arg1 ( view :arg1 politics :quant all :topic-of forti )  :time ( time :time there )
contrast :arg1 ' :arg2 ( say :arg0 he :arg1 pathetically :time ( place :degree-of ( good :degree most :poss it )  :mod-of world )  )
spir :manner-of ( dream :arg0 i :arg1 they :mod among :polarity - :polarity - )
manner :mod impeccable :mod ( communism :mod-of ( person :arg0-of ( have-rel-role :arg2 friend :mod even )  )  )  :time always
begin :arg1 ( eye :mod rheumy :poss he )  :arg2 cloud
give :arg1 chance
sure :arg0 ( i :arg0-of ( tease :arg1 just )  )  :arg1 all
break-up :arg0 it :arg1 ( heart :arg1-of ( leave :arg0 you )  )
resist :arg1-of ( deteriorate :purpose ( exhaust :arg0 ( trip :arg1-of frequent :arg2 ( city :name ( name :op1 london )  :wiki london )  )  )  )  :arg1-of emotional
succumb :arg0 male :arg1 ( and :op1 ( pressure :arg1 ( support :arg0 ( political-party :name ( name :op1 tory )  :wiki conservative_party_[uk] )  :mod also )  )  :op2 ( renounce :arg0 ( have-rel-role :arg1 mine :arg2 friend )  :arg1 cre )  )
suggest :arg0 another :arg1 ( don :arg0 ( history :arg0-of ( serious :arg1 ( i :arg1-of ( have-rel-role :arg0 ( person :arg0-of ( do :arg1 ( decide :arg0 i :arg1 person :arg1-of same )  )  )  :arg2 enemy )  )  :arg1-of complete )  )  )  :time ( week :arg1-of ( follow :arg0 tutorial )  )
shame :arg1-of ( admit :arg0 ( i :arg0-of ( brainwash :arg1 ( person :arg0-of ( call :arg1 they :arg2 ( fool :mod old )  :op1-of and )  :arg0-of ( have-rel-role :arg1 i :arg2 parent )  )  )  :arg2-of ( blush :arg1 inwardly )  )  )
short :domain respite
coffin :arg2-of ( drive :arg0 ( person :arg0-of ( have-rel-role :arg2 father )  :domain it )  :arg1 nail )  :poss ( career :mod ( country :name ( name :op1 oxford )  )  )
write :arg0 he :arg1 ( column :quant 2 )  :medium ( press :mod ( person :name ( name :op1 murdoch )  :wiki rupert_murdoch )  )  :time time :time ( week :mod each )
lock :arg0 ( door :poss i )
and :op1 ( give :arg0 pursuer :arg1 ( i :arg0-of ( cower :arg4 inside )  )  )  :time ( after :op1 ( minute :unit-of ( temporal-quantity :quant 5 )  )  )
and :arg1-of ( leave :arg0 they )  :op1 ( pack :arg0 ( i :arg0-of ( catch :arg1 train :arg2 ( city :name ( name :op1 london )  :wiki london )  )  )  :arg1 suitcase )
go :arg0 i :direction back
possible :arg1 ( call :arg0 you :arg1 i :arg2 ( wimp :arg1-of snivel )  )
contrast :arg1 ( 18 :quant-of ( temporal-quantity :unit year )  )  :arg1-of ( recommend :arg0 old )  :arg2 ( subject :arg1 ( institution :arg1-of educate )  :arg2 ( intimidate :arg1 - :mod ( such :mod-of vitriol )  :op1-of and )  )
contrast :arg1 ( produce :arg0 ( country :name ( name :op1 oxford )  )  :arg1 ( person :arg0-of ( have-org-role :arg2 ( minister :mod prime :mod ( political-party :name ( name :op1 tory )  :wiki conservative_party_[uk] )  )  )  )  :mod ( only :polarity - )  )  :arg2 ( hide :arg1 ( reputation :arg1-of ( deserve :arg1-of ill )  :location behind )  :arg2 ( day :mod this )  :arg3 ( and :arg1-of ( think :arg1-of equal )  :op1 ( free :arg1 14 :mod ( more :mod even :quant-of tragic )  )  )  )
prefer :arg0 ( person :name ( name :op1 &quot; )  )  :arg1 elegance :arg2 notoriety
exhibit :arg0-of ( open :arg1 this :location ( city :arg0-of ( speak :arg1 ( and :arg1-of ( have-rel-role :arg2 client )  :op1 other :op2 ( design :arg1 ( country :name ( name :op1 italy )  :wiki italy )  )  )  :name ( name :op1 abc )  :time week )  :name ( name :op1 london )  :wiki london )  )  :arg1 ( mean :arg1 ( name :op1 master )  :arg1-of occasion )
exhibit :arg0 ( person :name ( name :op1 valentino :op2 garavani )  :poss-of ( home :poss ( i :part-of ( country :name ( name :op1 england )  :wiki england )  )  :time former )  :poss-of ( place :domain ( country :name ( name :op1 somerset :op2 house )  )  :mod only )  )  :arg1 ( thing :name ( name :op1 queen :op2 elizabeth )  )  :arg2-of ( host :arg1 ( capital :mod ( country :name ( name :op1 britain )  :wiki united_kingdom )  )  :purpose-of worthy )
mean :arg1-of ( inaugurate :arg0 ( he :arg0-of ( design :arg0-of ( acknowledge :arg1 retrospective )  )  :arg2-of ( bring :arg0 ( apotheosi :name ( name :op1 master )  )  :arg1 together )  :poss-of house :poss-of ( fashion :manner-of ( create :arg0 130 :arg1 couture :op1-of gown )  )  :poss-of ( 50 :quant-of ( temporal-quantity :quant past :unit year )  )  )  )
say :arg0 ( he :arg1-of ( love :arg0 i :arg2 ( palace :mod this )  )  )  :arg2 ( he :op1-of unmistakable :poss-of ( accent :mod ( country :name ( name :op1 italy )  :wiki italy )  )  )
exhibit :arg0 ( story :arg0-of ( have-rel-role :arg1 ( he :arg0-of ( write :arg1 ( possible :arg1 it :polarity - )  )  :arg0-of ( distinguish :arg1 signora )  )  :arg2 client )  :poss culmination :poss of :poss ( protagonist :mod only )  )  :arg1 this
and :arg0-of ( fascinate :arg1 ( person :name ( name :op1 valentino )  )  :time always )  :op1 rarefy :op2 ( world :arg1-of distant :mod nobility )
aristocracy :arg1-of ( cream :arg0 ( person :name ( name :op1 princess :op2 salimah :op3 aga :op4 khan )  )  :arg2-of ( sign :arg0 ( country :name ( name :op1 greece )  :wiki greece )  :arg1 ( and :op1 ( letter :arg1-of private :quant number )  :op2 photo :op3 ( person :mod ( princess :wiki ubolratana_rajakanya )  :name ( name :op1 marie-chantal )  )  :op4 ( country :name ( name :op1 england )  :wiki england )  )  :time ( date-entity :arg2-of ( open :arg0 ( country :name ( name :op1 lord :op2 snowdon )  )  :arg1 ( exhibit :arg1 3 :purpose-of room )  )  :month 3 :op1-of until )  )  )
exhibit :arg0 ( person :mod ( country :name ( name :op1 italy )  :part ( north :part-of ( country :location-of ( couturi :mod humble :purpose-of ( trophi :poss ( ascent :mod society )  )  )  :name ( name :op1 voghera :poss they )  )  )  :wiki italy )  :name ( name :op1 valentino )  )  :arg1 ( memory :arg1-of ( personal :arg0 ( idol :poss ( jet :mod international :mod-of set )  )  )  :mod this )
royalty :arg1-of love :arg2-of ( wrong :arg1 nothing )
say :arg1 ( barones :mod-of fiona )  :arg2 bornemisza :arg2-of ( beautiful :arg0 ( end :arg0 ( do :arg0 ( they :arg0-of ( drop :arg1 cigarette )  )  :arg1 carpet :arg2 celebrity :arg3 at :polarity - :time least )  :arg1 magnificent )  :arg1 ( pop :mod-of music )  :arg2-of resemble :mod some )
and :op1 good :op2 ( person :arg0-of ( have-rel-role :arg1 alp :arg2 friend )  :op3-of ( and :op1 70 :op2 ( live :arg0 we :arg1 both )  :quant 60 )  )
host :arg0 ( person :name ( name :op1 valentino )  )  :arg1-of ( entertain :arg2 ( and :op1 generosity :op2 elegance )  )  :mod spectacular
say :arg0 ( he :arg0-of ( forget :arg1 beauti :arg2 such )  :arg1-of ( love :arg0 ( we :arg0-of ( invite :arg1 ( person :arg0-of ( have-rel-role :arg1 close :arg2 wife :time ex )  :arg0-of ( have-rel-role :arg1 of :arg2 friend )  :op2-of ( and :op1 ' :op3 agnelli :op4 niarcho )  )  :arg2 chalet )  )  :mod all )  )  :arg1 thyssen
prefer :arg0 ( person :mod notoriety :name ( name :op1 valentino )  )  :time always
and :op1 ( star :domain he :manner yet )
wear :arg0 ( person :name ( name :op1 valeria :op2 mazza )  )  :arg1 ( person :name ( name :op1 valentino )  )
recall :arg0 model :arg1 charisma :arg2 couturi :mod also
go :arg0 we :purpose dinner :time ( after :op1 ( show :arg0 ( many :op1 ( temporal-quantity :unit year )  )  :arg1 ( fashion :mod ( city :name ( name :op1 rome )  :wiki rome )  )  :location ( country :name ( name :op1 piazza :op2 di :op3 spagna )  )  )  )  :time flat
and :op1 twenty :op2 ( person :name ( name :op1 sharon :op2 stone )  )  :op3 ( person :name ( name :op1 john :op2 kennedy :op3 jr )  )
and :op1 food :op2 music :op4-of ( and :op1 ( detail :arg1 every :op3-of ( and :op1 ( see :arg0 you :arg1-of possible )  :op2 ( feel :arg0 spirit )  )  )  :op2 flat :op3 decor )
recall :arg0 important :arg1 ( model :arg0-of ( work :arg1 during :arg1-of ( start :arg0 amr-unknown :time ( date-entity :year 1995 )  )  :location ( city :name ( name :op1 paris )  :wiki paris )  )  :arg1-of ( love :arg0 ( and :op1 all :op2 ( feel :arg0 guest :arg1 ( thing :name ( name :op1 &quot; )  )  )  )  )  )  :arg2 top
cause :arg0 and :arg1 ( go :arg0 ( he :arg0-of ( work :arg1 of )  :arg0-of ( design :arg1 art )  )  :arg1 fashion :arg1-of ( conclude :arg0 she )  :arg2 out :arg4 nev )
parade :arg1 nobility
contrast :arg1 ( love :arg0 ( person :name ( name :op1 garavani )  :poss-of life )  :arg1 ( reciprocate :mod well )  )  :arg2 ( obsess :arg0 ( story :polarity - )  :arg1 of )
and :op1 ( love :arg0 ( he :arg0-of ( well :arg1 ( person :arg0-of ( come :arg3 ( background :mod good )  )  )  )  )  :arg1 ( educate :arg0 he )  )  :op2 ( love :arg0 they )
mean :arg1 ( choose :arg0 kennedy :arg1 ( she :arg0-of wear :arg0-of ( wed :mod-of aristotle )  :arg0-of ( costume :arg1 leather )  )  :arg1-of ( wear :arg0 audience :arg2 masterpiec )  :op1-of onassi :op1-of ( and :arg1-of ( belong :arg0 coat :mod that )  :op2 ( and :op1 example :op2 dress )  :op3 wool )  )  :op2-of ( and :op1 ( foot :degree-of ( long :arg1 catwalk )  )  :op3 ( take :arg0 ( person :arg0-of ( visit :arg1 ( look :arg0 while )  )  :arg0-of dream :arg0-of ( have-org-role :arg1 ( name :op1 farah )  :arg2 empress )  )  :arg1-of ( reverse :arg0 role )  :arg2 ( transform :arg0 galleri :arg1 glamorou :op1-of into )  :arg3 1 )  :op4 ( place :arg1-of ( offer :arg0 ( country :name ( name :op1 one )  )  :arg3 sixty )  )  :op5 ( model :arg0-of ( parade :arg1 down )  )  )
stand :arg0 such :arg1 name :arg2 ( country :consist-of ( country :name ( name :op1 luxembourg )  )  :name ( name :op1 sibilla )  :op1-of ( and :op2 ( organization :mod ( person :name ( name :op1 gloria :op2 von )  )  :name ( name :op1 thurn :op2 und :op3 taxis )  )  :op3 ( person :mod ( country :name ( name :op1 norway )  :wiki norway )  :name ( name :op1 mette-marit )  )  :op4 ( country :name ( name :op1 bulgaria )  :wiki bulgaria )  :op5 habsburg )  )  :location ( crowd :mod this :mod mannequin )
and :op1 ( person :name ( name :op1 naty :op2 abascal )  :time ( date-entity :year 2006 )  )  :op2 design
say :arg0 ( person :arg0-of love :arg1-of ( have-rel-role :arg2 client )  :arg2-of ( resemble :arg1 forget )  :name ( name :op1 many )  :quant ( many :quant-of of )  )  :arg1 this
remember :arg0 i :arg1-of perfect
and :op1 ( pair :arg0 it :arg1 trousers )  :op2 shirt :op3 waistcoat :op4 jacket :op5 ( date-entity :day 72 :month 19 :year 1971 )  :op6 ( collect :arg0 autumn :arg1 winter )
say :arg0 ( he :arg0-of ( muse :arg1 of )  :arg0-of ( give :arg1 1 :arg2 i )  :arg0-of ( design :arg1 ' )  :arg1-of ( gift :arg0 it )  )  :arg1 abascal
add :arg0 ( he :arg0-of ( enhance :arg1 we :arg2 duches )  :arg1-of ( love :arg0 he :mod great )  :arg1-of ( cause :arg0 ( and :op1 ( prefer :arg0 i :arg0-of ( cause :arg1 of )  :arg1 ( other :mod-of designer )  :arg2 he )  :op2 femininity :op3 woman :op4 beauty :op5 ( country :name ( name :op1 &quot; )  )  )  )  )  :arg2 former
and :arg1-of ( face :arg0 ( he :arg0-of ( stand :arg1 they )  :arg0-of ( lend :arg1 really )  :arg1-of ( love :arg0 i )  :arg1-of ( use :arg0 ( person :mod colour )  )  )  )
proportion :arg1-of perfect
and :arg1-of ( remember :arg0 ( she :arg0-of ( wear :arg1 time )  )  :mod also )  :op1 princes :op2 fashion :op3 advise :op4 d
age :arg1 ( reach :arg0 ( i :arg1-of ( dream-up :arg0 ( country :name ( name :op1 italy )  :wiki italy )  )  )  :arg1 ( live :arg0 ( he :poss-of gown :poss-of evening )  :arg1 teenager )  :arg1-of ( chance :arg0 i :arg1-of wear )  )
come :arg1 90 :time late :time ( time :mod i )  :time final
belong :arg0 castle :arg1 ( person :arg0-of ( have-rel-role :arg1 ( i :arg0-of ( buy :arg1 dress :arg2 ( country :name ( name :name-of prince :op1 edouard :op2 de :op3 ligne )  )  :mod ( person :name ( name :op1 valentino )  )  )  :arg0-of ( wear :arg1 party )  )  :arg2 cousin )  )
and :op1 dress :op2 ( drape :arg0 it :arg1 ( skirt :arg0 frilly :arg1 red )  )  :op3 corsage :op4 straples :op5 neckline
say :arg0 ( true :arg1-of ( come :arg3-of ( widow :arg0 arenberg :arg1 of :arg2 rodrigo )  )  :arg2-of ( dream :arg0 it :arg1 d )  )  :arg1 ( princess :wiki ubolratana_rajakanya )  :arg2 d
say :arg0 ( he :arg0-of ( obsess :arg1 amr-unknown :arg2 timeles :manner fashion )  :arg0-of ( air :arg1 ( life :mod aristocrat :poss ( country :name ( name :op1 italy )  :wiki italy )  )  :op5-of ( and :location ( city :name ( name :op1 paris )  :wiki paris )  :op1 ( person :name ( name :op1 &quot; )  )  :op2 indifferent :op3 between :op4 ( city :name ( name :op1 new :op2 york )  :wiki new_york_city )  )  )  )  :arg1 this
cause :arg0 ( she :arg0-of ( care :arg1 it :mod utmost :mod expressive :mod ( just :mod-of dress :mod-of ( many :mod also :mod-of memory :quant-of that )  )  )  :arg2-of ( look :arg1 ( d :mod ( princess :wiki ubolratana_rajakanya )  )  :op1-of ( after :mod-of ( couturi :mod-of gown )  )  :polarity - )  )  :arg1 dress
king :domain ( fashion :mod of )
exhibit :arg0 ( she :arg0-of ( marry :arg1 ( person :mod ( country :mod-of ( 1995 :year-of date-entity )  :name ( name :op1 greece )  :wiki greece )  :name ( name :op1 paul )  :wiki ron_paul )  :arg1-of ( wed :arg1-of ( mill :arg0 ( finale :mod grand )  )  :mod-of dress )  )  )  :arg1-of ( house :arg0 of )
and :op1 ( work :arg1 ( 4 :quant-of ( temporal-quantity :unit month )  )  )  :op2 25 :op3 girl :op4 ( call :arg0 ( create :arg0 pearl :arg0-of ( encrust :arg1 ivory )  :arg1 colour )  :arg1 it :arg1-of design :arg2 seamstress :op1-of ( and :op2 ( differ :arg0 gown :arg1 twelve :arg2 silk )  :op3 type :op4 lace :op5 train :op6 ( and :arg1-of ( long :arg0 metr )  :op1 4 :op2 half )  )  )
say :arg0 ( person :arg0-of ( have-rel-role :arg1 ( return :arg1 society :arg1-of high )  :arg2 client )  :arg0-of ( lead :arg1 ( authority :arg0-of ( of :arg1 press )  :arg0-of ( dress :arg1 ( represent :arg0 late :arg1 ( fashion :arg1-of high :mod-of milestone )  )  )  :arg0-of ( specialize :arg1 press )  )  )  :name ( name :op1 according )  )  :arg1 journalist
of :arg0 elite :arg1 ( fine :arg1 exponent :degree most )  :arg1-of ( dazzle :arg0 ( temporal-quantity :unit year )  )  :time now
and :arg1-of ( accumulate :arg0 ( he :arg1-of ( have-rel-role :arg0 ( person :arg1-of ( rank :arg1-of ( high :degree most )  :arg1-of ( distinguish :arg0 ( country :name ( name :op1 italy )  :wiki italy )  :purpose-of gran )  )  :name ( name :op1 cavaliere )  )  :arg2 client )  :arg1-of ( have-rel-role :arg0 ( person :mod any )  :arg2 husband )  )  :arg2 ( many :mod-of honour )  )  :op1 lettr :op2 ( award :arg0 ( art :mod d :mod l :mod de )  )  :op3 ( legion :mod-of ( of :mod-of honour )  )
and :op1 ( and :op1 ( calm :arg0 ( he :arg0-of ( refine :arg1 ( and :arg1-of ( strike :arg0 i :op1-of by :time always )  )  )  )  :arg1 manner )  )  :op2 neat :op3 ( appear :arg1 arenberg :arg1-of ( perfect :arg0 ( he :arg0-of ( acknowledge :arg1 d )  )  )  )
see :arg0 i :arg1 ( temporal-quantity :unit month )  :arg2 ( organization :location-of ( dinner :mod gala )  :name ( name :op1 orsay :op2 museum )  )  :time ( time :mod last )
great :mod-of ( friend :arg2-of ( have-rel-role :arg0 he :arg1 mine :mod-of ( country :name ( name :op1 countess :op2 jacqueline :op3 de :op4 ribes )  :poss-of table )  )  )
immaculate :mod-of ( time :mod still :mod he :mod-of stand )
say :arg0 that :arg1 princes
mul :mod ( human :arg0-of ( hard :arg1 job :compared-to world :degree most )  )  :poss ( country :name ( name :op1 kawah :op2 ijen )  )
steep :arg1 ( path :op1-of along )  :mod-of ( stone :arg1-of ( sulphur :arg1-of ( carry :arg0 ( volcano :arg1-of risk :mod ( country :name ( name :op1 indonesia )  :wiki indonesia )  )  :op3-of ( and :location-of ( monetary-quantity :quant 4 :unit euro )  :op1 life :op2 limb )  )  :quant ( mass-quantity :quant 70 :unit kilogram )  )  )
and :arg1-of ( work :arg0 literal :location hell )  :op1 ( hell :arg1-of ( work :arg0 person )  )  :op2 other
sulphur :arg1 400 :arg1-of ( take :arg0 ( live :arg0 ( person :arg0-of mine )  :arg1 ( case :arg0 east :arg1 ( person :name ( name :op1 anto :op2 wijaya )  )  :domain this )  )  :arg2 ( volcano :mod ( country :name ( name :op1 kawah :op2 ijen )  )  :poss ( island :location ( country :name ( name :op1 indonesia )  :wiki indonesia )  :poss ( thing :name ( name :op1 java )  )  )  )  )
emanate :arg1 ( gas :arg0-of ( contact :arg1 air )  :arg0-of ( solidify :arg1 ( crater :poss-of ( bottom :arg2-of ( descend :arg0 ( he :arg0-of do )  :arg1 ( day :mod every )  )  )  )  )  :mod sulphurou )  :arg2 ( bowel :poss earth )
possible :arg1 ( weigh :arg1 ( rock :arg1-of ( break :arg0 ( he :arg0-of ( carry-out :arg2 ( basket :mod bamboo :quant 2 :topic ( shoulder :arg1 ( path :arg1-of ( steep :mod-of stone )  )  :location along )  )  )  )  :op1-of after )  :arg1-of ( sulphur :arg0 large )  :arg1-of total )  :arg3 ( mass-quantity :quant 70 :unit kilogram )  )
contrast :arg1 ( sea :mod-of level )  :arg2 ( and :arg1-of balance :arg1-of measure :op1 ( keep :arg1 ( pace :arg0 above :arg1 ( snail :arg0 top :arg1 ( take :arg0 ( it :poss-of ( 250 :mod only )  )  :arg1 porter :arg1-of ( exhaust :arg0 metr )  :arg2-of ( rise :arg0 volcano )  :arg3 ( temporal-quantity :quant 40 :unit minute )  )  )  )  )  :op2 ( step :arg1-of avoid :op1-of careful :op1-of ( and :arg1-of slip :op2 ( fall :arg1 precipice )  )  )  )
know :arg0 they :arg1 ( cost :arg0 hazardou :arg1 ( slip :arg0 france :arg1 ( country :mod-of cliff :name ( name :op1 kawah :op2 ijen )  )  )  :arg1-of ( possible :arg1-of ( plunge :arg0 ( person :arg0-of tour )  :arg2 ( die :arg1 ( temporal-quantity :op1-of few :unit year )  )  )  )  :arg2 life )
pay :arg1 ( monetary-quantity :quant 5 :unit ( cent :mod ( monetary-quantity :unit euro )  )  )  :arg2 ( person :arg0-of ( mine :arg1 ( country :name ( name :op1 kawah :op2 ijen )  )  )  )  :time ( sulphur :arg0-of ( remove :arg1 ( kilo :mod each )  )  )
circus :mod-of ( monkey :arg1-of ( photograph :arg0 ( person :arg0-of tour :op1-of past :poss-of ( way :direction top :poss they )  )  :arg1-of ( resemble :arg2 ( and :op1 ( mine :arg0 ( company :arg0-of ( install :arg1 ( scale :destination-of ( walk :arg0 metr :arg1 ( distance-quantity :quant 3 :unit kilometer )  :manner above :time once )  )  :degree ( further :degree-of down :mod little )  )  )  :arg1 ( level :mod sea )  )  )  )  :purpose ( lug :arg1 ( basket :mod heavy )  :manner then )  )  )
and :mod ( literal :degree quite )  :op1 ( person :mod pt :name ( name :op1 ngrimbi :op2 candi )  )  :op2 ( exploit :arg0 ( company :domain this )  :arg1 volcano :arg2 ( monetary-quantity :mod-of ( cent :unit-of monetary-quantity )  :unit euro )  :time ( since :op1 ( date-entity :year 1960 )  )  )  :op3 ( pay :arg0 ( person :arg0-of work )  :arg1 ( sulphur :arg0 ( monetary-quantity :unit rupee )  :arg2 5 :mod-of kilo )  )
and :arg0-of ( use :arg1 ( and :op1 ( sell :arg0 ( it :arg0-of ( sulphur :arg2 ( monetary-quantity :unit rupee )  )  )  :arg1 83 :time then )  :op2 ( use :arg0 ( industry :mod petrochemical )  :arg1 mineral :manner wide :time ( life :mod everyday )  )  :op3 firework )  :arg2 ( manufacture :arg1 ( match :arg0 ( sugar-cane :arg1-of whiten :mod even )  :arg1 ( monetary-quantity :unit cent )  )  )  )  :op1 cosmetic :op2 dynamite
cause :arg0 ( carry :arg0 ( we :arg0-of ( general :arg1 ( monetary-quantity :unit euro )  :arg2 about )  :arg0-of ( explain :arg1 amr-unknown :arg1-of ( trip :arg0 3.8 :arg2 usual )  :mod-of ( person :name ( name :op1 &quot; )  )  :purpose-of ( trip :arg0 3 :arg1 day )  )  )  :op1-of ( mass-quantity :unit kilogram )  :op1-of 70 )  :arg1 ( get :arg0 we :arg1 ( monetary-quantity :unit rupee )  )
contrast :arg1 ( mean :arg1 ( get :arg0 he :arg1 ( rupee :unit-of monetary-quantity )  :time ( end :arg0 each :arg1 day )  )  )  :arg2 ( end :arg0 ( you :arg0-of ( exhaust :arg1 ( monetary-quantity :quant 11.5 :unit euro )  )  )  :arg1 ( temporal-quantity :quant 3 :unit hour )  :op1-of ( and :arg1-of ( take :arg0 one )  )  )
pittance :arg1-of ( seem :arg0 3 :arg2 ( effort :mod ( inhuman :degree such )  )  :concession ( earn :arg0 he :arg1 field )  )
wage :arg0 ( temporal-quantity :unit month )  :arg1 ( monetary-quantity :unit rupee )  :arg2-of ( average :arg0 miner :arg1 million :op6-of ( and :op1 wage :op2 here :op3 ( pay :arg0 whereas :arg1 ( monetary-quantity :unit rupee )  :arg1-of ( harvest :arg0 coffee )  :arg1-of ( high :degree very )  :arg2 2 )  :op4 ( monetary-quantity :unit euro )  :op5 day :op7 ( monetary-quantity :unit euro )  :op8 ( work :arg0 ( amr-unknown :arg1-of ( explain :arg0 167 :mod-of porter )  )  :arg1 mason :arg2 ( island :arg0-of ( resort :arg1 of :arg2 ( island :name ( name :op1 bali )  :wiki bali )  )  )  :time previous )  )  )
contrast :arg1 ( return :arg1 ( country :name ( name :op1 indonesia )  :wiki indonesia )  :arg1-of ( work :arg0 ( he :arg0-of ( wage :arg1 ( monetary-quantity :unit rupee )  :arg2 6.2 )  )  :arg1-of ( hard :polarity - )  :location and :location day :location ( monetary-quantity :unit euro )  )  :arg2 family )  :arg2 ( near :arg1 ( reason :arg1-of ( compel :arg2 i )  :arg1-of ( override :arg2 ( marry :arg1 ( girl :arg1-of ( convert :arg0 ( she :arg2-of ( bring :arg0 they :arg1 ( i :op1-of and )  )  )  :arg2 ( religious-group :name ( name :op1 islam )  :wiki islam )  :mod java :mod ( religious-group :name ( name :op1 hindu )  :wiki hindu )  )  )  :arg2-of ( sulphur :arg1 ( island :name ( name :op1 bali )  :wiki bali )  )  )  )  )  :arg2 volcano :mod village )
and :op1 ( person :name ( name :op1 anto )  )  :op2 asthma :op3 ( difficult :arg1-of ( breathe :arg0 he )  )  :op4 ( cough :manner constant )  :op5 ( irritate :arg0 ( gas :mod toxic )  :arg1 eye )
and :op1 ( face :arg1-of ( cover :arg0 ( he :arg0-of ( begin :arg1 ( take :arg0 ( sulphur :arg0 ( 27 :quant-of ( temporal-quantity :unit year )  )  :arg1 ( volcano :mod ( country :name ( name :op1 kawah :op2 ijen )  )  )  )  :arg1 toll )  :op2-of ( and :op1 ( risk :arg0 ( person :name ( name :op1 anto )  )  :arg1 life :duration ( temporal-quantity :quant 3 :unit year )  )  )  :time already )  :domain-of old )  :arg2 ( mask :arg1-of special )  :mod even )  )  :op2 goggles
and :op1 asthma :op2 ( difficult :arg1-of ( breathe :arg0 he )  )  :op3 ( cough :arg0 he :arg1 volcano :manner constant )  :op4 eye :op5 ( irritate :arg0 ( gas :mod toxic )  )
realize :arg0 ( you :arg0-of ( pay :arg1 ( price :arg1 this )  )  )  :arg1 ( thing :arg1-of dream )
cause :arg0 ( year :unit-of temporal-quantity )  :arg1 ( want :arg0 i :arg0-of ( open :arg1 ( study :arg1 vow :arg1-of ( go :arg0 ( i :arg0-of ( work :arg1 more :arg2 2 )  )  )  :op1-of ( language :name ( name :op1 spanish )  :wiki spanish_language )  )  :op1-of ( or :op2 shop )  )  :arg1 ( or :arg1-of ( accept :arg0 he :degree more :op1-of ( language :name ( name :op1 english )  :wiki english_language )  )  :op1 france )  )
contrast :arg1 ( possible :arg1 ( guide :arg0 ( man :arg1-of intelligent :arg1-of ( work :arg0 he :arg2 mule )  :arg1-of pleasant :mod this :mod young )  :arg1 tour :arg2 ( punish :arg1 life :arg1-of instead-of )  :op1-of ( or :op2 wait :op3 hotel :op4 receptionist )  )  )
cause :arg0 morning :arg1 ( sulphur :arg1 ( colour :arg1-of ( dark :arg1-of glow )  :arg1-of ( flow :arg1-of ( stop :arg0 ( he :arg0-of ( share :arg1 ( filthy :mod-of wood )  )  :arg0-of ( get :arg1 ( every :mod-of day )  :arg3 2 :mod other )  )  )  :polarity - :time night )  :arg1-of yellow :arg1-of characteristic :op1-of ( and :op2 ( turn :arg1 blue )  )  )  )
and :op1 ( descend :arg0 ( person :arg0-of ( defy :arg1 shadow )  :name ( name :op1 anto )  )  :arg1 crater )  :op2 light :op3 ( path :arg0-of ( attach :arg1 ( torch :mod small )  :arg2 ( helmet :arg1-of ( buy :arg0 ( he :poss-of money )  )  )  )  )
carry :arg0 ( porter :arg0-of ( shoulder :arg1 crater :arg2 400 )  )  :arg1 ( basket :arg1-of sulphur )  :quant some
and :arg0-of ( work :arg1 ( equipment :arg1-of ( provide :arg0 ( company :arg0-of mine :arg0-of ( cost :arg1-of ( save :arg0 ( process :arg1 ( extract :arg1 sulphur )  )  :arg2-of ( profit :mod huge :op1-of despite )  )  )  )  :arg2 porter )  :mod any )  :arg2 - )  :op1 kilo
photograph :arg0 ( person :arg0-of tour :arg2-of ( charge :arg0 ( they :arg0-of ( see :arg1 ( any :mod-of rupee )  :mod even :polarity - :prep-in fact )  )  :arg1 ( person :arg0-of ( guard :arg1 ( reserve :arg0 ( surcharge :mod camera )  :arg1 ( monetary-quantity :unit euro )  :arg1-of ( natural :arg0 2.5 )  :mod this )  )  )  :time ( entrance :mod-of ( fee :part top )  )  )  )  :arg1 ( and :op1 ( mul :mod human :poss volcano )  )  :purpose-of ( come :arg1 ( monetary-quantity :unit euro )  )
kawah :op1 ( work :arg0 ( person :arg0-of ( leave :arg1 school :time ( since :quant-of ( temporal-quantity :quant 3 :unit decade )  )  )  :arg0-of ( protest :arg1 ( country :name ( name :op1 &quot; )  )  :arg2 ( burly :mod-of 42 )  :polarity - )  :arg2-of ( work :arg1 animal :mod this )  )  :arg2 ijen :location amr-unknown :location porter :location year )
cause :arg0 ( possible :arg1 ( go :arg0 ( he :arg0-of ( ensure :arg1 ( mass-quantity :unit kilogram )  )  )  :arg1 all :arg1-of ( work :arg0 ( he :arg0-of ( lift :arg1 110 )  :arg1-of possible )  )  )  )  :arg1 ( need :arg1 ( money :arg1-of ( educate :arg0 ( old :mod-of ( temporal-quantity :unit year )  )  :arg2 ( child :arg0-of ( age :arg1 ( between :op1-of ( and :op2 interrogative :op3 10 )  :quant-of ( temporal-quantity :quant 18 :unit month )  )  )  :mod 3 )  )  )  )
cause :arg0 here :arg1 ( die :arg1 ( i :arg1-of ( retire :arg0 i )  :poss-of ( life :poss i :poss whole :poss volcano )  )  )  :polarity -
smoke :arg1-of ( come :arg3 volcano )  :poss-of ( column :arg1-of ( mine :arg0 ( person :arg1-of ( change :manner sudden :op1-of ( and :op2 ( trap :arg0 wind :arg1 apart )  :time ( and :op1 ( burn :arg0 sulphur :arg1 throat )  :op2 ( sting :arg1 eye )  :op3 ( hardy :domain they :domain ( complain :arg0 ( one :arg0-of ( shoulder :arg1 ( and :op1 ( problem :mod common :topic respiratory )  :op2 osteoarthriti :op3 ( pain :arg1 ( weight :poss basket )  :arg1-of knee )  :op4 sor )  )  :polarity - )  :arg1 ( illness :mod serious )  )  )  )  )  )  )  )  :arg1-of thick )
possible :arg0 ( 53 :quant-of ( temporal-quantity :age-of ( he :domain-of old )  :unit year )  )  :arg1 ( carry-out :arg0 ( country :name ( name :op1 unainik )  )  :arg1 ( balance :arg0 ( mass-quantity :quant 50 :unit kilogram )  :arg1 basket :arg2 back )  :mod only :time now )
warehouse :arg1 ( 18 :quant-of ( distance-quantity :unit kilometer )  )  :arg2-of ( move :arg0 ( lorri :quant 3 )  :arg1 ( volcano :arg1-of sulphur :arg2-of ( break-up :arg0 ( and :op1 he :op2 ( person :arg0-of work :mod fellow )  )  :arg1 ( tonne :unit-of ( volume-quantity :quant 15 )  )  :time ( day :mod every )  )  )  :location ( along :mod away :op1 ( path :arg0-of ( pass-out :arg1 scrubland )  :mod goat )  )  )  :location ( country :name ( name :op1 tamansari )  )
say :arg0 ( i :arg0-of ( use :arg1 tooth )  :arg0-of ( open :arg1 ( mouth :arg1-of ( cause :arg0 here :polarity - )  )  :arg2 gap :arg3 volcano :op1-of ( full :mod-of of )  )  :poss-of ( life :mod whole :part ( die :arg1-of ( retire :arg0 i :arg2 i )  )  )  )  :arg1 unainik
work :arg0 ( old :degree most )  :arg0-of ( carry :arg1 ( sulphur :arg1 5 )  :arg2 ( old :mod-of child )  )  :arg1 ( 30 :quant-of ( temporal-quantity :unit year )  )  :mod also
contrast :arg1 ( pass-out :arg0 time :arg1 ( hard :arg1 ( job :arg1-of ( do :arg0 ( mul :mod human )  :location ( volcano :mod ( country :name ( name :op1 kawah :op2 ijen )  )  )  )  )  :compared-to world :degree most )  )  :arg2 ( perpetuate :arg0 poverty :arg1 generation :arg2 generation )
seek :arg0 ( country :name ( name :op1 singapore )  :wiki singapore )  :arg1 ( baby :arg0-of ( save :arg1 economy )  )
blame :arg0 ( thing :name ( name :op1 singaporeans )  :poss-of career )  :arg1 ( and :op1 ( stress :arg0 - :arg1 child :op1-of ( and :arg1-of cost :op2 property :op3 educate )  )  )
' :arg1-of ( need :arg0 ( country :name ( name :op1 singapore )  :wiki singapore )  :arg1-of ( grow :arg0 population )  )
and :op1 ( let :arg0 ( person :arg0-of ( have-rel-role :arg1 i :arg2 wife )  )  :arg1 patriotic )  :op2 civic :op3 duty :op4 ( create :arg0 we :arg1 ( life :poss ( person :arg0-of ( have-rel-role :arg1 i :arg2 husband )  )  :poss you :poss expressive )  )
contrast :arg1 this :arg2 ( perhaps :mod-of ( cause :arg0 ( possible :arg0 ( mint :arg1 ( sweet :arg1-of ( advert :arg0 ( verse :mod this )  )  :op1-of or )  )  :arg1 ( seem :arg1 it :arg1-of ( likely :arg0 spite :polarity - )  )  )  :arg1 ( go :arg0 video :arg1 viral :location ( country :name ( name :op1 singapore )  :wiki singapore )  :time ( early :time ( year :mod this )  )  :time ( publication :name ( name :op1 youtube )  :wiki youtube )  )  )  )
and :example-of phrase :op1 ( rap :arg1 of )  :op2 ( use :arg1 ( put :arg0 ( country :name ( name :op1 singapore )  :wiki singapore )  :arg1 bun :arg1-of ( let :arg0 such )  :arg1-of reference :arg1-of ( birth :arg0 fun :arg2 rate )  :time oven )  :arg1-of local )
advertise :arg0 company :arg1 ( attend :arg1 video :arg1-of ( focus :arg0 ( advertisement :arg0-of ( manage :arg1-of ( hopeful :arg0 ( country :name ( name :op1 bbh )  )  )  )  )  :arg2 problem :manner ( way :mod fun )  )  )
say :arg0 ( person :arg0-of ( have-org-role :arg1 it :arg2 director )  :name ( name :op1 its )  :poss-of creative )  :arg1 ( he :arg0-of ( want :arg1 ( use :arg1 ( power :poss ( person :arg0-of ( perform :arg1 duty :op1-of nation )  :poss-of music )  )  )  )  )
cause :arg0 ( thing :arg1-of ( amuse :arg0 we :op2-of ( and :op1 fun )  )  :arg1-of ( pure :arg0 it )  )  :arg1 internet
face :arg0 country :arg1 problem :arg2 this :mod ( big :degree most :poss it )
cause :arg0 progeny :arg1 ( feel :arg0 we :arg1 ( issue :arg0 ( we :arg1-of ( address :arg0 ( we :arg0-of ( reproduce :arg1 ( bad :arg0 we :arg1 world )  )  )  )  )  )  )
date :arg1 ( speed :arg1-of organize :op2-of ( or :arg2-of ( launch :arg0 ( government-organization :arg0-of govern :arg0-of ( try :arg1 ( thing :arg1-of resemble :quant many )  :arg1-of ( know :arg0 we )  )  )  :arg1 perfume )  :op1 pheromon )  )  :time evening
contrast :arg1 ( work :arg1-of ( do :arg0 they )  :mod necessarily :polarity - )  :arg2 ( possible :arg1 creative :topic-of ( idea :mod this :quant ( many :quant-of of )  )  )
cause :arg1 ( think :arg0 we :arg1 - )  :arg1-of ( rap :arg1-of compose )  :arg2 ( creative :arg1-of ( possible :arg2 ( solve :arg1 problem )  )  :mode interrogative )
child
contrast :arg2 ( take :arg0 ( government-organization :arg0-of ( govern :arg1 ( country :name ( name :op1 singapore )  :wiki singapore )  )  :arg1-of light )  :polarity - )
spend :arg0 it :arg1 ( policy :arg1-of ( encourage :arg0 year :arg2 ( person :poss-of ( child :quant more )  )  )  )  :arg2 ( organization :name ( name :op1 usd )  )
and :op1 ( grant :arg0 ( and :op1 marry :op2 ( person :arg0-of ( have-rel-role :arg1 child :arg2 parent )  )  )  :arg2 ( organization :name ( name :op1 usd )  )  )  :op2 ( extend :arg0 ( package :part-of ( government-organization :arg0-of govern )  )  :arg1 ( leave :arg1 maternity )  )  :op3 ( distribute :arg1 ( benefit :arg1 tax )  )
contrast :arg2 ( effect :mod little :mod ( all :mod-of this )  )
control :arg0 ( country :name ( name :op1 singapore )  :wiki singapore )  :mod strict :mod society :op2-of ( and :arg2-of ( know :arg1 ( state :arg1-of high :location ( world-region :name ( name :op1 southeast :op2 asia )  :name-of ( city :mod technology )  :wiki southeast_asia )  :mod rich )  :mod also )  :op1 ( conservatism :poss ( person :arg0-of lead )  )  )
say :arg0 ( division :mod ( nation :mod-of population )  )  :arg1 ( stand :arg1 ( rate :location ( country :name ( name :op1 singapore )  :wiki singapore )  :mod ( birth :arg1 woman )  )  :arg2 child :time current )
know :arg1 ( time :mod last )  :arg2 ( rate :arg2-of ( replace :manner 2 :manner ( date-entity :year 1976 )  )  )
cause :arg0 child :arg1 ( thing :mode interrogative :name ( name :op1 singaporeans )  )  :arg2 -
say :arg0 ( person :arg0-of ( have-org-role :arg1 ( organization :arg0-of ( educate :arg2 ( and :arg1-of ( range :arg0 family :arg1-of wide :arg2 opportunity :mod-of career )  :arg2-of ( result :arg1 it )  )  :mod good )  :name ( name :op1 tan )  )  :arg2 director )  :name ( name :op1 tan )  :op1-of ( and :op2 of :op3 marriage :op4 policy )  )  :arg1 that
and :op1 beyond :op2 ( marry :arg1 ( he :arg0-of explain )  :arg1-of ( get :arg0 ( person :arg0-of ( range :arg1 of :arg1-of wide :arg2 option )  :arg2-of ( give :arg0 this :arg1 life )  :op1-of ( and :op2 goal :op3 priority )  )  )  )  :op3 ( start :arg0 term :arg1 family )
and :op1 ( increase :arg1 ( number :quant-of ( person :arg1-of single )  )  :arg2-of ( contribute :arg0 ( change :arg1 ( norm :mod society )  :mod this )  )  )  :op2 ( delay :arg1 ( and :op1 ( marry :arg1-of ( result :arg2 ( decrease :arg1 ( rate :location ( country :name ( name :op1 singapore )  :wiki singapore )  :mod birth )  )  )  )  :op2 birth )  )
increase :arg1 ( immigrate :arg1 ( cope :arg1 ( decline :arg1 population )  )  )  :arg2-of ( aim :arg1 ( policy :arg0-of ( create :arg1 ( resent :arg0 ( population :arg1-of local )  :arg1 ( organization :name ( name :op1 eu )  :wiki european_union )  )  :time meanwhile )  :mod immigrate )  )  :manner dramatic
integrate :arg1 ( and :arg1-of ( criticize :arg0 ( country :name ( name :op1 singapore )  :wiki singapore )  )  :op1 ( person :arg0-of immigrate :mod new :op1-of ( and :op2 ( disguise :arg0 website :arg1 ( xenophobia :arg1-of wide )  :degree thinly )  )  :quant many )  :op2 ( keep :arg0 ( country :mod especially :name ( name :op1 china )  :wiki china )  :arg1 ( wage :arg1-of low )  )  )  :polarity -
result :arg1 ( elect :arg1 ( immigrate :arg1 ( last :mod-of year )  :arg1-of increase :arg1-of ( see :mod also )  )  )  :arg1-of ( experience :arg0 ( party :arg0-of ( rule :arg1 ( country :name ( name :op1 singapore )  :wiki singapore )  )  )  )  :arg1-of bad :time ( since :op1 ( depend :arg1 reason :polarity - )  )
attempt :arg0 ( person :arg0-of work :arg1-of ( levy :op2-of ( and :op1 ( tax :arg1-of ( high :degree most )  )  )  )  :arg1-of ( elect :op1-of since )  :mod foreign )  :arg1 ( correct :arg1 problem )
consequence :mod unexpect
expect :arg0 ( country :name ( name :op1 singapore )  :wiki singapore )  :arg1 ( policy :arg1-of ( immigrate :arg0 healthcare :op1-of ( and :arg1-of cost :arg1-of ( know :arg0 rate :manner ( effect :arg1 ( economy :arg1-of ( grow :arg0 revenue )  :mod nation )  :arg1-of ( while :arg1-of fall )  :arg1-of tax :arg1-of birth )  )  :op2 consequence )  )  :arg1-of case )  :mod also :polarity - :time some
try :arg0 ( government-organization :arg0-of govern )  :arg1 ( build :arg1 ( house :mod small :quant many )  :polarity - )
start :arg0 example :arg1 ( influence :arg1 ( sector :mod ( estate :mod real )  )  )
possible :arg1 ( city :location-of ( build :arg0 ( authority :arg0-of ( know :arg1 box :manner shoe-in :mod apartment :mod small )  :arg0-of ( start :arg1 ( number :arg1-of ( control :arg0 it )  )  )  :arg1-of ( develop :mod urban )  )  :arg1 certain :location area )  )
and :op1 surface :op2 ( metr :quant square )  :op3 ( succeed :arg0 46 :arg1 ( apartment :mod this )  :arg2 term :degree very )
discourage :arg0 ( they :arg0-of ( live :arg1-of single )  :arg0-of ( promote :arg1 lifestyle :arg1-of possible :arg1-of concern :op1-of and )  )  :arg1 ( person :arg0-of develop :arg0-of ( want :arg1 ( build :arg1 ( house :mod large :poss family )  )  )  )
contrast :arg1 yew :arg2 ( person :arg0-of ( have-org-role :arg2 director :arg2-of ( manage :arg0 ( he :arg0-of ( sell :arg1 ( much :mod-of fast )  :arg2 unit )  :arg0-of ( say :arg1 large :time shoe-in :time box )  :arg1-of ( develop :arg0 person )  )  :arg1 ( estate :mod ( real :mod-of company )  )  :time soon )  )  :name ( name :op1 lim )  :wiki lim_dong-won )
fast :time-of ( sell :arg0 unit :arg1 ( temporal-quantity :unit day )  :arg1-of ( sense :arg0 ( large :mod-of unit )  :manner-of ( popular :arg0 they :arg1 ( even :mod-of ( temporal-quantity :unit week )  )  :degree more )  )  )
mean :arg0 they :arg1 this :arg2 ( good :purpose ( flow :arg0 much :arg1 cash :arg2 we )  )
guide :arg0 ( provide :arg0 they :arg1 ( unit :location project :mod small )  :arg1-of ( give :arg0 ( regulate :arg1 previous :arg1-of clear :mod new )  :arg1-of ( admit :arg0 he )  )  :duration ( many :degree too )  )  :arg1 ( person :arg0-of ( put :arg1 obstacle :arg2 way )  :arg0-of develop )
stress :mod too
state :domain ( country :name ( name :op1 singapore )  :wiki singapore )  :location city
seem :arg1 ( impact :arg0 ( this :mod-of ( rule :mod new )  )  :arg1 they :quant much )  :time ( talk :arg2 ( thing :arg1-of ( work :arg0 ( nation :mod-of ( rate :arg1-of ( increase :mod-of ( step :arg0-of ( birth :arg1 - )  :arg1-of possible )  )  )  )  :location ( district :mod central :mod finance )  )  :name ( name :op1 singaporeans )  )  )
say :arg0 ( person :arg0-of ( put :arg1 family :arg1-of ( educate :arg0 ( person :arg0-of ( stress :arg1 house )  )  :arg2 lot :degree very )  :arg1-of ( cause :arg0 ( and :arg0-of ( cause :arg1 of )  :op1 expensive )  )  :arg2 off )  )  :arg1 ( young :mod-of executive )
possible :arg1 ( child :domain ( person :mod other )  )
contrast :arg1 it :arg2 ( and :op1 i :op2 ( money :arg1-of ( own :arg0 important :arg2 ( old :mod-of ( temporal-quantity :quant 20 :unit year )  )  )  )  :op3 ( time :time-of ( say :arg0 i :arg1 ( young :mod another )  )  )  :op4 ( man :op1-of ( around :op2 of )  )  )
mention :arg0 ( and :op1 ( man :arg0-of ( prevent :arg1 reason )  )  :op2 ( stress :arg1 child :op1-of ( and :arg1-of cost :op2 property :op3 educate )  :op1-of and )  )  :arg1 ( career :poss woman )  :arg1-of alike
cause :arg0 ( come :arg1 ( word :mod last )  :arg4 baby )  :arg1 ( try :arg0 ( government-organization :arg0-of govern :poss-of child )  :arg1 ( encourage :arg1 ( citizen :poss government-organization )  :arg0 government-organization )  :degree much )
offline :arg0-of ( private :arg1 online )  :arg1-of private :domain amr-unknown
privacy
say :arg0 ( organization :name ( name :op1 according )  )  :arg1 ( quality :arg1-of ( of :arg0 privacy )  :arg1-of ( interfere :arg0 any :arg1-of ( protect :arg1-of ( entitle :arg0 person )  )  )  :arg1-of mean :mod-of level :op1-of ( or :arg0-of ( private :arg1 life )  )  )
privacy :domain amr-unknown :mode ( interrogative :mod-of ( under :mod-of 16 )  )
and :op1 ( life :arg1-of ( define :arg1-of ( apply :arg0 you :manner amr-unknown :mode interrogative )  :mod this )  )  :op2 ( network :mod society )
probable :mod-of ( share :arg0 ( internet :topic-of ( information :arg1-of ( air :arg0 interrogative :manner-of ( expose :arg0 - :arg1 ( danger :arg1-of ( understand :arg0 they )  )  )  )  )  )  :arg1 offline )
interview :arg0 ( organization :name ( name :op1 elperiódico )  )  :arg1 ( child :arg0-of ( age :arg2 ( user :arg1-of ( frequent :arg0 5 :arg2 old )  :mod internet )  :op1-of and )  )  :arg2 ( 15 :quant-of ( temporal-quantity :unit year )  )
and :location something :op1 ( person :arg0-of ( use :arg1 ( mine :arg1-of personal :arg1-of ( case :arg0 4 )  :arg1-of ( associate :arg0 they )  :mod ( much :degree very )  )  )  :arg1-of ( name :arg0 level )  )  :op2 ( and :arg0-of apply :op1 password :op2 society :op3 network )
say :arg0 ( i :arg0-of ( try :arg1 ( explain :arg0 ten :arg1 ( product :name ( name :op1 twitter )  :source ( company :name ( name :op1 facebook )  :wiki facebook )  :wiki twitter )  :purpose-of ( mean :arg2 privacy :op1-of ( and :op2 site :op3 such :op4 ( live :mod ( product :name ( name :op1 messenger )  :wiki yahoo!_messenger )  )  )  :op1-of of )  )  :arg2-of ( age :arg0 post :arg1 ( he :poss-of ( account :quant-of ( temporal-quantity :quant 2 :unit year )  )  )  )  )  :arg0-of ( deep :arg1 secret :degree most )  :arg2-of ( upload :arg0 i :polarity - )  )  :arg1 jorge
contrast :arg1 ( everybody :polarity - )  :arg2 ( say :arg0 ( he :arg1-of ( have-rel-role :arg0 ( person :arg1-of ( tell :arg0 i :arg2 i :degree very :time secret :time secret )  )  :arg2 mother )  )  :arg1 they )
upload :arg0 i :arg1 ( or :op1 ( picture :arg1-of nice )  :op2 game )
and :op1 ( person :arg1-of ( know :arg0 i :arg2 i )  :prep-with-of fun )
say :arg0 he :arg1 ( or :op1 ( share :arg0 i :arg1 ( photo :mod that )  )  :op2 ( mine :arg0-of ( belong :arg1 amr-unknown :arg2 ( do :arg0 somebody :arg1 something :arg2 stupid :arg3 ' :polarity - :polarity - )  )  )  )
comment :arg1 child :arg1-of ( write :op2-of ( or :op1 ( post :arg1 ( picture :mod obscene :poss ( person :mod naked )  )  :arg1-of bad )  )  )  :op3-of ( or :op1 humiliate :op2 aggressive )  :purpose crime
say :arg0 ( person :name ( name :op1 jorge )  )  :arg1 ( know :arg0 ( he :arg1-of ( have-rel-role :arg0 ( person :quant 35 )  :arg2 friend )  )  :arg1 ( and :op1 ( person :arg0-of ( follow :arg1 ( product :name ( name :op1 twitter )  :wiki twitter )  )  :quant 9 )  )  )
have-rel-role :arg0 ( person :mod-of most )  :arg2 relative
and :op1 ( include :arg0 she :arg1 ( person :arg0-of ( have-rel-role :arg1 he :arg2 mother )  )  :arg2 account )  :op2 password
interest :arg2 ( tweet :arg1-of ( post :op2-of ( and :op1 ( express :arg0 ( i :arg0-of ( open :arg1 ( product :name ( name :op1 twitter )  :wiki twitter )  )  )  )  )  )  )
cause :arg0 ( know :arg0 ( i :arg0-of ( do :arg1 ( he :arg0-of add )  )  )  :arg1 ( upload :arg0 i :arg1 they :mod only )  )  :arg1 ( they :arg0-of ( answer :arg1 i )  )  :polarity -
say :arg0 ( he :arg1-of ( have-rel-role :arg0 person :arg2 friend )  )  :arg1 ( or :arg1-of possible :op1 ( person :arg0-of ( have-rel-role :arg1 i :arg2 relative )  )  :op2 ( away :mod ( far :arg1-of ( talk :arg0 ( i :arg2-of ( network :arg0 social :arg1 fun )  )  )  :arg1-of quick )  )  )
request :arg0 ( person :arg0-of ( know :polarity - )  )  :arg1-of ( accept :arg0 he :arg1-of ( reply :arg0 he :arg1-of ( hesitate :polarity - :arg0 he )  )  )
take :arg0 he :arg1 ( notice :arg1 ( someone :arg0-of ( recommend :arg1 stranger )  )  :mod any )
age :arg0-of ( case :arg1 ( person :name ( name :op1 joseph )  :wiki joe_jackson_[manager] )  :arg1-of ( differ :arg0 14 )  )
add :arg1 ( person :arg1-of ( know :arg0 ( he :arg0-of ( admit :arg1 ( teenager :arg1-of account :mod this )  :op2-of ( and :op1 ( organization :name ( name :op1 hotmail )  )  :op4-of ( and :op1 ( company :name ( name :op1 facebook )  :wiki facebook )  :op2 ( organization :name ( name :op1 my :op2 space )  )  :op3 ask )  )  :time ( case :mod last )  )  )  :polarity - )  :arg1-of ( have-rel-role :arg0 ( person :arg2-of list )  :arg2 friend )  :quant 20 )
say :arg0 ( he :arg1-of ( bother :arg0 it :arg2 ( i :arg0-of ( cause :arg1 we :polarity - )  )  )  :arg2-of ( resemble :arg1 music )  )  :arg1 ( something :mod common )
say :arg0 boy :arg1 ( suggest :arg0 one :arg1 anything :op1-of ( or :op2 ( ask :arg0 - :arg1 ( address :mod home :op1-of ( or :op2 ( number :mod phone )  )  )  )  )  )
ask :arg0 i :arg1 it :arg2 they :op2-of ( or :op1 ( pressure :arg0 they :arg1 ( he :op1-of state )  :arg2 i )  )  :time-of ( delete :arg0 i :arg1 account :arg2 i :mod just )
become :arg1 ( person :arg0-of ( read :arg1 recommend :medium ( product :name ( name :op1 twitter )  :wiki twitter )  :op1-of after )  :arg1-of ask :name ( name :op1 joseph )  :wiki joe_jackson_[manager] )  :arg2 follow
cyberbully :arg1-of ( know :arg2-of ( experience :arg0 ( teenager :domain-of ( alien :polarity - )  :mod this )  :arg1 thing )  :time now )
pester :arg1 ( acquaint :arg1 ( have-rel-role :arg1 mine :arg2 friend )  )  :location ( network :mod society )
and :op1 ( threaten :arg0 ( they :arg0-of ( demand :arg1 money )  )  )
say :arg0 ( he :arg2-of ( find :arg0 i :arg1 amr-unknown :manner nev :manner out :manner it )  )
say :arg0 ( person :name ( name :op1 josé )  )  :arg1 ( close :arg1 account :polarity - )  :mod victim
private :arg0 he :arg1 it :mod just
explain :arg0 he :arg1 ( series :quant-of ( step :arg1 ( configure :arg1 account :manner safe )  )  )  :time then
upload :arg0 ( boy :mod this )  :arg1 ( photo :example ( or :op1 ( comfortable :polarity - )  :op2 embarrass :op3 situation )  :mod acquaintanc )  :arg2 ( person :name ( name :op1 jorge )  :op1-of unlike )
resemble :arg0 i :arg1 i :arg2 ( want :arg0 i :arg1 ( or :op1 somebody :op2 they )  :polarity - )
know :arg0 i :arg1-of ( admit :arg0 he )  :arg2 ( ' :mod ( that :mod-of cyberbully )  )  :time howev
question :arg1-of key
and :arg0-of ( teach :arg1 ( language :name ( name :op1 english )  :wiki english_language )  )  :op1 ( education :mod-of ( degree :op1-of ( and :arg1-of ( guide :arg0 ( they :arg0-of ( understand :arg1-of ( believe :arg0 ( person :name ( name :op1 marielos :op2 porras )  )  )  :arg1-of recommend )  :poss-of ( purpose :arg1-of inform :mod ( media :mod society )  )  )  )  :op2 child :op3 teenager )  )  )  :op2 learn
contrast :arg1 ( appear :arg1 ( website :mod this )  :arg2-of ( search :arg0 of :arg1 information :arg1-of ( emerge :arg0 internet )  :arg1-of mean )  )  :arg2 ( change :arg0 game :arg1 ( he :arg0-of ( say :arg1 rule )  )  )
say :arg0 ( person :arg0-of ( author :arg1 yale )  :arg0-of ( explain :arg1 ( term :mod this )  :arg1-of ( coin :arg0 immigrant )  :mod-of phenomenon )  :arg0-of ( work :arg1 digital :arg2 nativ :location ( degree :mod-of education )  )  :name ( name :op1 master )  :op1-of and )  :arg1 scholar
and :op1 ( child :domain ( nativ :mod digital )  )  :op2 ( person :arg1-of ( bear :instrument technology )  :mod young )
say :arg0 ( he :arg1-of ( learn :arg0 ( we :arg1-of ( teach :arg0 ( person :arg0-of ( immigrate :arg1 amr-unknown )  :mod digital )  :arg2 they )  )  :op1-of ( fact :mod still )  )  )  :arg1 we
say :arg0 ( he :arg0-of ( publish :arg1 ( or :arg1-of ( age :arg0 maturity )  :arg1-of ( divulge :arg0 ( conducive :polarity - )  )  )  )  :arg0-of ( issue :arg1-of ( cause :arg0 complex )  :arg1-of ( ask :arg0 ( we :arg0-of ( clear :arg1 ( policy :arg1-of ( appropriate :arg0 ( or :arg0-of ( disclose :arg1 - )  )  )  )  )  )  )  )  )  :arg1 this
think :arg0 ( person :arg0-of ( have-rel-role :arg1 ( he :arg0-of ( add :arg1 ( matter :degree most :mod amr-unknown :mod also )  )  )  :arg2 friend )  :arg2-of ( popular :arg0 they :arg1 of :op2-of ( and :op1 selective )  )  )  :arg1 consequence
say :arg0 ( person :arg0-of specialize :arg1-of ( effective :degree most )  )  :arg1 ( think :arg1 ( and :arg1-of ( teach :arg0 privacy :manner way )  :op1 child :op2 teenager )  :arg1-of question )
tell :arg0 ( they :arg0-of ( do :arg1 it :polarity - )  )  :arg1 good :arg2 ( he :arg0-of add )  :polarity -
cause :arg0 ( thing :arg1-of ( tell :arg0 you :arg2 ( person :arg2-of ( list :arg1 ( option :mod some )  :mod then )  :name ( name :op1 porras )  )  :polarity - :prep-to why :purpose stranger :purpose it :purpose online :time interrogative )  :mod there )
post :arg0 ( you :arg1-of ( have-rel-role :arg0 ( you :arg0-of ( like :arg1 ( publish :arg1 ( photo :arg1-of resemble )  :arg2 you )  )  )  :arg2 friend )  :arg1-of ( have-rel-role :arg2 friend )  )  :arg1 interrogative :op1-of or
know :arg0 you :arg1 ( publish :arg0 other :arg1 you )  :mode interrogative
permit :arg0 other :arg1 interrogative :arg2 ( person :arg2-of ( tag :arg0 ( you :arg0-of ( ask :arg1 ( photo :arg1-of tag )  :arg2 party )  )  :arg1 they )  )
and :op1 ( question :arg1 ( need :arg0 everyone :arg1 ( know :arg0 ( you :arg0-of ( do :arg1 ( all :mod-of time )  )  )  :arg1 amr-unknown :example interrogative )  )  :degree more )
point :arg0-of ( see :arg1 ( behave :arg0 they :medium online )  )  :mod another
same :arg1 rule
say :arg0 ( he :arg2-of ( same :arg1 ( way :mod-of society )  :arg1-of ( act :arg0 they :arg1-of ( recommend :arg0 ( outside :op1 internet )  :arg1-of ( cause :arg0 ( and :op1 ( respect :arg0 person :arg1 other :arg1-of act )  :op2 morality :op3 principle )  )  )  )  )  )  :arg1 network
monitor
say :arg0 ( person :arg0-of ( have-org-role :arg1 university :arg2 professor )  :arg1-of guard :name ( name :op1 stuart )  )  :arg1 ( and :op1 ( person :arg0-of teach )  :op2 ( educate :arg0 ( school :mod primary )  )  :op3 ( person :arg0-of ( consult :arg1 it )  :arg1-of ( have-rel-role :arg0 ( person :arg0-of ( read :arg1 ( policy :mod-of thorough )  :mod-of ( society :mod-of network )  )  :mod essential )  :arg2 parent )  )  )
open :arg1 ( account :mod online )  :arg2-of ( imply :arg1 ( thing :arg1-of ( talk :arg0 ( they :arg0-of ( understand :arg1 ( clause :mod all )  )  )  :arg2 child :instrument ( ground :arg1-of solid )  )  )  )
say :arg0 ( he :arg1-of publish )  :arg1 ( or :arg1-of ( share :arg0 you )  :arg1-of ( age :arg0 example )  :arg1-of allow )
say :arg0 important :arg1 ( child :arg0-of ( do :arg1 ( talk :arg0 lesson :arg1 stranger )  :polarity - )  :arg1-of remind )
close :arg0 ( organization :domain-of public :name ( name :op1 lima :op2 declaration )  )  :arg1 summit
conclude :arg0 ( organization :name ( name :op1 sixth :op2 presidential :op3 summit )  :part-of ( organization :name ( name :op1 south :op2 american :op3 union )  )  )  :arg1 ( person :name ( name :op1 nations )  )  :arg3 ( and :arg1-of ( sign :arg0 ( person :arg0-of ( lead :arg1 attendee )  :quant 7 )  :manner theoretic )  :op1 ( announce :arg1 ( organization :name ( name :op1 unasur )  )  :arg2 ( organization :domain-of public :name ( name :op1 lima :op2 declaration )  )  :time previous )  )  :location ( country :name ( name :op1 peru )  :wiki peru )  :time today
contrast :arg1 ( try :arg0 ( organization :arg0-of repeat :name ( name :op1 efe )  )  :arg1 ( gain :arg1 ( access :arg1 ( document :arg1-of ( sign :arg0 ( and :op1 president :op2 chancellery )  :arg2 ( organization :name ( name :op1 sixth :op2 unasur :op3 meeting :op4 of :op5 heads :op6 of :op7 state :op8 and :op9 government )  )  )  )  )  )  )  :arg2 ( say :arg0 source :arg1 ( deliver :arg0 they :time ( after :op1 ( close :arg1 summit )  )  )  :arg1-of ( contrast :arg2 ( claim :arg1 ( publish :arg1 ( point :mod some )  :medium ( website :poss ( government-organization :arg0-of ( govern :arg1 ( thing :name ( name :op1 peruvian )  )  )  )  )  )  :time late )  )  :time initial )
point-out :arg0 they :arg1 ( disclose :arg1 content :time ( state :arg0 ( person :arg0-of ( have-org-role :arg1 ( thing :name ( name :op1 peruvian )  )  :arg2 president )  :name ( name :op1 ollanta :op2 humala )  )  :arg1 press :mod brief )  )  :time ( ask :arg1 text )
at :arg1-of ( restrict :arg0 summit :arg2 ( from :mod ( information :arg1-of ( access :arg0 journalist )  )  )  )  :mod-of all
show :arg0 room :arg1 ( sound :arg1 ( air :arg0 ( video :mod only )  :arg1 press )  :polarity - )  :arg1-of ( have-org-role :arg0 ( person :arg0-of ( message :arg1 ( close :arg0 summit :arg1 session :arg1-of ( restrict :arg0 audio )  )  )  :arg1-of meet )  :arg2 president )
contrast :arg1 ( meet :arg1 ( person :arg0-of report :arg0-of ( circulate :arg1 ( information :arg1-of ( give :arg0 ( spokesman :mod press )  )  :quant little )  )  :mod some )  :arg1-of ( attend :arg0 ( government-organization :arg0-of ( govern :arg1 ( organization :name ( name :op1 unasur )  )  )  )  :polarity - )  )  :arg2 ( government-organization :arg0-of ( govern :arg1 ( thing :name ( name :op1 peruvian )  )  )  )
anger :arg0 ( and :op1 ( media :mod ( international :arg0-of ( ask :arg1 ( detail :arg0 ( document :arg1-of ( release :time ( summit :arg0-of ( attend :arg1 ( president :arg2-of ( list :arg1 nation )  )  )  )  )  :mod only )  :degree more )  )  )  :mod various )  )  :arg1 ( hundred :mod journalist )
contrast :arg1 summit :arg2 ( and :arg1-of ( state :mod this )  :arg1-of ( state :arg0 media :mod final )  :op1 ( person :arg0-of ( have-org-role :arg1 ( send :arg1 then :arg2 ( email :arg1 of )  :polarity - )  :arg2 president )  :arg0-of ( close :arg1 summit :mod that :mod document )  :arg0-of ( have-org-role :arg2 official )  )  )
host :arg0 ( country :name ( name :op1 peru )  :wiki peru )  :arg1 ( and :op1 ( request :arg0 press :arg1 ( time :mod this )  :arg1-of ( repeat :arg0 ( date-entity :mod last :month 10 )  )  :manner ( again :polarity - )  )  :op2 ( announce :arg0 ( country :mod third :name ( name :op1 summit :op2 of :op3 south :op4 american-arab :op5 countries )  )  :arg1 ( thing :domain-of public :name ( name :op1 lima :op2 declaration )  )  :time previous )  )
confirm :arg0 ( website :mod official :poss ( organization :name ( name :op1 aspa )  )  )  :arg1 ( publish :arg1 document :time tuesday :time last )
contrast :arg0 ( event :mod both :mod international )  :arg1 ( broadcast :arg1 ( system :arg0-of ( assure :arg1 ( journalist :quant all )  )  )  )  :arg1-of ( ensure :arg0 ( authority :mod ( thing :name ( name :op1 peruvian )  )  )  :arg1-of pain )  :arg2 ( limit :arg1 ( obtain :arg1 information )  :arg2 maximum )
conclude :arg0 summit :arg1 ( commit :arg0 ( country :name ( name :op1 chile )  :wiki chile )  :arg1 ( and :op1 ( country :name ( name :op1 peru )  :wiki peru )  )  :arg2 ( accept :arg1 ( rule :arg1 ( adjudicate :arg0 ( organization :name ( name :op1 hague :op2 court )  )  :arg1 ( dispute :arg0 ( country :arg2-of border :quant 2 )  )  )  )  )  :manner joint )  :mod also
and :op1 ( meet :arg0 ( and :op1 ( person :name ( name :op1 ollanta :op2 humala )  )  :op2 ( country :name ( name :op1 chile )  :wiki chile )  )  :arg1 ( person :name ( name :op1 sebastián :op2 piñera )  )  :time ( event :mod region )  )  :op2 ( confirm :arg0 ( person :arg0-of ( have-org-role :arg1 ( country :name ( name :op1 peru )  :wiki peru )  :arg2 president )  )  :arg1 ( respect :arg0 they :arg1 ( decide :arg1 ( organization :arg0-of ( start :arg1 ( hear :arg0 monday :arg1 ( argue :arg1 ( party :mod both )  :compared-to-of ( file :arg0 ( country :name ( name :op1 lima )  )  :arg1 lawsuit :arg2 ( person :name ( name :op1 santiago )  )  )  )  :arg2 ( organization :name ( name :op1 icj )  )  )  :location ( city :name ( name :op1 the :op2 hague )  :wiki the_hague )  )  :name ( name :op1 international :op2 court :op3 of :op4 justice )  )  )  )  )
say :arg0 ( court :mod international )  :arg1 together :arg2 ( person :arg2-of ( bring :arg0 ( we :arg1-of ( differ :arg0 ( we :arg0-of ( obey :arg1 ( execute :arg1 ( person :mod ( country :name ( name :op1 chile )  :wiki chile )  )  :arg2 that :op1-of and )  )  :arg0-of ( define :arg1 ( counterpart :wiki abdel_rahman_shalgham )  :arg2 he :time current )  )  )  )  :arg1 this :op1-of before )  :name ( name :op1 &quot; )  )
add :arg0 court :arg1 ( person :arg0-of ( greet :arg1 flag :arg2 alongside )  :name ( name :op1 &quot; )  )  :arg1-of ( dispute :arg0 resolution :arg2 2 :op3-of ( and :op1 ( remain :arg1 that :op1-of ( and :op2 ( respect :arg0 country :arg1 international )  :op3 law :op4 peaceful )  :op2-of ( and :op1 ( country :name ( name :op1 chile )  :wiki chile )  )  )  :op2 of :op4 treaty :op5 international :op6 ( person :name ( name :op1 &quot; )  )  :op7 country )  )  :arg2 handshake
maritime :mod-of ( boundary :arg3-of ( decide :arg0 ( organization :arg0-of ( accept :arg1 ( submit :arg2 ( judge :arg1 ( court :mod international :mod this )  )  )  )  :arg0-of ( regard :arg1 ( country :name ( name :op1 nicaragua )  :wiki nicaragua )  :arg1-of ( flaw :manner serious )  )  :arg1-of follow :arg1-of ( denounce :arg0 ( country :name ( name :op1 colombia )  :wiki colombia )  :op1-of ( after :time-of ( come :arg0 ( week :mod this )  :arg1 ( confirmation :poss ( president :mod both )  )  )  )  :purpose-of ( submit :arg0 they :arg2 ( organization :name ( name :op1 icj )  )  )  )  :name ( name :op1 bogotá :op2 pact )  )  )  )
and :op1 ( country :name ( name :op1 venezuela )  :wiki venezuela )  :op2-of ( and :op1 ( person :arg0-of ( have-org-role :arg1 ( country :name ( name :op1 brazil )  :wiki brazil )  :arg2 president )  :arg2-of ( absent :arg0 ( country :name ( name :op1 bolivia )  )  :arg2-of ( hold :arg0 ( person :name ( name :op1 dilma :op2 rousseff )  )  :arg1 summit )  )  )  :op3 ( person :name ( name :op1 hugo :op2 chavez )  :wiki hugo_chávez )  :op4 ( person :name ( name :op1 evo :op2 morales )  )  :op5 ( country :name ( name :op1 argentina )  :wiki argentina )  :op6 ( person :name ( name :op1 cristina :op2 kirchner )  )  )
dismissal :op1-of ( after :time-of ( suspend :arg0 ( organization :arg1-of ( have-org-role :arg0 ( person :name ( name :op1 fernando :op2 lugo )  )  :arg2 president :time former )  :name ( name :op1 unasur )  )  :arg1 ( country :arg1-of ( involve :arg2 meet :polarity - )  :name ( name :op1 paraguay )  )  :time ( date-entity :year 2011 )  )  )
responsible :arg0 ( person :arg0-of ( have-org-role :arg1 host :arg2 president )  :name ( name :op1 ollanta :op2 humala )  )  :arg1 ( open :arg1 session :op1-of ( and :op2 ( close :arg1 summit :time ( after :mod just :op1 ( noon :location ( country :name ( name :op1 lima )  )  )  )  )  )  :time morning )
and :arg1-of ( report :arg0 ( document :arg1-of ( read :arg0 ( president :arg2-of ( have-org-role :arg1 ( country :location ( continent :name ( name :op1 south :op2 america )  :wiki south_america )  )  )  )  )  :mod final )  )  :op1 ( adopt :arg1 ( agree :arg1 ( invest :arg1 17 )  :quant 16 )  )  :op2 ( plan :arg1 ( action :arg1-of ( lay :beneficiary ( project :quant 31 )  )  )  :arg1-of ( total :arg2 ( monetary-quantity :unit dollar )  )  )
mention :arg1 it :arg1-of ( will :arg0 ( country :arg0-of ( agree :arg1-of extend :arg1-of ( reside :arg0 citizenship )  )  :arg0-of ( take :arg1 ( step :arg0 important :arg1 goal :location ( continent :name ( name :op1 south :op2 america )  :wiki south_america )  )  )  )  )  :arg1-of ( adopt :arg0 resolution )
and :op1 ( efficient :arg0 joint :arg1 ( continent :name ( name :op1 south :op2 america )  :wiki south_america )  :arg1-of ( deal :arg0 ( he :arg0-of ( improve :arg1 ( and :arg1-of ( organize :arg0 transnational )  :op1 ( security :polarity - )  )  )  :arg0-of ( report :arg1 area :arg1-of ( implement :arg0 action )  )  :arg0-of ( fight :arg1 all )  :arg0-of ( crime :arg1 action )  :arg0-of ( low :arg1 ( access :arg1 more )  )  :arg0-of ( access :arg1 ( internet :arg1-of cost )  )  :arg0-of ( cooperate :arg1 medication )  )  )  :arg1-of ( risk :arg0 ( disaster :arg1-of natural )  )  :op1-of and )
add :arg0 ( person :op3-of ( and :op1 ( glimpse :arg0 matrix :arg1 ( productive :arg0 ( expand :arg0 crisis :arg1 ( recommend :arg0 ( world-region :name ( name :op1 latin :op2 america )  :wiki latin_america )  :arg1 ( economy :location ( continent :name ( name :op1 europe )  :wiki europe )  )  )  :arg1-of ( recommend :arg0 attitude )  :arg1-of ( serve :arg0 consolidation )  :arg1-of contrast )  :polarity - )  )  :op2 good )  )  :arg1 future
say :arg0 ( we :arg0-of ( create :arg1 ( economy :mod new )  :op3-of ( and :op1 ( focus :arg0 ( we :arg0-of ( decide :arg1 flagship :arg2 31 )  )  :arg1 of :op1-of group :op1-of ( and :op2 ( improve :arg0 project :arg1 ( connect :arg1 among :arg2 area :mod that )  )  :op3 ( continent :name ( name :op1 south :op2 america )  :wiki south_america )  :op4 rural )  )  :op2 ( country :arg2-of ( border :arg0 especially :arg1 area )  )  )  )  :arg1-of ( unite :arg0 expressive :arg2 network )  )  :arg1 ( thing :arg0-of ( have-org-role :arg1 ( read :arg0 message :arg2 out )  :arg2 president )  :name ( name :op1 &quot; )  )
and :op1 coast :op2 ( country :name ( name :op1 brazil )  :wiki brazil )  :op3 ( and :op1 ( focus :arg1 2 :arg2 ( connect :arg1-of ( increase :arg0 ( country :name ( name :op1 peru )  :wiki peru )  )  :arg2 ( country :name ( name :op1 ecuador )  :wiki ecuador )  )  :purpose ( give :arg1 ( detail :arg1 ( territory :part ( ax :mod transverse )  )  :degree further )  :polarity - )  )  :op2-of ( and :arg1-of ( mention :arg0 he :prep-in ( project :domain this )  )  :op1 ( locate :arg1 5 )  )  )
mention :arg0 ( document :mod final )  :arg1 ( situation :location ( country :name ( name :op1 paraguay )  )  :mod politics )  :mod also
hope :arg0 ( we :arg0-of ( elect :arg1 ( process :arg1 that :arg1-of ( exclude :arg0 ( organization :name ( name :op1 &quot; )  )  :time current )  )  :arg2 ( serve :arg0 country :arg1 reincorporate )  )  )  :arg1 it
integrate :arg1 ( nation :arg1-of ( remain :arg1-of ( need :arg0 ( world-region :name ( name :op1 latin :op2 america )  :wiki latin_america )  )  :arg1-of ( issue :arg1-of ( highlight :arg0 summit )  :mod another )  :arg3 ( relation :arg1 neighbourly :mod good )  :op1-of ( and :op2 prosper :op3 peaceful )  )  )
say :arg0 ( president :arg2-of ( have-org-role :arg0 ( person :name ( name :op1 daniel :op2 ortega )  :wiki daniel_ortega )  :arg1 ( country :name ( name :op1 colombia )  :wiki colombia )  )  )  :arg1 ( expect :arg0 ( he :arg0-of ( discuss :arg1 ( dispute :mod maritime )  :arg1-of ( respect :arg0 ( person :name ( name :op1 ortega )  :wiki daniel_ortega )  )  :time ( after :op1 ( fail :arg1 ( organization :arg1-of ( question :arg0 ( city :name ( name :op1 bogota )  :wiki bogotá )  )  :name ( name :op1 icj )  )  )  )  )  :poss-of ( saturday :location ( country :name ( name :op1 mexico )  :wiki mexico )  )  )  :arg1 ( meet :arg1 ( counterpart :source ( country :name ( name :op1 nicaragua )  :wiki nicaragua )  :wiki abdel_rahman_shalgham )  :arg0 he )  )  :arg2-of ( sense :arg1 this )  :time ( before :op1 ( attend :arg1 ( start :arg1 ( event :mod region )  )  :location ( organization :name ( name :op1 juan :op2 manuel :op3 santos )  )  )  )
say :arg1 ( person :name ( name :op1 santos )  :wiki francisco_santos_calderón )  :time ( after :op1 tomorrow :time-of saturday :time-of ( meet :arg0 i :arg1 ( person :name ( name :op1 ortega )  :wiki daniel_ortega )  :arg1-of possible :arg2 ( person :arg1-of ( have-org-role :arg2 president )  :name ( name :op1 daniel :op2 ortega )  :wiki daniel_ortega )  :time day )  )
and :op1 ( exclusive :arg0 ( we :arg0-of ( review :arg1 ( all :mod-of this )  :arg2 path )  :arg0-of ( converse :arg1 ( country :name ( name :op1 nicaragua )  :wiki nicaragua )  :arg2 ( he :arg1-of ( require :arg0 ( country :name ( name :op1 nicaragua )  :wiki nicaragua )  )  :op1-of emphasise )  )  )  :arg1 treaty :polarity - )
say :arg0 i :arg1 that :arg1-of ( possible :arg1-of ( hope :arg0 i :arg1-of ( have-org-role :arg0 with :arg2 president )  :op2-of ( and :op1 ( person :arg0-of ( say :arg1 ( person :name ( name :op1 santos )  :wiki francisco_santos_calderón )  :arg1-of possible )  :name ( name :op1 ortega )  :wiki daniel_ortega )  :op3 ( respect :arg0 ( we :arg0-of ( handle :arg1 this )  )  :arg1 manner :arg1-of ( civilize :arg0 most )  )  )  )  )
expect :arg0 ( country :name ( name :op1 mexico )  :wiki mexico )  :arg1 ( attend :arg0 ( person :arg0-of ( have-org-role :arg1 country :arg2 ( president :mod new )  )  :arg0-of ( meet :arg1 saturday )  :name ( name :op1 ortega )  :op2-of ( and :op1 ( person :name ( name :op1 santos )  :wiki francisco_santos_calderón )  :op3 due )  :wiki daniel_ortega )  :arg1 ( inauguration :mod-of of )  )  :mod they
seek :arg0 ( person :arg0-of meet :arg0-of ( approve :arg1 ( plan :mod action )  :arg2 ( date-entity :year 2013 )  )  :arg0-of ( have-org-role :arg2 ( minister :mod foreign )  )  :arg0-of ( advance :arg1 bloc )  :arg1-of defend )  :arg1 ( and :arg1-of ( dialogue :arg0 summit )  :arg1-of defend :op1 ( strengthen :arg1 region )  :op2 consensus )  :mod also
and :op1 ( country :name ( name :op1 bolivia )  )  :op10 ( country :name ( name :op1 surinam )  )  :op11 ( country :name ( name :op1 paraguay )  )  :op2 ( country :name ( name :op1 colombia )  :wiki colombia )  :op3 ( country :name ( name :op1 ecuador )  :wiki ecuador )  :op4 ( country :name ( name :op1 peru )  :wiki peru )  :op5 ( country :name ( name :op1 brazil )  :wiki brazil )  :op6 ( country :name ( name :op1 uruguay )  )  :op7 ( country :arg0-of ( suspend :arg1 latter :arg2 ( country :name ( name :op1 argentina )  :wiki argentina )  :time current )  :name ( name :op1 venezuela )  :poss-of ( organization :name ( name :op1 unasur )  )  :wiki venezuela )  :op8 ( country :name ( name :op1 chile )  :wiki chile )  :op9 ( country :name ( name :op1 guyana )  )
presidency :mod pro :poss ( country :name ( name :op1 peru )  :wiki peru )  :poss ( bloc :mod region )
say :arg0 ( person :arg0-of ( recommend :arg1 ( continent :name ( name :op1 south :op2 america )  :wiki south_america )  )  :arg0-of ( learn :arg1 ( continent :name ( name :op1 europe )  :wiki europe )  )  :arg1-of ( integrate :arg2 citizenship :polarity - )  )  :arg1 ( person :name ( name :op1 &quot; )  )
say :arg0 ( person :arg0-of ( learn :arg1 ( continent :name ( name :op1 south :op2 america )  :wiki south_america )  :arg1-of case :arg2 ( continent :name ( name :op1 europe )  :wiki europe )  :mod this )  :arg0-of ( have-org-role :arg1 of :arg2 president )  :mod ( country :name ( name :op1 ecuador )  :wiki ecuador )  :name ( name :op1 the )  )  :arg1 that :time today :time ( create :arg1 ( common :mod-of citizenship :mod-of goal )  )
contrast :arg1 now :arg2 ( and :op1 ( tell :arg0 ( country :name ( name :op1 peru )  :wiki peru )  :arg1 ( president :arg1-of ( hold :arg0 ( person :name ( name :op1 correa )  )  :arg2 ( continent :name ( name :op1 south :op2 america )  :wiki south_america )  )  :arg1-of ( conflict :arg0 country :mod other )  :mod-of of :mod-of summit )  :arg2 television :purpose ( kill :arg0 state :arg1 1 :mod that )  )  :op2 ( continent :name ( name :op1 europe )  :wiki europe )  :op3 ( second :arg0 another :arg1 world )  :op4 war :op5 practical )
defend :arg0 ( he :arg0-of ( end :mod this )  )  :arg1 ( project :arg2-of ( establish :arg1 ( citizenship :arg1-of ( encourage :arg0 ( country :arg0-of ( have-org-role :arg1 ( organization :name ( name :op1 unasur )  )  :arg2 member )  )  )  :mod ( continent :name ( name :op1 south :op2 america )  :wiki south_america )  )  )  )
say :arg0 ( he :arg1-of ( return :arg0 howev :arg1-of ( want :arg0 ( person :arg0-of ( have-org-role :arg1 ( organization :name ( name :op1 &quot; )  )  :arg2 member )  :time already )  :mod that )  :arg1-of ( reactionary :arg0 there :arg2 sector :mod still )  :arg2 past )  )  :arg1 ( and :op1 ( achieve :arg0 we :arg0-of movement :arg1 situation :arg2 ( free :arg1 country :arg2 any )  )  :op2 of :op3 citizen :op4 ( person :arg0-of ( work :arg1 ( continent :name ( name :op1 south :op2 america )  :wiki south_america )  )  )  )
sign :arg1-of ( take :arg0 ( and :op1 ( reduce :arg1 ( influence :arg0 ( state :quant ( thing :name ( name :op1 anglo-saxon )  )  )  :arg1 ( human :mod-of right )  )  :arg2 ( favor :arg0 ( have-org-role :arg0 ( thing :name ( name :op1 ecuadorian )  )  :arg1 ( organization :name ( name :op1 oas )  )  :arg2 president )  :arg2 ( restructure :arg1 ( organization :name ( name :op1 organisation :op2 of :op3 american :op4 states )  )  )  )  :arg2-of ( premise :mod also )  )  )  :arg2 account )
speak :arg0 that :arg1 ( commit :arg0 ( we :arg0-of ( sign :arg1 everything )  :mod ( thing :name ( name :op1 south :op2 americans )  )  )  :arg1 whereas :arg2 anything )  :arg2 authority
say :arg0 ( he :arg0-of ( found :arg1 julian :arg2 assange )  :arg1-of ( fund :arg0 ( country :name ( name :op1 us )  :wiki united_states )  :arg2-of ( comprehend :arg0 it :arg1 that )  :op2-of ( under :op1 ( city :name ( name :op1 washington )  :wiki washington,_d.c. )  )  )  )  :arg1 ( give :arg0 ( country :name ( name :op1 ecuador )  :wiki ecuador )  :arg1 asylum :arg1-of ( refer :arg0 ( organization :name ( name :op1 &quot; )  )  )  :arg2 politics )
contrast :arg1 ( respect :arg0 ( person :name ( name :op1 correa )  )  :arg1 principle :arg1-of ( decide :arg0 ( he :arg0-of ( regret :arg1 that )  :arg1-of say )  :arg1-of ( cause :arg0 it :polarity - )  )  :arg1-of ( deep :arg0 ( he :arg1-of ( betray :arg0 he :polarity - )  )  )  )  :arg2 ( and :op1 democracy :op2 human :op3 ( right :mod-of value )  )
add :arg0 he :arg1-of ( reasonable :arg0 ( he :arg0-of ( respect :arg1 - :arg1-of ( extradite :arg0 another )  :arg1-of case :op2-of ( and :op1 country )  )  :arg0-of ( suspect :arg1 time )  )  )
question :arg0 ( he :arg0-of ( allege :arg1 ( sexual :mod-of offence )  :arg2 ( he :arg0-of ( do :arg1 ( thing :arg1-of ( question :arg0 ( he :arg1-of possible )  )  :arg1-of ( dictate :arg0 country )  :mod ( legislation :mod ( country :name ( name :op1 sweden )  :wiki sweden )  )  )  :arg1-of possible :arg2 ( government-organization :name ( name :op1 embassy )  :wiki embassy_of_the_united_kingdom,_washington,_d.c. )  :arg3 ( city :name ( name :op1 london )  :wiki london )  )  )  )  :arg1-of ( demand :arg0 ( court :mod ( country :name ( name :op1 sweden )  :wiki sweden )  )  )  :arg2-of ( criticize :arg0 he :arg1 additional )  )  :arg1 subject
say :arg0 ( person :arg0-of ( risk :arg1 of :arg1-of deteriorate :arg2 there :mod that )  :name ( name :op1 correa )  )  :arg1 ( and :op1 assange :op2 ' :op3 physical :op4 ( mental :mod-of health )  )
contrast :arg1 nothing :arg2 ( i :arg2-of ( inform :arg0 embassy :arg1 that :arg1-of ( have-org-role :arg0 ( he :arg0-of ( say :arg1 ( thing :arg1-of ( have-org-role :arg0 ( he :poss-of ( minor :mod-of lung )  )  :arg2 president )  :domain problem :name ( name :op1 &quot; )  )  :time serious )  :arg2-of ( speak :arg0 i :arg1 we :polarity - )  )  :arg2 ambassador )  :time since )  )
and :arg0-of ( deteriorate :arg1 ( health :arg0-of ( exercise :location outdoor :mod any )  )  :arg1-of ( possible :mod-of danger )  )  :op1 physical :op2 mental :op3 ( lock :arg1 amr-unknown :arg2 ( space :mod small )  )
add :arg0 ( person :mod ( any :mod-of ( health :mod that :mod of )  )  )  :arg1 he :arg1-of complicate
say :arg0 ( person :arg2-of ( grant :arg1 ( asylum :beneficiary-of solution )  )  :name ( name :op1 correa )  )  :arg1 ( and :op1 ( stress :arg0 ( hand :part-of ( country :name ( name :op1 great :op2 britain )  :op1-of ( and :op2 ( authority :arg1-of legal :mod ( continent :name ( name :op1 europe )  :wiki europe )  :mod ( country :arg1-of ( travel :arg1-of ( permit :arg0 ( pass :arg0-of ( issue :arg1 ( thing :mod-of ( government-organization :location ( city :name ( name :op1 london )  :wiki london )  :name ( name :op1 embassy )  :wiki embassy_of_the_united_kingdom,_washington,_d.c. )  :name ( name :op1 ecuadorian )  )  )  :arg1 ( date-entity :month 6 )  :arg1-of safe :arg1-of conduct )  )  )  :name ( name :op1 ecuador )  :wiki ecuador )  )  )  :wiki united_kingdom )  )  :arg1 ( talk :arg1 ( seek :arg0 ( country :name ( name :op1 sweden )  :wiki sweden )  :arg1 solution :arg2 ( imprison :arg1 ( found :arg1 wikileak )  )  )  :arg2 ( city :name ( name :op1 london )  :wiki london )  )  )  )
contrast :arg1-of ( negotiate :arg0 we :arg2 ( right :mod human )  :polarity - )  :arg2 ( discuss :arg1-of ongo )  :condition ( use :arg0 we :arg1 ( word :mod that )  :arg2 ( case :mod this )  :polarity - )
say :arg0 ( he :arg1-of ( differ :arg0 ( authority :arg0-of ( handle :arg1 series )  :arg0-of ( case :arg1 ( continent :name ( name :op1 europe )  :wiki europe )  )  :arg0-of ( cause :arg1 ( ' :mod-of lawyer )  )  :arg1-of ( legal :arg0 of )  :mod ( country :name ( name :op1 sweden )  :op5-of ( and :op1 solution :op2 ( problem :domain this )  :op3 hand :op4 ( country :name ( name :op1 great :op2 britain )  :wiki united_kingdom )  :op6 ( continent :name ( name :op1 europe )  :wiki europe )  )  :wiki sweden )  )  :condition ( baltazar :mod-of garzon )  )  )  :arg1 court
say :arg0 ( he :arg0-of ( feel :arg1 ( country :name ( name :op1 britain )  :wiki united_kingdom )  :op1-of ( and :op2 safe )  )  :arg0-of ( conduct :arg1 ( pass :arg1 it )  )  )  :arg1 -
and :arg2-of ( case :arg2-of ( do :arg0 ( legislation :arg0-of ( allow :arg1 do )  )  :arg1 ( this :mod-of problem )  :op1-of ( and :arg1-of perfect :op1-of ( or :op2 ( question :arg1 ( thing :name ( name :op1 mr :op2 assange )  )  :arg2 ( government-organization :name ( name :op1 embassy )  :poss ( country :name ( name :op1 ecuador )  :wiki ecuador )  :wiki embassy_of_the_united_kingdom,_washington,_d.c. )  )  :op3 ( interrogate :arg0 ( country :name ( name :op1 sweden )  :wiki sweden )  :arg2 ( tomorrow :mod ( company :name ( name :op1 skype )  :wiki skype )  )  :location ( city :name ( name :op1 london )  :wiki london )  )  )  )  )  :mod other )
state :arg0 ( person :arg0-of ( express :arg2 ( free :arg1 mediocrity :arg1-of ( lie :op2-of ( and :op1 dishonesty )  )  :arg1-of ( undermine :arg0 ( he :arg0-of ( tolerate :arg1 amr-unknown :polarity - )  )  )  )  )  :name ( name :op1 correa )  )  :arg1 ( and :op1 ( press :arg1-of ( free :arg1-of defend :arg1-of ( reassert :arg2 opportunity )  :manner of )  )  )  :mod that
contrast :arg1 ( bad :arg1 journalist )  :arg2 ( and :arg1-of ( say :arg0 ( he :arg1-of ( have-rel-role :arg0 ( great :degree most )  :arg2 enemy )  )  )  :arg1-of ( depend :arg0 ( politician :arg0-of ( profit :arg1 extortion )  :op3-of ( and :arg2-of ( free :arg0 of :arg1 press )  :op1 evil :op2 wicked )  :polarity - )  )  :arg1-of blackmail )
say :arg0 ( he :arg0-of ( welcome :arg1 it )  :arg0-of ( regard :arg1 or :arg2 fact )  :arg0-of ( long :arg1 this :polarity - )  )  :arg1 ( and :op1 ( step :arg0 ( he :arg0-of ( revolution :arg1 ( continue :arg0 ( country :name ( name :op1 ecuador )  :wiki ecuador )  :arg1 and :arg1-of same )  )  :arg0-of ( will :arg1 banker )  :arg1-of ( elect :arg0 journalist )  )  :arg1 ( direction :arg1-of ( right :arg0 path )  )  :op2-of ( or :op1 bourgeois )  :op3-of ( and :op1 hegemony :op2 ( country :arg0-of dominate )  )  )  )
cause :arg0 ( and :op1 ( argue :arg1 that :arg1-of ( maintain :arg0 ( country :name ( name :op1 correa )  )  )  :arg1-of ( destroy :arg0 fact )  :arg1-of ( mask :arg0 coup )  :arg1-of ( elect :arg0 ( until :mod least )  :arg2 ( body :mod-of must )  :mod next )  :arg1-of ( support :arg0 ( person :arg0-of ( decide :arg1 veto )  :name ( name :op1 correa )  )  :mod also )  :arg1-of ( tolerate :polarity - )  :op2-of ( and :op1 ( organization :name ( name :op1 correa )  )  :op3 firm )  )  :op2 opportunism :op3 legality :op4 ( thing :mod of :mod democracy :mod legitimacy :name ( name :op1 correa )  )  )  :arg1 this
favor :arg0 ( city :name ( name :op1 the :op2 hague )  :wiki the_hague )  :arg1 nicaragua :arg2 ( maritime :mod-of sovereignty )  :concession-of ( rule :arg0 country :arg1 ( between :mod boundary :quant 2 :quant-of maritime )  :arg2 ( organization :arg1-of ( have-org-role :arg0 ( person :name ( name :op1 santos )  :time now :wiki francisco_santos_calderón )  :arg2 ( president :arg1-of ( consider :arg0 ( he :arg0-of ( negotiate :arg1 ( country :name ( name :op1 nicaragua )  :wiki nicaragua )  )  :arg1-of perfect :arg2-of ( desire :arg0 ( country :mod-of ( counterpart :wiki abdel_rahman_shalgham )  :name ( name :op1 colombia )  :wiki colombia )  :arg1 of :mod pertinent )  )  :mod also )  )  )  :mod-of justice :name ( name :op1 international :op2 court )  :wiki international_court )  :time after )
follow :arg1 ( rule :arg1 now :mod that )  :polarity -
problem :domain it :topic ( and :mod ( continent :name ( name :op1 south :op2 america )  :wiki south_america )  :op1 country :op2 ( thing :name ( name :op1 central :op2 american )  )  )
contrast :arg1 ( inevitable :domain conflict )  :arg2 ( overcome :arg0 ( desire :arg1 ( walk :manner together )  )  )
and :op1 ( overcome :arg0 ( manner :mod comprehensive )  :arg1-of ( need :arg0 ( they :arg0-of process )  )  )  :op2 ( move :direction forward )
say :arg0 ( he :arg0-of ( conclude :arg1 sound )  :arg0-of ( lose :arg1 international :arg1-of hard :arg2-of ( accept :arg0 court :arg1 ( agree :arg0 country :arg1 both :arg1-of possible )  :mod ( right :mod-of ( world-region :name ( name :op1 latin :op2 america )  :wiki latin_america )  )  )  :arg2-of ( refer :arg0 it )  )  :arg0-of ( oppose :arg1 maritime :arg2-of ( dispute :arg0 additional :arg1 boundary )  :op1-of ( and :op2 ( country :name ( name :op1 peru )  :wiki peru )  :op3 ( country :name ( name :op1 chile )  :wiki chile )  )  )  :arg1-of ( trust :arg0 person )  )  :arg1 ( and :arg1-of ( same :arg0 court )  )
say :arg0 ( he :arg0-of ( hard :arg1 it :time pretty )  :arg2-of ( elect :arg0 upcoming :arg1 ( president :arg2-of ( have-org-role :arg0 ( person :arg1-of ( seek :arg0 ( country :name ( name :op1 ecuador )  :wiki ecuador )  )  )  :arg1 ( candidate :arg1-of possible :arg1-of ( stand :arg0 he )  :arg1-of reference )  )  )  )  :poss-of consecutive )  :arg1 ( see :arg0 ( he :poss-of ( optimism :quant ( much :quant-of ( and :op1 joy )  )  )  )  :arg1-of possible )
say :arg0 ( person :name ( name :op1 correa )  )  :arg1 ( retire :arg0 ( he :arg0-of ( lose :arg1 elect )  )  :arg1 ( life :mod public )  )  :time ( date-entity :year 2013 )
contrast :arg1 ( situation :arg1-of personal :arg1-of ( just :arg0 ( country :name ( name :op1 ecuador )  :wiki ecuador )  :arg2 that :polarity - )  )  :arg2 ( interest :arg0 i :arg1 power :arg2 ( politics :arg2-of ( correct :arg0 ( poverty :arg0-of ( possible :arg1 economy )  )  )  :mod-of ( power :mod only )  )  )
say :arg0 ( he :arg1-of ( accept :arg0 ( we :arg1-of ( cause :arg0 amr-unknown )  )  )  :arg1-of ( responsible :arg0 ( i :arg0-of ( believe :arg1 that :arg2-of ( movement :arg0 politics :arg1 it )  )  )  )  )  :arg1 ( probable :arg1-of ( ensure :arg0 i )  :mod-of victory )
and :condition ( win :arg0 i )  :op1 ( period :location office :mod last )  :op2 ( life :arg1-of ( leave :arg0 i :arg2 then )  :mod public )
likewise :arg1-of ( lose :arg0 i )
confirm :arg0 ( he :arg1-of ( decide :arg0 it )  )  :arg1 '
refer :arg0 ( person :name ( name :op1 correa )  )  :arg1 ( president :arg2-of ( have-org-role :arg0 ( person :arg1-of ( treat :arg2 ( country :name ( name :op1 cuba )  :wiki cuba )  :mod new :op1-of health )  :name ( name :op1 hugo :op2 chavez )  :wiki hugo_chávez )  :arg1 ( country :name ( name :op1 venezuela )  :wiki venezuela )  )  )  :mod also
and :op1 ( win :arg1 campaign :arg1-of ( expect :op2-of ( and :arg1-of ( tell :arg0 he :arg2 i :op2-of ( and :op1 ( speak :arg0 i :arg2 ( person :arg0-of ( have-org-role :arg1 ( country :name ( name :op1 venezuela )  :wiki venezuela )  :arg2 ( president :mod vice )  )  :name ( name :op1 nicolás :op2 maduro )  )  :mod just )  )  )  :op1 ( go :arg0 ( person :name ( name :op1 chavez )  :wiki hugo_chávez )  :purpose ( treat :arg0-of ( plan :arg1 ( treat :mod routine )  :time already )  )  )  )  )  )  :op2 ( return :arg4 ( country :name ( name :op1 cuba )  :wiki cuba )  )
say :arg0 ( he :arg1-of ( mean :arg2 ( person :arg0-of ( have-org-role :arg2 ( president :arg1-of ( relapse :arg0 health )  )  )  :name ( name :op1 chavez )  :wiki hugo_chávez )  :polarity - )  )  :arg1 this
equal :arg1 ( integrate :arg1 region :arg2 ( sustain :arg0 ( head :arg0 ( thing :name ( name :op1 ecuadorian )  )  :arg0-of ( attend :arg1 ( organization :name ( name :op1 sixth :op2 summit :op3 of :op4 heads :op5 of :op6 state :op7 and :op8 government )  :part-of ( organization :name ( name :op1 union :op2 of :op3 south :op4 american :op5 nations )  )  )  :location ( country :name ( name :op1 lima )  )  :time today )  :arg1 state )  :arg1 ( progress :arg1 ( organization :name ( name :op1 unasur )  )  )  :arg2 ( and :arg2-of ( conclude :arg1 call )  :op1 security )  )  :mod great )
cause :arg0 ( disease :arg0-of ( detect :arg1 nowadays :time late )  :name ( name :op1 aids )  :wiki hiv/aids )  :arg1 death
test :arg0 ( they :arg0-of ( confirm :arg1 ( result :mod positive )  :time-of ( old :domain ( person :name ( name :op1 fabrizio )  )  )  )  )  :arg1 ( 21 :quant-of ( temporal-quantity :unit year )  )  :arg2 ( disease :name ( name :op1 hiv )  :wiki hiv/aids )
say :arg0 ( he :arg0-of ( try :arg1 soft )  :arg0-of ( recall :arg1 of :arg2 time )  :arg1-of ( drop :arg0 it )  :arg2-of ( resemble :arg1 bomb )  )  :arg1 ( announce :arg0 i :arg1 ( apparent :mod-of unsuccessfully )  :arg2 doctor )
hide :arg0 boy :arg2 family
and :op1 ( decide :arg0 he :arg1 ( care :arg1 illness :manner alone :arg0 he )  )  :op1-of ( and :op2 ( thank :arg1 effort :arg1-of ( celebrate :arg0 ( he :poss-of ( birthday :mod 43rd )  )  :mod just )  )  )  :op2 ( begin :arg1 learn :arg0 he )
doubt :arg1 he :arg2-of ( arrive :arg0 ( organization :name ( name :op1 chg )  )  :arg1 he :arg3 ( country :name ( name :op1 guadalajara :op2 civil :op3 hospital )  :poss-of ( unit :arg1-of ( have-rel-role :arg0 person :arg2 patient :mod ( old :degree most )  )  :mod ( disease :name ( name :op1 hiv )  :wiki hiv/aids )  )  )  :time ( after :op1 ( battle :arg1 health :quant several )  )  :time ( date-entity :year 1994 )  )  :polarity -
imagine :arg1 ( virus :arg1-of ( live :arg0 ( person :arg1-of ( treat :arg2 ( disease :name ( name :op1 hiv )  :wiki hiv/aids )  :op1-of few :op2-of ( and :arg0-of ( deal :arg1 of :arg2 stigma :mod great )  :op1 ( question :arg1 ( many :mod there )  )  :op3 option )  )  :name ( name :op1 fabrizio )  )  )  :arg1-of ( hard :arg0 22 :duration ( temporal-quantity :unit year )  :time ( early :mod-of 90 )  )  :mod ( immunodeficiency :mod human )  )
cause :arg1 ( he :arg0-of ( refuse :arg1 clinic )  :arg0-of ( have-org-role :arg1 ( country :mod-of ( program :arg1-of ( institute :arg0 ims )  :mod even :name ( name :op1 social :op2 security )  )  :name ( name :op1 mexico )  :wiki mexico )  :arg2 director :time then )  :arg0-of discharge )
synonymou :compared-to ( die :arg1 aid )  :time ( time :mod that )
possible :arg1 ( and :op1 ( survive :arg1 syndrome )  :op2 ( do :arg2 ( quality :poss life )  )  )  :time now
cause :arg0 already :arg1 ( virus :arg1-of ( exhaust :arg0 havoc :arg2 ( suffer :arg0 they :arg1 ( and :arg1-of ( immune :mod-of system )  )  :arg1-of ( infect :arg0 opportunistic )  )  )  :arg2-of ( seek :arg0 ( person :mod many )  :arg1 illness :mod only :op1-of ( and :op2 ( help :arg0 ( unaware :mod still )  )  )  )  )
equal :arg0 ( population :arg0-of ( general :arg1 ( information :mod this )  )  )  :arg1 ( state :arg0 ( person :arg0-of ( head :arg1 ( organization :name ( name :op1 31 )  )  )  :arg0-of ( start :arg1 expectancy )  :arg0-of ( have-rel-role :arg1 ( person :arg0-of ( say :arg1 ( this :mod-of year )  )  :arg0-of ( endorse :arg1 4 )  :name ( name :op1 31 )  )  :arg2 patient )  :op2-of ( and :op1 ( achieve :arg0 least :arg1 ( life :mod that )  :arg1-of ( report :time ( after :duration ( temporal-quantity :unit year )  :op1 31 )  :time since )  :arg1-of case :mod great :op1-of expectancy :op1-of ( time :mod this )  :op3-of ( around :op1 onset :op2 ( disease :name ( name :op1 aids )  :wiki hiv/aids )  )  )  :op3 ( treat :arg1 life :mod world )  :op4 good :op5 time )  )  :arg1 ( science :mod prestigiou :op1-of journal )  )  :mod exact
contrast :arg0 ( expectancy :arg1-of ( high :arg2 ( 50 :quant-of ( temporal-quantity :unit year )  )  :op1-of 500 :op1-of cd )  :mod life :purpose user )  :arg1-of ( conclude :arg0 ( scientist :time ( date-entity :year 2008 )  )  :op1-of ( since :time-of ( say :arg0 ( person :name ( name :op1 andrade :op2 villanueva )  )  :arg1 ( and :arg0-of ( report :arg1 ( count :arg0 4 :arg1 cd )  )  :op1 ( count :arg1 4 )  )  :op3-of ( and :op1 ( person :arg0-of ( specialize :arg1 disease )  )  :op2 ( person :arg1-of ( expert :arg2 ( disease :name ( name :op1 hiv/aids )  :wiki hiv/aids )  )  :arg1-of ( sentence :arg0 ( disease :name ( name :op1 aids )  :wiki hiv/aids )  :arg2 ( die :arg1 ( they :arg1-of ( diagnose :arg2 200 )  )  )  )  )  )  )  )  )  :arg2 ( depend :arg0 ( and :op1 ( expectancy :op1 life )  :op2 quality :op3 ( person :arg0-of ( have-rel-role :arg1 life :arg2 patient )  :arg0-of ( present :polarity - )  :arg1-of ( have-rel-role :arg0 person :arg2 patient )  )  )  :arg1 ( degree :degree-of ( damage :arg0 ( 30 :quant-of ( temporal-quantity :unit year )  )  :arg1 ( system :arg1-of immune )  )  )  :polarity ( - :polarity-of drug )  )
say :arg0 75 :arg1 ( and :op1 ( long :arg0 ( term :arg0-of ( mean :arg1 this )  :arg1-of simple )  :arg1 ( term :mod this )  :degree old )  :op2 ( control :arg0 ( anyone :arg0-of ( diagnose :arg1 ( disease :name ( name :op1 hiv )  :wiki hiv/aids )  :mod-of positive )  )  :arg1 it :manner-of ( live :arg0 ( they :arg0-of ( keep :arg1 ( 25 :quant-of ( temporal-quantity :unit year )  )  )  )  :arg1 ( problem :polarity - )  :arg1-of possible )  )  )  :location interviewee
remember :arg1 ( temporal-quantity :unit year )  :arg1-of ( recommend :arg0 ( person :quant 76 )  )  :purpose ( gauge :arg0 ( person :mod ( country :name ( name :op1 mexico )  :wiki mexico )  :poss-of ( expectancy :arg1-of average :mod life )  )  :arg1 ( progress :arg1 today :mod this )  )
database :arg1-of ( have-rel-role :arg0 ( person :arg1-of ( die :arg0 ( report :mod ( organization :name ( name :op1 unaids )  )  )  :arg1-of ( drop :arg0 mortality :arg2 ( significant :arg1 ( date-entity :year 2011 )  )  :manner ( temporal-quantity :time recent :unit year )  :op1-of ( and :op2 ( fall :arg0 ( person :arg1-of die :quant number )  :arg1 ( disease :name ( name :op1 aids )  :wiki hiv/aids )  :time ( case :arg0 60 :arg1 ( country :name ( name :op1 mexico )  :wiki mexico )  )  :time ( date-entity :year 2007 )  )  )  )  :domain-of ( true :mod also )  :time ( since :op1 ( advent :poss ( disease :name ( name :op1 aids )  :wiki hiv/aids )  )  )  )  :consist ( monetary-quantity :unit cent )  )  :arg2 patient )  :mod nation
and :arg1-of ( die :arg4 ( date-entity :mod ( year :mod this )  :month 5 )  :location ( country :mod alone :name ( name :op1 jalisco )  )  :time ( date-entity :year 2011 )  )  :op1 ( person :quant 255 )  :op1-of ( and :op2 ( assure :arg1 we :arg2 ( access :arg0 death :arg1 drug :mod universal :mod only :time ( since :op1 ( date-entity :year 2005 )  )  )  )  )
do :arg0 ( death :arg1-of ( occur :mod still )  )  :mode interrogative
think :arg0 i :arg1 ( problem :arg0-of ( do :arg2 ( access :arg1 treat )  )  :polarity - )
and :example-of ( view :arg0 i :arg1 it :arg2 amr-unknown :arg3 that :concession we :concession hospital :degree amr-unknown )  :op1 that
say :arg0 ( person :arg0-of ( advanced :location state )  :arg0-of ( have-rel-role :arg1 problem :arg2 patient )  :arg1-of ( arrive :arg0 ( we :arg0-of ( short :arg1 medicine :polarity ( - :polarity-of ( cause :arg0 they :arg1 illness )  )  )  :quant ( 12 :quant-of ( temporal-quantity :quant last :unit year )  )  )  )  :poss-of unaware )  :arg1 ( status :op1-of ( disease :name ( name :op1 hiv )  :wiki hiv/aids )  )  :time ( late :time-of ( stage :op1 disease )  )
cause :arg0 opportunistic :arg1 ( need :arg0 they :arg1 already :arg1-of ( do :arg0 ( he :arg0-of infect :arg0-of ( give :arg1 nine :arg1-of mean )  :arg0-of ( compel :arg1 statistic )  :arg0-of ( offer :arg1 ( and :arg1-of ( need :arg0 everyone :arg1-of ( detect :arg0 mass )  :arg1-of test )  :arg1-of ( diagnose :arg0 mortality :time early )  )  )  :arg1-of ( have-rel-role :arg0 ( person :arg1-of arrive )  :arg2 patient )  )  )  :arg1-of ( impact :arg0 overall :mod great )  )
cause :arg0 ( do :arg0 ( friend :arg2-of ( have-rel-role :arg1 ( person :arg0-of ( have-rel-role :arg1 ( and :arg0-of ( agree :arg1 ( propose :arg1 such :mod this )  )  :op1 specialist :op2 ( person :arg0-of ( have-org-role :arg1 ( organization :location ( country :name ( name :op1 jalisco )  )  :name ( name :op1 state :op2 council :op3 of :op4 aids :op5 prevention )  )  :arg2 official )  :op1-of ( and :op2 around :op3 ( suffer :arg0 ( he :arg1-of ( age :arg0 ( common :mod-of complication )  :mod young )  :poss-of ( era :mod ( disease :name ( name :op1 aids )  :wiki hiv/aids )  )  )  :arg1 sarcoma :mod even )  )  )  )  :arg2 patient )  )  )  )  :arg1 ( cancerou :mod-of tumour )  :mod only )  :arg1 ( motivate :op1-of ( and :purpose-of ( come :arg1 ( test :arg0 ( person :name ( name :op1 fabrizio )  )  :location ( laboratory :arg1-of ( private :arg0 ( country :name ( name :op1 coesida )  )  )  )  )  )  )  )
change :arg0 you :arg1 everything :time ( know :arg0 you :arg1 ( disease :name ( name :op1 aids )  :wiki hiv/aids )  )
think :arg0 ( person :arg0-of ( do :arg1 ( anything :arg1-of ( know :arg0 ( want :arg0 they :arg1 and :polarity - )  )  )  :arg3 die )  )  :arg1 some
contrast :arg0 they :arg1 case :arg1-of ( say :arg0 i :arg1-of ( blow :arg0 ( i :arg1-of die )  :arg2 out :mod rather )  :time ( week :mod 3 )  )  :arg2 i :polarity -
and :op1 change :op2 ( eat :arg0 ( i :arg0-of ( take :arg1 ( drug :poss i )  )  :arg1-of ( exercise :arg0 i )  )  :arg1 good )
cancer :mod ( he :arg1-of ( have-rel-role :arg0 ( person :mod only :part-of date )  :arg2 parent )  )
live :arg0 i :arg1 ( life :arg1-of normal :mod ( anyone :mod else )  )
contrast :arg1 ( responsible :arg0 ( i :arg2-of ( travel :arg0 ( i :arg1-of ( take :arg0 i :arg1-of ( work :arg0 i )  :arg2 lot )  )  :arg1-of ( activity :arg0 of )  )  )  :arg1 sex )  :arg2 ( and :op1 ( activity :arg1 life )  :op2 ( take :arg0 ( i :arg0-of ( care :arg1 ( thing :mod context :name ( name :op1 &quot; )  :op1-of afraid )  )  )  :arg1 ( he :arg2-of ( motivate :arg0 ( organization :name ( name :op1 &quot; )  :op1-of jalisco )  :arg1 ( person :mod that :poss-of ( story :time today )  )  )  )  :arg2 amr-unknown )  :op3 ( person :arg0-of ( say :arg1 ( agree :arg0 ( person :arg0-of ( share :arg1 secret )  :name ( name :op1 &quot; )  )  :arg1 intimate :arg2 he )  )  :mod other )  )
cause :arg0 good :arg1 ( recommend :arg0 ( disease :name ( name :op1 hiv )  :wiki hiv/aids )  :arg1 ( test :arg1 ( they :arg1-of ( resemble :arg2 ( responsible :arg1 and )  :manner-of ( live :arg0 ( they :arg0-of risk )  :arg1 ( person :mod other :mod any )  :arg1-of ( learn :time ( diagnose :arg1 ( know :arg0 already :arg1 positive :mod soon )  )  )  )  )  )  )  )
message :domain ( this :arg0-of ( fight :arg1 ( disease :name ( name :op1 aids )  :wiki hiv/aids )  :time ( date-entity :year 2012 )  :topic-of theme )  )
condom :mod-of ( behind :op1 counter )
say :arg0 ( person :name ( name :op1 ricardo :op2 salazar )  :op3-of ( and :arg1-of ( cause :arg1-of ( take :arg0 ( country :name ( name :op1 guadalajara )  )  )  :arg2 journalist :mod ( disease :name ( name :op1 hiv )  :wiki hiv/aids )  )  :op1 ( program :mod health :mod-of gap )  :op2 ( citizen :mod ordinary )  )  )  :arg1 huge
and :op1 ( prevent :arg1 ( cure :mod ( great :degree most )  )  )
contrast :arg1 ( and :arg1-of ( say :arg0 he )  :arg1-of ( fine :arg0 packet )  :arg2-of ( give :arg0 they :arg1 ( or :arg1-of ( use :arg0 they :arg1-of ( give :arg0 ( place :arg0-of ( task :arg1 this :arg1-of distribute )  :arg1-of dedicate )  )  :op2-of ( and :arg1-of ( increase :arg0 condom :mod actual )  :op1 previous )  )  :op1 2 )  :time now )  :op1 ( turn :arg0 it )  :op2 ( person :arg0-of ( access :arg1 still :polarity - )  )  )
infect :arg0 most :arg2 teenager :mod new :prep-to-of vulnerable
say :arg0 ( person :arg0-of ( want :arg0-of ( expose :arg1 teenager )  :arg1 sex :polarity - )  :arg2-of staff :op5-of ( and :op1 ( ask :arg0 common :arg1 value :arg1-of question :arg2 ( person :arg0-of ( work :arg1 counsellor :location society )  )  :op1-of ( and :arg0-of ( say :arg1 of :arg1-of judge )  :arg1-of ( want :arg0 you :arg1-of ( do :arg0 why :arg2 they )  :mode interrogative )  :op2 sarcasm )  )  :op2 pharmacy :op3 ( person :arg0-of ( work :arg1 amr-unknown )  )  :op4 healthcare )  )  :arg1 ( person :arg0-of speak )
contrast :arg1 ( place :arg1 ( condom :mod only )  :arg1-of ( recommend :op2-of ( and :op1 ( decide :arg0 it :arg1 ( change :arg1 ( allocate :arg1-of ( efficient :polarity - )  :mod such )  )  )  )  )  :arg2 ( behind :op1 counter )  :polarity - )  :arg2 ( find :arg0 ( dispenser :mod ( toilet :mod public )  )  :arg1 packet :arg1-of recommend :purpose ( frequent :arg0 ( person :mod young )  :arg1 place )  )
promote :arg0 promiscuity :arg1 this :polarity -
condom :arg1-of administrate :arg1-of ( distribute :arg1-of ( ask :arg0 ( person :arg0-of ( say :time-of ( pay :arg0 it :arg1 ( or :op1 ( fee :arg1-of ( have-org-role :arg0 person :arg2 governor )  :mod motel )  )  :arg3 beer :polarity - :time about )  )  :name ( name :op1 emilio :op2 gonzalez )  )  )  )
contrast :arg1 ( provide :arg0 ( sexuality :mod about )  :arg1 condom :arg2 that :mod ( good :degree most )  :polarity - )  :arg2 ( say :arg0 ( he :arg1-of activity :arg2-of ( practise :arg0 already :arg1 sexual )  )  :arg1 ( and :op1 it :op2 ' )  )
point :mod ( country :arg1-of key :name ( name :op1 jalisco )  )
and :arg1-of ( case :mod cumulative )  :op1 ( disease :name ( name :op1 aids )  :wiki hiv/aids )  :op2 ( disease :name ( name :op1 hiv )  :wiki hiv/aids )
and :arg2-of ( case :arg1 ( disease :name ( name :op1 aids )  :wiki hiv/aids )  :op3-of ( and :mod ( disease :name ( name :op1 hiv )  :wiki hiv/aids )  :op1 new :op2 cumulative :quant ( nation :location-of ( 4th :domain state )  )  )  )  :op1 13th
and :op1 ( percentage-entity :mod ( infect :arg0 bloodstream :arg1 sex :arg2 new )  :value 92 )  :op2 ( percentage-entity :value 6 )  :op3 ( perinatal :mod ( percentage-entity :value 2 )  )
possible :arg1 ( live :arg0 person :arg1 ( know :arg0 ( person :op1-of around )  :arg1 ( positive :domain they )  :arg1-of estimate :polarity - )  :accompanier ( disease :arg0-of ( case :arg2-of register :mod each )  :name ( name :op1 hiv )  :wiki hiv/aids )  )
appeal :arg1 ( achieve :arg0 ( country :arg0-of ( bankrupt :arg1 office )  :name ( name :op1 mexico )  :wiki mexico )  :arg1 scenario :arg1-of ( restructure :arg1-of ( ignore :arg0 ( country :arg1-of neighbor )  :arg1-of judge )  )  :op1-of group :op1-of precedent :op1-of debt :op1-of ( nation :mod any :mod-of company )  )  :arg1-of ( of :arg0 ( court :mod ( country :arg0-of ( ratify :arg1 problem )  :name ( name :op1 united :op2 states )  :wiki united_states )  )  )
and :op1 ( valid :arg1 ( law :mod ( country :name ( name :op1 mexico )  :wiki mexico )  )  :arg1-of ( permit :arg0 ( proceeding :arg1 ( support :arg1 ( survive :arg0 firm :arg1 - )  )  )  :arg1-of ( seem :arg2 it :time then )  )  :location land )  :op2 star :op3 stripe :op4 ( contrary :arg1 ( convention :mod international )  )
judge :arg1 ( organization :name ( name :op1 bankruptcy :op2 court )  :part-of ( organization :name ( name :op1 northern :op2 district :op3 of :op4 texas )  )  :poss-of ( person :arg0-of ( deliver :arg1 ( judge :arg0-of ( leave :arg1 ( defend :arg0 ( firm :mod ( country :name ( name :op1 mexico )  :wiki mexico )  )  :arg1 ( seize :arg1 ( property :location ( outside :op1 ( country :name ( name :op1 mexico )  :wiki mexico )  )  )  :arg1-of possible )  :polarity - )  )  :arg1-of endorse :arg2 ( term :mod practical )  )  :time ( date-entity :month 6 )  :time 15 )  :name ( name :op1 harlin :op2 hale )  )  )
open :arg0 ( decide :arg0-of ( appeal :arg1 ( manufacture :arg0-of lead :arg1 glass )  :arg2 ( government-organization :name ( name :op1 supreme :op2 court )  :poss ( country :name ( name :op1 united :op2 states )  :wiki united_states )  :wiki supreme_court_of_new_south_wales )  )  :arg0-of ( claim :arg1 ( inconsistenci :quant 3 )  )  )  :arg1 ( door :location ( country :name ( name :op1 mexico )  :wiki mexico )  )
state :arg0 ( organization :arg0-of ( note :arg1 ( recommend :arg1 ( govern :arg0 ( code :mod bankruptcy :mod ( country :name ( name :op1 united :op2 states )  :wiki united_states )  :wiki - )  :arg1 creditor )  :arg1-of ( judge :arg0 trial )  )  )  :arg1-of start :name ( name :op1 court :op2 of :op3 appeal )  )  :arg1 ( action :arg1-of ( handle :location ( country :name ( name :op1 mexico )  :wiki mexico )  )  :domain ( action :mod main :mod ( organization :arg1-of ( base :location ( city :name ( name :op1 new :op2 orleans )  :wiki new_orleans )  )  :name ( name :op1 fifth :op2 circuit )  )  )  :mod insolvency )
profile :arg0 ( company :arg1-of ( cooperate :arg1-of ( ignore :arg1-of ( involve :arg2 point )  :topic ( case :arg1 insolvency )  )  :mod international :mod procedural )  )  :mod transnational
create :arg0 ( organization :name ( name :op1 international :op2 trade :op3 law :op4 uniformity )  )  :arg1 ( organization :arg1-of ( position :arg0 ( organization :name ( name :op1 american :op2 law :op3 institute )  )  :arg2 arbitrator )  :name ( name :op1 un :op2 model :op3 law )  )  :arg2 ( purpose :mod this )  :time indeed
recognize :arg0 ( company :arg0-of ( need :arg1 ( majority :arg1-of ( achieve :arg1-of ( possible :arg1-of ( establish :arg0 judge :time secondly )  :manner ( vote :arg0 intercompany )  )  :polarity - )  )  :purpose ( approve :arg1 ( restructure :arg1 debt )  )  )  :mod parent )  :arg1 ( subsidiary :mod ( organization :name ( name :op1 vitro )  )  )  :arg3 ( mass :arg1-of critical :quant-of insolvency )
possible :arg0 ( law :mod ( country :name ( name :op1 mexico )  :wiki mexico )  )
one :arg0-of ( accept :arg1 scheme )  :domain ( case :arg1 ( organization :name ( name :op1 vitro )  )  :arg2 fact )  :polarity -
endorse :arg0 ( organization :name ( name :op1 federal :op2 bankruptcy :op3 institute )  )  :arg1 debt :arg2 ( half :quant-of ( example :mod dozen )  )  :path ( and :op1 ( person :name ( name :op1 agremex )  )  :op2 ( organization :name ( name :op1 commercial :op2 mexicana )  )  )
and :mod international :op1 ( fund :mod such )  :op2 ( organization :mod capital :name ( name :op1 what )  )  :op3 ( organization :name ( name :op1 what )  )  :op4 ( achieve :arg0 ( country :mod-of vulture :name name :wiki united_kingdom )  :arg1 majority :op4-of ( against :op1 ( fight :mod creditor :time-of ( vote :arg0 ( certain :mod also )  :arg1 subsidiary :degree amr-unknown :polarity - )  )  :op2 it :op3 ( country :mod-of court :name ( name :op1 us )  :wiki united_states )  )  :polarity - )
versu :op1 ( 37 :arg0-of ( vote :arg1 ( 45 :op1-of apparent )  )  )  :quant percentage-entity
omit :arg0 ( organization :name ( name :op1 court :op2 of :op3 appeal )  )  :arg1 ( data :mod this )
blame :arg0 latter :arg1 ( organization :name ( name :op1 vitro )  )  :arg1-of ( face :arg0 ( country :arg0-of ( try :arg1 ( avoid :arg1 ( crisis :mod severe :mod economy )  )  )  :arg0-of ( turn :arg1 back :arg2 country )  :name ( name :op1 united :op2 states )  :wiki united_states )  )  :arg2 ( situation :arg1-of ( face :arg0 ( perspective :mod another )  :time ( since :op1 ( date-entity :year 2008 )  )  )  :mod difficult )
lodge :arg0 ( person :arg0-of ( give :arg1 ( vote :arg0 3 :arg1 only :time previous )  :arg2 ( judge :arg1 that )  )  :name ( name :op1 gonzalez :op2 sada )  )  :arg1 motion :arg2 5 :purpose ( vote :arg0 ( firm :mod family )  :arg1 ( reach :arg0 ( organization :name ( name :op1 court :op2 of :op3 appeal )  :op1-of ( before :time-of reconsideration )  )  :arg1 ( plenary :poss court )  :arg2 now )  )
appeal :arg0 ( court :arg1-of ( high :arg1-of ( case :mod this )  )  )  :arg1 review :arg1-of ( file :concession ( fail :arg1 this :arg1-of ( recommend :arg0 ( government-organization :mod ( country :name ( name :op1 us )  :wiki united_states )  :name ( name :op1 supreme :op2 court )  :wiki supreme_court_of_new_south_wales )  )  )  )
note :arg0 insolvency :arg1 ( agree :arg0 country :arg1 ( link :arg1 it :arg2 ( 15 :arg1-of ( act :arg0 ( government-organization :arg0-of ( govern :arg1 ( country :arg0-of ( have-rel-role :arg1 ( detail :arg0 court :arg1 ( framework :op1-of under )  :arg1-of ( follow :arg0 procedure )  )  :arg2 friend )  :name ( name :op1 mexico )  :poss-of capacity :wiki mexico )  )  :arg0-of ( send :arg1 ( problem :mod real )  :arg1-of ( bypass :arg0 court )  :arg2 of :mod document :mod that :time ( amicu :mod-of curia )  )  )  )  :mod chapter )  )  :arg1-of ( adhere :arg0 ( country :name ( name :op1 united :op2 states )  :wiki united_states )  )  :arg1-of ( discharge :arg0 latter )  :arg1-of sign :arg2 2 )  :mod law
note :arg1 ( yield :arg0 ( country :arg2-of ( border :arg1-of ( cross :arg0 ( case :arg1 insolvency )  )  )  )  :arg1 ( organization :name ( name :op1 international :op2 trade )  )  :arg4 ( principle :poss ( organization :name ( name :op1 united :op2 nations :op3 commission )  )  )  )  :arg1-of ( recommend :op1-of ( and :arg2-of ( ensure :arg0 rule :arg1 fair )  :op2 debtor :op3 creditor )  )  :mod moreover
whammy :arg1-of double :degree-of ( organization :arg0-of ( hit :op1-of ( and :op2 ( hit :arg1 country )  )  )  :name ( name :op1 vitro )  )
sheet :arg1-of balance
accuse :arg1 ( person :arg0-of ( mismanage :arg1 ( temporal-quantity :op1-of several :unit month )  )  :arg0-of ( bottleneck :arg1-of ( find :arg0 ( organization :name ( name :op1 airline :op2 pilots :op3 union :op4 association )  )  :condition ( put :arg0 ( union :poss ( organization :name ( name :op1 mexicana :op2 airlines )  )  )  :arg1 table :arg2 complain :prep-against ( person :arg0-of ( own :arg1 company :time former )  )  )  :time already )  )  :domain-of dormant :name ( name :op1 gastón :op2 azcárraga :op3 andrade )  )
obstruct :arg1 justice :arg2-of ( accuse :arg1 ( organization :arg1-of ( complain :arg1-of ( file :arg0 ( proceeding :arg1-of ( head :arg0 ( person :name ( name :op1 carlos :op2 diaz :op3 chavez :op4 morineau )  )  )  )  :mod just )  :arg2-of criminal )  :name ( name :op1 national :op2 banking :op3 and :op4 securities :op5 commission )  )  )
report :arg1-of ( provide :arg0 ( authority :arg0-of ( carry-out :arg1 de :arg1-of transact :arg1-of employ )  :arg0-of ( remove :arg1 198 )  :arg0-of ( claim :arg1 that )  :arg0-of ( have-org-role :arg1 ( general :mod-of office )  :arg2 attorney )  :arg0-of ( refuse :arg1 consistent )  :arg0-of ( trust :arg1 peso :op1-of ( slash :op2 ( aircraft-type :name ( name :op1 f22 )  :wiki lockheed_martin_f-22_raptor )  :op3 of :op4 behalf )  )  :mod supervisory )  )
channel :arg1 resource :arg2 ( purchase :arg1 share :location ( country :name ( name :name-of company :op1 administradora :op2 profesional :op3 de :op4 hoteles )  )  )  :manner apparent
sharehold :condition ( know :arg0 you )  :domain ( person :name ( name :op1 azcarraga :op2 andrade )  )  :mod main :poss ( chain :consist-of ( hotel :mod ( country :name ( name :op1 posadas )  )  )  )
oppose :arg0 ( organization :name ( name :op1 dragon :op2 mart )  )
and :op1 foreign :op2 ( and :op1 ( environmentalist :arg1-of local )  :op2 ( person :mod academia )  :op3 businessman :op4 ( person :arg0-of ( have-org-role :arg1 public :arg2 member )  )  :op5 forum )  :quant ( group :arg0-of ( approve :arg1 ( create :arg1 ( front :arg1-of broad )  )  :arg1-of ( gather :time weekend )  :purpose ( oppose :arg0 ( world-region :name ( name :op1 caribbean )  )  :arg1 ( open :arg1 ( organization :mod ( country :name ( name :op1 china )  :wiki china )  :name ( name :op1 dragon :op2 mart )  )  :location ( country :name ( name :op1 cancun )  )  )  )  )  )
talk :arg0 we :arg1 ( and :arg0-of ( reside :arg1 area )  :op1 ( centre-left :location ( and :location-of huge :op1 ( country :name ( name :op1 mexico )  :wiki mexico )  :op2 ( country :name ( name :op1 america )  :wiki united_states )  )  :mod distribute )  :op2 ( person :arg1-of ( employ :arg0 ( company :quant 150 )  )  :arg2-of ( sell :arg1 ( product :mod ( country :name ( name :op1 china )  :wiki china )  )  )  :prep-for-of bottom )  )  :concession ( know :arg0 you :arg1 ( world-region :name ( name :op1 caribbean )  )  )
and :manner-of ( destroy :arg0 ( build :arg0 ( country :name ( name :op1 mexico )  :wiki mexico )  :arg1 all :arg1-of ( oppose :purpose-of ( unite :arg0 ( person :name ( name :op1 canacintra )  )  :arg1 ( person :arg0-of ( have-org-role :arg1 southeast :arg2 governor )  )  :arg1-of ( manage :location previous :arg0 person )  )  )  :mod monumental )  :arg1 ( area :arg1-of protect )  )  :op1 ( represent :arg1 ( person :arg0-of ( have-rel-role :arg1 ( threaten :arg1 industry )  :arg2 mother )  )  )
die :arg1 ( organization :name ( name :op1 acta )  )
say :arg0 ( institute :arg0 ( country :arg1-of ( govern :arg0 ( government-organization :arg0-of ( archive :arg1 matter :op1-of and :time already )  :arg0-of ( ignore :arg2 ( explain :arg1 ( sign :arg0 ( ambassador :arg2-of ( have-org-role :arg1 ( country :name ( name :op1 japan )  :wiki japan )  )  :mod ( country :name ( name :op1 mexico )  :wiki mexico )  )  :arg1 ( organization :arg1-of ( know :arg2 ( acta :mod acronym )  )  :name ( name :op1 anti-counterfeiting :op2 trade :op3 agreement )  )  )  :purpose-of ( government-organization :name ( name :op1 senate )  :wiki united_states_senate )  )  )  )  )  :name ( name :op1 mexico )  :wiki mexico )  :arg1 ( property :mod industry )  )  :arg1 ( and :condition condition :op1 term )
express :arg1 network :arg1-of ( infringe :arg1-of ( deem :arg0 ( government-organization :arg0-of ( rule :arg1 ( possible :arg1-of ( know :arg0 ( you :arg0-of ( take :arg1 action :concession even )  )  )  )  )  :name ( name :op1 senate )  :wiki united_states_senate )  )  :time-of ( free :arg1 society )  )
term :arg1-of long
place :arg0 ( person :arg0-of ( house :arg1 market )  :arg0-of develop )  :arg1 ( certificate :location-of ( exchange :arg1 securiti )  )  :purpose ( effort :purpose ( repay :arg1 ( debt :arg1-of ( long :arg0 500 )  )  :manner ( affect :arg1 ( debt :mod short )  )  )  )  :purpose peso
repay :arg1 ( interest :arg1 4 :arg2 ( issue :arg1 every :arg2-of ( identical :arg1 ( temporal-quantity :quant 28 :unit day )  )  )  )  :arg1-of ( offer :time issue )
birth
and :op1 kernet :op1-of ( and :arg1-of ( comprise :arg0 ( consortium :arg1-of ( establish :mod just )  )  :arg2 ( organization :mod company :name ( name :op1 nyce )  )  )  :op2 objective :op3 ( country :location-of ( cluster :mod software :poss-of ( service :mod-of market )  )  :name ( name :op1 central )  :name name )  :op4 ( continent :name ( name :op1 south :op2 america )  :wiki south_america )  )  :op2 ( person :arg0-of ( lead :arg2 ( technology :mod information )  )  )
exceed :arg0 ( investment :location ( area :mod this )  )  :arg1 1.5
mean :arg1 ( life :poss ( person :name ( name :op1 reyes )  :wiki raúl_reyes )  )
and :arg2-of ( thank :arg0 it :arg1 ( travel :arg0 ( person :arg2-of ( involve :arg1 ( person :mod ( country :name ( name :op1 basketball )  )  :name ( name :op1 reyes )  :wiki raúl_reyes )  )  :mod globetrott :mod basketball :name ( name :op1 basketball )  )  :arg1 world )  )  :op1 ( 60 :op1-of ( over :mod sport )  :quant-of ( temporal-quantity :unit year )  )
of :mod ( recollection :mod mental )  :mod-of ( local :arg1 basketball :arg2 ( person :arg0-of ( broad :arg1 ( thing :mod that :name ( name :op1 few )  :name-of ( person :mod ( country :name ( name :op1 few )  )  :name ( name :op1 reyes )  :wiki raúl_reyes )  )  :time history )  :mod ( country :name ( name :op1 few )  )  :quant few )  )
and :op1 ( manage :arg1 ( date-entity :year 2008 )  :op4-of ( or :op1 ( thing :arg0-of ( play :arg1 he :arg2 league )  :mod minor :op1-of and )  :op2 ( thing :arg0-of ( play :arg1 ( country :name ( name :op1 bayamón )  )  :arg2 ( organization :name ( name :op1 national :op2 superior :op3 basketball )  )  )  )  :op3 ( represent :arg1 ( organization :name ( name :op1 bsn )  )  )  :op5 ( have-org-role :arg0 ( person :arg1-of ( immerse :arg2 sport :time ( before :op1 ( confine :arg1 ( temporal-quantity :unit year )  :arg1-of ( follow :arg2 ( stroke :arg1 60 )  )  :arg2 wheelchair )  )  )  :name ( name :op1 reyes )  :wiki raúl_reyes )  :arg1 ( thing :name ( name :op1 basketball :op2 federation )  )  :arg2 president )  )  )
recall :arg0 team :arg1 primera :arg2 ( person :arg0-of ( visit :arg1 home :arg2 ( he :arg2-of ( resemble :arg1 ( president :arg2-of ( have-org-role :arg0 ( i :arg2-of ( same :arg0 several :arg1 time )  )  :arg1 ( president :arg1-of ( general :arg0 hat :arg2 ( and :op1 ( manage :arg0 ( i :poss-of ( life :mod ( throughout :mod basketball )  )  )  :arg1 during )  :op2 federative )  )  :arg2-of ( have-org-role :arg0 ( i :arg0-of ( wear :arg1 of :arg2 lot )  )  )  )  )  )  )  :poss-of ( life :part isabel :poss he :poss ( person :arg0-of ( have-rel-role :arg1 ( he :domain-of ( over :op1 ( 50 :quant-of ( temporal-quantity :unit year )  )  )  )  :arg2 wife )  )  )  )  :mod ' )  :name ( name :op1 reyes )  :wiki raúl_reyes )  :time 90
basketball :mod-of ( life :poss i )
exaggerate :arg0 ( person :arg1-of ( make :arg0 ( he :arg0-of ( state :arg1 that )  )  )  :name ( name :op1 reyes )  :wiki raúl_reyes )  :polarity -
prove :arg1 almost :arg2-of ( go :arg1 ( career :arg1-of long :arg1-of ( denote :arg0 ( and :arg2-of ( decorate :arg1 ( wall :part-of house )  :degree total )  :op1 picture :op2 memorabilia )  )  )  )
heart
or :arg1-of franchise :arg2-of ( serve :arg1 ( year :unit-of ( temporal-quantity :quant 15 )  )  :arg1-of ( remind :arg0 ( one :domain ( one :arg1-of ( treasure :arg0 he :arg2 ( emotion :quant most )  )  )  )  :arg2 ( time :arg3-of ( spend :arg0 mid :arg1 50 )  )  :time ( until :op1 ( date-entity :year 1982 )  )  )  :arg1-of ( complete :arg0 all )  )  :op1 ( thing :arg0-of play )  :op2 agent :op3 agent
cause :arg0 ( one :arg0-of ( manage :arg1 ( or :op1 ( 8 :mod-of championship )  :op2 ( since :mod-of ( date-entity :year 1967 )  )  :op3 ( agent :mod either )  :op4 agent )  )  :mod ( good :degree most :degree most :mod-of ( temporal-quantity :unit year )  :poss i )  :mod that :mod-of ( enjoy :arg0 i :arg1 i :arg2 opportunity )  )  :arg1 of
championship :mod consecutive :quant 5 :time ( date-entity :mod-of ( many :op1 ( temporal-quantity :mod good :unit year )  :poss-of ( date-entity :year 1975 )  )  :year 1971 )
say :arg0 ( i :arg0-of ( debut :arg1 year )  :op2-of ( and :op1 then )  )  :arg1 goodbye :time ( date-entity :year 1981 )
say :arg0 ( he :arg0-of ( manage :mod great )  :op1-of ( over :mod then )  )  :arg1 ( person :name ( name :op1 reyes )  :wiki raúl_reyes )
say :arg0 i :arg1 ( and :arg1-of ( remember :arg0 i )  :op1 ( direct :arg0 7 :arg1 alabama )  :op2 here :op3 ( get :arg0 i :arg1 6 :arg1-of ( strong :arg0 very :arg1-of ( play :arg0 ( you :poss-of tall )  )  )  )  )  :arg4 ( name :op1 birmingham )
want :arg0 you :arg1 interrogative
and :beneficiary-of ( begin :arg0 ever :arg1 ( person :name ( name :op1 mincy )  )  :arg2 that )  :op1 ( person :arg0-of ( play :mod ( good :degree most )  )  :name ( name :name-of country :op1 puerto :op2 rico )  )
recommend :arg0 ( person :name ( name :op1 bartow )  )  :arg1 ( person :mod sharpshoot :name ( name :op1 gausse :op2 raymond )  :op1-of ( and :op2 ( establish :arg0 ( shooter :mod ( good :degree most )  :poss we )  :arg1 residency :location here )  )  )  :time then
remember :arg0 i :arg1 ( say :arg1 ( help :arg0 ( person :name ( name :op1 gausse )  )  :arg1 another :condition ( give :arg0 ( person :name ( name :op1 mincy )  )  :arg1 championship :arg2 ( country :name ( name :op1 bayamon )  )  )  )  :arg0 i )
contrast :arg1 ( distance :arg1 ( he :arg1-of ( become :arg2 already :time ( date-entity :year 1988 )  )  )  :arg1-of enjoy :arg1-of ( cause :arg0 championship )  )
prefer :arg0 ( he :arg0-of ( enjoy :arg1 and )  )  :arg1 ( team :mod nation )  :arg1-of ( own :arg0 ( he :arg0-of accomplish )  )  :time time
remember :arg0 i :arg1 ( date-entity :time-of ( game :location ( country :location-of pre :name ( name :op1 mexico )  :wiki mexico )  :name ( name :op1 olympics )  :wiki olympic_games )  :year 1989 )  :time ( beat :arg0 we :arg1 ( country :name ( name :op1 united :op2 states )  :wiki united_states )  :purpose time )
contrast :arg2 ( say :arg1 ( person :arg1-of ( referee :arg0 ( country :name ( name :op1 canada )  :wiki canada )  :arg0-of ( repeat :arg1 ( play :mod final )  :purpose time )  )  :name ( name :op1 reyes )  :wiki raúl_reyes )  )  :op5-of ( and :op1 ( game :arg1-of ( come :time then )  :name ( name :op1 world :op2 cup )  :time ( date-entity :year 1990 )  :wiki fifa_world_cup )  :op2 ( come :arg1 we :arg2 fourth )  :op3 recommend :op4 bronze )
see :arg0 ( you :degree-of ( good :degree most )  )  :arg1-of ( be :arg0 team :time ( date-entity :year 1990 )  )  :mode interrogative :op1-of ever
beat :arg0 ( team :arg0-of ( dream :arg1 ( game :name ( name :op1 olympics )  :wiki olympic_games )  )  :poss ( date-entity :year 2004 )  )  :arg1 good :manner ( good :degree most :poss it )
favor :arg1-of ( win :arg0 we :arg2 gold :op1-of ( and :op2 ( give :arg1 ( beat :arg1-of ( resemble :arg2 ( time :time-of ( win :arg0 we :arg1 bronze :arg2 ( game :name ( name :op1 world :op2 cup )  :wiki fifa_world_cup )  :arg4 ( country :location-of ( thing :arg1-of pan :name ( name :op1 american :op2 games )  :time ( date-entity :year 1991 )  )  :name ( name :op1 cuba )  :wiki cuba )  )  )  :degree quite )  )  :arg2 ( team :mod ( country :name ( name :op1 us )  :wiki united_states )  )  :arg0 we )  )  )  :domain-of one
contrast :arg1 also :arg2 ( and :example-of ( and :arg1-of ( include :arg0 team :arg2 riva :beneficiary only :beneficiary - :degree that :manner again )  )  :example-of young :op1 ( person :arg0-of ( have-rel-role :arg1 ( person :arg0-of ( keep :arg1 of :manner-of ( knee :arg1 ( injure :arg0 team :arg1 90 )  )  )  :name ( name :op1 edgar )  :op1-of and :op1-of and :wiki - )  :arg2 brother )  :arg1-of ( jam :arg0 javier_solana )  :name ( name :op1 carter )  :wiki jimmy_carter )  )
contrast :arg0 ( team :mod ( thing :name ( name :op1 pre-olympic )  )  :time ( date-entity :year 1995 )  )  :arg1 ( good :degree most )  :arg2 ( and :op1 ( give :arg1 ( medal :mod gold )  :arg2 ( person :arg0-of ( have-org-role :arg1 ( country :name ( name :op1 argentina )  :wiki argentina )  :arg2 member )  :mod-of term )  )  :op2 ( joy :arg1-of ( work :arg0 team :arg2 - )  :mod great )  )
mar :arg0 ( person :arg0-of ( suspend :arg1 niev :arg1-of ( shamble :arg0 such :time after )  :op2-of ( and :arg1-of ( replace :arg0 hourruitin )  :op1 young )  )  :arg0-of ( play :arg1 role )  )  :arg1-of ( pan :arg0 ( we :arg0-of ( win :arg1 game :arg2 ( gold :mod-of ( all :quant-of odds )  )  )  )  )
play :arg0 ( thing :domain amr-unknown :mod ( good :degree most )  )  :arg1 ( thing :name ( name :op1 puerto :op2 rican )  )  :mode interrogative
doubt :mod any
awesome :arg0 ( number :location ( level :mod tournament :mod international )  :poss he )
resemble :arg1 ( level :arg1-of ( dominate :arg0 ( nobody :location ( country :name ( name :op1 puerto :op2 rico )  )  )  )  :mod that )
mention :arg1 ( career :topic ( league :arg1-of ( play :arg0 he )  :mod various )  )  :polarity -
thing :arg1-of ( manage :arg0 amr-unknown :mod ( good :degree most )  :mode interrogative )  :name ( name :op1 puerto :op2 rican )
difficult :domain that :quant 1
person :name ( name :op1 flor :op2 melendez )  :poss ( we :domain-of ( person :name ( name :op1 julio :op2 toro )  )  :domain-of ( person :name ( name :op1 carlos :op2 morales )  )  :poss-of ( person :name ( name :op1 armandito :op2 torres )  )  :poss-of ( team :mod ( good :degree very )  )  :poss-of ( person :name ( name :op1 raymond :op2 dalmau )  )  )
resemble :arg0 ( i :poss-of youngster )  :arg1 ( work :arg0 ( person :name ( name :op1 leo :op2 arill )  )  )  :mod really
consider :arg0 you :arg1 ( thing :arg1-of ( achieve :location federation )  :mod ( great :degree most )  )  :arg3 amr-unknown :mode interrogative
and :op1 ( early :mod-of 90 )  :op6-of ( and :op1 ( have :arg0 ( team :mod 17 )  :arg1 season )  :op2 ( era :mod glorious :mod most )  :op3 ( between :arg1-of ( of :arg0 team )  )  :op4 ( date-entity :year 1988 )  :op5 ( date-entity :year 1995 )  )
leave :arg0 there :arg1 amr-unknown :arg2 ( do :arg0 you )  :mode interrogative
implement :arg1 ( like :arg1 ( thing :arg1 i )  :arg2 regionalis )  :arg2 ( minor :mod league )  :mod such
and :manner-of ( face :arg1 team :arg2 ( part :location ( island :location ( playoff :mod nation )  )  :mod other )  )  :op1 ( play :arg0 ( person :name ( name :op1 ponce )  )  :arg1 boy :location area :mod only :mod only :purpose example )
and :op1 ( ride :arg0 kid )  :op2 ( play :time ( right :mod-of now )  :time unnecessarily )  :op3 ( much :degree too )
see :arg0 i :arg1 ( and :op1 ( fruit :mod ( certification :arg1-of ( compel :arg1-of ( referee :op3-of ( and :op1 ( person :arg0-of lead )  :op2 ( person :arg0-of ( have-org-role :arg2 official )  :mod-of table )  )  )  )  )  )  )
please :arg0 that :arg1 i
do :arg0 you :arg1 amr-unknown :direction now :mode interrogative
basketball :mod-of ( game :arg4-of ( go :arg0 most :arg1 music :frequency occasional :op5-of ( and :op1 ( listen :arg1 music )  :op2 ( watch :arg1 video :arg2 era )  :op3 ( publication :name ( name :op1 youtube )  :wiki youtube )  :op4 ( enjoy :arg1 ( person :arg0-of ( have-rel-role :arg1 i :arg2 grandchild )  )  )  )  )  )
and :mod always :op1 ( enjoy :arg0 ( person :name ( name :op1 elizabeth )  )  :arg1 company :arg2 ( person :arg0-of ( have-rel-role :arg1 i :arg2 wife )  )  )
actor :domain ( die :arg1 ( person :name ( name :op1 larry :op2 hagman )  )  )
and :op1 ( organization :arg2-of ( know :arg1 ( person :arg1-of ( bear :arg0 ( person :name ( name :op1 larry )  )  :location ( country :name ( name :op1 larry )  )  :location ( country :name ( name :op1 larry )  )  :location ( state :name ( name :op1 texas )  :wiki texas )  :time ( date-entity :day 21 :month 9 :year 1931 )  )  :arg2-of ( become :arg1 ( he :mod-of role )  :location ( world :mod-of famou )  )  :name ( name :op1 larry )  )  :manner good :manner ( television :mod-of series )  )  :name ( name :op1 larry )  )  :op2 ( he :arg0-of play )  :op3 ruthles :op4 malicious :op5 manipulative :op6 businessman
become :arg0 ( series :mod television )  :arg1 ( country :name ( name :op1 larry )  )  :arg2 ( person :arg1-of die :mod ( oil :mod-of tycoon :mod-of 1980 :mod-of ( role :domain ( person :name ( name :op1 larry )  )  )  :mod-of predator )  :name ( name :op1 larry )  )  :location ( thing :arg1-of symbolize :mod-of ( of :mod-of greed )  )
he :arg0-of 81
state :arg0 ( person :arg0-of ( say :arg1 die )  :arg1-of ( return :arg1-of ( produce :arg0 ( country :name ( name :op1 hagman )  )  :arg2 ( name :op1 warner :op2 bros. )  )  :mod-of ( this :mod-of year )  :purpose-of ( season :mod new :mod-of of )  )  :name ( name :op1 hagman )  )  :arg1 ( provide :arg0 ( organization :name ( name :op1 hagman )  )  :arg1 ( afternoon :mod friday )  :arg2 ( publication :name ( name :op1 associated :op2 press )  :wiki associated_press )  )  :mod family :mod ( complication :mod cancer )
say :arg0 ( he :part back )  :arg1 family :arg1-of ( like :arg0 ( country :name ( name :op1 &quot; )  )  :arg1-of ( represent :arg0 ( person :name ( name :op1 &quot; )  :poss-of ( hometown :mod belov :mod-of of )  )  :arg2 he :op1-of iconic :op1-of ( again :mod once )  :op1-of role )  :degree most )
and :op1 ( close :degree most :mod family )  :op2 ( person :arg0-of ( have-rel-role :arg1 ( person :name ( name :op1 larry )  )  :arg2 friend )  )  :op3 dalla :op4 ( holiday :mod ( day :mod ( festival :name ( name :op1 thanksgiving )  :wiki thanksgiving )  )  )
say :arg0 ( person :name ( name :op1 jeffrey :op2 lane )  :op4-of ( and :op1 ( play :arg0 ( person :arg0-of ( die :arg1 he :location ( hospital :location ( country :name ( name :op1 dallas )  )  )  )  :name ( name :op1 linda :op2 gray )  )  :arg1 ( person :arg0-of ( have-rel-role :arg1 ( person :name ( name :op1 hagman )  )  :arg2 wife )  )  )  :op2 ( series :mod original )  :op3 sequel )  )  :arg1 publicist
joy :arg1-of ( bring :arg0 he :arg1-of ( know :arg0 all )  )
and :op1 ( funny :op2-of ( and :op1 ( creative :domain ( he :arg1-of love :arg1-of generous )  )  :op3 talent )  )  :op2 ( miss :arg0 i :manner dearly )
state :arg1 ( and :op1 original :op2 guy )  :arg1-of ( gray :arg0 full )  :arg1-of ( say :arg0 ( he :arg0-of ( live :arg1 life )  )  )
and :op1 ( diagnose :arg0 ( temporal-quantity :unit year )  :arg1 ( person :name ( name :op1 hagman )  )  :arg2 ( cirrhosi :poss liver )  )  :op2 ( admit :arg1 ( drink :arg0 he :arg1 lot :arg2 ( date-entity :year 1992 )  )  )
and :op1 ( find :arg0 ( tumour :arg1-of malignant )  :location liver :time ( date-entity :year 1995 )  )  :op2 ( undergo :arg1 he :arg2 transplant )
become :arg1 ( country :name ( name :op1 years )  )  :arg2 ( person :arg0-of ( air :arg1 ( from :op1 ( publication :name ( name :op1 nbc )  :wiki nbc )  :op2 ( date-entity :year 1965 )  )  :arg2 ( i :arg2-of ( light :arg0 ( guy :mod decent )  :arg1 ( comedy :mod-of ( organization :name ( name :op1 years )  )  :mod-of ( date-entity :year 1970 )  )  )  )  )  :name ( name :op1 years )  )  :location ( famou :mod-of television )  :time ( before :quant ( temporal-quantity :unit year )  )
attract :arg1 ( genie :arg1-of ( meet :arg0 ( he :arg1-of ( play :arg0 ( person :name ( name :op1 barbara :op2 eden )  )  :op1-of ( and :condition-of ( change :arg0 ( he :arg0-of ( play :arg1 ( person :arg1-of captain :name ( name :op1 tony :op2 nelson )  )  )  )  :arg1 ( life :poss astronaut )  )  :op2 ( take :arg1 ( home :purpose live )  )  )  )  )  )  )
and :op1 ( thing :arg1-of ( long :arg0 ( he :arg0-of ( star :arg1 2 :mod also )  :arg0-of ( air :arg1 sitcom :polarity - )  )  )  :name ( name :op1 he )  )  :op2 here :op3 ( go :arg0 we :arg1 ( name :op1 abc )  :arg4 ( publication :name ( name :op1 nbc )  :wiki nbc )  :mod again :time ( date-entity :year 1973 )  )  :time ( date-entity :day 72 :month 71 :year 19 )
and :arg1-of ( include :arg2 ( critic :arg2-of ( work :arg0 ( he :poss-of film )  :arg1 role )  :arg2-of ( receive :arg1 group )  )  )  :op1-of ( and :arg1-of color )
contrast :arg1 ( organization :arg0-of ( interpret :arg1 ( lead :arg2 ( reach :arg1 ( peak :arg0 ( person :name ( name :op1 hagman )  )  :arg1 stardom )  )  )  :mod masterful )  :mod ( detestable :manner delightful )  :name ( name :op1 jr )  )
air :arg0 ( organization :name ( name :op1 cbs )  :op1-of ( and :op2 ( person :mod-of clan :name ( name :op1 ewing )  )  :op3 ( character :arg1-of ( orbit :part other )  )  :topic-of ( series :mod drama )  )  )  :arg1 ( date-entity :month 5 )  :time ( date-entity :year 1991 )  :time ( date-entity :month 4 :year 1978 )
speculate :mod international :op2-of ( and :op1 ( generate :arg0 character :arg1 ( generate :arg1 ( hype :arg1 ( episode :mod-of ( full :mod-of ( of :mod-of emotion )  )  )  :arg1-of ( shoot :arg0 amr-unknown :time interrogative )  :op1-of around )  :arg1-of design )  :arg1-of ( kill :arg0 nearly )  :arg1-of ( wager :arg0 ( establishment :mod game )  )  )  :op3 ( risky :arg1 ( monetary-quantity :unit dollar )  )  )
help :arg0 it :arg1 ( give :arg1 ( audience :mod record )  :arg2 series :time time :arg0 it )  :mod also
answer :arg1 ( reveal :arg1-of ( average :arg0 episode :arg2-of ( tune :arg0 ( person :arg0-of ( view :arg1 41 )  :arg0-of ( watch :arg1 and :arg2-of ( entertain :arg0 most :arg1 program :destination ( history :time-of ( after :time-of final :time-of episode )  )  )  )  )  :arg1 ( person :arg0-of ( view :arg1 ( 50 :time ( date-entity :year 1983 )  )  )  )  )  :time ( date-entity :year 1980 )  :time ( date-entity :month 11 )  )  )
crosby :arg0-of ( shoot :arg1 ( person :arg0-of ( play :arg1 it )  :arg1-of ( have-rel-role :arg0 ( person :poss-of law )  :arg2 sister )  :name ( name :op1 mary )  :wiki - )  )
contrast :arg1 ( get :arg0 ( organization :name ( name :op1 jr )  )  :arg1 ( threaten :arg0 also :arg1 ( say :arg0 pregnant :arg1 ( prostitute :arg1 she )  :concession ( leave :arg1 town )  )  :time then )  )  :arg2 ( other :arg1-of ( attack :domain-of reason )  )
and :arg0-of section :arg1-of ( try :arg0 ( man :arg2-of ( portray :arg0 ( person :arg0-of ( smile :mod charisma )  :name ( name :op1 hagman )  )  :arg1 ( person :arg1-of ( have-rel-role :arg0 ( person :mod alcohol )  :arg2 wife )  :name ( name :op1 ewing )  )  )  :mod insatiable )  )  :op1 ( entrepreneur :mod dishonest )  :op2 ( person :arg0-of ( have-rel-role :arg1 ( cheat :arg0 ( person :arg1-of corrupt :name ( name :op1 sue :op2 ellen )  )  )  :arg2 husband )  )  :op3 ( person :name ( name :op1 linda :op2 gray )  )
say :arg0 ( i :arg0-of ( want :arg1 tombstone :arg1-of ( know :arg0 i :op1-of amr-unknown )  :arg2 ' )  )  :arg1 hagman :time ( date-entity :year 1988 )
mean :arg1 ( recommend :arg0 ( person :mod ( citizen :arg0-of ( lie :arg1 honest :location here )  )  :name ( name :op1 it )  )  :arg1 it :arg1-of read )
deal :arg1-of ( lose :arg0 he :manner this )  :mod only
recall :arg0 ( person :name ( name :op1 victoria )  :op1-of ( and :op2 huge :op3 off :op4 screen )  )  :arg1 ( star :mod-of ( of :mod-of original )  )  :arg2 ( friday :mod-of someone )  :mod series
and :arg1-of ( know :arg0 ( he :domain-of ( unforgettable :op1-of and )  :domain-of irreplaceable )  :op1-of ( and :domain-of ( fortunate :degree enough )  :op2 ( love :arg0 each :arg1 ( fan :location ( around :op1 world )  )  )  )  )  :op1 million :op2 heart
tnt :arg1-of ( succeed :arg1-of ( broadcast :arg0 ( ten :mod-of episod )  :op1-of few )  :duration ( temporal-quantity :unit month )  :mod great :mod ( new :mod-of edition )  )
report :arg0 chain :arg1 ( and :op1 ( finish :arg0 ( he :arg0-of ( process :arg1 sixth :arg2 5 )  )  :arg1 ( record :arg1 episod :purpose series )  :time already )  )
state :arg0 ( person :name ( name :op1 hagman )  :poss-of ( loss :arg1-of ( handle :arg0 series :arg2 immediately )  )  )  :arg2 ( or :op1 ( organization :name ( name :op1 warner )  )  :op2 tnt )  :polarity - :time after
and :op1 ( person :arg0-of ( star :arg1 classic )  :name ( name :op1 hagman )  :op3-of ( and :op1 actres :op2 ( person :arg0-of ( sing :arg1 of )  :arg1-of ( have-rel-role :arg0 ( person :arg1-of ( bear :arg0 ( person :name ( name :op1 hagman )  )  :location ( country :name ( name :op1 hagman )  )  :location ( state :name ( name :op1 texas )  :wiki texas )  )  )  :arg2 son )  )  )  )  :op2 ( thing :arg1-of pan :mod such :name ( name :op1 hagman )  )
teenager :domain ( person :mod ( lawyer :mod-of ( person :arg1-of ( marry :arg0 ( she :poss-of ( 1931 :year-of date-entity )  )  )  :name ( name :op1 ben :op2 hagman )  )  )  :name ( name :op1 martin )  )  :mod still
luck :arg1-of ( try :arg0 ( he :arg0-of ( serve :arg1 ( and :op1 50 :op2 ( country :name ( name :op1 england )  :wiki england )  :time ( date-entity :year 1952 )  )  :time late :time early :time ( date-entity :year 1956 )  )  :arg0-of ( have-org-role :arg1 ( military :name ( name :op1 air :op2 force )  :wiki united_states_air_force )  )  )  :location ( city :location-of scene :location-of theatre :name ( name :op1 new :op2 york )  :wiki new_york_city )  )
and :op1 ( meet :arg0 ( he :arg0-of ( marry :arg1 she )  )  :arg1 ( person :arg0-of ( design :arg1 ( country :name ( name :op1 sweden )  :wiki sweden )  )  :mod young :name ( name :op1 maj :op2 axelsson )  )  :arg1-of while )
and :op1 ( have-rel-role :arg0 ( thing :name ( name :op1 californian )  )  :arg2 son )  :op2 ( person :name ( name :op1 heidi )  )  :op3 ( live :arg0 couple :arg1 ( time :arg1-of ( long :arg0 2 )  )  :arg4 ( home :beneficiary ( celebrity :quant many )  )  :location ( country :location-of city :name ( name :op1 malibu )  )  :op2-of ( and :op1 ( person :name ( name :op1 preston )  )  )  )
mean :arg0 ( he :arg0-of ( call :arg1 ( he :arg0-of ( true :arg1 tall :op2-of ( and :op1 absolute :op3 ( live :arg0 i :arg1 tal :location about )  )  )  )  :arg2 memoir :time ( date-entity :year 2001 )  )  )  :arg1 hello
affect :arg0 ( anyone :op1-of ( or :arg1-of ( hurt :arg0 it )  :arg1-of ( believe :arg0 i )  :arg2-of ( do :arg0 ( i :arg0-of ( put :arg1 that :arg2 ( he :arg0-of ( tell :arg1 ( publication :name ( name :op1 associated :op2 press )  :wiki associated_press )  :arg2 time :manner ( way :mod any )  )  )  )  )  :arg1 anything :polarity - )  )  )  :arg1 they
fear :arg1 ( person :arg0-of ( have-rel-role :arg2 patient )  :arg1-of ( help :arg0 ( he :arg1-of ( work :arg2 hospital :manner volunteer :op1-of ( and :time ( after :op1 ( transplant :arg1 liver )  )  )  )  :arg1-of ( become :arg2 ( promote :arg1 ( donate :arg0 organ )  )  )  )  )  )
say :arg0 ( he :arg1-of ( come :op1-of ( and :arg2-of ( advise :arg0 ( i :arg0-of ( meet :arg1 they )  )  :arg1 ( they :arg0-of ( encourage :arg1 they )  )  )  :op2 ( surgery :arg0 they )  :op3 afterwards )  )  )  :time ( date-entity :year 1996 )
contrast :arg1 short :arg2 ( comfortable :arg0 ( i :arg0-of ( offer :arg1 some :arg1-of ( comfort :arg0 such )  )  :arg1-of ( try :arg0 ( you :arg0-of ( fine :arg1 then )  )  )  )  :arg1 little :arg2 time :polarity - :polarity - )
and :op1 ( have-org-role :arg0 he :arg1-of ( smoke :arg1-of oppose )  :arg2 ( activist :mod also )  )  :op2 ( campaign :quant several )
of :arg1 ( explore :arg1 end )  :arg1-of start
germ :op2-of ( and :op1 ( war :mod nucleus )  :op3 ( warm :arg0 such :arg1 globe :op4-of ( and :op1 ( explore :arg0 ( person :arg0-of study )  :arg1 ( theme :mod apocalyptic )  :time ( week :mod each )  )  :op2 zombie :op3 virus )  )  )
mean :arg1 ( hook-up :arg0 ( he :arg0-of compel :arg0-of ( end :arg1 ( long :arg1 countdown )  )  :arg1-of ( know :arg0 ( he :poss-of calendar )  )  :arg2-of ( give :arg0 ( person :arg0-of ( decide :arg1 religion :arg3 ( term :mod this )  )  :arg0-of ( have-org-role :arg1 of :arg2 professor )  :name ( name :op1 this )  )  :arg1 ( world :arg1-of end )  )  )  :arg1 ( convince :arg0 12 :arg1 ( person :arg0-of ( end :arg1 world )  :arg1-of come :mod that )  :arg3 21 :prep-on many )  )
contrast :arg1 ( idea :topic ( and :op1 ( call :arg0 fiscal :arg1 ( incident :name ( name :op1 armageddon )  :wiki armageddon )  :arg2 debt :mod some :mod precipice :polarity - )  :op2 ( grow :arg0 ( couple :arg0-of ( await :arg1 ( cataclysmic :mod-of hurricane )  )  :mod next :mod-of ( temporal-quantity :unit month )  )  :time-of ( involve :arg1 ( country :arg0-of conflict :name ( name :op1 israel )  :wiki israel )  :arg2 ( think :arg0 theorist :arg1 ( begin :arg0 apocalypse )  )  :time ( end :arg1 ( world :mod-of ( religious-group :name ( name :op1 christian )  :wiki christian )  )  )  )  )  )  )  :arg2 amr-unknown
say :arg0 ( term :mod most )  :arg1 ( jersey :mod new )  :arg2 ( person :arg0-of ( study :arg1 rutger )  )  :arg2-of ( realize :arg0 ( i :arg0-of ( do :arg1 this :polarity - )  )  :arg1 apocalyptic )  :time ever :time ( week :mod this )
and :op1 ( temporal-quantity :quant 30 :unit day )  :op2 ( count :arg0 ( we :arg0-of ( happen :arg1 world :arg1-of ( look :arg0 you )  :time today )  )  :arg1 ( good :degree really :mod-of ( period :domain this )  )  )
remember :arg1 ( good :arg1-of ( bad :arg0 ( mentality :mod apocalyptic )  )  )  :op1-of and
and :example - :op1 ( he :arg0-of ( offer :arg1 course :mod only )  :arg0-of ( have-org-role :arg1 ( theoretic :example ( history :mod last )  )  :arg2 professor )  )  :op2 ( end :arg1 world :domain this )
and :arg1-of ( culture :arg0 media )  :arg1-of ( give :arg0 ( person :arg0-of ( have-org-role :arg1 associate :arg2 professor )  :name ( name :op1 at )  )  )  :op1 ( end :arg1 world )
germ :op2-of ( and :op1 ( war :mod nucleus )  :op3 ( warm :arg0 such :arg1 globe :op4-of ( and :op1 ( explore :arg0 ( person :arg0-of study )  :arg1 ( theme :mod apocalyptic )  :time ( week :mod each )  )  :op2 zombie :op3 virus )  )  )
say :arg0 ( he :arg0-of ( hypothetical :arg2 ( behave :arg0 human :arg1-of ( guide :arg0 scenario )  :arg2-of ( offer :arg0 they :arg1 that )  )  )  :arg1-of ( proliferate :op1-of over )  )  :arg1 ( and :op1 ( look :arg0 we :arg1 why )  :op2 ( idea :topic this )  :op3 amr-unknown )  :time time
possible :arg1 ( break-up :arg0 war :arg1 example :time ( fall :arg1 ( material :mod nucleus )  :arg4 ( hand :part-of terrorist )  )  )
and :op1 ( theme :mod apocalyptic )  :op2 ( explore :arg0 ( person :arg0-of ( study :duration ( temporal-quantity :unit month )  )  :mod this )  :arg1 movie :time ( compare :arg0 they :arg2 ( example :mod ( real :mod-of life )  )  )  )
say :arg0 ( person :arg0-of study :arg1-of ( inform :arg0 ( i :arg0-of ( try :arg1 amr-unknown )  )  :arg2 about :op1-of ( and :op2 ( probable :arg1-of possible )  :op3 credible )  )  )  :arg1 vack
and :op1 ( person :arg0-of ( have-org-role :arg1 anthropology :arg2 professor )  :name ( name :op1 at )  :poss-of ( art :mod history :mod associate :poss ( he :arg0-of ( call :arg1 ( give :arg0 ( person :arg0-of ( have-org-role :arg1 ( organization :mod main :name ( name :op1 at )  :poss-of campus )  :arg2 professor )  :mod history :name ( name :op1 at )  :poss-of ( world-region :name ( name :op1 latin :op2 america )  )  )  :arg1 and )  :arg1-of end :location simple :location world )  :arg0-of team :poss-of colleague )  )  )
say :arg0 ( we :arg1-of ( cause :arg0 ( do :arg0 ( we :arg0-of ( add :arg1 option :arg2 always )  )  :arg0-of ( cause :arg1 world :mod again )  :arg1 ( course :arg1-of ( run :arg0 of )  )  :polarity - )  :time ( date-entity :year 2012 )  )  )  :arg1 restall :arg1-of ( come :polarity - )  :arg1-of end
and :op1 ( take :arg1 ( study :arg0 ( person :arg0-of ( study :arg1 doom )  )  :arg1 project :arg1-of ( impend :arg0 despite )  :arg1-of undertake )  )  :op2 final :op3 exam
contrast :arg1 ( choose :arg0 ( person :arg0-of ( say :arg1 ( end :arg1 world )  )  :arg0-of ( study :arg1 eve )  )  :arg1 ( take :arg0 state :arg1 ( will :arg0 final :arg1 exam )  )  :arg1-of ( leave :arg0 apocalypse )  :arg1-of ( work :location until :polarity - )  :arg1-of ( suppose :arg0 ( night :degree very )  )  )
prove :arg0 course :arg1 ( popular :mod quite )
say :arg0 ( within :arg1-of ( book :arg0 full :arg2 ( 2 :quant-of ( temporal-quantity :unit hour )  )  )  )  :arg1 ( he :arg0-of ( average :arg1 ( fill :arg0 it :arg1 35 :arg2 ( person :arg0-of study )  )  :arg1-of ( high :arg0 ( person :arg0-of study )  )  )  :poss-of course )  :arg2 ( person :name ( name :op1 &quot; )  )
receive :arg0 ( we :arg0-of ( start :arg1 term :op1-of before )  )  :arg1 ( email :arg1 ( temporal-quantity :unit week )  )  :arg2 ( and :arg2-of ( ask :arg0 person :arg1 ( place :mod any )  )  :op1 ( temporal-quantity :unit week )  )
say :arg0 ( person :arg0-of study :arg1-of ( interest :degree most :mod-of around )  )  :time meanwhile
say :arg0 ( i :arg0-of ( find :arg1 ( person :arg0-of ( do :arg1 23 :arg2 ( console :arg1 themselv )  )  )  )  :arg0-of ( see :arg1 amr-unknown :arg1-of ( fascinate :arg0 it )  )  )  :arg1 ( and :op1 ( person :name ( name :op1 &quot; )  )  :op2 ( post :mod old )  :op3 ( graduate :arg0 year :arg1 religion :arg2 ( jersey :mod new )  )  :op4 sociology :op5 ( person :arg0-of ( study :arg1 rutger )  )  :op6 camden )
and :op1 ( lack :op2-of ( or :op1 ( console :arg0 ( mentality :op4-of ( or :op1 apocalyptic :op2 secular :op3 religion )  )  :arg1 matter :mod just )  )  )
say :arg0 ( thing :name ( name :op1 will :op2 wekesa )  )  :arg1 ( see :arg0 he :arg1 ( movie :mod apocalyptic :quant all )  )  :op4-of ( and :op1 psychology :op2 ( nurse :arg1 ( graduate :op1-of post )  )  :op3 ( person :arg0-of study :age ( temporal-quantity :quant 25 :quant-of old :unit year )  )  )
say :arg0 ( he :arg2-of ( teach :arg0 class :arg1 it :arg1-of possible )  )  :arg1 ( hear :arg0 i :arg1 that :op1-of nev :op1-of of )
enjoy :arg0 i
contrast :arg1 21st :arg2 ( say :arg0 ( person :arg0-of study :arg0-of ( have-org-role :arg1 much :arg2 professor :mod any :op1-of less )  :arg1-of interview :poss-of none )  :arg1 ( believe :arg0 they :arg1 ( date :arg1-of end :mod 12 )  )  )
say :arg0 ( we :arg0-of ( discredit :arg1 it )  )  :arg1 ( 21 :mod-of year )  :arg2 ( person :name ( name :op1 &quot; )  :op8-of ( and :op1 we :op2 ( project :mod first )  :op3 about :op4 ( thing :name ( name :op1 &quot; )  )  :op5 prophecy :op6 certain :op7 extent :op9 ( person :arg0-of ( study :arg1 temple :arg2 ( chest :mod ( world-region :name ( name :op1 west )  :wiki western_world )  )  )  :time ( final :mod ( old :mod-of year )  )  )  )  )
say :arg0 ( person :name ( name :op1 restall )  )  :arg1 ( predict :arg0 ( thing :name ( name :op1 mayans )  )  :arg1 ( end :arg1 ( world :arg0-of ( key :arg1 ( point :location calendar :mod just )  )  )  )  )
contrast :arg2 ( say :arg0 he :arg1 ( suffer :arg0 ( culture :mod ( world-region :name ( name :op1 west )  :wiki western_world )  )  :arg1 ( anxiety :arg1-of ( go :arg0 ( person :arg0-of ( end :arg1 world )  :arg0-of ( react :arg1 ( change :location around )  )  :arg0-of ( predict :arg1 ( temporal-quantity :op1-of several :unit century )  )  )  :direction back )  :mod apocalyptic )  )  )
cause :arg0 internet :arg1 ( boom :location ( speculation :mod this )  )
say :arg0 ( he :arg2-of ( do :arg0 ( person :arg0-of ( think :arg1 about )  )  :arg1 it :arg3 ( place :mod other )  :polarity - )  )  :arg1 in
speak :arg0 it :arg1 world :degree most
respond :arg0 ( country :name ( name :op1 philippines )  :wiki philippines )  :arg1-of ( quick :arg0 ( year :mod this )  :arg2 ( know :arg0 ( he :arg0-of ( end :arg1 ( world :mod there )  )  :arg2-of ( give :arg0 ( person :arg0-of ( have-org-role :arg1 ( organization :mod ( religion :mod of )  :name ( name :op1 joseph )  )  :arg2 professor )  :name ( name :op1 joseph )  )  :arg1 course )  )  :arg1 ( course :mod any :mod about )  :arg1-of question :mod wheth )  )
suggest :arg1 ( authority :arg1-of ( write :arg0 ( he :arg1-of ( take :arg0 ( country :name ( name :op1 philippines )  :wiki philippines )  :arg2 of :polarity - )  )  )  :arg1-of high :arg1-of ( except :arg0 ( end :arg1 world )  )  )
indulgence :domain we :source pope
say :arg0 ( person :arg0-of ( note :arg1 ( that :mod-of ( over :op1 ( temporal-quantity :unit year )  )  )  )  :arg0-of ( talk :mod-of ( many :mod of :quant-of ( temporal-quantity :unit day )  )  )  :name ( name :op1 restall )  )  :arg1 ( and :op1 last :op2 ( judge :arg1 there )  :op3 ( person :arg0-of ( start :arg1 immediate )  :arg0-of ( think :arg1 ( or :op1 ( date :mod next )  :op2 philosophise :op3 ( begin :arg0 21st :arg1 7 :op1-of ( after :op2 ( period :mod year )  )  )  :op4 ( end :arg1 world )  )  )  :quant 12 )  )  :arg2-of ( happen :arg0 nothing :arg1 21st )
take :arg0 ( and :op1 ( person :arg0-of study )  :op2 ( person :arg0-of teach )  )  :arg1 date :manner light
say :arg0 some :arg1 ( go :arg0 they :arg1-of ( plan :time ( end :arg1 ( world :poss-of party )  )  :time of )  )
say :arg0 ( person :arg0-of ( have-rel-role :arg1 ( person :arg0-of study :arg1-of ( communicate :arg0 year )  :mod old )  :arg2 friend )  :arg2-of ( call :arg0 i :arg1 ( laugh :arg0 we :arg1 together :arg1-of ( possible :arg1-of ( cause :arg0 maybe )  )  :arg2 20 )  )  :mod some )  :arg1 samira :arg2 ( car-make :name ( name :op1 ford )  :wiki ford_motor_company )
