meet :arg0 ( country :name ( name :op1 india )  :wiki india )  :location ( city :name ( name :op1 tokyo )  :wiki tokyo )  :op2-of ( and :op1 ( person :arg0-of ( have-org-role :arg1 ( country :name ( name :op1 japan )  :wiki japan )  :arg2 ( minister :mod prime )  )  )  )
and :arg2-of ( discuss :arg0 ( country :mod-of ( counterpart :wiki abdel_rahman_shalgham )  :name ( name :op1 japan )  :wiki japan )  :arg1 economy :arg1-of ( win :arg0 since :arg2 ( elect :arg1 first :time ( date-entity :month 5 )  )  )  :arg1-of ( tie :arg0 ( he :arg0-of ( meet :arg1 ( person :arg0-of ( have-org-role :arg1 ( country :name ( name :op1 india )  :wiki india )  :arg2 ( minister :mod prime :mod new )  )  :arg0-of ( visit :arg1 foreign )  :name ( name :op1 shinzo :op2 abe )  :wiki shinz≈ç_abe )  )  )  )  :arg1-of major :location ( city :name ( name :op1 tokyo )  :wiki tokyo )  )  :op1 security
modi :op2-of ( name :name-of ( thing :arg0-of ( strengthen :arg1 ( tie :arg1 economy :arg2 ( economy :mod ( large :compared-to world :degree most )  )  )  :purpose-of ( trip :arg1 ( country :name ( name :op1 japan )  :wiki japan )  :duration ( temporal-quantity :quant 5 :unit day )  )  )  )  :op1 mr )
great :mod-of ( operation :arg1-of ( plan :arg1-of ( high :arg2 agenda )  )  :mod nucleus )
hope :arg0 ( country :name ( name :op1 india )  :wiki india )  :arg1 ( deal :arg1 ( collaborate :arg1 ( nation :quant 2 )  :arg2-of defend )  )  :arg1-of report :mod also
arrest :arg1 ( police :mod ( country :name ( name :op1 karratha )  )  )  :domain-of year :domain-of 20 :domain-of ( old :time ( after :op1 ( chase :arg1 ( motorcycle :arg1 ( speed :arg1-of high )  )  )  )  )
seize :arg1 motorcycle :time ( after :op1 ( ride :arg1 ( h :mod slash )  :op1-of ( and :op2 ( escape :arg1 police :arg4 ( zone :mod slash )  )  :op3 ( country :name ( name :op1 pilbara )  )  )  )  )
h :arg1-of ( reach :arg1-of ( spot :arg0 they )  :arg1-of ( motorcycle :arg1-of ( pull-out :arg1-of ( try :arg0 ( police :arg1-of ( patrol :location ( country :name ( name :op1 karratha )  )  :time-of traffic )  )  :time ( morning :mod this )  )  )  :mod blue )  :condition ( pull :arg2 ( station :location ( country :name ( name :op1 bathgate :op2 road )  )  :mod service )  )  )  :mod slash
say :arg0 police :arg1 ( fail :arg1 rid :arg2 stop :op1-of ( and :op2 ( continue :arg2 ( country :name ( name :op1 burgess :op2 road )  )  :time ( before :op1 ( turn :arg1 ( person :arg0-of ( have-org-role :arg2 officer )  :arg0-of ( lose :arg1 sight :arg1-of cause )  )  :arg2 bushland )  )  )  )  :time then )
spot :arg1 ( and :op1 ( motorcycle :arg1 ( organization :name ( name :op1 walcott :op2 way )  )  )  :op2 ( person :arg1-of ( match :arg2 ( thing :arg2-of ( describe :arg1 rid )  )  )  )  )  :location ( house :location ( country :name ( name :op1 bulgarra )  )  )  :time then
and :arg1-of ( fail :arg2-of ( charge :arg0 ( police :mod ( country :name ( name :op1 karratha )  )  )  :arg1 ( man :age ( temporal-quantity :quant 20 :unit year )  :mod old )  )  :arg2 stop )  :op1 ( stop :arg1 drive )  :op2 reckless
appear :arg0 ( he :poss-of 23 )  :arg1 ( organization :location 9 :name ( name :op1 karratha :op2 magistrates :op3 court )  )
seize :op1-of ( and :op2 ( impound :arg1 ( motorcycle :arg1 ( temporal-quantity :quant 3 :unit month )  )  )  )
accuse :arg0 ( person :name ( name :op1 george :op2 webster )  )  :arg2 ( and :op1 ( country :name ( name :op1 nairn )  )  :op2 ( rape :arg0 ( country :mod-of hotel :name ( name :op1 pitlochry )  )  )  )
hotel :quant ( 2 :time-of ( accuse :arg0 ( man :arg0-of stand )  :arg1 trial :arg2 ( rape :arg1 woman )  )  )
face :arg0 ( person :arg0-of ( hear :arg1 ( government-organization :location ( city :name ( name :op1 glasgow )  :wiki glasgow )  :name ( name :op1 high :op2 court )  :wiki - )  :arg2 28 )  :name ( name :op1 george :op2 webster )  )  :arg1 charge
hotel :mod ( country :arg1-of ( allege :arg0 ( he :arg0-of ( rape :arg1 woman :time ( date-entity :day 7 :month 6 :year 2013 )  )  )  )  :name ( name :op1 scotland )  :wiki scotland )
and :arg1-of ( give :arg0 ( she :arg0-of attack :arg0-of ( claim :arg1 it )  )  :arg1-of ( consent :arg0 while )  )  :arg1-of ( capable :arg0 ( she :poss-of ( conscious :polarity - )  )  :polarity - )  :op1 asleep
charge :arg1 ( person :arg0-of ( rape :arg1 ( woman :location ( organization :name ( name :op1 golf :op2 view :op3 hotel )  )  :location ( country :name ( name :op1 nairn )  )  )  )  :name ( name :op1 webster )  )  :arg2 ( date-entity :day 4 :month 5 :year 2014 )  :mod then
trial :mod-of ( date :domain ( person :name ( name :op1 lady :op2 rae )  )  :time ( date-entity :arg3-of ( judge :arg0 ( government-organization :location ( city :name ( name :op1 edinburgh )  :wiki edinburgh )  :name ( name :op1 high :op2 court )  :wiki - )  :arg2 17 )  :month 11 )  )
be :arg0 ( ideal :mod ( thing :name ( name :op1 very :op2 american )  )  )  :arg1 ( right :mod human :mod ( right :mod labor )  :mod that )
propose :arg0 ( and :op1 ( person :name ( name :op1 john :op2 lewis )  )  )  :arg1 legislation :purpose ( protect :arg0 ( person :name ( name :op1 keith :op2 ellison )  )  :arg1 ( union :arg1-of ( organize :arg0 ( thing :name ( name :op1 congressmen )  )  :arg2 ( right :mod civil )  )  )  )
say :arg0 ( class :mod-of ( job :arg4-of ( go :arg0-of ( cause :arg1 middle )  :arg1 union )  )  )  :arg1 ellison :arg2 ( serve :arg0 ( state :name ( name :op1 minnesota )  :wiki minnesota )  :arg1 amr-unknown :arg2 ( government-organization :arg0-of ( progressive :arg1 caucus :arg2 chair )  :name ( name :op1 congress )  :wiki united_states_congress )  :time democratic_party_[united_states] )
introduce :arg0 ( i :arg1-of why )  :arg1 employee :arg3 ( proud :domain that )  :condition ( act :arg0 ( person :arg1-of icon :domain-of lewi :domain-of civil :mod right :name ( name :op1 john )  :wiki - )  :arg1 empowerment )
give :arg0 ( legislation :arg0-of ( stop :arg1 ( force :arg1-of ( union :arg1-of oppose )  :location track )  )  :mod ( break :arg1 ground )  :mod this )  :arg1 ( option :arg1-of same :arg1-of legal )  :arg2 ( person :arg0-of ( discriminate :arg1 ( union :arg0 ( form :mod other )  :arg0-of discriminate :arg1-of organize )  )  :arg0-of work )
and :arg1-of ( collect :op1-of ( and :arg1-of ( engage :arg1-of ( discriminate :arg1-of ( face :arg0 ( person :arg0-of work :arg1-of ( allow :purpose-of ( amend :arg1 ( organization :name ( name :op1 national :op2 labor :op3 relations :op4 act )  )  )  )  :op1-of ( and :op2 sound :op3 initiative )  )  )  )  :arg2 ( union :arg0-of ( sue :arg1 ( court :mod civil )  :arg1-of organize :arg2 justice )  )  )  )  )  :op1 punitive :op2 damage
contrast :arg0 standard :arg1 ( initiative :mod radical :polarity - )  :arg2 certain
and :arg0-of ( propose :arg1 idea :arg1-of ( understand :manner ( way :mod ( good :degree most :mod very )  :mod indeed )  )  :arg2 reconnection )  :op1 ( person :name ( name :op1 ellison )  )  :op2 ( person :name ( name :op1 lewis )  )  :op3 ( cosponsor :poss legislation )
encourage :arg0 ( person :arg0-of ( embrace :arg1 ( right :arg1-of extend :mod labor )  :op1-of ( and :op2 ( respect :arg1 right )  :op4-of ( and :op1 ( state :name ( name :op1 wisconsin )  :wiki wisconsin )  :op2 ( country :name ( name :op1 michigan )  )  :op3 state )  )  )  :mod ( country :name ( name :op1 america )  :wiki united_states )  :mod ( country :op1-of across )  )  :arg1 ( temporal-quantity :time recent :unit year )  :arg1-of ( take :arg0 union :arg1-of ( batter :op1-of despite )  )  :arg2 ( country :location ( around :op1 world )  )  :time once
speech :arg3-of ( free :arg1 ( and :arg0-of ( live :mod-of ( memory :mod million )  )  :op1 ( free :arg1 press )  :op2 ( right :arg1 ( person :mod ( country :name ( name :op1 america )  :wiki united_states )  )  :arg2 ( organize :arg0 ( country :arg0-of ( champion :arg1 democracy )  :mod this )  :arg1 ( breathe :arg1 time :arg1-of same )  )  )  )  )
encourage :arg0 ( country :arg0-of ( occupy :arg1 ( country :name ( name :op1 japan )  :wiki japan )  )  :name ( name :op1 united :op2 states )  :wiki united_states )  :arg1 ( person :arg0-of ( have-org-role :arg2 aide )  :arg0-of ( assure :arg1 democracy :arg2 ( design :arg0 general :arg1 constitution :arg2-of ( replace :arg1 autocracy )  )  )  :arg1-of ( adopt :arg0 country :arg2 ( war :name ( name :op1 world :op2 war :op3 ii )  :wiki world_war_ii )  )  )  :arg2 ( and :time after )
recognize :arg0 ( country :name ( name :op1 japan )  :wiki japan )  :arg1 ( right :arg1 ( person :arg0-of work :arg1-of of :op1-of ( and :arg1-of organize :arg1-of ( include :arg0 they :arg2 ( shape :arg1 new :arg1-of play :mod-of language :op2-of ( and :op1 ( person :arg0-of ( work :arg1 ( union :arg1 role )  )  )  )  )  )  :op2 ( and :arg1-of guarantee :arg1-of bargain :op1 ( act :arg1 collective )  )  )  )  )  :arg1-of explicit
urge :arg1 ( person :arg0-of ( write :arg1 ( and :arg2-of ( assure :arg0 ( person :mod general :name ( name :op1 david )  :wiki - )  :arg1 constitution )  :time ( after :time-of ( war :name ( name :op1 world :op2 war :op3 ii )  :wiki world_war_ii )  )  )  :arg2 ( country :name ( name :op1 germany )  :wiki germany )  )  :arg0-of ( have-org-role :arg1 ( country :arg1-of ( occupy :arg0 ( country :name ( name :op1 united :op2 states )  :wiki united_states )  )  :name ( name :op1 germany )  :wiki germany )  :arg2 aide )  )  :arg2 ( person :arg0-of ( replace :arg1 fascism :arg2 ( person :name ( name :op1 hitler )  :wiki adolf_hitler )  :purpose ( muscular :mod-of democracy )  )  :name ( name :op1 eisenhower )  :wiki dwight_d._eisenhower )
recognize :arg1 ( need :arg0 ( country :name ( name :op1 germany )  :wiki germany )  :arg1 ( and :arg1-of organize :op1 ( hear :arg0 ( nation :mod new )  :arg1 voice )  )  :arg1-of ( work :arg0 ( person :arg2-of ( include :arg1 ( and :arg1-of safeguard :arg2-of ( right :arg1 association :arg1-of ( declare :arg1-of ( explicit :arg1-of provision )  )  :arg1-of mean )  :op1 form :op2 ( improve :arg1 ( and :op1 ( work :arg1 economy )  :op2 condition )  :op1-of ( and :arg1-of ( guarantee :arg2 every )  :op2 individual :op3 every :op4 ( occupy :arg1 ( or :op1 profession )  )  )  )  )  )  )  )  )
seek :arg0 ( agreement :arg0-of ( void :arg1 ( measure :arg1 this :arg1-of ( direct :arg2 ( end :mod this )  )  :domain-of unlawful :op1-of and )  )  :arg0-of restrict :arg1-of ( null :op1-of and )  )  :arg1 ( impair :arg1 right )  :op1-of or
chair :arg0 ( person :arg1-of ( adopt :arg0 ( organization :arg0-of ( include :arg1 ( and :arg2-of ( right :arg0 everyone :arg1 ( person :name ( name :op1 roosevelt )  :wiki franklin_d._roosevelt )  )  )  :arg2 ( person :arg0-of ( join :arg1 interest :arg2 ( and :arg1-of ( protect :arg2 union )  )  :arg2-of ( trade :arg0 form )  )  :arg0-of ( draft :arg2 covenant )  :arg2-of ( guarantee :arg0 ( organization :name ( name :op1 united :op2 nations )  :wiki united_nations )  :arg1 globe )  )  )  :name ( name :op1 when )  )  :time ( date-entity :year 1948 )  )  :arg2-of ( draft :arg0 ( organization :name ( name :op1 when )  )  )  :name ( name :op1 roosevelt )  :wiki franklin_d._roosevelt )  :arg2 former
accept :arg0 ( person :mod ( country :name ( name :op1 america )  :wiki united_states )  )  :arg1 ( premise :arg1 ( labor :mod-of ( right :domain-of ( right :mod human )  )  )  :mod basic )  :purpose generation
equal :arg1 ( partner :arg2 ( and :op1 corporation )  :prep-as-of ( engage :arg1 ( union :arg1 trade )  :arg2 ( bargain :mod collective )  :op2-of ( and :op1 ( organize :arg0 ( country :mod-of ( person :arg1-of ( explain :arg0 ( country :arg0-of ( counsel :arg1 ( country :arg1-of ( govern :arg0 ( government-organization :source-of agency )  )  :mod other )  :arg2 ( forge :arg1 society :op1-of ( and :op2 civil :op3 democracy )  )  )  :mod this )  )  )  :name ( name :op1 america )  :wiki united_states )  :arg1 ( union :arg1 trade )  :arg2-of ( right :arg0-of protect )  )  )  )  )
and :op1 ( hear :arg1 ( voice :op2-of ( and :arg2-of ( right :arg1 person :arg1-of ( recommit :arg0 right :arg2 ideal :domain-of ( wise :mod indeed )  )  )  :op1 ( organize :arg1 ( work :arg0 ( country :location-of assault :name ( name :op1 america )  :wiki united_states )  :arg1 now )  )  )  )  )  :op2 free :op3 ( society :arg1-of open )
say :arg0 ( jr. :mod ( person :mod ( reverend :mod-of ( temporal-quantity :unit year )  :poss fifty )  :name ( name :op1 martin :op2 luther :op3 king )  )  )
teach :arg1 history :mod great
contrast :arg1 ( diminish :arg0 ( movement :arg1 labor :arg3 - )  :arg1 ( strength :poss nation )  )  :arg2 ( enlarge :arg0 ( everyone :arg0-of ( know :time now )  )  )
and :op1 ( create :arg1 ( market :purpose ( industry :arg0-of ( produce :mod-of level )  )  )  :manner ( raise :arg1 ( standard :mod live :mod million )  )  )  :op2 ( lift :arg0 ( miraculous :mod labor )  :arg1 ( nation :mod whole )  :arg2 undream )
contrast :arg1 ( forget :arg1 ( truth :arg1-of simple :mod this )  )  :arg2 ( remember :arg0 ( labor :arg1-of ( attack :arg0 that )  )  :arg1 history )
remember :arg0 we :arg1 history :arg1-of recommend
and :op1 ( extend :arg1 ( prevent :arg0 ( protect :arg1 ( right :mod civil )  )  :arg1 ( discriminate :arg1 ( organize :arg1 labor )  )  )  )  :poss-of ( right :arg1-of ( recognize :mod formal )  :mod ( labor :arg0-of ( long :arg1 overdue )  )  :mod ( human :mod-of right )  )
and :op1 ( enlarge :arg0 ( ideal :arg1-of ( renew :arg0 ( and :op1 ( person :name ( name :op1 keith :op2 ellison )  )  :op2 ( person :name ( name :op1 john :op2 lewis )  )  )  )  )  :arg1 ( country :name ( name :op1 america )  :wiki united_states )  :mod historical )  :op2 ( promise :arg1 democracy :time real )
block :arg0 judge :arg1 ( law :arg0-of ( close :arg1 ( clinic :mod ( abort :arg1 ( country :name ( name :op1 louisiana )  )  )  :mod all )  :arg1-of possible )  )  :duration temporary
say :arg1 ( advocate :arg0 federal :arg1 ( close :arg0 ( law :arg1-of enforce :arg1-of ( block :arg0 5 :duration temporary )  :topic ( country :name ( name :op1 louisiana )  )  )  :arg1 ( clinic :arg1-of abort :location state :mod all )  :arg1-of likely )  :arg2-of ( judge :arg0 ( country :name ( name :op1 u.s. )  :wiki united_states )  :arg1 sunday )  )
and :arg1-of ( sign :arg0 ( person :name ( name :op1 bobby :op2 jindal )  )  :arg2 law :time ( date-entity :month 6 )  )  :op1 measure :op2 ( take :arg0 ( person :arg0-of ( have-org-role :arg1 ( country :name ( name :op1 louisiana )  )  :arg2 governor )  )  :arg1 ( effect :arg1 1 )  :time ( date-entity :month 9 )  )  :op3 ( doctor :arg0-of ( perform :arg1 abortion :arg1-of require )  )  :op4 ( person :arg0-of ( admit :arg1 privilege )  :arg0-of ( have-rel-role :arg2 patient )  )  :op5 hospital :op6 ( 30 :quant-of ( distance-quantity :unit mile )  )  :op7 practice
mean :arg1 ( continue :arg0 time :arg1 abortion :arg1-of ( perform :arg0 doctor :arg1-of legal )  :arg1-of possible :arg1-of ( rule :arg0 judge )  :arg1-of ( seek :arg0 while :arg2 ( privilege :mod such )  )  )
write :arg0 ( person :arg0-of ( decide :arg1 ( continue :arg0 while :arg1 ( effort :arg0-of ( obtain :arg1 privilege )  )  :arg1-of ( operate :arg0 plaintiff :arg2 lawfully )  :arg1-of allow )  )  :arg1-of ( judge :arg0 federal )  :name ( name :op1 &quot; )  )
schedule :arg1 ( hear :arg1-of ( judge :arg0 ( temporal-quantity :unit month )  )  )  :purpose ( rule :arg1 law :mod ( permanent :degree more )  )
say :arg0 ( decide :arg1 ( late :degree most )  :arg1-of ( applaud :arg0 ( activist :mod right :mod abortion )  :arg1-of ( measure :arg1-of resemble :prep-against-of ( ruling :quant string )  )  )  )  :arg1 ( give :arg1 ( time :purpose ( seek :arg1 privilege :arg2 hospital )  :quant more )  :arg2 doctor )
say :arg0 ( and :op1 ( woman :arg2-of ( ensure :arg0 today :arg1 louisiana :arg1-of ( rule :arg0 ' )  )  )  :op2 safe :op3 ( seek :arg0 underhand :arg1 of :arg2 ( strip :arg0 law :arg1 they )  :mod that )  :op4 health :op5 right )  :arg1 ( and :arg0-of ( have-org-role :arg1 ( center :arg0-of ( block :arg1 law :arg2 3 :mod right )  :arg0-of ( sue :arg1 ( 5 :op1-of clinic )  :arg2 behalf )  )  :arg2 chief )  :op1 northup :op2 ( president :arg2-of ( have-org-role :arg0 nancy :arg1 state )  )  :op3 executive )
and :op1 ( apply :arg0 rule :arg1 ( clinic :quant 2 )  :arg1-of ( clear :arg0 it :polarity - :time immediate )  :arg2 doctor )  :op2 ( suit :topic-of ( plaintiff :polarity - )  )  :op3 ( apply :arg1 ( admit :arg1 privilege )  :mod also )
and :arg1-of ( measure :arg0 ( country :name ( name :op1 louisiana )  )  :arg1-of ( rule :arg0 court :time recent )  :mod such :mod ( constitution :polarity - )  )  :op1 ( country :mod-of ( law :arg1-of resemble :arg2-of ( pass :arg1 ( state :quant 11 )  )  )  :name ( name :op1 alabama )  )  :op2 ( country :name ( name :op1 mississippi )  )
shutter :arg0 ( clinic :arg1-of ( remain :location ( state :arg0-of ( judge :arg0-of ( block :arg1 ( part :arg2-of ( key :arg1 federal )  :part-of ( law :topic ( state :name ( name :op1 texas )  :wiki texas )  )  )  :location friday )  )  )  )  )  :arg1 most
say :arg0 doctor :arg1 ( admit :arg0 ( person :arg0-of ( campaign :arg1 ( right :poss abortion )  )  )  :arg1 ( impose :arg0 along :arg1 ( thing :arg1-of ( require :arg0 ( law :mod privilege )  )  :mod ( unnecessary :mod medical )  )  )  )  :op2-of ( and :consist college :op1 ( organization :name ( name :op1 american :op2 medical :op3 association )  :op2-of ( and :op1 gynecologist )  )  )
shutter :arg1 ( effect :arg1-of ( aim :arg1-of ( protect :mod-of ( health :mod woman :mod though :mod some )  )  :arg1-of ( abort :arg1-of oppose )  :arg1-of counter :arg1-of advocate :arg1-of ( measure :mod that )  )  :arg1-of ( laud :mod also )  :op1-of of )  :op1-of clinic
say :arg0 ( organization :name ( name :op1 center :op2 for :op3 reproductive :op4 rights )  )  :arg1 ( privilege :arg1-of ( admit :arg0 hospital )  )  :manner ( perform :arg0 ( doctor :mod only )  :arg1 ( abortion :location ( country :name ( name :op1 louisiana )  )  )  )
say :arg0 ( group :arg0-of ( carry :arg1 procedure :arg1-of ( stop :arg0 ( doctor :arg1-of ( fear :arg2 safe )  :mod that )  :condition ( stop :arg1 ( perform :arg0 state :arg1 abortion )  :arg2-of ( force :arg1 ( doctor :mod other :quant all )  )  )  )  )  )
say :arg0 ( person :arg0-of ( argue :arg1 rule )  :arg0-of ( have-org-role :arg1 ( country :name ( name :op1 louisiana )  )  :arg2 official )  )  :arg1 ( punish :arg0 they :arg1 ( doctor :arg0-of ( pend :arg1 ( application :arg0-of ( admit :arg1 privilege )  )  )  :arg0-of ( perform :arg1 abortion )  )  :polarity - )
mean :arg0 ( and :op1 ( access :arg1 treat :domain-of ( ability :polarity - )  :manner ( good :degree most )  )  )  :arg1 ( diagnosi :arg1-of delay )  :arg2 ( kill :arg0 ( cancer :mod ovarian )  :arg1 ( area :mod rural )  :degree more )
cancer :mod ( thing :name ( name :op1 ovarian )  :op2-of ( and :op1 ( person :arg0-of ( have-rel-role :arg1 ( person :arg0-of ( post :arg1 ( tribute :beneficiary ( person :arg0-of ( have-rel-role :arg2 mother )  :arg1-of ( die :time ( date-entity :year 2007 )  )  :mod late )  :mod video )  )  :name ( name :op1 angelina :op2 jolie )  )  :arg2 brother )  :name ( name :op1 james )  )  )  )
cancer :mod ( ovarian :arg1-of ( risk :arg0 ( woman :arg1-of ( live :location ( country :mod rural :name ( name :op1 australia )  :wiki australia )  )  )  :arg1-of high :arg2 die :poss-of counterpart :poss-of city )  )
diagnosi :op1-of ( after :time-of ( live :arg0 ( woman :arg1-of ( diagnose :arg0 just :arg2 ( cancer :mod ovarian )  :time ( date-entity :year 2005 )  )  :mod ( country :name ( name :op1 australia )  :wiki australia )  :poss-of ( record :mod medicine )  :quant 1100 :quant more )  :arg1 ( monetary-quantity :unit cent )  :arg1-of ( find :arg0 researcher )  :duration ( temporal-quantity :quant 5 :quant 35 :unit year )  )  )
say :arg0 ( country :arg0-of lead :name ( name :op1 jordan )  :part-of ( organization :arg1-of ( research :arg0 about :op1-of ( and :arg1-of ( live :arg0 ( monetary-quantity :unit cent )  :location area )  :op2 remote :poss state )  )  :name ( name :op1 qimr :op2 berghofer :op3 medical :op4 research :op5 institute )  )  :wiki jordan )  :arg1 ( likely :arg1 ( die :arg1 20 :time ( study :arg0 region :arg1 ( area :mod urban )  )  )  :degree more )
possible :arg0 ( ovarian :mod-of cancer )  :arg1 ( slow :arg0 ( drug :mod new :name lung )  :arg1 ( study :arg1 small )  )
journey :arg0 ( person :arg0-of ( research :arg1 medicine )  :arg0-of ( track :arg1 woman )  )  :arg1 ( across :mod-of ( temporal-quantity :quant 7 :unit year )  )
say :arg0 ( country :name ( name :op1 jordan )  :wiki jordan )  :arg1 ( and :arg1-of exist :op1 ( cancer :mod ovarian )  :op2 illness :op3 ( survive :arg1-of chance :arg2-of ( impact :arg0 age :arg1 economy :mod also :mod status :mod type )  )  )  :time ( time :mod woman :mod-of of :mod-of diagnosi )
cancer :arg1-of ( advanced :degree more :op2-of ( and :op1 ( woman :mod old )  :poss-of ( rate :mod ( survive :arg2 diagnosi )  )  )  :time ( time :mod ( poor :degree most )  )  )
likely :arg0 about :arg1 ( die :arg0 region :arg1 20 :time ( study :arg2 ( monetary-quantity :unit cent )  )  )  :degree more :op4-of ( and :op1 ( live :arg1 ( urban :mod-of area )  :mod that )  :op2 remote :op3 area :poss state )
cancer :mod ( ovarian :purpose-of ( suggest :arg0 ( country :arg1-of ( determine :arg3-of ( design :arg1 study :polarity - )  )  :name ( name :op1 jordan )  :wiki jordan )  :arg1 ( possible :arg1 ( live :arg1 ( woman :arg1-of ( die :arg1-of ( likely :degree more )  )  )  :location ( outside :op1 city )  )  )  :op1-of ( and :arg0-of ( access :arg1 treat :manner ( good :degree most )  )  :domain-of factor :op2 diagnosi :op3 ( ability :arg1-of delay :polarity - )  )  )  )
say :arg0 ( she :arg1-of ( base :arg0 they :location ( city :arg1-of ( major :arg0 most )  )  )  )  :arg1 ( and :op1 ( good :degree most :domain this )  :op2 ( treat :arg0 disease :arg1 by :arg2 gynaecological )  :op3 oncology :op4 surgeon )
and :op1 home :op2 program :op3 ( support :arg0 ( person :arg0-of ( help :arg1-of possible )  :arg0-of specialize :arg0-of ( treat :arg1 close :arg1-of ( allow :arg0 ( service :arg0-of ( improve :arg1 ( service :arg0-of ( lessen :arg1 tyranny )  :mod medicine )  :op1-of despite )  :arg1-of ( fly :arg2-of ( suggest :arg0 ( she :arg0-of distance )  )  :degree more )  :mod fly )  )  :arg2 woman )  )  :arg1 ( person :arg1-of ( treat :location community )  )  :direction away )
say :arg0 ( country :name ( name :op1 jordan )  :wiki jordan )  :arg1 ( find :arg0 ( study :arg1-of ( regard :arg2 ( status :mod geographical )  :polarity - )  )  :arg1 ( survive :arg0 woman :arg0-of ( reinforce :arg1 ( need :op1-of ( and :op2 ( treat :mod ( good :mod-of ( strategy :purpose prevent )  )  )  )  )  )  :arg1 ( ovarian :mod-of cancer )  :arg1-of long :domain-of poor )  )
cancer :arg1-of ( conquer :arg0 ( organization :arg0-of ( fund :arg1 ( research :arg1-of ( publish :arg0 ( organization :name ( name :op1 medical :op2 journal :op3 of :op4 australia )  )  :time today )  )  )  :name ( name :op1 rio :op2 tinto :op3 ride )  )  )
tell :arg1 she :arg2 ( person :arg1-of ( have-rel-role :arg0 ( person :mod ( country :arg2-of ( age :arg1 ( date-entity :year 2012 )  :duration ( temporal-quantity :unit year )  )  :name ( name :op1 gold :op2 coast )  )  :mod young )  :arg2 mum )  :domain-of ( form :mod aggressive :mod-of ( cancer :mod ovarian :mod-of 33 )  )  :name ( name :op1 elisha :op2 neave )  )  :time ( date-entity :month 3 )
rue :arg0 ( centre :mod ( country :name ( name :op1 garden )  )  )  :arg1 ( fall :prep-in homeowner )
say :arg0 ( person :arg0-of reach :arg0-of ( consume :arg1 ( today :quant-of ( temporal-quantity :unit year )  )  )  :mod young )  :arg1 ( study :arg1-of ( report :arg0 ( newspaper :name ( name :op1 the :op2 financial :op3 times )  :wiki financial_times )  :arg2 ( lose :arg0 centre :arg1 ten :arg2-of ( age :arg0 homeowner :arg1 35 :op1-of under )  :arg2-of ( decline :arg0 particular :arg1 ( number :arg1-of couple :arg1-of drop :mod-of of )  )  :arg2-of ( result :arg1 garden :arg1-of possible )  )  )  :arg1-of ( garden :arg0 core )  :arg2-of ( age :arg1 group )  )
say :arg0 report :arg1 ( spend :arg0 ( person :arg0-of ( rent :arg1 property )  )  :arg1 ( average :arg1 ( amount :arg1-of ( spend :arg0 55 :location ( garden :poss home )  )  )  :arg2 ( monetary-quantity :unit cent )  )  )
factor :arg1-of ( threaten :arg0 ( other :mod-of industry )  :arg1-of size :op5-of ( and :op1 ( person :arg0-of ( cite :arg1 it )  :arg0-of ( live :arg1 garden :arg1-of ( rise :arg2 high )  )  :arg0-of ( urbanize :arg1 area )  )  :op2 ( park :arg0 ( front :arg1-of ( pave :arg0 popularity )  )  :arg1 garden :polarity - )  :op3 ( shrink :arg0 ( each :arg0-of ( estimate :arg1 ( worth :domain 5 )  )  :mod-of year )  )  :op4 garden )  )
garden :arg0 ( country :mod-of ( low :arg0 ( city :arg2-of ( fall :arg0 ( ownership :mod home )  :arg1 ( monetary-quantity :quant 61 :unit cent )  )  :location-of great :name ( name :op1 london )  :wiki london )  :arg1 household :arg2 spend :degree most :mod ( 6 :quant-of ( monetary-quantity :quant 43 :unit cent )  :quant-of ( temporal-quantity :unit year )  )  )  :name ( name :op1 britain )  :wiki united_kingdom )  :arg1 product
say :arg0 ( and :op1 ( organization :name ( name :op1 hta )  )  :op2 ( organization :name ( name :op1 royal :op2 horticultural :op3 society )  )  )  :arg1 ( mean :arg1 ( rent :arg0 person :arg1 ( property :op1-of ( or :op2 ( lack :arg1 ( space :source garden )  )  )  )  )  :arg2 ( possible :arg1 ( grow :arg1 plant )  :polarity - )  :polarity - )
say :arg0 ( person :arg0-of ( have-org-role :arg1 ( organization :arg0-of ( contain :arg1 ( garden :arg1 example )  )  :name ( name :op1 guy )  )  :arg2 chief )  :arg0-of ( advise :arg1 horticultural )  :arg1-of barter )  :arg1 ( move :arg0 renter :arg1 ( popular :mod especially )  :arg1-of possible :arg2 ( person :arg0-of ( relocate :arg1 they :arg2 plant )  )  )
age :arg0 ( gold :arg0-of ( increase :arg1 home :mod of :op1-of ( and :arg1-of result :op2 ownership :op3 economy :op4 ( prosper :arg1 1980 )  :op5 ( mid :mod-of 1990 )  )  :op3-of ( and :op1 ( report :arg1-of identify :time ( date-entity :year 1997 )  )  :op2 ( between :quant-of period )  :time ( date-entity :year 2005 )  )  :time late )  :arg2-of ( retail :arg0 garden :arg1 sector )  )
and :location-of ( condition :arg2-of ( follow :arg1 ( weather :mod good )  )  :mod unfavourable )  :mod ( last :mod-of year )  :op1 ( improve :arg1 ( market :arg1-of ( predict :arg0 it :mod also :time ( year :mod this )  )  )  )  :op2 ( date-entity :month 3 )  :op3 4
continue :arg1 ( and :arg0-of ( lead :arg1 ( movement :arg1 protest )  )  :op1 ( person :arg0-of oppose :mod politics )  :op2 ( person :name ( name :op1 imran :op2 khan )  )  :op3 ( person :arg0-of lead :mod spiritual )  :op4 ( person :name ( name :op1 tahirul :op2 qadri )  )  )  :location ( country :name ( name :op1 pakistan )  :wiki pakistan )
storm :arg0 ( person :arg0-of demonstrate :quant ( around :op1 1000 )  )  :arg1 ( station :arg1-of ( run :arg0 ( government-organization :arg0-of ( govern :arg1 ( city :name ( name :op1 islamabad )  :wiki islamabad )  )  )  )  :mod television )  :location ( city :mod capital )
say :arg0 ( person :arg0-of ( have-org-role :arg1 soldier :arg2 ( minister :mod information )  )  :name ( name :op1 pervaiz :op2 rashid )  )  :arg1 ( possible :arg1 ( force :arg1 ( person :arg0-of protest )  :arg2 back )  :purpose build )
contrast :arg1 ( stop :arg1 broadcast )  :arg2 ( begin :arg0 ( station :mod tv )  :arg1 ( broadcast :arg1 ( temporal-quantity :quant 40 :unit ( minute :quant approximately )  )  )  :mod again )  :time since
attempt :arg0 ( person :arg0-of demonstrate :quant around :quant 3000 )  :arg1 ( reach :arg1 ( residency :mod official )  :arg0 person )  :subevent-of ( have-org-role :arg0 ( person :name ( name :op1 nawaz :op2 sharif )  )  :arg2 ( minister :mod prime )  )  :time ( time :arg1-of same )
clash :arg0 ( they :arg0-of ( arm :arg2 ( and :op1 ( stick :arg1 away )  :op2 stone )  )  )  :arg1 ( approximately :op1 ( distance-quantity :unit kilometer )  )  :arg2 ( service :mod ( security :topic security )  )
use :arg0 police :arg1 ( gas :arg1-of tear )
refuse :arg0 ( he :arg1-of resign )  :arg1 ( person :arg0-of ( demonstrate :arg1 demand )  )
delay :arg1-of conflict :op2-of ( and :op1 ( call :arg0 ( military :name ( name :op1 army )  :wiki united_states_army )  :arg1 ( country :name ( name :op1 pakistan )  :wiki pakistan )  :arg2 ( politics :mod-of solution )  )  :op3 ( resort :arg1 violence )  )
headquarter :arg0 evening :arg1 sunday :arg1-of ( meet :arg1-of ( follow :arg0 ( military :arg0-of ( announce :arg1 ( mean :arg1 ( remain :arg1 ( commit :arg1 ( task :arg1 ( of :arg1 ( ensure :arg0 state :arg1 security )  )  )  )  )  )  )  )  )  )
and :op1 ( play :arg1 ( role :mod important :mod ( country :name ( name :op1 pakistan )  :wiki pakistan )  )  )  :op2 ( take :arg0 military :arg1 power :manner ( force :arg1 several :time past )  )
accuse :arg0 ( person :name ( name :op1 imran :op2 khan )  )  :arg1 ( thing :name ( name :op1 minister :op2 sharif )  )  :arg2 ( rig :arg0 ( politician :arg0-of ( oppose :arg1 place )  )  :arg1 ( elect :arg0 prime :arg1 ( last :mod-of year )  :mod parliament )  )  :time ( date-entity :month 5 )
and :arg1-of ( escalate :arg1-of protest )  :op1 ( call :arg1 ( person :arg0-of follow :arg1-of advance )  :arg1-of reside :arg2 weekend )  :time after
kill :arg1 ( person :quant 3 )
summon :arg0 ( country :name ( name :op1 turkey )  :wiki turkey )  :arg1 ( organization :name ( name :op1 us :op2 diplomat :op3 over :op4 spying :op5 report )  )
and :arg1-of ( spy :arg0 foreign )  :concession-of ( have-org-role :arg0 country :arg1 ( country :name ( name :op1 u.s. )  :wiki united_states )  :arg2 ( diplomat :arg1-of ( summon :arg0 ( ministry :poss ( country :name ( name :op1 turkey )  :wiki turkey )  :poss ( country :name ( name :op1 turkey )  :wiki turkey )  )  )  )  :quant ( most :degree-of senior )  )  :op1 ( clarification :mod report )  :op2 ( country :name ( name :op1 britain )  :wiki united_kingdom )
say :arg0 report :arg1 ( and :arg0-of ( discuss :arg2 monday )  :arg2-of ( charge :arg0 ( country :name ( name :op1 u.s. )  :wiki united_states )  :arg1 d )  :op1 affair :op2 ( country :name ( name :op1 turkey )  :wiki turkey )  :op3 ( person :arg0-of ( have-org-role :arg2 ( minister :mod deputy :mod prime )  )  :arg0-of ( have-org-role :arg2 official )  )  )
say :arg0 ( thing :domain ( and :op1 ( organization :mod ( magazine :wiki time_[magazine] )  :name ( name :op1 der :op2 spiegel )  )  :op2 ( magazine :mod ( country :name ( name :op1 germany )  :wiki germany )  :mod online :wiki time_[magazine] )  )  :name ( name :op1 intercept )  )  :arg1 ( show :arg0 ( document :arg1-of ( provide :arg0 ( person :arg0-of ( analyze :arg1 ( government-organization :mod ( country :name ( name :op1 u.s. )  :wiki united_states )  :name ( name :op1 national :op2 security :op3 agency )  :wiki national_security_agency )  )  :name ( name :op1 edward :op2 snowden )  )  )  )  :arg1 ( target :arg1 ( intelligence :mod ( priority :arg1-of high )  )  :arg2 ( and :op1 ( country :name ( name :op1 u.s. )  :wiki united_states )  :op2 ( service :mod ( intelligence :mod ( country :name ( name :op1 britain )  :wiki united_kingdom )  :mod-of former )  )  )  :domain ( country :name ( name :op1 turkey )  :wiki turkey )  )  )
say :arg0 ( wire :mod ( news :mod ( country :name ( name :op1 turkey )  :wiki turkey )  )  )  :arg1 ( downplay :arg0 ( person :arg0-of ( say :arg1 ( spy :arg0 ( country :arg1-of major :quant all )  :arg1 ( other :mod each )  )  )  :arg0-of ( have-org-role :arg1 ( country :name ( name :op1 turkey )  :wiki turkey )  :arg2 president )  :name ( name :op1 recep :op2 tayyip :op3 erdogan )  )  :arg1 ( important :domain report )  )
respond :arg0 ( government-organization :arg0-of ( govern :arg1 ( country :name ( name :op1 turkey )  :wiki turkey )  )  :arg0-of ( report :arg1 that :time early )  )  :arg1 ( intelligence :arg1-of agency :arg1-of ( target :arg0 ( country :arg0-of ( draw :arg1 ankara )  :name ( name :op1 germany )  :wiki germany )  :mod also )  :mod main )  :degree ( more :degree-of angry )
strike :arg1 ( warn :arg2 ( train :arg1-of ( drive :arg0 ( person :arg0-of ( cause :arg1 ( problem :beneficiary ( person :arg0-of commute )  )  )  :arg0-of strike :arg0-of ( threaten :arg1 strike )  )  )  )  )
possible :arg1 ( impact :arg0 ( strike :arg0 ( person :arg0-of ( drive :arg1 train :location monday )  )  :arg1 evening :arg1-of wane :mod nationwide )  :arg1 ( service :mod passenger )  :arg2 ( product :name ( name :op1 nw30 )  :wiki - )  :mod negative )  :mod also
affect :arg0 ( walkout :arg1-of ( last :arg2 ( temporal-quantity :quant 21 :unit hour )  )  :arg1-of ( announce :arg0 all )  )  :arg1 ( company :mod ( transport :arg1 18 )  )  :op1-of ( and :op1-of and :op2 ( rail :mod ( main :mod-of line )  )  :op3 ( train :mod region )  :op4 ( train :location-of city )  )  :path ( across :op1 ( country :name ( name :op1 germany )  :wiki germany )  )
affect :arg0 ( brunt :mod strike )  :arg1 ( transport :arg1 good )
archive :arg0 ( person :name ( name :op1 a. :op2 burgi )  )  :arg1 image :op1-of slash
say :arg0 ( person :name ( name :op1 sven :op2 schmitte )  )  :arg1 ( announce :arg0 ( chairperson :mod district )  :arg1 ( country :mod-of ( person :arg0-of ( drive :arg1 train )  :arg1-of union :mod ( country :name ( name :op1 germany )  :wiki germany )  )  :name ( name :op1 d√ºsseldorf )  )  )  :location ( organization :name ( name :op1 gdl )  )
expect :arg0 ( we :domain-of ( amount :arg1-of significant :quant-of cancellation )  )  :location there
target :arg0 we :arg1 ( region :mod any )  :polarity -
affect :arg0 ( brunt :mod strike )  :arg1 ( transport :arg1 good )
announce :arg0 ( organization :name ( name :op1 deutsch :op2 bahn )  )  :arg1 ( do :arg0 they :arg1 everything :arg2 ( ensure :arg1 ( keep :arg1 disruption :arg2 minimum )  :arg1-of possible )  :time ( product :name ( name :op1 nw30 )  :wiki - )  )
say :arg0 ( organization :name ( name :op1 gdl )  )  :arg1 ( difficult :domain ( predict :arg1 exact )  )  :polarity - :time ( strike :arg0 they :arg1 consequence )
charge :arg1 ( chief :arg2-of ( have-org-role :arg1 police )  )  :arg2 corrupt
policeman :op3-of ( and :op1 ( present :arg1 claimant :mod-of ( proof :mod-of of )  )  :op2 extortion :op4 ( town :mod-of hall )  :op5 ( person :arg0-of serve :arg1-of ( prosecute :arg0 public )  :mod civil :poss-of ( office :mod-of friday )  )  )
bar :arg0 ( country :name ( name :op1 majorca )  )  :arg1-of ( own :arg0 ( person :arg0-of ( head :arg1 ( police :mod ( country :name ( name :op1 calvi√† )  )  )  :location ( island :mod holiday )  )  :arg1-of ( claim :arg0 corrupt :arg1-of ( file :arg0 ( and :op1 businessman )  )  :arg2-of ( follow :arg1 arrest )  )  :arg2-of ( drink :arg1 ( hotspot :mod notorious :poss ( country :name ( name :op1 magaluf )  )  )  :manner binge )  )  )
remand :arg1 ( claim :arg1 ( several :mod-of businessman )  :arg1-of corrupt :arg1-of ( follow :arg0 custody )  :op1-of against :op1-of ( and :arg1-of ( locate :arg0 street )  :op2 ( of :mod most )  :op3 bar :op4 nightclub )  )  :arg2 ( chief :mod-of inspector )
say :arg0 online :arg1 ( and :op1 ( present :arg1 proof :arg1-of of )  :op2 policeman :op3 ( oppose :arg0 office :arg1 ( corrupt :arg1 ( prosecute :arg1 friday )  )  :arg1-of ( serve :arg0 civil )  )  )
and :arg1-of ( connect :arg2 ( claim :arg0 ( corrupt :arg1 ( language :name ( name :op1 spanish )  :wiki spanish_language )  )  )  )  :op1 ( arrest :arg0 ( guard :arg1 civil )  :arg1 ( person :arg0-of ( have-org-role :arg1 police :arg2 officer )  :arg1-of local :mod other :quant 2 )  )  :op2 ( question :arg0 judge :time ( alongside :op1 ( person :name ( name :op1 navarro )  )  )  )
report :arg1 ( say :arg0 ( person :arg0-of ( own :arg1 night )  :arg1-of disgruntle )  :arg1 ( favouritism :arg0-of ( effect :arg1 ( business :poss authority :poss ( name :op1 abc )  )  :mod serious :op1-of nation :op1-of ( language :name ( name :op1 spanish )  :wiki spanish_language )  )  )  )
tell :arg0 of :arg1 businessman :arg2 court :arg3 1 :condition ( survive :arg0 it :arg2-of ( make :arg0 ( it :op1-of ' )  :arg1 ( money :op1-of anymore )  :mod about :polarity - )  )
livelihood :op1 ( we :arg1-of ( mess-up :arg0 you :polarity - )  )
lose :arg0 we :arg1 nothing
pub :arg1-of ( crawl :arg0 ( country :mod-of ( holidaymak :arg0-of ( perform :arg1 fellatio :arg2 ( headline :mod international :poss ( country :name ( name :op1 magaluf )  )  )  :medium ( man :quant 24 )  )  :arg1-of ( show :arg0 ( video :arg1-of ( result :arg2 ( summer :mod this )  )  :mod ( publication :name ( name :op1 youtube )  :wiki youtube )  :mod viral )  )  :age ( temporal-quantity :quant 18 :unit year )  :mod old )  :name ( name :op1 britain )  :wiki united_kingdom )  )
bar :arg1-of ( crawl :arg0 ( and :arg1-of ( clamp :arg0 ( authority :arg0-of ( minimize :arg1 number )  :mod island )  :arg1-of ( attempt :time since :arg0 authority )  )  :op1 drunk :op2 disorderly :op3 ( behave :arg0 ( reveller :mod ( holiday :mod ( country :name ( name :op1 magaluf )  )  )  )  )  )  :arg1-of ( fuel :arg2 alcohol )  :mod notorious )
bar :arg1 addition :arg1-of ( crawl :arg1-of ( organize :arg0 ( person :op1-of ( and :arg1-of ( fine :manner joint :time-of ( force :arg1 ( club :mod ( thing :name ( name :op1 playhouse )  )  )  :arg2 ( shut-down :arg0 ( incident :mod fellatio )  :arg1 place :duration year )  )  )  :op2 carnage )  )  )  )
see :arg0 ( person :arg0-of ( resort :arg1 of )  :arg0-of ( tour :arg1 young )  :arg2-of ( popular :arg0 ( country :name ( name :op1 britain )  :wiki united_kingdom )  :arg1 holidaymaker :mod main )  )  :arg1 numerous :arg1-of fuel :arg1-of ( craze :manner-of ( know :arg0 balcon :arg1 ( person :arg0-of ( jump :arg1 ( or :mod another :op1 balcony :op2 ( into :mod-of ( hotel :part pool )  )  )  )  :arg1-of ( involve :arg2 alcohol :mod accident )  :quant 1 )  )  )  :mod also
mark :arg0 day :arg1 ( condition :arg0-of ( impact :arg1 ( flight :arg1 ( country :name ( name :op1 adelaide :op2 airport )  )  )  )  :op3-of ( and :op1 wet :op2 ( blustery :domain spring )  )  )
affect :arg0 ( wind :arg1-of strong :op2-of ( and :arg1-of ( bring :arg0 ( spring :arg0-of ( spring-up :arg1 ( surprise :arg3 ( country :name ( name :op1 south :op2 australia )  :part south )  :mod wintry )  )  )  )  :op1 ( shower :mod heavy )  )  )  :arg1 ( flight :location ( country :name ( name :op1 adelaide :op2 airport )  )  )
follow :arg1 ( fall :arg1 ( 5mm :mod further )  :arg2 ( city :arg0-of rain )  :time evening )  :arg2 ( 6mm :arg1-of ( fall :arg4 sunday :time overnight )  )
come :arg0 almost :arg1 ( rain :arg1-of ( dump :arg1-of ( shower :mod short :mod blustery :quant couple :topic ( burst :arg1 just :arg1-of ( start :time before )  )  )  :duration ( about :op1 ( temporal-quantity :quant 10 :unit minute )  )  )  :time ( late :degree most )  )  :arg2 courtesy
drop :arg0 temperature :arg1 ( high :arg1 ( 8c :location city )  )  :arg4 monday :mod again :time ( after :op1 ( deliver :arg0 winter :arg1 ( dose :arg1 just :arg2 spring :time early )  :time ( week :mod last )  )  )
delay :arg1 ( land :arg1 ( flight :arg0 ( organization :name ( name :op1 virgin :op2 airlines )  )  :arg2 ( city :name ( name :op1 melbourne )  :wiki melbourne )  )  :arg2 ( country :name ( name :op1 adelaide )  )  :arg2-of ( contribute :arg0 ( condition :arg1-of believe :mod squally )  )  )
contrast :arg1 ( schedule :arg1 plane :arg2 ( land :time ( after :mod just :op1 30pm )  )  )  :arg2 ( hit :arg1 windshear :op1-of ( and :op2 ( force :arg0 ( change :arg1 ( speed :mod wind :op1-of ( or :op2 direction )  )  :arg2 ( distance :duration short )  :time sudden )  :arg2 pull-out )  )  )
reach :arg0 ( gust :arg1 wind )  :arg1 ( country :name ( name :op1 adelaide :op2 airport )  )  :location ground :time ( time :time-of ( h :mod slash :mod about )  )
show :arg0 ( data :source flight )  :arg1 ( and :op1 ( touch :arg0 ( plane :arg0-of ( pull-out :arg1 ( land :arg1 about )  )  )  :arg2 plane :direction down :time eventual )  :op2 40pm )
cause :arg0 ( and :op1 ( city :arg1-of ( flight :arg0 emirat )  :name ( name :op1 dubai )  :wiki dubai )  :op2 ( flight :arg0 qanta :arg1 ( city :name ( name :op1 sydney )  :wiki sydney )  )  )  :arg1 ( delay :arg1 ( delay :arg0 subsequent :arg1 of :arg1-of ( flight :arg0 other )  :arg1-of few )  :arg1-of ( flight :arg0 that )  )
forecast :arg0 2 :arg1 top :arg2 ( country :arg0-of ( chance :arg1 ( shower :arg1 tuesday :op1-of or )  )  :name ( name :op1 adelaide )  )
think :arg0 ( person :name ( name :op1 matthies )  )  :arg1 ( time :arg1-of high )  :arg3 ( internet :poss thing )
turn :arg1 ( home :poss we )  :arg1-of ( threaten :arg0 ( technology :arg2-of ( advance :arg1 ( thing :name ( name :op1 bernd :op2 matthies )  )  :arg1-of ( face :arg0-of ( take :arg1 ( heart :arg0-of ( report :arg1 we )  :arg1-of ( feel :arg0 he :location home :mod really )  )  :arg2 ( gadget :mod electronic )  )  )  :mod runaway )  :mod ( person :arg0-of consume )  )  )  :arg2 ( room :purpose ( control :arg1 ( tech :arg1-of high )  )  )
mean :arg2 ( wow :mode expressive )  :mode interrogative :op3-of ( and :arg2-of ( connect :arg1 cable :arg1-of ( telephone :arg0 handset )  :arg2-of ( spiral :arg0 ( i :arg0-of ( catch :arg1 eye )  )  )  )  :op1 i :op2 ( think :arg0 ( i :arg0-of ( write :arg1 this )  )  :arg1 amr-unknown )  :op4 retro :op5 then )
contrast :arg1 house :arg2 ( and :arg0-of ( start :arg1 ( think :arg0 i :arg1 there :polarity - )  )  :op1 ( lie :arg0 cable :arg1 ( handset :mod all )  :arg2 ( scatter :arg0 - :arg2 ( time :prep-at all )  :location around )  )  :op2 ( retro :degree ( more :mod even )  :domain that )  )
elephantine :op1 ( interrogative :arg1-of ( case :location elephantine :mod any )  )
wonder :arg0 ( late :degree most :time-of ( rule :arg0 sector :arg2 that :manner basic :polarity - :purpose ( buy :arg1 it :arg2 date :arg2-of ( type :arg0 electronic :arg1 error )  :arg3 electronic :op1-of once :op1-of tomorrow :op1-of rubbish )  :time today )  )  :arg1 of
announce :arg0 mere :arg1 world :arg1-of ( live :arg0 ( they :arg0-of ( interest :arg1 expressive :polarity - )  )  :location ( room :location-of ( tv :mod old )  )  )  :op3-of ( and :example still :op1 anyone :op2 example )
cause :arg1 ( thing :arg1-of think :mod this )  :mode interrogative
cause :arg0 ( show :arg0 ( we :arg0-of ( competent :arg1 person )  :arg1-of ( come :arg4 ( question :arg1 technology )  )  )  :arg1 ( organization :location ( city :name ( name :op1 berlin )  :wiki berlin )  :name ( name :op1 international :op2 consumer :op3 electronics :op4 fair )  )  :mod ( again :mod once )  )  :arg1 ( organization :name ( name :op1 ifa )  )
understand :arg0 ( he :arg0-of ( promise :mod office )  :arg0-of ( talk :time-of ( face :arg0 player :arg1 ( and :op1 ( machine :arg1-of wash :arg1-of ( blind :arg0 ( know :arg0 layman :mod once )  )  :arg1-of ( operate :arg0 amr-unknown )  )  :op2 cd )  :concession ( expert :arg1 array )  :time today :time highfalutin :time of :time about )  )  :poss-of ( purpose :mod gadget )  )  :arg1 ( connect :arg1 amr-unknown :arg2 ( and :op1 ( health :mod wearabl )  :op2 care :op3 technologi :op4 press )  :time home )  :mod even :polarity -
and :mode ( interrogative :mode-of yes )
say :arg0 you :arg1 amr-unknown :arg2 ( person :arg0-of ( talk :arg1 ( guff :mod such )  :arg1-of clear :manner volunteer )  )  :mode interrogative
try :arg0 they :arg1 home :arg2 ( sell :arg0 we :arg1 ( thing :mod internet )  :arg2 ( last :mod-of ( year :unit-of ( temporal-quantity :mod 20 )  )  )  )  :mod really
cause :arg1 ( and :arg0-of ( cause :arg1 ( possible :arg1 yoghurt )  )  :arg1-of ( possible :arg1-of ( alarm :arg0 ( fire :arg1 ( shop :arg1 place :arg1-of list )  )  )  :arg1-of ( tell :arg0 you :arg2 ( you :arg0-of ( fire :arg1 ( study :arg1 home :arg1-of back )  )  :arg1-of ( lie :arg2 beach )  )  )  )  )
and :example it :example - :op1 ( possible :arg1 ( condition :arg0 we :arg1 ( switch :arg0 ( we :arg0-of wonderful )  :arg1 we :example back :time ( before :example office :example interrogative :mod just )  )  :mod ( air :location-of home )  )  )
contrast :arg1 ( yes :arg1-of ( condition :arg0 you :arg2 that :location place :mod air )  )
say :arg0 loud :arg1 ( and :op1 ( come :arg1 ( we :arg0-of ( lift :arg1 ( we :arg0-of ( hoover :arg1 ( begin :arg0 robot :arg1 and :arg2-of ( clean :arg0 vacuum :arg1 home )  )  )  :arg0-of ( vacuum :arg1 voice :arg2 expressive )  )  :arg2 wrist :degree very )  :arg0-of ( dream :arg2 soon )  )  :mod-of ( true :mod really )  )  :op2 watch )
fantastic
contrast :arg1 ( go :arg0 ( you :arg0-of ( tell :arg1 ( amr-unknown :arg1-of ( long :arg2 pizza )  )  :arg1-of possible :arg2 goggles :op4-of ( and :op1 ( send :arg0 ( machine :arg1-of ( connect :arg0 you :arg1-of possible )  :arg1-of ( mutter :mod-of ( industry :mod an :mod insider )  )  :arg1-of ( blur :arg1-of ( become :arg2 ( and :op1 ( mean :arg1 the :arg2 ( revolution :arg0 than :arg1 less :arg2-of ( gear :arg0 nothing :arg1 everything )  )  )  :op2 boundary :op3 between :op4 white :op5 brown :op6 good )  )  )  :arg1-of wash )  :arg1 you :arg1-of possible :arg2 steam :op2-of ( and :op1 headphone )  :polarity oven :polarity your )  :op2 ( and :op1 weather :op2 report )  :op3 data )  )  )  :arg1 ( ' :mod that )  :arg4 oven :mod still )  :arg2 ( use :arg1-of ( cause :arg0 you )  :arg2 of :arg2-of ( sit :arg1 ( person :arg0-of ( jam :arg1 traffic )  )  )  :mod little )
know :arg0 ( we :arg0-of ( work :arg1 ( gadget :arg1-of ( need :arg0 you )  :mod model :mod new )  :manner urgent )  )  :mod also :source ( experience :arg2 ( empty :arg1 battery :manner certain :mod almost )  :mod everyday )
reason :arg1-of ( exhibit :arg1-of ( live :arg0 ( cable :arg1-of spiral :topic ( telephone :arg1 next )  )  :location ( city :name ( name :op1 berlin )  :wiki berlin )  )  )  :mod another
return :arg1 ( thing :name ( name :op1 israeli :op2 children )  )  :arg4 school :time ( after :op1 ( thing :name ( name :op1 gaza :op2 war )  )  )
shutter :arg1 gaza_strip :arg3-of ( remain :arg0 ( war :location ( country :name ( name :op1 israel )  :wiki israel )  :location ( organization :name ( name :op1 hamas )  :wiki hamas )  )  :arg1 ( school :arg1-of ( rain :arg0 ( and :op1 rocket :op2 mortar )  :arg2 community :concession-of ( go :arg0 school :direction back :time ( after :op1 ( spend :arg0 ( thousand :location ( area :arg1-of ( near :arg2 ( country-region :name ( name :op1 gaza :op2 strip )  )  )  )  :mod-of ( child :mod ( country :name ( name :op1 israel )  :wiki israel )  )  )  :arg1 summer :location ( thing :arg2-of ( shelter :arg3 bomb )  )  )  :quant monday )  )  )  )  :arg1-of ( recover :arg0 territory :arg2 ( fight :arg1 ( temporal-quantity :quant 50 :unit day )  )  )  )
contrast :arg0 ( community :arg1-of ( scar :arg0 rocket )  )  :arg1 ( bring :arg0 ( start :arg1 school )  :arg1 ( sense :arg1 ( and :op1 ( joy :location ( country :name ( name :op1 israel )  :part south :wiki israel )  )  :op2 excitement )  )  )  :arg2 ( remain :arg1 ( sign :topic fight )  :arg3 fresh )
mark :arg0 ( rocket :arg0-of ( remove :arg1 ( person :arg0-of ( strike :arg1 kindergarten )  :arg1-of employ )  )  )  :arg1 shrapnel :arg2 ( off :arg1-of ( slide :arg0 wall :op1-of ( and :op2 ahead :op3 ( person :arg0-of ( study :arg1 ( south :location city )  )  :arg1-of arrive )  )  )  )
contrast :arg1 ( we :arg0-of ( excite :arg1 school )  :arg1-of ( scare :arg0 little )  )  :arg2 ( say :arg0 we :arg1 ( and :op1 ( person :arg1-of ( reside :arg0 ( person :name ( name :op1 &quot; )  )  )  )  :op2 of :op3 ( person :arg0-of ( teach :arg1 it :op1-of ( language :name ( name :op1 english )  :wiki english_language )  )  :name ( name :op1 &quot; )  )  )  )
need :arg1 ( go :arg0 ( area :location-of ( child :mod lot )  :poss we )  :arg4 routine :direction back )  :mod really
say :arg0 ( she :poss-of 11 )  :arg1 ( feel :arg0 ( person :arg0-of ( have-rel-role :arg2 daughter )  :domain-of year :mod old :poss-of bart )  :arg1 ( school :mod back )  :mod it :time ( little :mod-of ( bit :mod-of weird )  )  :time sudden )
say :arg0 she :arg1 ( and :op1 ( difficult :domain there :mod some )  :op2 ( do :arg0 ( we :arg0-of ( leave :arg1 we )  )  :arg1 all :arg2 house :polarity - )  )
visit :arg0 ( person :arg0-of ( have-org-role :arg2 president )  :arg0-of ( locate :arg1 ( border :arg2 gaza_strip )  )  :name ( name :op1 reuven :op2 rivlin )  )  :arg1 kibbutz :purpose ( offer :arg1 support )
resemble :arg1 ( community :arg1-of ( reside :arg0 ( person :arg0-of ( escape :arg1 fire :op1-of ( and :arg1-of ( remain :manner indoor :op1-of ( or :op2 ( leave :arg0 thousand :arg1 home :beneficiary area )  :op3 ( away :time-of further )  :time ( halt :arg0 ( cease :arg1 ( fire :arg1 safe )  )  :arg1 war :op1-of until :time ( week :mod last )  )  )  )  :op2 rocket :op3 mortar :purpose-of gaza_strip )  )  )  )  :arg1-of border )
frontier :mod ( gaza_strip :arg2-of ( come :arg0 ( person :arg0-of ( reside :arg1 ( country :name ( name :op1 nahal :op2 oz )  )  )  :quant many )  :arg1 ( boy :arg1-of ( kill :arg0 ( shell :mod ( country :name ( name :op1 palestine )  :wiki state_of_palestine )  :mod mortar )  )  :mod old :mod ( 4 :quant-of ( temporal-quantity :unit year )  )  )  :compared-to-of hesitant :direction back :op1-of community )  )
say :arg0 ( organization :name ( name :op1 education :op2 ministry )  )  :arg1 ( return :arg1 ( family :mod dozen :quant about )  :mod still :polarity - )
place :arg1 child :arg2 ( school :arg1-of alternate )  :duration time
visit :arg0 ( person :arg0-of ( have-org-role :arg1 ( country :arg0-of ( fire :arg1-of ( hit :arg0 ( town :location border :mod gaza_strip )  :arg1-of hard )  )  :name ( name :op1 palestine )  :wiki state_of_palestine )  :arg2 ( minister :mod prime )  )  :name ( name :op1 benjamin :op2 netanyahu )  :wiki benjamin_netanyahu )  :arg1 ( school :location ( country :name ( name :op1 sderot )  )  )
say :arg0 ( he :arg0-of ( urge :arg1 child )  :arg0-of ( study :arg1 we :arg1-of hard :arg1-of ( sure :arg0 ( you :arg0-of ( provide :arg1 ( and :arg1-of ( provide :arg0 you )  :op1 knowledge :op2 security )  )  )  )  )  )  :arg1 and
agree :arg0 ( country :name ( name :op1 israel )  :wiki israel )  :arg1 ( and :op1 ( organization :name ( name :op1 hamas )  :wiki hamas )  )  :arg2 ( truce :arg1-of ( end :arg0 last )  :arg1-of ( open :arg0 tuesday )  )
contrast :arg1 ( issue :arg1-of leave :arg1-of ( resolve :polarity - )  :arg1-of key :arg1-of ( fight :arg1-of end :time-of ( cease :arg0 ( fire :arg0 ( country :name ( name :op1 israel )  :wiki israel )  :arg0-of ( bring :arg1 immediate )  )  )  )  )  :arg2 ( and :arg1-of reopen :arg1-of ( blockade :arg0 ( country :name ( name :op1 egypt )  :wiki egypt )  )  :op1 ( demand :arg0 ( organization :arg0-of ( lift :arg1 of )  :mod such :name ( name :op1 hamas )  :wiki hamas )  :op1-of ( and :op2 gaza_strip :op3 air :op4 seaport )  )  :op2 gaza_strip )
want :arg0 ( country :name ( name :op1 israel )  :wiki israel )  :arg1 ( disarm :arg0 ( organization :name ( name :op1 hamas )  :wiki hamas )  :arg1 ( return :arg1 ( body :arg0-of ( kill :time war )  :poss ( soldier :mod ( country :name ( name :op1 israel )  :wiki israel )  :quant 2 )  )  :op1-of and )  )
expect :arg1 ( begin :arg0 ( round :arg0-of ( talk :arg1-of direct )  :mod new )  :arg1 ( temporal-quantity :location ( country :name ( name :op1 egypt )  :wiki egypt )  :unit ( month :mod this )  )  :time late )
say :arg0 ( thing :arg1-of ( estimate :mod ( country :name ( name :op1 palestine )  :wiki state_of_palestine )  )  :op2-of ( and :op1 ( organization :name ( name :op1 u.n. )  :wiki united_nations )  :op3-of ( and :op1 ( civilian :poss-of 3 :poss-of quarter )  :op2 child )  )  )  :arg1 ( kill :arg0 war :arg1 ( country :name ( name :op1 palestine )  :wiki state_of_palestine )  )  :arg2 more
evidence :arg1 ( back :arg1 ( claim :arg1 half )  )  :arg1-of ( provide :arg0 ( militant :arg1-of ( estimate :arg0 ( country :arg0-of ( dispute :arg1 figure :op1-of ( and :arg1-of kill )  )  :name ( name :op1 israel )  :wiki israel )  )  )  :polarity - )  :mod firm
kill :arg0 ( 6 :quant-of ( civilian :value 66 )  )  :arg1 ( and :op1 soldier :op2 ( country :mod-of ( person :arg0-of work )  :mod-of ( side :mod ( country :name ( name :op1 israel )  :wiki israel )  )  :name ( name :op1 thailand )  :wiki thailand )  )
fire :arg0 ( and :op1 ( organization :arg0-of ( fight :arg1 gaza_strip )  :name ( name :op1 hamas )  :wiki hamas )  :op2 ( militant :mod ( other :mod most )  )  )  :arg1 ( and :op1 rocket :op2 mortar )  :location ( city :location ( country :name ( name :op1 israel )  :part south :wiki israel )  )
carry :arg0 ( military :mod ( country :name ( name :op1 israel )  :wiki israel )  )  :arg1 ( and :op1 airstrik :op2 ( attack :mod other )  :quant more )  :time meanwhile
and :arg0-of ( destroy :arg1 thousand )  :op1 ( damage :arg0 ( attack :arg0 ( country :name ( name :op1 israel )  :wiki israel )  :arg1 100 )  :arg1 ( home :location gaza_strip :mod estimate )  :op1-of ( or :op2 refuge )  )  :op2 ( person :arg0-of ( turn :arg1 ( school :poss ( organization :name ( name :op1 u.n. )  :wiki united_nations )  :quant more )  :arg2 ( thing :arg2-of shelter :mod makeshift )  )  )
delay :arg0 ( person :arg0-of ( have-org-role :arg1 ( educate :arg1 still )  :arg2 official )  :arg1-of ( rage :arg1-of ( fight :arg0 ( week :mod last )  :mod still )  :op2-of ( and :op1 ( thing :arg2-of ( shelter :arg1 ( person :mod-of ( thousand :mod-of ten )  )  )  )  )  )  )  :arg1 ( start :arg1 ( year :mod school )  )
say :arg0 ( we :arg0-of ( educate :arg2 ( child :arg1-of resemble :mod world :mod just :op3-of ( and :op1 ( open :arg0 ( i :arg0-of ( hope :arg1 school :arg2 13 )  )  :arg1 ( stay :arg0 year :arg1 school :arg2 gaza_strip :mod ( boy :mod old )  )  :arg2 ( child :mod ( religious-group :name ( name :op1 jew )  :wiki jews )  )  :op1-of soon )  :op2 ' )  )  )  :arg1-of complete )  :arg1 mohammad :arg2 amara
question :arg1 ( process :arg1 ( ban :arg1 ( organization :name ( name :op1 cdu :op2 vice-chairman :op3 strobl )  )  )  )  :arg1-of ( follow :arg2 ( elect :location ( country :name ( name :op1 saxony )  )  )  )
constitutional :mod-of ( court :location-of ( take :arg1 place :time-of ( process :arg1 ( ban :arg1 saxony )  :arg1-of go :arg1-of ( end :arg2-of ( call :arg0 ( vice :mod-of ( chairman :arg2-of ( have-org-role :arg1 ( country :name ( name :op1 germany )  :wiki germany )  )  )  )  :arg1 ( cdu :arg0-of ( view :arg1 ( loss :arg2-of ( vote :arg0 ( party :mod ( wing :mod right )  :mod ( country :name ( name :op1 germany )  :wiki germany )  :mod extremism )  :arg1 ( thing :name ( name :op1 thomas :op2 strobl )  )  )  )  )  :mod nation )  )  :op1-of federal )  )  )  )
say :arg0 ( organization :name ( name :op1 cdu :op2 national :op3 vice-chairman )  )  :arg1 ( bring :arg1 ( thing :name ( name :op1 thomas :op2 strobl )  )  :arg1-of recommend :arg2 ( end :arg1 ( ban :arg0 ( city :name ( name :op1 berlin )  :wiki berlin )  :arg1 ( process :arg1 federal :mod politics )  :arg1-of ( decide :purpose-of ( take :arg0 ( trial :time current )  :arg1 place :location ( court :mod constitutional :mod ( country :name ( name :op1 germany )  :wiki germany )  )  )  )  )  )  )
say :arg0 ( organization :name ( name :op1 according )  )  :arg1 ( perform :arg0 ( time :mod last )  :arg1 ( bad :arg1 ( say :arg0 also :arg1 ( boss :arg0 ( country :name ( name :op1 according )  )  :arg1 region )  )  )  )
and :location-of ( we :arg0-of ( fight :arg1 ( organization :name ( name :op1 npd )  )  :arg1-of ( recommend :arg0 happy :arg1-of ( think :arg0 ( i :arg1-of ( lead :arg0 ( trend :arg1 ( court :mod constitution )  :mod this )  :op2-of ( and :op1 ( develop :domain that :mod good )  )  )  )  :time ( box :mod ballot )  )  )  :polarity - )  )  :op1 recommend
miss :arg0 ( organization :arg0-of ( see :arg1 ( enter :arg0 sunday :arg1 parliament )  )  :name ( name :op1 npd )  )  :arg1 ( achieve :arg1 ( barrier :mod ( percentage-entity :value 5 )  )  :arg0 organization )  :manner narrowly
fail :arg0 ( person :arg0-of ( inform :arg1 ( thing :beneficiary ( protect :arg1 constitution )  :name ( name :op1 federal :op2 office )  )  )  )  :arg1 ( attempt :arg1 ( secure :arg1 ( ban :arg0 also :arg1 ( party :mod ( wing :mod right )  :mod extremism )  )  )  )  :arg1-of ( cause :arg0 ( echelon :mod top )  )  :time ( date-entity :year 2003 )
ban :arg1 ( action :arg1-of ( submit :arg0 ( organization :name ( name :op1 bundesrat )  )  :arg2 ( court :arg1-of ( base :location ( country :name ( name :op1 karlsruhe )  )  )  :mod constitution )  :medium 12 :time ( after :op1 ( spend :arg0 ( time :arg1-of long )  :arg1 ( prepare :arg1 ( case :arg1 ( date-entity :year 2013 )  )  )  )  )  )  :mod further )
take :arg0 ( and :op1 ( organization :name ( name :op1 bundestag )  )  )  :arg1 ( thing :arg1-of ( submit :arg0 ( government-organization :arg0-of ( govern :arg1 ( country :name ( name :op1 germany )  :wiki germany )  )  )  )  :arg1-of ban )  :polarity -
tent :beneficiary ( refugee :mod new :purpose-of ( country :name ( name :op1 harburg )  )  )
accommodate :arg0 tent :arg1 ( refuge :location ( country :name ( name :op1 neul√§nder :op2 platz )  )  )  :time now
burst :arg0 ( centre-left :beneficiary refugee :location ( country :name ( name :op1 harburg )  )  :mod reception )  :arg1 full
give :arg0 ( organization :mod ( country :name ( name :op1 germany )  :wiki germany )  :name ( name :op1 internal :op2 affairs :op3 authority )  )  :arg1 ahead :arg2 go :purpose ( erect :arg0 ( organization :name ( name :op1 red :op2 cross )  :wiki international_red_cross_and_red_crescent_movement )  :arg1 ( tent :quant 3 )  )  :time now
inform :arg1 ( politician :arg1-of local :location area )  :mod only :op1-of ( and :op2 ( happy :domain they :polarity - )  )  :op1-of ( before :quant ( while :quant short )  )
say :arg0 ( politician :arg0-of ( constructive :arg1 amr-unknown :arg2 refugee )  :arg0-of ( chance :arg2-of ( give :arg1 ( district :mod harburg :mod-of assembly :poss ( political-party :name ( name :op1 green :op2 party )  :poss-of chairwoman :wiki green_party_of_the_united_states )  )  :arg1-of ( stir :arg0 action :arg2 mind :location off :location 1 :mod only :mod this )  :op3-of ( and :arg1-of ( doubt :arg0 more )  :op1 of :op2 public )  )  :polarity - )  :arg0-of ( plan :arg2 house )  :arg0-of ( work :arg2 out )  :arg1-of ( local :arg0 they :arg2 ( humane :mod-of manner )  )  )  :arg1 ( britta :mod-of herrmann )  :arg2 example
call :arg0 party :arg1 she :arg2 ( authority :mod ( country :name ( name :op1 harburg )  )  :mod district :prep-to ( deploy :arg1 ( house :arg0-of ( accommodate :arg1 refugee )  :mod empty )  )  )
possible :arg1 ( accommodate :arg1 ( refugee :quant 96 )  :time ( tent :quant 3 )  )
possible :arg0 initial :arg1 ( place :quant enough )  :arg1-of ( increase :arg0 ( centre :arg0-of ( seek :arg1 ( help :arg0 number :arg1 ( suitable :arg0 fact :arg1 accommodation )  )  )  :arg1-of ( crowd :arg0 over :purpose-of reason )  :mod reception )  :manner sudden )  :arg2 ( authority :arg1-of ( available :arg0 main )  )  :polarity -
stay :arg0 ( refugee :quant many )  :arg1-of ( long :arg2 ( temporal-quantity :arg2-of regular :quant 3 :unit month )  )
say :arg0 ( gauge :arg1 winter :arg1-of ( watch :mod wide )  )  :arg1 ( post :arg0 ( price :arg1 ( house :arg1 ( 7 :quant-of ( temporal-quantity :unit year )  )  )  )  :arg1 ( gain :arg1-of ( strong :degree most )  )  )
say :arg0 data :arg1 ( rise :arg1 ( index :mod home :mod ( value :arg0 1.1 :arg2 ( monetary-quantity :unit cent )  )  :mod ( organization :name ( name :op1 rp :op2 data :op3 corelogic :op4 hedonic )  )  :poss ( price :arg1 ( dwell :arg1 ( city :mod ( capital :mod ( country :name ( name :op1 australia )  :wiki australia )  )  )  )  )  )  :arg2 8 )  :location monday
and :op1 ( date-entity :arg0-of ( gain :arg1 ( monetary-quantity :unit cent )  :arg1-of ( bring :arg0 ( rise :arg3-of ( rise :arg1 ( month :mod winter :unit-of temporal-quantity )  :mod ( big :degree most )  :time ( since :op1 ( date-entity :year 2007 )  )  )  )  )  :arg2-of ( total :arg1 4.2 )  )  :month 6 )  :op2 7 :op3 8
contrast :arg1 ( come :arg1 ( grow :arg1 price :mod annual )  :arg4 ( 8 :arg2-of ( double :arg0 more :arg1 ( gain :arg1 ( month :unit-of ( temporal-quantity :quant 12 )  )  )  )  )  :time ( date-entity :year 2013 )  :time 10.9 )  :arg2 ( spread :arg0 ( monetary-quantity :unit cent )  :arg1 ( thing :arg1-of gain )  :arg1-of even :location ( across :op1 country )  :polarity - )
say :arg0 ( person :arg0-of ( have-org-role :arg1 ( organization :name ( name :op1 rp :op2 data )  )  :arg2 ( director :mod research )  )  :name ( name :op1 tim :op2 lawless )  )  :arg1 ( drive :arg0 ( city :name ( name :op1 sydney )  :wiki sydney )  :arg1 ( market :mod tier :quant 2 )  :op2-of ( and :op1 ( city :name ( name :op1 melbourne )  :wiki melbourne )  )  )
show :arg0 ( data :op1 figure :poss ( city :name ( name :op1 sydney )  :wiki sydney )  )  :arg1 ( price :arg1-of ( rise :arg2 ( city :name ( name :op1 melbourne )  :poss-of ( 11.7 :quant-of ( monetary-quantity :unit cent )  )  :wiki melbourne )  :time ( past :mod-of ( year :unit-of ( temporal-quantity :quant while )  )  :quant-of ( monetary-quantity :unit cent )  )  )  :op1-of home )
and :op1 ( average :arg1 ( rise :arg1 ( price :arg1 ( person :name ( name :op1 darwin )  :op4-of ( and :op1 ( market :arg1-of ( strong :arg0 5 :degree most )  :mod next )  :op2 ( country :name ( name :op1 adelaide )  )  :op3 ( country :name ( name :op1 brisbane )  )  )  :wiki charles_darwin )  )  )  :location ( monetary-quantity :unit cent )  )  :op2 6
price :arg0 ( city :name ( name :op1 canberra )  :wiki canberra )  :arg1 ( end :arg0 year :arg1 scale :degree other )  :arg1-of ( rise :arg0 ( hit :arg0 ( cutback :mod ( government-organization :arg0-of govern :arg1-of spend )  )  :arg1 ( 1.4 :op1-of only )  )  )  :arg2 ( monetary-quantity :unit cent )
say :arg0 ( person :arg0-of ( test :arg1 market :mod real :purpose-of ( come :arg1 ( property :arg1-of ( begin :arg0 there )  :arg1-of ( rise :arg2 ( listing :mod-of of )  )  )  :op1-of over :op1-of ( few :quant-of ( temporal-quantity :unit month )  )  )  )  :mod mr :name ( name :op1 mr )  )  :time ( now :mod ( that :mod-of spring )  )
say :arg0 he :arg1 ( and :arg0-of ( interest :arg1 rate :arg2 environment :arg2-of ( low :arg0 ongo :arg1 ( value :arg1-of ( dwell :arg0 ( it :arg0-of ( rise :arg1 ( further :op1-of ( over :mod even )  )  :arg2 ( next :mod-of ( temporal-quantity :quant 3 :unit month )  )  )  )  :arg2-of ( likely :arg0 ' :arg1 that )  )  )  )  )  :op1 ( rate :arg2-of ( general :arg0 ( rate :arg1-of ( clear :arg0 ( rate :arg1-of consider :arg1-of ( high :arg0 ongo )  )  :arg1-of ( auction-off :arg0 of )  )  )  :arg1 rapid )  )  )
say :arg1 ( and :op1 ( behave :arg1 latter :arg1-of ( general :arg0 military )  :arg1-of ( pee :arg0 ( country :arg0-of ( announce :arg1 region )  :arg1-of ( have-org-role :arg0 ( comment :arg1 ( contradict :arg0 ( newspaper :name ( name :op1 neue :op2 presse )  :wiki - )  :arg1 ( die :arg1 newspaper )  )  :arg1-of manage )  :arg2 director )  :name ( name :op1 germany )  :wiki germany )  )  :arg1-of resemble )  )
say :arg0 he :arg1 ( style :domain this :polarity - :poss college )
say :arg0 ( he :arg0-of ( plan :arg1 middle :time ( date-entity :month 6 )  :time about )  :arg1-of ( inform :arg0 family )  )  :arg1 college
say :arg0 they :arg1 ( simple :arg0-of wrong )  :arg1-of ( learn :arg0 only :arg1-of ( plan :arg0 they )  )
contrast :arg1 rather :arg1-of ( state :arg0 ( he :arg0-of ( say :arg1 also )  :arg0-of ( plan :arg1 ( same :arg1 time )  )  :arg0-of ( decide :arg1 final :polarity - )  :arg0-of ( make :arg1 already )  )  :location preferenc )
say :arg0 ( he :arg1-of fear )  :arg1 ( radical :polarity - )  :mod also :purpose ( widen :arg1 ( road :arg1-of ( narrow :manner-of access )  )  :arg1-of ( work :mod ( build :arg1 castle )  )  )
and :arg0-of ( wide :arg1 ( road :mod metre :quant 9 )  :arg2 - :op1-of - :op1-of it )  :op1 matter
aim :arg0 ( we :arg0-of ( explain :arg1 metr )  )  :arg1 current :arg1-of ( widen :arg0 5.5 )  :arg1-of ( wide :arg0 ( metre :quant-of before )  )
refute :arg1 ( argue :arg1 ( concern :arg0 ( thing :name ( name :op1 medau )  )  :arg1 ( person :arg0-of ( use :arg1-of ( available :arg2 ( place :arg0-of ( belong :arg1 school )  :mod ( park :arg1-of ( free :arg1-of cost )  )  )  :location ( future :mod only )  )  )  :arg0-of ( study :mod college )  :mod ( country :name name :wiki united_kingdom )  )  )  )
cause :arg0 it :arg1 ( we :arg0-of ( park :arg1 everywhere )  :arg0-of ( find :arg1 solution :arg1-of case :manner intelligent :manner ( park :arg0 ( other :domain-of too )  :arg1 car )  :time time )  :arg1-of case )  :polarity -
think :arg1 neighbour
say :arg0 ( and :op1 ( question :arg1 ( space :arg1-of ( situate :arg0 ( child :mod nursery )  )  )  )  :op2 ( front :mod-of of )  )  :arg1 ( president :arg2-of ( have-org-role :arg1 college )  )  :arg1-of ( run :arg0 ( level :mod ( park :arg1 ( access :arg1 road )  )  )  )  :arg1-of ( impact :arg0 ( front :mod-of door )  :polarity - )
concern :arg0 nursery :arg1 ( issue :arg0 ( he :arg0-of ( concern :arg1 far :degree more :location point :op1-of ( and :op2 ( person :arg0-of ( live :arg1 entrance )  :mod about )  :op3 800 :op4 adjacent :op5 secondary :op6 school )  )  )  :arg1 ( child :mod only )  )  :polarity -
say :arg0 ( he :poss-of ( interest :poss ( individual :quant ( lot :degree more )  )  )  :poss-of gentleman )  :arg1 ( it :poss-of about )
say :arg0 ( he :arg0-of ( decide :arg1 ( possible :arg1 ( person :arg0-of read )  )  )  :arg0-of ( lose :arg1 ( space :arg1 ( remain :arg1 ( person :arg0-of ( criticize :arg1 wheth )  :arg0-of ( have-rel-role :arg1 ( child :arg0-of ( will :arg1 road :arg1-of lead )  :arg1-of extend :arg1-of correct )  :arg2 parent )  :arg1-of associate )  :arg1-of natural :op1-of few )  )  )  )  :arg1 nursery
and :arg1-of ( talk :arg0 ( he :arg0-of ( develop :arg1 ( authority :arg0-of ( build :arg1 region )  :arg0-of ( plan :arg1 together :time ( date-entity :month 10 )  )  :arg1-of begin )  )  :arg0-of ( plan :arg1 present )  :arg0-of ( work :arg1 college :arg1-of extend :location context :location important :location this )  )  )  :time ( date-entity :year 2020 )
inform :arg0 ( person :arg1-of ( have-rel-role :arg0 ( person :arg1-of ( plan :arg0 nursery :mod about :time ( week :mod last )  )  )  :arg2 parent )  :name ( name :op1 peer )  )  :arg1 ( child :mod of )
contrast :op3-of ( and :arg1-of ( lead :arg0 ( access :arg0 before :arg1 ( level :mod ( park :arg0 berg :arg1 accordingly )  :mod new )  )  :polarity - :time now )  :op1 campus :op2 ( person :name ( name :op1 friedrich-streib-strasse )  )  )
widen :arg1 ( road :arg1-of narrow )  :arg2 ( lane :arg1 ( thing :arg1-of ( stretch :arg2 ( about :op1 ( distance-quantity :poss thu :unit kilometer )  )  )  )  :quant 2 )
say :arg0 ( thing :arg1-of high :arg1-of estimate )  :arg1 ( increase :arg1 ( traffic :location ( park :arg0-of ( castle :arg1 ( country :name ( name :op1 hohenfels )  )  )  )  )  :arg4 fold )
talk :arg0 they :arg1 ( vehicle :time ( date-entity :year 2000 )  )  :time ( day :mod every )
refuse :arg1 ( comment :arg0 ( council :mod town )  )  :time meanwhile
retire :arg0 ( person :name ( name :op1 glandorf )  )  :arg1 ( team :mod handball :mod ( country :name ( name :op1 germany )  :wiki germany )  )
play :arg0 ( person :name ( name :op1 holger :op2 glandorf )  )  :arg1 - :arg2 ( team :mod ( country :name ( name :op1 germany )  :wiki germany )  )
say :arg0 ( old :quant 31 )  :arg1 ( thing :location ( side :mod ( thing :name ( name :op1 german :op2 bundesliga )  )  )  :name ( name :op1 sg :op2 flensburg :op3 - :op4 handewitt )  )  :manner-of ( decide :arg0 ( he :arg0-of ( reach :arg1 year )  )  :arg1 ( reason :mod health )  :arg2 main :mod this )
contrast :arg1 ( month :unit-of temporal-quantity )  :arg2 ( think :arg0 i :arg1 it :arg1-of ( decide :arg0 it :arg1-of ( easy :polarity - )  )  :arg2 about )
announce :arg0 ( he :arg0-of ( listen :arg1 signal :manner ( come :arg1 i :op1-of ( and :arg1-of ( send-out :mod body )  :op2 ( end :arg1 ( i :poss-of ( career :mod ( team :mod nation )  )  )  )  )  )  :manner time )  :arg0-of ( page :arg1 winn )  :poss-of ( company :name ( name :op1 facebook )  :wiki facebook )  )  :arg1 ( game :name ( name :op1 world :op2 cup )  :wiki fifa_world_cup )  :time ( date-entity :year 2007 )
and :op1 ( record :arg2-of ( compete :arg1 nation :arg2-of ( retire :arg0 he )  :mod international )  :poss game )  :op2 ( goal :beneficiary ( country :name ( name :op1 germany )  :wiki germany )  )
and :op1 ( want :arg0 ( person :arg0-of ( head :arg1 ( country :name ( name :op1 germany )  :wiki germany )  )  :arg0-of ( coach :arg1 team )  :mod new )  :arg1 ( continue :arg0 ( back :arg0-of ( shoot-down :arg1 ( temporal-quantity :op1-of few :unit year )  :arg2 goal :arg3 ( winner :mod ( league :arg1-of ( champion :arg0 ( thing :name ( name :op1 dagur :op2 sigurdsson )  )  )  )  )  )  )  :arg1 ( right :arg1-of ( throw :arg1-of powerful )  )  )  )  :op2 ( available :arg1 ( select :arg1 next )  :polarity - )
say :arg0 ( he :arg0-of ( nice :arg1 ( long :arg1 tuesday :arg2 ( talk :arg0 ( person :name ( name :op1 glandorf )  )  :manner-of ( select :arg0 he :arg1 ( against :mod game :op1 ( country :name ( name :op1 switzerland )  :wiki switzerland )  )  :arg2 squad )  )  )  )  )  :arg1 ( thing :name ( name :op1 glandorf )  )
and :op1 ( inspire :arg0 they :arg1 ( teammat :arg1-of long )  :arg1-of ( sure :arg0 i :arg2 ( i :arg1-of ( inspire :arg0 ( idea :poss ( he :arg0-of ( approach :arg1 game :arg2 too :op1-of and )  )  )  :time always )  )  )  :mod also )  :op2 successor
cause :arg0 ( do :arg0 ( i :arg0-of ( need :arg1 ( and :op1 ( represent :arg0 i :arg1 i :arg1-of ( resemble :arg2 next )  :op1-of few :op1-of ( and :age ( temporal-quantity :unit year )  )  :op1-of club )  :op2 ( break :arg1 ( recover :arg1 ( double :arg0-of play :mod-of ( burden :arg1 of :arg2 also )  )  :arg1-of long :arg2 time :degree more )  )  )  )  )  :arg1 that :arg2 ( i :arg1-of ( allow :arg0 ( team :mod nation )  )  )  )  :arg1 and :polarity -
fear :arg0 ( hand :arg1 left )  :arg1 ( end :arg1 career :arg1-of possible :time ( date-entity :year 2012 )  )  :arg1-of ( heel :arg2-of ( infect :arg1 he )  )
and :op1 ( give :arg0 ( he :arg0-of ( work :arg1 doctor :arg2 ( thing :name ( name :op1 handball :op2 association )  )  )  :arg1-of ( cause :arg0 this )  )  :arg1 ( inject :mod cortisone )  :arg2 ( problem :mod achill :topic tendon )  )  :op2 ( country :name ( name :op1 germany )  :wiki germany )  :op3 ( swell :arg0 due :arg1 foot :mod severe )
need :arg0 he :arg1 ( and :op1 ( surgeri :mod further :quant 2 )  )  :arg2 ( operation :mod emergency )
bring :arg0 ( person :name ( name :op1 glandorf )  )  :arg1 ( action :arg1-of ( settle :arg1-of ( end :arg0 this :op1-of and )  )  :arg1-of legal )  :prep-against ( doctor :mod team )  :time then
and :op1 professional :op2 ( eleven :mod-of ( temporal-quantity :unit year )  )  :op3 ( take :arg1 ( toll :poss ( team :mod nation )  )  :prep-on ( thing :arg0-of ( play :arg1 ( temporal-quantity :quant twelve :unit year )  )  :mod any )  )
ignore :arg0 i :arg1 ( issue :arg0 ( health :mod some )  :arg1 ca :arg2 i )  :op1-of anymore :polarity -
cause :arg0 ( infect :arg0 ( i :arg0-of ( control :arg1 ( pressure :arg0 ( surgeri :op2-of ( after :op1 foot )  )  :arg1 blood )  :arg1-of possible )  )  :arg1 3 )  :arg1 ( period :mod time :mod short :time ( date-entity :year 2012 )  )
and :arg2-of ( relate :arg0 other :arg1 ( issue :arg0 minor :arg1-of ( wear :arg0 ( i :arg0-of ( get :arg1 some )  )  )  )  )  :op1 ( tear :arg0 also )
contrast :arg1 ( control :arg0 i :arg1 ( realize :arg0 i :arg1 year :arg1-of ( begin :arg0 ( he :arg1-of ( explain :arg0 ( i :arg0-of ( trick :arg1 ( play :polarity - )  )  :arg1-of possible )  :arg1-of interview :mod ( body :mod-of ( time :mod handball :mod ( magazine :wiki time_[magazine] )  )  )  )  :poss-of ( country :name ( name :op1 germany )  :wiki germany )  )  )  :arg1-of possible )  :arg1-of ( head :arg0 i )  )
consider :arg0 he :arg1 ( comeback :source really )  :mod only
tell :arg0 ( person :arg0-of ( have-rel-role :arg2 father )  )  :arg1 ( magazine :wiki time_[magazine] )  :arg2 ( i :arg0-of ( consider :arg1 it :arg1-of possible :arg2 2 )  :arg1-of ( trouble :arg0 we :arg2 then :mod big :mod real )  )  :time time
contrast :arg1 hand :arg2 ( possible :arg1 ( count :arg0 i :arg1 ( continue :arg0 ( i :arg0-of ( play :arg1 handball :arg2 1 )  )  )  :arg2 ( temporal-quantity :unit year )  )  )
and :arg2-of ( admit :arg0 i :arg1 ( become :arg1 ( i :arg1-of ( come :arg4 health )  )  :arg2 ( humble :degree really )  :time ( after :op1 ( stay :arg0 hospital :arg1-of long :time ( date-entity :year 2012 )  )  )  )  )
resemble :arg1 ( walk :arg0 i :arg1 honest :arg1-of ( straight :arg0 i :time ( after :time-of career )  )  )
win :arg0 he :arg1 ( thing :name ( name :op1 world :op2 championship )  :op1-of besides )  :arg2 ( thing :name ( name :op1 champions :op2 league )  )  :mod also :op1-of ( and :op2 ( date-entity :year 2008 )  :op3 ( date-entity :year 2010 )  )  :op1-of ( and :op2 ( date-entity :month 5 )  :op3 ( cup :arg0 ( date-entity :year 2007 )  :arg1 ehf )  :op4 ( thing :name ( name :op1 hsg :op2 nordhorn )  )  :op5 ( thing :name ( name :op1 tbv :op2 lemgo )  )  )
win :arg0 ( he :part ( country :name ( name :op1 flensburg )  )  )  :arg1 ( thing :name ( name :op1 cup :op2 winners :op3 cup )  )  :mod also :time ( date-entity :year 2012 )
shrink :arg1 ( economy :mod ( country :name ( name :op1 germany )  :wiki germany )  )  :arg2 ( percentage-entity :value 0.2 )  :prep-in spring
put :arg0 ( crisis :location ( around :op1 globe )  )  :arg1 ( curb :arg1 ( economy :mod ( country :name ( name :op1 germany )  :wiki germany )  )  )  :arg2 quarter
sink :arg1 ( product :arg1-of gross :mod domestic )  :arg2 ( percentage-entity :value 0.2 )  :manner ( compare :arg1 ( date-entity :year 2014 )  :arg2 ( quarter :time previous )  )  :purpose ( end :arg1 ( date-entity :month 6 )  )  :source 4
announce :arg0 ( organization :mod ( country :name ( name :op1 germany )  :wiki germany )  :name ( name :op1 office :op2 for :op3 national :op4 statistics )  )  :arg0-of ( confirm :arg1 ( thing :arg1-of ( estimate :time previous )  )  :mod thereby )  :arg1 this
spur :arg0 consumption :arg1 ( invest :arg0 year :arg1 ( early :mod down )  :mod whilst )  :arg2 economy :mod alone
slow :arg0 ( trade :arg1 ( good :mod foreign )  )  :degree too
due :arg0-of ( quarter :arg1 ( percentage-entity :value 0.8 )  :arg2-of ( start :arg1 year :arg1-of strong :time ( date-entity :year 2013 )  )  :domain ( gdp :beneficiary-of figure :duration ( temporal-quantity :quant half :unit year )  )  )
destination :arg0-of ( lead :arg1 through :arg2 city )  :mod-of of :op3-of ( and :op1 ( start :arg0 ( country :name ( name :op1 horstmar )  )  :arg1 sunday )  :op2 point :op4 ( thing :name ( name :op1 horstmar )  )  )
rider :domain ( invade :arg1 sunday :manner ( experience :arg1 ( city :poss-of of )  )  )
cause :arg0 federation :arg1 ( call :arg1 ( country :name ( name :op1 holland )  :wiki netherlands )  :arg1-of stage :arg2 ( cycle :arg1 ( large :degree most )  )  )
paradise :arg1-of ( close :arg0 ( country :name ( name :op1 holland )  :wiki netherlands )  :time ( ride :arg0 bike :arg1 ( large :arg1-of ( word :arg0 other )  :degree most )  :arg1-of ( rid :arg0 bike )  :arg1-of straight )  )
thank :arg0 ( person :arg0-of register :arg0-of participate :quant more :quant 1000 )  :arg1 ( thing :mod ( organization :name ( name :op1 jos )  )  :name ( name :op1 ter :op2 huerne )  )  :arg2 ( organize :arg1 ( tour :arg0 ( organization :name ( name :op1 m√ºnsterland )  )  :mod this )  )
advertise :arg1 ( tour :arg1-of ( offer :op1-of ( and :arg1-of interest )  )  )  :location ( journal :mod professional :quant several )
and :op1 ( drive :arg0 we :arg0-of ( cause :arg1 ( possible :arg1 ( take :arg0 ( country :name ( name :op1 den :op2 helder )  )  :arg1 we :manner tour )  )  )  :arg1 night :location here )
say :arg0 ( we :arg0-of ( know :arg1 good :arg1-of ( resemble :arg0 also )  :arg3 bit )  :arg0-of ( same :arg1 way :arg3 route )  )  :arg1 ( look :arg3 forward :op1-of and )  :quant eagerly :quant cyclist
fraternity :time ( after :time-of ( register :arg1 club )  :time-of house )
and :arg1-of ( start :arg0 ( line :mod also )  )  :op1 ( person :arg0-of ( ride :arg1 through :manner peace :mod small )  :arg0-of ( start :arg1 off )  :name ( name :op1 katharina )  )  :op2 city :op3 over :op4 embankment
advertise :arg0 then :arg1 ( route :arg1-of ( head :arg0 ( and :op1 back :op2 ( country :name ( name :op1 horstmar )  )  :op3-of ( and :arg0-of ( pass :arg1 ( country :name ( name :op1 havixbeck )  )  )  :op1 ( person :location ( country :name ( name :op1 coesfeld )  )  :name ( name :op1 sch√∂ppinger :op2 berg )  )  :op2 ( country :name ( name :op1 billerbeck )  )  )  )  :arg2 ( direction :poss ( country :name ( name :op1 herrenholz )  )  )  )  )  :medium ( category :arg1-of ( differ :arg0 then )  :quant 3 )
prove :arg0 rider :arg1 ( stretch :arg1 ( shape :arg0 they :arg1 ( date-entity :year 1475 )  :domain-of ( good :mod just )  :op1-of ( distance-quantity :unit meter )  )  :arg2 ( distance-quantity :quant 95 :unit kilometer )  :location ( altitude :time-of ( and :op1 ( distance-quantity :unit meter )  :op2 ( distance-quantity :quant 120 :quant ( date-entity :quant-of ( distance-quantity :quant 145 :unit kilometer )  :year 1175 )  :unit kilometer )  :op3 altitude )  )  :op1-of ( distance-quantity :unit meter )  :op1-of altitude :op1-of ( date-entity :year 1775 )  )
and :op1 ( water-down :arg1 ( they :arg1-of ( feed-up :location ( way :direction back )  )  )  )  :op1-of ( and :op2 ( country :name ( name :op1 havixbeck )  )  :op3 ( country :name ( name :op1 billerbeck )  )  )
seem :arg1 ( please :arg2 ( succeed :arg0 ( event :mod this :mod cycle )  )  :degree very )  :op5-of ( and :op1 ( organize :mod chief )  :op2 ( thing :mod ( organization :name ( name :op1 jos )  )  :name ( name :op1 ter :op2 huerne )  )  :op3 ( person :arg0-of ( have-org-role :arg1 deputy :arg2 mayor )  )  :op4 ( person :name ( name :op1 heinz :op2 l√∂lfing )  )  )
and :arg1-of ( experience :arg0 ( person :arg0-of participate :quant all )  :arg1-of ( wonderful :arg2 we )  )  :op1 happy
conclude :arg1 ( person :arg0-of ( regard :arg1 ( incident :mod-of nasty )  :arg2 event :polarity - :polarity - )  :arg0-of ( go :arg1 issue :arg1-of smooth :mod organization )  :domain-of positive :name ( name :op1 the )  :op2-of ( and :op1 there )  )
cause :arg0 ( and :op1 ( person :arg0-of participate :arg1-of ( hope :arg0 organize )  :quant many )  :op2 ( forecast :arg1 ( weather :arg1-of bad )  :arg1-of presume )  :op3 ( rain :time morning )  )  :arg1 ( fortunate :polarity - )
contrast :arg1 whatever :arg2 ( and :arg1-of ( plan :arg0 they :arg0-of repeat )  :op1 ( hope :arg0 ( each :arg0-of ( nice :arg1 weather :arg2 either )  :arg1-of ( see :arg0 we :mode shall )  :mod-of other )  :arg1 ( weekend :mod another )  :arg2 30 :op1-of ( or :op2 8 )  :time ( date-entity :year 2015 )  )  :op2 ( organization :name ( name :op1 &quot; )  )  :op3 ( person :arg0-of organize :arg1-of ( return :arg0 weather :arg1-of ( promise :arg0 rider )  )  )  )
scrupulously :mod-of ( memoir :mod ( honest :mod-of ( person :name ( name :op1 konstantin :op2 wecker )  )  )  )
state :arg0 ( person :arg0-of ( have-org-role :arg1 prison :arg2 activist )  :arg0-of ( write :arg1 weck )  :mod song :op1-of ( and :op2 ( politics :mod pacifist )  :op3 ex :op4 philosophy )  :op4-of ( and :op1 page :op2 monk :op3 warrior )  )  :arg1 ( it :poss-of biography )  :mod more :mod of :mod really
provide :arg0 ( person :arg0-of ( compose :arg1 more :arg2 ( collect :arg1 ( idea :arg1-of ( provoke :arg2 ( think :arg1 chronology )  )  )  )  )  :arg0-of author :arg0-of ( bear :arg1 history :location ( city :name ( name :op1 munich )  :wiki munich )  :time ( date-entity :day 1 :month 6 :year 1947 )  )  )  :arg1 ( text :arg1-of ( accompany :arg0 ( song :arg1-of suitable )  )  )  :arg2 ( chapter :mod every )
and :op1 ( shoplift :arg0 ( pupil :mod ( school :mod grammar )  )  :arg1 ( weak :arg0 ( none :arg2-of ( leave :arg1 untold )  )  :arg1 human )  )  :op2 ( take :arg0 throughout :arg1 drug :op2-of ( and :op1 ( he :domain-of ( honest :mod unstintingly )  )  )  )
mean :arg1 explain :arg1-of ( come :arg0 he :arg2 ( tolerate :arg1 ( man :mod fellow )  )  :time now )  :domain this :mod also :op1-of and
contrast :arg1 ( philosophical :degree ( high :manner-of ( personal :arg0 spirituality :arg1 way :degree very :polarity also )  )  )  :arg2 ( and :arg1-of ( exist :arg0 ( concept :arg0-of ( understand :arg1 ( mean :arg1 ( concept :mod this )  :mod essential )  :arg1-of seek )  :arg0-of love :arg1-of ( mean :arg1-of ( clear :arg0 now )  :arg1-of ( take :arg2-of result )  :mod important :mod more )  :arg1-of ( use :arg0 he :arg2 ( text :op1-of throughout )  :manner liberally )  :mod abstract )  :op3-of ( and :op1 soul :op2 ego )  )  :op1 here )
contrast :arg1 ( and :op1 soul :op2 ( rock :mod-of ( musician :arg2-of ( become :arg0 ( love :arg1 opera )  )  )  )  )  :arg2 ( and :arg1-of ( experience :arg0 ( only :polarity - )  :mod prison )  :op1 ( shape :arg0 too :arg1 ( and :op1 ( thing :arg1-of think :arg1-of ( lie :arg2 ( criticize :arg0 ( and :op1 ( and :op1 ( explain :arg0 he :arg1 pacifist )  )  :op2 ( and :op1 ( heart :mod politics )  :op2 soul )  )  :arg1 society :arg2 music :op1-of behind )  :op1-of and )  )  :op2 idea )  :mod also )  )
say :arg0 ( he :arg0-of ( give :arg1 life )  :arg0-of ( process :arg1 monk :arg1-of ( rid :arg0 they )  :op1-of subtraction )  :arg0-of ( experience :arg1 latter )  :arg0-of ( understand :arg1 close )  :arg0-of ( live :arg1 life )  )  :arg1 ( thing :mod-of superfluou :quant all )
or :op1 ( military :degree-of ( frequent :arg0 fist :arg1 ( fight :arg0 ( all :quant-of ( stuff :arg1-of between :mod highbrow )  )  :arg1 ( bar :arg0 also )  )  :purpose example )  :name ( name :op1 gi )  :wiki g.i._[military] )  :op2 ( else :arg1-of ( crazy :arg2 ( drive :arg0 ( he :arg0-of ( drive :arg1 full :arg1-of ( straight :arg0 ( nature :mod ( earthy :degree more )  :mod-of ( anecdot :mod short )  )  )  :arg2 tree )  )  :arg1 motorway )  )  )
and :example also :op1 he :op2 unspar :op3 ( he :arg0-of describe :domain-of too )
hug :arg0 ( person :arg0-of ( have-rel-role :arg1 i :arg2 father )  )  :arg1 i :arg2 ( person :name ( name :op1 lenny :op2 henry )  )
say :arg0 ( i :arg0-of ( love :arg1 you )  )  :arg1 nev
thing :arg1-of ( immigrate :arg0 ( person :arg2-of ( bear :arg0 ( person :name ( name :op1 henry )  )  :arg1 child :location ( person :name ( name :op1 dudley )  )  :time ( date-entity :year 1958 )  )  )  )  :name ( name :op1 jamaican )  :op1-of 7
and :op1 ( work :arg0 ( person :name ( name :op1 henry )  )  :arg1 factory )  :op2 ( limit :arg0 ( person :arg0-of ( have-rel-role :arg1 ( he :arg1-of die )  :arg2 father )  )  :arg1 ( relation :arg1 19 )  )
and :op1 ( person :arg0-of ( have-rel-role :arg1 ( he :arg0-of ( converse :arg1 imaginary )  :arg0-of ( radio :arg1 4 :arg2 series )  :arg2-of ( record :arg0 comedy :arg1 rare :arg1-of base :arg1-of ( rehearse :arg0 ( person :name ( name :op1 henry )  )  )  )  )  :arg2 father )  :arg0-of ( grow :arg1 of :arg2 out )  )
and :op1 ( mix :arg0 soundtrack :arg1 ( and :location-of ( tune :domain-of upbeat )  :op1 rap )  )  :op2 reggae
contrast :arg1 ( work :arg0 ( person :name ( name :op1 henry )  )  :arg1 ( memory :mod difficult :poss childhood :quant some )  )
and :op1 ( person :arg0-of ( have-rel-role :arg1 ( he :arg1-of therapy :arg1-of lot :arg1-of ( have-rel-role :arg0 ( person :arg2-of ( relation :arg1 reflective :arg1-of about )  )  :arg2 father )  :arg1-of after )  :arg2 mother )  :arg1-of die )
unknowable :degree very :domain he
mean :arg1 ( voice :arg1-of ( hear :arg0 ( you :arg0-of stop :arg0-of ( face :arg1 ( see :arg0 you :arg1 noise )  )  )  :op1-of just )  )
leave :arg1 ( alone :arg1-of ( have-rel-role :arg0 person :arg2 sister )  )
move :arg1 expressive
want :arg0 i :arg1 ( watch :arg1 cricket :arg0 i )
and :op1 ( person :arg0-of ( have-rel-role :arg1 ( i :arg0-of ( talk :arg1 thing :arg1-of ( resemble :arg2 ( shape :arg1 ( stroke :location cricket :topic-of beauty )  :arg2 ( glass :mod beer )  )  )  :op2-of ( and :op1 ( go :arg1 ( kid :domain i )  :arg4 pub )  )  )  )  :arg2 brother :mod old )  :arg0-of grow :name ( name :op1 seymour )  )  :op2 ( organization :name ( name :op1 hilton )  )
resemble :arg1-of ( converse :arg0 i )  :arg2 that
bloke :domain ( he :arg0-of ( read :arg1 paper :arg3 ( lot :part-of life )  )  :mod this )  :location corner :mod unsmil
and :op1 ( open :arg1 recent :arg2 foundry )  :op2 condition :op3 ( person :arg0-of ( have-rel-role :arg1 ( he :arg2-of ( resemble :arg0 he :arg1 ( life :mod amr-unknown :mod snapshot )  )  :poss-of good )  :arg2 father )  :mod-of day )
contrast :arg0 ( bit :poss it )  :arg1 bright :arg2 ( and :op1 ( smoke :arg0 ( they :arg0-of ( dark :arg1 smoky :time now )  )  :arg1 stygian :arg1-of ( burst :arg0 depth )  :op3-of ( and :op1 labyrinthine :op2 flame )  )  :op2 lot :op3 soot )
cause :arg0 ( sing :arg1 foundry :arg1-of ( hear :arg0 you :op3-of ( and :op1 ( person :arg0-of ( have-rel-role :arg1 ( he :arg0-of wash )  :arg2 dad )  )  :op2 ( lie :arg1 there :mod just )  )  )  :arg1-of ( bathe :op1-of ( and :arg1-of ( use :arg0 i )  )  )  :time-of ( start :arg0 slow :arg1 off )  )
realize :arg0 ( i :arg0-of ( round :arg1-of ( walk :arg0 i )  )  :arg0-of ( go :op2-of ( and :op1 ( thing :arg2-of estimate )  )  )  )  :arg1 ( do :arg0 he :arg1 ( put :arg0 ( temporal-quantity :unit year )  :arg1 food :arg2 table :purpose ( and :op1 ( temporal-quantity :unit year )  )  )  )
emerge :arg0 ( person :name ( name :op1 henry )  )  :arg1 less :arg2 ( childhood :arg1-of ( strip :arg0 ( person :quant none )  :arg2 ( affection :degree parental )  )  )
say :arg0 i :arg1 ( i :arg0-of ( love :arg1 you )  :arg1-of ( have-rel-role :arg0 person :arg2 dad )  )  :arg1-of hug
say :arg0 ( she :arg0-of ( end :arg1 it )  :poss-of ( life :poss ( you :arg1-of ( love :arg0 i )  )  :poss ( you :arg1-of ( love :arg0 i )  )  :poss ( person :arg0-of ( have-rel-role :arg1 i :arg2 mum )  :arg2-of ( near :arg0 ( until :polarity - )  :arg1 poor )  )  )  )  :arg1 ( we :arg1-of ( start :arg0 ( i :arg0-of ( love :arg1 you )  )  )  )
enable :arg0 ( person :arg0-of ( have :arg1 ( person :arg0-of ( have-rel-role :arg2 daughter )  )  )  :name ( name :op1 billie )  )  :arg1 ( share :arg1 ( love :arg0 ( france :mod dawn )  :arg1-of ( miss :arg0 he :arg2 child )  )  )
possible :arg1 ( stop :arg0 ( you :arg0-of love )  :arg1 i )  :mode you :mode interrogative
stop :arg1 ( hug :arg1 i )  :mod just
dad :arg2-of ( have-rel-role :arg0 ( person :domain-of ( 22 :op1 expressive )  )  :arg1 i )
dawn :mod-of france
have-rel-role :arg0 ( person :domain-of interrogative :mod-of she )  :arg1 ( i :polarity - )  :arg2 friend
great :mod-of ( person :arg0-of ( have-rel-role :arg1 she :arg2 mum )  )
marry :arg0 he :arg1 ( person :arg0-of ( have-rel-role :arg1 he :arg2 friend )  :poss-of ( good :degree very :mod still :poss france )  )  :arg2 ( 25 :quant-of ( temporal-quantity :unit year )  )
dawn :mod-of ( person :mod good )
dawn :mod ( person :arg0-of ( have-rel-role :arg1 i :arg2 friend )  )  :mod-of interrogative :polarity -
great :mod-of ( person :arg0-of ( have-rel-role :arg1 she :arg2 mum )  )
diabetic :mod ( person :arg0-of ( have-rel-role :arg1 ( person :name ( name :op1 henry )  )  :arg2 mother )  )
thing :arg0-of ( kill :arg1 it )
say :arg0 doctor :arg1 ( and :arg1-of ( cause :arg0 ( you :domain-of radical )  )  :arg1-of ( become :arg0 i :arg2 very )  :op1 ( overweight :degree very )  :op2 ( start :arg0 i :arg2 ( diabetic :mod-of symptom )  )  )
cause :arg1 ( go :arg0 i :arg1 drastic :medium ( thing :mod fitnes :mod big )  :op1-of ( and :op2 ( go :arg0 i :arg1 ( diet :purpose ( reverse :arg0 also :arg1 symptom )  )  )  )  )
hard :arg0 very :arg1 it
and :op1 it :op2 tedious
like :arg0 nobody :arg1 ( eat :arg1 carrot )
distinguish :arg0 ( he :arg0-of ( crop :arg1 close :arg1-of beard )  :arg1-of reflect )  :arg1 perhaps :purpose-of ( change :arg0 ( person :name ( name :op1 henry )  )  :arg1 trajectory :mod-of career )
become :arg0 theatre :arg1 ( he :arg0-of ( win :op1-of since )  :arg0-of ( acclaim :arg1 othello :arg1-of critical )  )  :arg2 engross
follow :arg0 ( error :arg1-of ( fence :arg0 ( person :name ( name :op1 august :op2 wilson )  )  )  )  :arg1 comedy
and :arg1-of ( experience :arg1-of ( differ :arg0 it )  )  :op1 sitcom :op2 ( comedy :arg0-of ( upholster :arg1 ( busy :arg0-of ( work :arg1 life )  )  )  )
and :op1 ( just :domain ( he :arg1-of ( start :arg0 he )  )  )  :op2 ( work :arg0 16 :arg1 factory )
and :op1 ( spot :arg0 dj :arg1 ( do :arg1 impression )  :arg2 stage )  :op2 ( write :arg2 ( thing :name ( name :op1 new :op2 faces )  )  )
comedian :op5-of ( slash :op1 ( long :arg2 i :mod-of time )  :op2 only :op3 ( black :arg0 ( he :arg0-of ( launch :arg1 seventi :arg2 mid )  :poss-of ( career :op1 tv :poss quite )  )  :arg1 telly )  :op4 impressionist )
learn :arg0 he :arg1 job
and :op1 ( star :arg1-of ( learn :arg0 ( i :arg2-of ( grow :arg0 i :arg1 ( eye :part-of public )  :op1-of ( and :op2 ( date-entity :year 1985 )  )  :purpose ( deliver :arg0 ( mechanism :arg0-of efficient )  :arg1 television :arg1-of ( joke :arg0 ( - :polarity-of only )  )  )  :time ( date-entity :year 1975 )  )  )  )  )  :op2 ( difficult :degree really )
thing :mod ( date-entity :year 1975 )  :name ( name :op1 new :op2 faces )
cause :arg0 ( he :arg0-of ( own :arg1 stage )  :arg0-of ( black :arg1 right )  :arg0-of ( find :arg1 ( person :arg1-of black )  :manner ( 5 :quant-of ( temporal-quantity :unit year )  )  )  :arg1-of manage )  :arg1 ( and :arg1-of ( show :arg0 minstrel :arg1-of entertain :arg1-of light )  :op1 white :op2 program :op3 ( perform :arg0 it :arg1 comedy )  )
comfortable :arg0 i :arg1 family :degree very :polarity -
contrast :arg1 ( wish :arg0 i :arg1 sort )  :arg2 ( i :arg0-of ( regret :arg1 i :polarity - )  )
and :op1 ( position :mod weird :mod reprehensible )  :op2 ( learn :arg0 ( i :arg0-of ( work :arg1 ( venu :mod huge )  )  )  :arg1 ( work :arg3 crowd )  )
contrast :arg1 amr-unknown :arg2 ( and :arg2-of ( entertain :arg0 ( country :mod-of television :name ( name :op1 britain )  :wiki united_kingdom )  :arg1-of ( light :arg0 ( win :arg0 ( person :arg1-of black :arg1-of ( parody :arg0 grotesque )  :mod also )  :arg1-of award )  )  )  :age ( temporal-quantity :unit year )  :quant ( temporal-quantity :unit year )  )
and :mod both :op1 ( lampoon :arg1 ( culture :arg1-of black :mod ( country :name ( name :op1 britain )  :wiki united_kingdom )  )  )  :op2 ( celebrate :arg0 ( character :arg1-of ( introduce :arg0 ( person :arg0-of ( work :location ( circuit :mod ( alternative :mod-of comedy )  )  :location ( country :name ( name :op1 eighties )  )  )  :name ( name :op1 henry )  )  )  )  )
and :op1 ( air :arg1 ( other :mod-of thing )  :time ( date-entity :year 1984 )  )  :op2 ( know :arg0 he :arg1 ( series :quant-of ( show :arg0 ( person :name ( name :op1 lenny :op2 henry )  )  )  )  :arg2 ( person :mod chef :name ( name :op1 gareth :op2 blacklock )  )  :location ( chef :mod ( series :mod comedy )  )  )
contrast :arg1 ( consume :arg0 ( he :quant-of ( temporal-quantity :mod next :unit decade )  )  :arg1 film :arg2 ( he :mod-of ( date-entity :year 2008 )  :poss-of ( company :name ( name :op1 bbc )  :wiki bbc )  )  :op6-of ( and :op1 advertisement :op2 documentari :op3 tv :op4 series :op5 part )  )  :arg2 ( think :arg0 ( you :arg0-of ( feel :arg1 it :arg1-of ( cause :arg0 ( len :mod next )  )  :mod all :op1-of ( or :arg1-of ( resemble :arg2 bit )  :arg1-of ( mark :arg0 you )  :op2 time :op3 you :op4 ( slight :mod-of sideway )  )  )  )  :arg1 amr-unknown :arg2-of ( mean :arg0 he :arg1 ( tv :mod ( lennyhenry :mod series )  )  )  )  :op1-of after
cause :arg0 ( amr-unknown :arg1-of ( call :arg0 4 :arg3 ( come :arg1 amr-unknown :arg3 next )  :mod series :mod documentary )  )  :arg1 about :mode interrogative
person :name ( name :op1 shakespeare )
allergy :mod real :prep-to ( person :name ( name :op1 shakespeare )  :poss i )
reserve :arg0 class :arg1 ( much :degree very )  :arg2 middle :op3-of ( and :op1 proper :op2 ( think :arg0 ( i :arg0-of ( teach :arg1 really :polarity - )  )  :arg1 school )  :op4 ( person :mod white :op1-of ( and :op2 tight :op3 ( cabbage :arg2 front )  :op4 down )  )  )
cause :arg1 ( frighten :arg1 i :time very )
say :arg0 ( we :arg0-of ( interview :arg1 everybody )  :arg0-of ( show :arg1 ( trevor :mod-of ( nunn :mod-of ( adrian :mod-of lest )  )  )  :mod ( that :mod-of hall )  )  )  :arg1 ( dench :mod judi )  :arg1-of ( recommend :arg0 ( you :arg0-of ( try :arg1 it )  )  )
cause :arg0 it :arg1 ( know :arg0 you :arg1 ( talk :arg0 you )  :arg2 ( off :mod slag )  :polarity - )  :polarity -
cause :arg0 ( and :arg1-of ( word :arg1-of of )  :op1 ( get :arg1 some )  :op2 mouth :op3 then :op4 ( understand :arg0 we :arg1 all )  )  :arg1 ( much :arg1-of ( love :arg0 you )  )
and :op1 ( person :arg1-of ( deliver :arg0 ( line :mod-of othello :mod-of of :quant 20 )  )  :name ( name :op1 henry )  )  :op2 documentary :op3 ( he :arg0-of ( hook-up :arg1 ( speech :mod last )  )  )
give :arg0 it :arg1 ( feel :arg1 ( do :arg0 i :arg1-of possible )  :arg0 it )  :arg2 i
resemble :arg1 ( put :arg0 i :arg1 it :arg1-of ( head :arg0 i )  :arg1-of ( straight :arg0 almost )  :arg2 i )
learn :arg0 ' :arg1 ( line :arg0-of ( research :arg1 some )  :arg0-of ( do :arg1 ( thing :mod serious )  )  )  :arg1-of ( take :arg0 it :arg2 serious :arg3 this :extent amr-unknown :time about )
and :purpose-of ( read :arg0 i :arg1 ( play :arg1 ( temporal-quantity :unit month )  :mod that )  :arg1-of cause :arg2 we :concession ( process :arg1 rehearsal :arg1-of ( brutal :op1-of and )  )  :time ( before :quant ( temporal-quantity :unit month )  )  )
and :op1 succeed
crash :arg0 ( quite :polarity - )  :arg1 car :op1-of ( and :arg1-of ( expect :arg0 ( they :arg1-of seem )  )  )
star :arg0 he :arg1 ( comedy :mod error )  :time soon
and :op1 theatre :op2 i :op3 ( possible :arg1 ( believe :arg0 i :arg1 sudden :arg2 it :mod quite :polarity - )  :mod just )
think :arg0 ( i :arg1-of moment )  :arg1 oh :arg2 ( change :arg1 you )
and :op1 ( fault :mod technical )  :op2 ( feel :arg0 ( person :name ( name :op1 henry )  )  :arg1 ( job :purpose ( keep :arg1 ( audience :arg1-of entertain )  )  )  :time instinctively )
say :arg0 ( i :arg3-of ( do :arg0 you :arg1 while :arg2 ( they :arg0-of ( fix :arg1 computer )  )  :duration ( temporal-quantity :quant 10 :unit minute )  )  )  :arg1 voice :time ( inside :mod little )
announce :arg0 ( manage :arg1 stage )  :arg1 ( resume :arg1 ( perform :arg0-of ( resolve :arg1 problem )  )  :time soon )  :arg1-of instead-of
and :op1 ( walk :arg0 ( i :arg0-of ( thank :arg1 ( person :name ( name :op1 god )  :wiki god )  :arg2 oh )  )  :arg1 off :arg4-of ( go :arg0 i :arg1 something )  )  :op2 stage
responsible :arg0 i :arg1 it :polarity -
possible :arg1 ( let :arg0 i :arg1 ( sort :domain ( somebody :mod else )  )  )
character :arg1-of ( stay :arg1-of ( play :arg0 you )  )
appear :arg1-of fence :location ( organization :name ( name :op1 duchess :op2 theatre )  )
challenge :arg1 ( line :arg1-of ( fence :arg1-of learn )  )
' :mod ( panic :arg2-of ( stiffen :arg0 it :arg1 sinew :manner ( good :degree quite )  )  )
say :arg1 this :arg1-of ( recommend :arg0 ( you :arg0-of ( receive :arg1 that :manner well )  :arg0-of ( do :arg1 amr-unknown :arg2-of ( resemble :arg1 it )  )  )  :arg1-of ( cause :arg0 too )  )  :arg1-of ( sign :arg0 big :arg2 god )
say :arg0 ( he :arg0-of ( boom :arg1 voice )  )  :arg1 this
cause :arg0 i :arg1 ( stick :arg1 it )
love :arg0 i :arg1 really
love :arg0 i :location ( room :mod rehearsal )
impression :arg0 ( he :arg2-of ( converse :arg0 ( we :arg0-of ( break :arg1 ( flash :mod-of of )  )  )  :arg1 ( brain :mod-of ( though :mod-of throughout )  :polarity comedian )  )  )  :arg1 humour :op4-of ( and :op1 ( person :mod still :name ( name :op1 henry )  )  :op2 ( he :arg0-of slip )  :op3 out )
cause :arg0 ( thing :polarity - )  :arg1 ( choose :arg0 i :arg1 gratification :arg1-of ( stand :arg0 ( i :arg0-of ( guess :arg1 stranger :arg2 ( kind :mod-of dangerous )  )  )  :purpose ( room :mod-of full )  :purpose instant )  :op1-of just )
seek :arg0 ( you :arg0-of ( brick :arg1 wall )  :arg0-of ( lead :arg1 ( possible :arg1 it )  )  )  :arg1 constant
contrast :arg1 ( want :arg0 i :arg1 sometimes :arg1-of ( live :arg0 i )  :arg1-of ( use :arg0 ( i :arg1-of ( float :polarity - )  )  :arg2-of ( resemble :arg1 boat )  )  :arg1-of general )  :arg2 ( name :op1 apollo )
ask :arg0 i :arg1 ( he :arg0-of ( tour :arg1 ever )  :arg1-of ( stand :arg0 another )  )
joy :arg1-of ( sit :arg2 ( shape :arg1 room :arg1-of ( begin :op1-of ( and :op2 ( end :arg1 middle )  )  )  :arg1-of ( have-org-role :arg2 director )  :arg1-of ( do :arg0 ( i :arg0-of ( think :arg1 ( want :arg0 i :arg0-of ( give :arg1 that )  :arg1 ever )  )  :arg1-of journey )  :polarity - )  :arg1-of help )  :manner of )
cause :arg1 ( incarnation :mod new :mode interrogative )  :mod-of this
think :arg0 i
resemble :arg0 i :arg1 actor
fun :poss-of ( good :poss it )
tell :arg0 you :arg1 story :op1-of ( and :op2 ( place :op1-of great )  )  :time always
love :arg0 i :mod-of story
story :mod ( love :arg0 person )
block :arg0 ( person :arg0-of rebel :mod ( organization :name ( name :op1 houthi )  )  )  :arg1 road :time ( capital :mod yemen )
call :arg1 ( disobedience :mod civil )  :arg2 ( conflict :arg0 ( person :arg0-of ( rebel :arg1 ( thing :name ( name :op1 shiite :op2 houthi )  )  )  :poss-of ( government-organization :arg0-of ( govern :arg1 ( country :name ( name :op1 yemen )  :source-of capital :wiki yemen )  )  :op1-of and )  )  :arg1 ( city :name ( name :op1 sanaa )  :wiki sana'a )  )
say :arg0 ( person :arg0-of ( support :arg1 ( organization :name ( name :op1 houthi )  )  )  :arg0-of ( occupy :arg1 monday :location ( city :name ( name :op1 sanaa )  :wiki sana'a )  :mod ( central :mod-of road )  )  :arg0-of ( have-org-role :arg2 spokesman )  )  :arg1 ( thing :name ( name :op1 houthi )  :op1-of ( party :quant of )  )
block :arg1 ( access :arg1 parliament )
report :arg0 ( media :mod yemen )  :arg1 ( chaos :location capital :mod traffic )
say :arg1 ( report :arg0 ( line :arg0-of ( of :arg1 ( post :arg0 ( country :arg0-of ( lead :arg1 ( call :arg0 action :arg1 this :arg2 ( sunday :mod-of evening )  )  )  :name ( name :op1 yemen )  :wiki yemen )  )  :arg2 newspaper )  )  :arg1 edition )
say :arg0 report :arg1 ( threaten :arg0 ( thing :arg0-of ( meet :arg1 demand :arg1-of recommend :polarity - )  :name ( name :op1 huthi )  )  :arg1 ( escalate :arg1 conflict :degree further )  )
and :arg0-of ( demand :arg1 ( resign :arg0 ( government-organization :arg0-of ( govern :arg1 ( country :arg1-of ( rule :arg0 sunni )  :name ( name :op1 yemen )  :wiki yemen )  )  :arg1-of ( fight :arg0 ( thing :mod shiite :name ( name :op1 houthis )  )  :arg2 ( depend :degree more :polarity - )  )  )  )  )
say :arg0 report :arg1 ( besiege :arg0 ( almost :quant-of ( week :unit-of ( temporal-quantity :quant 2 )  )  )  :arg1 ( capital :mod yemen )  :arg2 ( tribe :mod ( organization :name ( name :op1 houthi )  )  :wiki cossacks )  )
protest :arg0 ( camp :poss ( person :arg0-of ( rebel :time around )  )  )  :arg1 ( access :mod-of ( route :arg1-of major :destination ( city :name ( name :op1 sanaa )  :wiki sana'a )  )  )
continue :arg0 ( clash :arg0 ( town :mod-of ( area :arg1-of surround )  )  :arg1 ( army :poss yemen )  :mod bloody )  :arg1 unabat
ghost :arg1-of ( work :arg0 ( person :arg1-of ( target :arg0 ( person :arg0-of serve :arg1-of ( register :arg0 ( country :name ( name :op1 kenya )  :wiki kenya )  )  :mod civil )  )  )  )
attempt :arg0 ( person :arg0-of serve :arg1-of ( register :arg1-of ( start :arg0 ( country :name ( name :op1 kenya )  :wiki kenya )  )  )  :mod civil :quant all )  :arg1 ( ghost :mod-of ( work :arg0 ( person :arg1-of ( remove :arg0 ( government-organization :arg0-of govern )  )  )  :arg1 payroll )  )
say :arg0 ( state :arg0 ( government-organization :arg0-of govern )  :arg1 next )  :arg1 ( pay :arg0 ( 2 :quant-of ( temporal-quantity :unit week )  )  :arg1 - :arg2 ( employe :arg1-of ( fail :arg2 register )  )  )
suspect :arg0 ( government-organization :arg0-of ( govern :arg1 thousand )  )  :arg1 ( continue :arg0 person :arg1 ( receive :arg1 salary :time ( after :op1 ( leave :arg1 ( service :mod civil )  )  )  )  )
pledge :arg0 ( person :arg0-of ( have-org-role :arg2 president )  :name ( name :op1 uhuru :op2 kenyatta )  )  :arg1 ( curb :arg1 ( corrupt :arg1 ( service :mod public )  )  :time ( after :op1 ( take :arg1 office :time ( date-entity :year 2013 )  )  )  :arg0 person )
and :mod ( other :mod-of malpractice :mod-of finance )  :op1 ( lose :arg0 ( temporal-quantity :unit month )  :arg1 payment )  :op2 ( person :arg0-of ( find :arg1 that :duration ( temporal-quantity :unit year )  :time ( early :time-of ( audit :arg1 this )  )  :time least )  :arg0-of ( work :arg1 ghost )  )
report :arg0 ( company :name ( name :op1 bbc )  :wiki bbc )  :arg1 ( or :arg1-of ( leave :arg0 public )  :op1 ( person :arg1-of die :poss-of service )  )  :time ( after :mod even :time-of ( continue :arg0 ( government-organization :arg0-of govern :arg0-of ( deposit :arg1 into )  )  :arg1 salary :arg1-of ( suspect :arg2 ( person :mod that )  )  )  :time-of ( account :mod bank )  )  :time ( capital :mod-of nairobi )
say :arg0 ( state :arg0 ( government-organization :arg0-of govern :arg0-of ( require :arg1 ( present :arg0 ( person :arg0-of ( serve :arg1 public )  :quant all )  :arg1 ( centre :mod ( identify :arg1 ( temporal-quantity :quant 2 :unit week )  )  )  :purpose ( ensure :arg1 ( capture :arg1 data :manner ( exercise :mod register :mod biometric )  )  )  )  )  )  )  :arg1 next
say :arg1 ( eliminate :arg1 ( excuse :arg1 ( do :arg0 anyone :arg2-of fail )  :arg1-of valid )  :arg2 payroll )
say :arg0 ( person :arg0-of ( work :arg1 anne :mod ghost )  )  :arg1 ( and :arg1-of ( plan :arg0 ( government-organization :arg0-of govern :arg0-of ( stop :arg1 ( issue :arg1-of ( bring :arg0 hence )  :arg1-of ( serve :arg0 ( person :arg0-of ( cleanse :arg1 payroll )  :arg0-of ( use :arg2 ( level :mod both )  :mod also )  :op3-of ( and :op1 ( contribute :arg0 ( exercise :arg0 this :arg1 ( number :arg1-of ( actual :arg0 public )  :arg1-of ( determine :arg0 ( by :op1 service )  )  :arg1-of significant )  )  :arg1 rationalization :arg2 of )  :op2 public )  )  )  )  )  )  )  :op1 cabinet :op2 secretary :op3 ministry :op4 devolution )
hear :arg0 ( date-entity :month 11 )  :arg1 ( person :arg0-of ( advise :arg1 art )  :mod ( surround :arg0 ( 11 :poss ( person :name ( name :op1 helge :op2 achenbach )  )  )  :arg1 scandal :arg2 court )  )  :duration time
declare :arg0 ( company :arg0-of ( bring :arg1 ( case :arg1 2 :arg1-of ( compensate :arg2 ( person :arg1-of ( sue :arg0 ( person :name ( name :op1 berthold :op2 albrecht )  :poss-of heir )  )  :name ( name :op1 achenbach )  :op3-of ( and :op1 ( found :arg1 ( organization :name ( name :op1 aldi )  )  :arg1-of ( have-rel-role :arg0 person :arg2 son )  )  :op2 ( person :name ( name :op1 theo :op2 albrecht )  )  )  )  :arg3 ( monetary-quantity :unit euro )  )  :mod civil )  :arg2 ( before :op1 ( court :mod ( country :name ( name :op1 d√ºsseldorf )  )  :mod district )  )  )  )  :arg1 bankrupt :arg1-of ( process :arg0 5 )
announce :arg0 ( court :arg1-of ( have-org-role :arg0 monday :arg2 spokeswoman )  )  :arg1 news
state :arg0 ( person :arg0-of ( con :op1-of ( and :op2 ( invoice :arg0 ( more :compared-to price )  :arg1 ( person :name ( name :op1 berthold :op2 albrecht )  )  )  )  )  :arg0-of ( purchase :arg1 ( work :arg1 ( car :op3-of ( and :op1 art :op2 antique )  )  )  )  :arg1-of actual :name ( name :op1 achenbach )  )  :arg1 claim :arg1-of say
turn :arg0 ( commission :arg0-of agree )  :arg1 do :arg2 more :mod also
purchase :arg0 ( person :name ( name :op1 achenbach )  )  :arg1 ( valuabl :time 121 )  :arg2 ( person :name ( name :op1 albrecht )  )  :arg3 ( monetary-quantity :unit euro )
need :arg0 child :arg1 root :op1-of ( and :op2 wing )
teach :arg0 he :arg1 school :arg2 23 :time ( principal :domain ( he :op1-of ( 44 :quant-of ( temporal-quantity :unit year )  )  )  )
and :location-of ( live :arg1 ( adult :arg0-of ( grow :arg1 full :arg1-of ( teach :mod-of ( time :time-of ( get :arg0 richter :arg1 ( know :arg1 ( schoolchildren :quant many )  :arg0 richter )  )  )  )  )  )  :time now )
contrast :arg1 ( conventional :domain ( method :poss he )  :polarity - :time sometimes )  :arg2 ( base :arg1 they :arg2 ( desire :arg1 ( see :arg0 child :arg1 adult )  )  :time always )
czech :mod-of ( thing :arg1-of ( peak :arg1-of ( know :manner ( good :degree most )  )  :topic mount )  :name ( name :op1 giant :op2 mountains )  )
love :arg0 richter :arg1 ( paint :mod this )  :manner ( childhood :mod-of ( home :source-of picture )  )
bear :arg1 richter :arg2 slash :location today :time ( date-entity :year 1930 )
age :arg0 ( temporal-quantity :unit year )  :arg1 ( he :arg1-of ( interest :arg0 4 :arg2 ( become :arg1 he :arg2 ( teach :arg0 ( school :mod secondary :mod-of pupil )  :arg1 14 )  :time after )  )  )  :mod early
dispossess :arg0 1 :arg1 ( country :arg1-of ( live :arg0 ( late :op1 year )  :location ( country :name ( name :op1 sudetenland )  )  )  :name ( name :op1 germany )  :wiki germany )
within :op1 ( temporal-quantity :op1-of ( half :arg2-of ( leave :arg0 family :arg1 home )  )  :unit hour )
hold :arg1 ( camp :arg1-of ( spend :op2-of ( after :op1 ( few :op1 ( temporal-quantity :unit month )  )  :time-of ( move :arg0 they :arg1 ( train :mod good )  :arg2 ( country :name ( name :op1 bavaria )  )  :time ( date-entity :year 1946 )  )  )  )  )
come :arg1 ( he :arg0-of ( live :location ( country :name ( name :op1 upper :op2 franconia )  )  :manner ( thing :name ( name :op1 senkendorf )  )  :manner that )  )
teach :arg1-of train :location ( country :name ( name :op1 bamberg )  )
and :op1 ( take :arg0 school :arg1 train :arg3 ( country :name ( name :op1 bamberg )  )  :op1-of ( and :arg0-of ( walk :arg1 ( across :op1 ( town :destination school )  )  :arg3 right )  :poss-of ( home :arg4-of ( return :arg0 6 :arg1 ( distance-quantity :quant 3 :unit kilometer )  :arg1-of journey )  :poss ( richter :arg0-of ( go :arg1 ( foot :location-of week )  :arg4 ( station :arg1-of ( near :arg2 then :degree most )  :mod train )  )  )  )  )  )
bed :arg0-of ( sleep :arg0-of ( sleep :arg1 ( country :name ( name :op1 bamberg )  )  :arg1-of ( quarter :arg0 ( temporal-quantity :quant 2 :unit month )  :arg1-of ( share :arg0 ( he :arg1-of ( study :arg0 ( person :mod fellow :quant 15 )  )  )  )  )  )  :arg1 after :arg2-of ( give :arg0 richter :arg1 ( organization :name ( name :op1 red :op2 cross :op3 home )  )  )  )
and :op1 ( exam :poss state :poss ( he :arg0-of ( teach :arg1 ( candidate :prep-as-of ( spend :arg0 ( date-entity :year 1951 )  :arg1 ( temporal-quantity :quant 3 :unit ( year :mod further )  )  :op1-of after )  )  :arg2 ( date-entity :year 1954 )  )  )  )
and :op1 ( apply :arg0 he :arg1 ( place :arg1-of ( free :arg3 ( teach :arg0 ( school :location ( country :name ( name :op1 kollbach )  )  )  )  )  :polarity - )  :arg2 ( country :name ( name :op1 upper :op2 bavaria )  )  :time ( since :op1 ( country :name ( name :op1 upper :op2 franconia )  )  )  )  :op2 ( receive :arg1 post :time ( date-entity :day 1 :month 11 :year 1954 )  :arg0 he )
flat :mod ( service :mod first )  :mod-of ( build :arg0 ( he :part ( room :mod woman )  )  :arg1 school )
move :arg1 ( he :poss-of ( flat :mod ( service :mod room )  )  :poss-of school )  :arg2 ( accommodation :arg0-of ( teach :arg1 3 :arg1-of ( build :mod new )  )  :location ( door :op1-of next )  )  :time ( date-entity :year 1958 )
buy :arg0 richter :arg1 ( house :time ( after :op1 ( close :arg0 this :arg1 ( school :location ( country :name ( name :op1 kollbach )  )  )  :time ( date-entity :year 1968 )  )  )  )  :time ( date-entity :year 1980 )
and :op1 ( associate :arg0 ( until :op1 then )  :arg1 ( country :name ( name :op1 petershausen-kollbach )  )  :arg2 ( district :mod-of school )  )  :op2 ( class :quant 3 :value 5 )
hall :mod ( town :op3-of ( slash :op1 69 :op2 ( accommodate :arg0 ( class :mod this )  :arg1 school )  :time ( date-entity :year 1968 )  :time year )  :time today )
locality :location-of ( leave :arg1 ( school :arg0-of ( found :arg1 ( organization :name ( name :op1 indersdorf :op2 schools :op3 association )  )  :condition-of ( school :mod primary )  )  :mod only )  )
and :op1 ( decide :arg0 ( person :arg0-of ( avoid :arg1 ( derank :mod ( position :location school )  )  )  :arg1-of ( become :arg2 ( succeed :arg0 richter :arg1 ( now :mod-of small )  )  )  :name ( name :op1 georg :op2 sigl )  )  :arg1 ( move :arg1 ( then :time-of dean )  :arg2 ( thing :name ( name :op1 karlsfeld )  )  :arg0 person )  )
cause :op2-of ( and :op1 ( continue :arg0 ( country :arg1-of grow :name ( name :op1 petershausen )  )  :arg1 ( move :arg0 ( child :op1-of ( and :arg1-of ( retire :arg0 richter )  )  )  :arg1-of possible :arg2 ( build :arg1 9 :arg1-of ( extend :time since )  :duration ( temporal-quantity :unit day )  :mod present )  :source ( onward :time ( date-entity :year 1982 )  )  :time after )  )  :op3 ( person :arg0-of teach )  )
praise :arg0 richter :arg1 ( manner :arg3-of ( have-org-role :arg0 ( person :name ( name :op1 ludwig :op2 g√∂tz )  )  :arg1 generosity :arg2 mayor :arg2-of ( secure :arg1 ( fund :mod municipality )  :arg1-of ( possible :time ( allow :arg0 council :arg1 ( use :arg1 ( subsidize :arg1 ( work :arg1 extra :arg1-of ( govern :arg0 guideline )  :arg1-of ( build :arg0 school )  )  )  :arg2 ( pay :arg3 ( work :arg1 ( extension :time ( date-entity :year 1997 )  )  :mod this )  )  )  :polarity - )  )  )  :arg2-of ( build :arg1 work :op1-of ( and :mod additional :op2 room :op3 room )  :purpose cellar )  :time then )  :mod uncomplicat )  :op1-of ( and :op2 spirit )
recall :arg0 ( person :arg0-of ( have-org-role :arg1 school :arg2 mayor )  :arg0-of ( have-rel-role :arg1 ( of :mod great )  :arg2 friend )  :name ( name :op1 &quot; )  )  :arg1 richter :arg2 gratitude
mean :arg1 law :op2-of ( and :op1 justice :op3 ( recommend :arg0 ( government-organization :arg0-of ( answer :arg1 school )  :arg0-of govern :arg0-of ( give :arg1 presentation )  :arg0-of ( represent :arg1 ( give :arg1-of reply :arg1-of ( speak :arg0 ( he :arg0-of ( love :arg1 richter )  :arg0-of ( forget :arg1 richter )  :poss-of ( career :mod whole )  :poss-of throughout )  )  )  )  )  :arg1 1 :arg1-of ( forget :arg0 council )  )  :op4 ( hear :arg0 ( he :arg0-of ( teach :arg1 young )  :arg0-of ( implement :arg1 duly )  )  :arg1 amr-unknown )  )
say :arg0 ( thing :op1-of ( and :op2 ( mean :arg1 wing )  :op3 ( root :arg0 ( child :arg2-of ( give :arg0 1 :arg1 2 )  )  :arg1 year :arg2 old )  )  )  :arg1 84
contrast :arg1 experience :arg2 ( achieve :arg0 ( he :arg0-of ( clear :polarity - )  :arg0-of ( mean :arg1 ( he :arg0-of ( teach :mod also )  )  )  )  :arg1 wheth :arg2 ( child :mod 6 )  :op1-of ( or :op2 pupil )  :polarity - :time always :time 1 )
method :arg1-of ( case :arg0 any )  :mod richter :mod ( conventional :polarity - )
give :arg0 they :arg1 punish :arg1-of resemble :arg2 ( or :op1 ( write :arg1 line )  :op2 ( serve :arg1 detention )  )  :polarity - :time ( get :arg0 ( child :location school )  :arg2 ( fight :arg1 example )  )
and :op1 ( buy :arg0 ( richter :arg0-of ( let :time then )  )  :arg1 ( pair :arg1 ( glove :topic boxing )  :quant 2 )  :arg1-of ( cost :arg0 even :arg2 council )  )  :op2 ( fight :arg0 ( antagonist :quant 2 )  )  :op3 ( produce :arg0 this :arg1 ( eye :arg1-of black )  :frequency occasional )
nurture :arg0 richter :arg1 ( relation :arg0 ( have-org-role :arg0 ( person :name ( name :op1 ludwig :op2 g√∂tz )  )  :arg1 ( organization :name ( name :op1 csu )  )  :arg2 mayor :manner then )  :domain-of good )  :purpose ( benefit :arg0 school )
encourage :arg1 richter :arg1-of ( follow :arg0 - :arg2 retire )  :arg2 ( run :arg0 ( have-org-role :arg1 ( organization :name ( name :op1 csu )  )  :arg2 mayor )  :arg1 candidate :purpose ( elect :arg1 ( politics :mod-of allegianc )  )  :time ( onto :op1 ( council :arg1-of local )  )  :time ( date-entity :year 1996 )  )
and :op1 ( join :arg0 ( richter :arg0-of ( finish :arg1 sixth )  )  :arg1 ( organization :name ( name :op1 csu )  )  )
distance-quantity :op1 ( 180 :op1-of ( 3 :quant-of ( temporal-quantity :unit day )  )  )  :unit kilometer
take :arg0 ( cyclist :consist-of health :mod ( thing :name ( name :op1 hr4-cycle :op2 tour )  )  )  :arg1 ( breathe :arg1 resort :op1-of ( and :op2 ( thing :name ( name :op1 bad :op2 salzhausen )  )  :poss-of 700 )  )
or :op1 ( country :mod particular :name ( name :op1 schotten )  )  :poss-of ( rest :arg1-of ( take :arg0 cyclist :arg1-of ( tour :compared-to-of ordinary )  :arg2 nothing :location ( country :name ( name :op1 bad :op2 salzhausen )  )  )  )
resort :arg1-of ( low :arg0 too :arg1-of ( strike :arg0 ( number :mod sheer :quant-of ( rest :arg1 friday )  )  )  )  :arg1-of ( break-up :arg1-of ( enjoy :arg0 ( person :arg0-of ( participate :arg1 ( tour :purpose cycle )  )  )  :manner ( together :location-of entourag )  :op1-of ( and :op2 ( attend :arg0 they :arg1 ( party :arg1-of ( open :arg0 700 )  :mod air )  :location ( country :name ( name :op1 schotten )  )  :location ( thing :name ( name :op1 alteburgpark )  )  :time late )  )  )  :mod all )  :location ( country :name ( name :op1 bad :op2 salzhausen )  )
band :arg0 ( person :arg0-of ( participate :arg1 route )  :arg0-of ( listen :arg1 ( bad :arg1 thursday )  :manner concert :op1-of and )  :arg1-of meet :op1-of and :op2-of ( and :arg1-of ( discover :arg0 newly )  :arg1-of ( celebrate :arg0 logo )  :arg1-of ( cycle :arg0 under )  :op1 along )  )  :arg1 ( bake :arg1 van )
and :mod-of down :op1 ( stage :arg1-of ( attack :arg0 rider :location ( country :name ( name :op1 schotten )  )  )  )  :op1-of ( distance-quantity :quant 60 :unit kilometer )  :op2 ( thing :mod-of friday :name ( name :op1 bad :op2 salzhausen )  )  :poss-of ( business :mod ( further :mod then )  )
schwing :op2-of ( name :name-of ( thing :mod-of ( d√∂r :arg0-of ( have-org-role :arg1 ( company :arg1-of ( bad :arg0 ( and :arg0-of ( greet :arg1 ( and :op1 sportsman )  :arg2 woman )  :op1 ( person :arg0-of ( have-org-role :arg1 ( country :name ( name :op1 bad :op2 salzhausen )  )  :arg2 mayor )  )  :op2 ( start :arg0 ( line :arg1-of ( ride :arg0 municipality :arg2 ( thing :name ( name :op1 hans :op2 - :op3 peter :op4 seum )  )  )  )  :arg1 ( thing :name ( name :op1 bad :op2 vilbel )  :poss bike )  )  )  )  )  :arg2 boss )  )  )  :op1 petra :op3 - )
and :arg1-of ( refresh :arg0 sort :arg2 body :arg2-of ( prepare :arg1 ( and :arg0-of ( bake :arg1 ( apple :quant 85 )  )  :arg1-of local :op1 ( country :name ( name :op1 ranstadt )  :source-of woman )  :op2 ( country :name ( name :op1 nieder-mockstadt )  )  )  :op3-of ( and :mod all :op1 food :op2 drink )  )  )  :op1 mind :op1-of ( and :op2 plum :op3 cheesecak )  :op2 ( let :arg0 ( rider :mod intrepid )  :arg1 ( melt :arg1 mouth )  :time ( cake :mod streusel )  )
order :arg0 ( he :arg1-of ( same :arg0 ( thing :arg1-of praise :arg1-of rid :arg1-of ( possible :arg2-of ( local :arg1 woman :mod only )  )  :arg1-of ( cake :arg0 such )  :name ( name :op1 &quot; )  )  :arg2 time )  )  :arg1 another :arg2 slice
possible :arg1 ( acquire :arg0 rider :arg1 ( drink :mod cold )  :time ( stand :mod drink :poss ( club :mod ( gymnasium :mod ( country :name ( name :op1 gei√ü-nidda )  )  )  )  )  )
applaud :arg1 ( reap :arg1 enthusiastic :mod musical :op2-of ( and :op1 ( and :op1 ( thing :name ( name :op1 the )  )  :op2 ( person :arg0-of visit :arg1-of ( know :mod well :mod melodi )  :arg1-of entertain )  :op3 operetta )  )  )
atmosphere :arg0-of ( effect :arg1-of relax )  :mod lovely :topic park
mean :arg0 ( he :arg0-of ( partner :arg1 certain )  :arg0-of ( head :arg1 lady )  :arg1-of ( massage :arg0 1 )  :arg1-of ( receive :arg0 gentleman :mod even )  )  :arg1 it :arg2 ( he :arg0-of ( earn :arg1 ( he :arg0-of ( come :arg1 off :mod that :time ( early :mod-of day )  )  :arg0-of ( fix :arg1 bicycle )  :poss-of chain )  :op1-of ( after :mod-of all )  )  )
interview :arg0 ( person :arg0-of ( have-org-role :arg2 mayor )  :op1-of ( and :arg0-of ( work :arg1 ( do :arg1 ( thing :name ( name :op1 rainer :op2 janke )  )  )  :mod still )  :op2 ( company :arg1-of ( have-org-role :arg2 boss )  )  )  )  :arg1 they :arg2 front :location fountain :op1-of ( and :arg2-of ( give :arg0 ( opportunity :mod radio )  :arg1 ( thumb :arg2 ( thing :name ( name :op1 bad :op2 salzhausen )  )  :mod big )  )  :op2 ( report :arg1 trinkkurhau :arg2 ( inn :mod ( hole :arg1-of ( water :arg0 meanwhile )  )  )  )  )
possible :arg1 ( rest :mod short )  :arg1-of ( tour :arg1-of ( head :arg1-of ( work :arg0 ( person :arg0-of ( work :arg1 ( do :arg0 he :arg1 ( involve :arg1 ( technology :arg1-of ( local :arg0 only )  )  )  )  :quant lot )  :arg0-of ( head :arg1 promotion :mod even )  :name ( name :op1 tobias :op2 hagen )  )  :time ( since :op1 ( start :time ( date-entity :year 2004 )  )  )  )  )  )
and :op1 ( entry :mod ( company :name ( name :op1 facebook )  :wiki facebook )  )  :op1-of and :op2 ( write :arg0 ( he :arg0-of ( use :arg1 ( truck :poss ( he :arg0-of ( pick :arg1 ( strong :arg1 ( team :mod police )  :arg2 15 )  )  )  )  :arg2 ( communicate :arg0 ( and :arg0-of ( need :arg1 check :mod also )  :op1 ( telephone :quant 3 )  :op2 radio )  :arg1 and :arg2 colleagu )  )  )  :arg1 report :mod also )
contrast :arg1 rider :arg2 ( and :op1 ( organization :name ( name :op1 &quot; )  )  :op2 ( come :arg1 westfalia :mod also :op1-of ( and :op2 taunu :op3 even :op4 ( town :mod many )  )  :purpose ( explain :arg0 ( he :arg1-of ( come :accompanier majority :time rider :time of )  )  :arg1 or )  )  :op3 fulda )
depend :arg0 ( person :arg0-of participate :quant number )  :arg1 ( little :topic ( number :quant-of ( place :location-of ( stay :arg1 they :arg1-of possible )  )  )  )
accommodate :arg1 ( rider :arg0-of ( put :arg1 ( rider :mod hotel :quant 2 )  :purpose ( lodge :arg1 1 :mod ( style :mod hostel )  )  )  :mod category )
impression :arg0 they :arg1 ( and :op1 happy :op2 ( mean :arg1 ( resort :arg0 memory :mode expressive )  :arg2 bye )  )  :manner ( good :poss ( rider :arg1-of set :poss-of again )  :poss road )
nice :arg0 it :arg1 ( country :name ( name :op1 &quot; )  )  :arg2 ( shout :arg0 they :arg1 ( wave :arg0 they :arg1 goodbye )  :mode expressive )  :degree very
possible :arg1 ( take :arg0 group :arg1 ( rest :mod short )  :time ( after :op1 arrive )  )
contrast :arg1 ( request :arg1 ( go :arg0 rider :arg4 ( thing :mod idyllic :name ( name :op1 alteburgpark )  )  )  :op1-of then :time evening )
and :arg2-of ( guide :arg0 ( organization :name ( name :op1 gts )  )  :arg1 ( manage :arg1 ( organization :name ( name :op1 schotten :op2 association :op3 for :op4 tourism :op5 and :op6 town :op7 marketing )  )  )  :op1-of under )  :op1 ( acquire :arg0 such :arg1 ( ambience :mod festive :mod lovely )  :arg1-of ( nibble :arg1-of ( nice :arg0 too )  :quant plenty )  :arg2-of ( park :arg1 ( chill :arg1 ( wine :mod federwei√ü )  :mod well )  )  )
welcome :arg0 ( and :op1 ( person :arg0-of ( have-org-role :arg1 marku :arg2 chairman )  :arg0-of ( have-org-role :arg1 section :arg2 member :prep-as-of capacity )  :arg0-of ( have-org-role :arg1 board :arg2 boss )  :mod mayores :name ( name :op1 susanne :op2 schaab )  )  :op2 gt :op3 ( thing :name ( name :op1 wolfgang :op2 wagner :op3 - :op4 sachs )  )  )  :arg1 ( person :arg0-of visit )
delight :arg0 visibly :arg1 ( trade :arg1-of ( roar :arg0 3 )  )
open :arg0 ( person :mod dj :name ( name :op1 tobias :op2 hagen )  )  :arg1 ( stage :mod dance )
move :arg1 ( dance :arg1 day )  :arg1-of ( show :arg0 ( cyclist :domain-of happy )  :arg1-of chance :arg2 ( bicycle :poss ( feat :mod sport )  )  :time ( air :arg1-of ( open :arg0 early )  )  )
crowd :mod mass :mod ( rider :arg2-of ( attract :arg0 ( atmosphere :arg1-of pleasant )  :arg1 ( number :arg1-of ( increase :arg0 ( guest :arg1-of appear )  )  :quant-of ( person :arg1-of ( local :arg0 much )  )  )  )  )
and :op1 ( country :name ( name :op1 birstein )  :poss-of ( point :arg1-of ( call :arg0 rider :arg2 ( program :poss ( country :name ( name :op1 trenkwaldern )  )  :topic ( tour :arg1 concert )  )  :time day )  :mod stop )  )  :op1-of ( and :op2 ( thing :name ( name :op1 bad :op2 orb )  )  )
arrive :arg0 sportsman :arg1 ( woman :op1-of and )  :arg4 ( thing :name ( name :op1 bad :op2 vilbel )  )  :direction back :mod again :time ( after :op1 ( distance-quantity :quant 180 :unit kilometer )  :op2 ( cycle :arg1 yesterday )  )  :time once
policeman :mod-of ( over :op1 ( arrest :arg1 ( of :mod ten )  :arg1-of ( plot :arg0 ( country :name ( name :op1 turkey )  :wiki turkey )  :op1-of ( against :op2 gov :op3 t )  )  )  )
say :arg0 ( person :arg0-of ( have-org-role :arg1 ( country :arg1-of ( govern :arg0 ( government-organization :arg0-of ( plot :arg1 against )  )  )  :name ( name :op1 turkey )  :wiki turkey )  :arg2 officer )  :arg1-of ( detain :arg2 suspect )  :arg2-of ( total :arg1 of )  :poss-of ( police :poss 33 )  )  :arg1 outlet :arg2-of ( local :arg1 media )
comment :arg0 ( person :arg0-of ( have-org-role :arg1 police :arg2 official )  )  :polarity - :time immediate
say :arg0 ( thing :name ( name :op1 daily :op2 news )  )  :arg1 detaine :arg2 ( person :arg0-of ( have-org-role :arg2 officer )  :arg1-of ( rank :arg1-of high )  :quant 14 )
probe :arg3-of ( target :arg0 ( government-organization :arg0-of govern )  :arg1 ( person :arg0-of ( have-org-role :arg1 ( government-organization :arg0-of ( govern :arg1 4 )  :arg1-of ( have-org-role :arg0 person :arg2 minister )  )  :arg2 official )  :arg1-of corrupt :arg1-of ( involve :arg2 they :arg3 ( of :mod some )  :mod last :quant 12 )  )  )
and :arg1-of allege :arg1-of arrest :op1 ( tap :arg0 ( number :quant-of ( policeman :mod ( country :name ( name :op1 turkey )  :wiki turkey )  )  )  :arg1 ( number :mod phone )  :arg2 ( gang :arg1-of organize :arg2-of ( criminal :arg1 7 )  )  )
and :op1 ( person :arg0-of ( describe :arg1 action :manner ( conduct :arg0 ( person :arg0-of ( have-org-role :arg2 ( minister :mod prime )  :time ( then :mod back )  )  :arg0-of ( have-org-role :arg1 ( religious-group :name ( name :op1 islamism )  :wiki islam )  :arg2 cleric )  :name ( name :op1 fethullah :op2 gullen )  )  :arg1 activity )  )  :arg0-of ( have-org-role :arg1 ( country :name ( name :op1 turkey )  :wiki turkey )  :arg2 president )  :name ( name :op1 recep :op2 tayyip :op3 erdogan )  )  :op2 other :op3 power
back :direction school :location ( country :name ( name :op1 ukraine )  :wiki ukraine )  :poss ( child :quant ( all :polarity - )  )
school :arg0 ( date-entity :day 1 :month 9 )  :arg0-of ( reopen :arg1 ( door :poss ( country :name ( name :op1 ukraine )  :wiki ukraine )  )  :arg2 monday :time ( after :op1 ( holiday :mod summer )  )  )  :arg1 most :location across
resemble :arg1 ( person :arg0-of ( have-org-role :arg1 family :arg2 ( minister :mod prime )  )  :arg1-of ( have-rel-role :arg0 ( person :op1-of ( and :mod ( tradition :mod-of ( big :mod-of day )  )  )  )  :arg2 daughter :arg4 school )  :name ( name :op1 arseny :op2 yatsenyuk )  )  :arg2 ( person :arg0-of ( have-rel-role :arg2 parent )  :mod ( country :name ( name :op1 ukraine )  :wiki ukraine )  :mod other :poss-of thousand )
contrast :arg1 ( reopen :arg1 school :polarity ( - :polarity-of all )  )  :arg1-of ( tell :arg0 he :arg1-of while :arg2 ( journalist :arg1-of wait )  )  :arg2 ( commit :arg2 ( defend :arg0 there :arg1 country :purpose ( generation :time future )  )  )
hold :arg1 ( ceremony :mod 9 )  :location ( school :mod every )  :polarity -
sky :mod ( peaceful :mod every :polarity - )  :mod ( country :name ( name :op1 ukraine )  :wiki ukraine )
fight :arg0 we :arg1 ( sky :mod peaceful )
of :mod whole :mod ( country :mod-of ( person :arg0-of ( fight :arg1 ( peaceful :mod-of sky )  )  :mod ( country :name ( name :op1 ukraine )  :wiki ukraine )  :mod front )  :name ( name :op1 ukraine )  :poss-of ( huge :mod-of joint )  :wiki ukraine )
attend :arg0 ( person :arg0-of ( teach :arg1 of :arg2 ( person :name ( name :op1 aleksan )  )  )  :arg1-of ( have-rel-role :arg0 ( person :arg0-of ( speak :arg1 ( country :name ( name :op1 russia )  :wiki russia )  )  )  :arg2 daughter )  :mod head )  :arg1 school
hope :arg0 we :arg1 ( and :op1 ( establish :arg1 peace :location here :time final )  :op2 ( receive :arg0 child :arg1 ( knowledge :location-of ( useful :arg1 ( life :time future )  )  )  )  )
and :arg0-of ( give :arg1 flower :arg2 ( person :arg0-of teach )  )  :arg1-of ( wear :arg0 child )  :manner-of ( celebrate :arg1 ( day :time back )  :manner tradition )  :op1 ( shirt :arg1-of embroider )  :op2 ( carry :arg1 ( balloon :arg1 school )  )
possible :arg1 ( find :arg0 ( company :name ( name :op1 bbc )  :wiki bbc )  :arg1 ( have-org-role :arg0 ( person :name ( name :op1 rona :op2 fairhead )  )  :arg2 ( chief :mod formidable )  )  :time need )
conclav :mod inner :op4-of ( and :op1 ( trail :arg0 ( she :arg1-of come )  :arg1 ( cloud :arg1 glory )  )  :op2 ( banking :mod-of world )  :op3 ( manage :arg1 media )  )  :poss ( party :mod ( political-party :name ( name :op1 tory )  :wiki conservative_party_[uk] )  )
experience :arg0 she :mod frontline :time indeed
begin :arg0 ( and :op1 ( person :mod globe :name ( name :op1 bain )  )  :op2 ( thing :arg4-of ( progress :arg0 ( organization :name ( name :op1 morgan :op2 stanley )  :op1-of ( and :op2 ( organization :name ( name :op1 bombadier )  )  :op3 ( thing :name ( name :op1 ici )  :wiki istanbul_cooperation_initiative )  :op4 ( world :mod media :mod ( person :name ( name :op1 pearsons )  )  )  )  )  :arg1 ( country :arg0-of ( manage :mod-of consultant )  :name ( name :op1 co )  )  :time then )  )  )  :arg1 ( career :poss she )
junior :mod-of ( male :mod ( go :arg0 ( she :arg0-of ( have-org-role :arg1 ( newspaper :name ( name :op1 the :op2 financial :op3 times )  :wiki financial_times )  :arg2 chief )  :arg0-of ( resign :arg1 ( job :mod top )  :quant ( temporal-quantity :quant 7 :unit year )  )  :poss-of executive )  :arg1 parent :arg4 company )  :mod-of colleague )
say :arg0 ( she :arg0-of ( pay :arg1 off )  )  :arg1 1
sturdy :degree too :domain ( rate :arg1 she :arg2 politics )
recommend :arg0 ( he :arg0-of ( bring :arg1 ( expertise :arg1-of private )  :arg2 ( country :name ( name :op1 whitehall )  )  )  :arg0-of ( look :location ( company :arg1-of ( head :arg0 ( person :name ( name :op1 lord :op2 browne )  )  :time former )  :name ( name :op1 bp )  :wiki bp )  :arg1 bring )  )  :arg1 ( she :arg0-of ( become :arg1 she :arg2 ( person :arg0-of ( advise :arg2 ( office :mod cabinet )  )  )  )  )  :arg2 ( person :name ( name :op1 david :op2 cameron )  :wiki david_cameron )
councillor :arg2-of ( have-org-role :arg0 ( person :domain ( person :arg0-of ( have-rel-role :arg1 she :arg2 husband )  )  )  :arg1 ( political-party :name ( name :op1 tory )  :wiki conservative_party_[uk] )  :time former )
chalice :arg2-of ( poison :arg0 ( i :arg0-of ( have-org-role :arg2 ( chairman :mod back )  )  :arg0-of describe )  :arg1 job )
contrast :arg0 ( structure :mod ( company :name ( name :op1 bbc )  :wiki bbc )  :mod ( only :polarity ( - :mod-of ( inner :mod-of paradox )  )  )  )  :arg1 ( heart :location-of ( entity :op3-of ( and :op1 vast :op2 complex )  )  :part-of ( life :mod public )  )
contrast :arg1 ( outward :mod also )  :arg2 ( and :op1 hierarchy :op2 ( concern :arg0 public :arg1 ( voice :arg1-of ( manage :arg1-of ( own :arg0 ( company :name ( name :op1 bbc )  :wiki bbc )  :purpose-of ( mean :arg1 ( direction :arg1-of ( trust :arg1-of ( face :arg0 inward :time 2 :time upper :time tier :time of )  )  )  )  )  )  )  )  :op3 ( thing :arg0-of ( go :arg1 awry :arg1-of disquiet )  )  )
duopoly :arg0-of ( call :arg1 ( reform :arg1 ( branch :op1-of and )  :arg1-of complete :mod root )  )  :domain this :mod ( untenable :degree almost )
contrast :arg1 ( risk :arg0 ( they :arg0-of ( put :arg1 job :arg2 case )  )  :arg1 ( and :op1 ( come :arg1 ( have-org-role :arg1 ( country :mod-of ( dynasty :domain-of complex )  :name ( name :op1 china )  :wiki china )  :arg2 ( chairman :mod incoming )  )  )  :op2 ( crash :arg1 around :arg1-of process )  :op3 ( dismantle :arg1 institution )  )  )
difficult :arg1-of ( call :arg0 it )
and :arg1-of ( see :arg0 ( person :arg0-of ( keen :arg1 plenty )  :arg0-of ( tough :arg1 ( enough :polarity - )  )  )  :arg1-of ( cut :arg0 ( company :name ( name :op1 bbc )  :wiki bbc )  )  )  :arg2-of ( size :arg0 down :arg1 power )  :op1 ( status :arg1-of ( overhaul :arg0 finance )  )
certainti :arg1-of ( challenge :arg0 ( company :arg0-of ( circle :arg1 licence :arg2 ( and :op1 ( fraught :domain ( negotiate :arg1 fee :arg2 cosy :location ( company :beneficiary-of ( danger :mod especial )  :name ( name :op1 bbc )  :wiki bbc )  :mod imminent )  )  )  :arg4 ( close :mod ever )  )  )  :arg2 ( technology :mod new )  )  :mod old
sure :arg1 ( buy :arg0 ( country :name ( name :op1 britain )  :wiki united_kingdom )  :arg1 amr-unknown :arg1-of ( public :arg0 year )  :concession-of ( great :degree most )  :op1-of modest :prep-with-of ( world :poss ( enterprise :op1-of media )  )  :time sum )
tell :arg0 ( company :name ( name :op1 bbc )  :wiki bbc )  :arg1 ( story :mod good )  :arg2 day :condition ( and :op1 ( reach :arg1 96 :arg1-of claim )  :op2 ( household :mod-of ( cent :unit-of monetary-quantity )  )  :op3 ( cost :arg0 output :arg1 each :time just )  )
popularity :time-of ( rise :arg1 53 :arg3 ( monetary-quantity :arg1-of ( support :time ( today :time-of ( against :op1 31 :op2 ( monetary-quantity :quant-of ( temporal-quantity :quant 10 :unit year )  :unit cent )  )  )  )  :unit cent )  :degree ( more :degree-of amr-unknown )  :mod apparent )
and :arg1-of ( pattern :arg1-of change :op1-of ( and :op2 ( catch-up :arg0 ( i :arg0-of ( receive :arg1 ( headline :mod news )  )  :poss-of ( phone :arg1-of mobile )  )  :arg1 ( program :arg1-of miss )  )  )  )  :op1 ( watch :arg0 ( this :mod-of ( day :unit-of temporal-quantity )  )  :arg1 iplay )  :op2 ( use :arg1 ( company :name ( name :op1 bbc )  :wiki bbc )  )
contrast :arg2 ( remain :op1-of ( and :op2 ( love :arg1 much )  :op3 formidable :op4 institution )  )
need :arg0 it :arg1 ( have-org-role :arg1 formidable :arg2 chairman :arg3 ( hope :arg0 i :arg1 ( find :arg1 one )  )  )
disparage :arg0 ( state :name ( name :op1 texas )  :wiki texas )  :arg1 ( person :arg0-of ( tweet :arg1 unauthoriz )  :name ( name :op1 perry )  :wiki rick_perry )
indict :arg0 ( he :arg0-of criminal :arg0-of ( charge :arg2 ( abuse :arg1 power )  )  :poss-of ( center :poss ( political-party :arg0-of ( disparage :arg1 image :arg2 of )  :arg0-of ( tweet :arg1 ( person :arg0-of ( verify :arg1 account )  :arg2-of ( include :arg0 night :arg1 sunday )  :name ( name :op1 rick :op2 perry )  :wiki rick_perry )  )  :name ( name :op1 republican )  :poss-of ( state :name ( name :op1 texas )  :wiki texas )  :wiki republican_party_[united_states] )  :poss ( attorney :wiki - )  )  )  :arg1 ( district :mod democratic )
tweet :arg1 ( person :arg1-of ( delete :mod late )  :arg1-of follow :arg1-of ( disavow :arg0 account :mod that :op1-of post )  :mod another :name ( name :op1 perry )  :wiki rick_perry )
tweet :arg0-of ( go :arg1 unauthoriz :mod just )  :arg1 account
say :arg0 ( i :arg0-of ( take :arg1 it :arg1-of condone :arg1-of ( do :arg0 i )  :arg2 down :op1-of ( and :arg1-of tweet )  :polarity - )  )  :arg1 ( post :op1 late )
return :arg1 ( person :arg0-of ( seek :arg1 message :arg2 comment )  :arg0-of ( have-org-role :arg1 ( person :name ( name :op1 perry )  :wiki rick_perry )  :arg2 aide )  )  :polarity - :time immediate
send :arg1 ( person :arg0-of ( do :arg1 it )  :name ( name :op1 perry )  :wiki rick_perry )  :arg1-of tweet :arg1-of ( clear :polarity - )  :arg1-of account :arg1-of verify :arg1-of ( actual :arg1-of ( post :arg1-of feed )  )
drunken :arg0-of ( drive :arg1 4 :arg2-of ( convict :arg1 ( person :arg2-of ( post :arg0 ( tweet :time ( early :op1 ( date-entity :year 2013 )  )  )  :arg1 ( image :arg1-of mock :mod unflatter )  )  :name ( name :op1 rosemary :op2 lehmberg )  :poss ( organization :name ( name :op1 travis :op2 county :op3 district :op4 attorney )  )  )  )  )
grand :mod-of ( jury :arg2-of ( lead :arg0 ( person :arg0-of ( refuse :arg1 ( resign :arg1 she )  :arg2 ( date-entity :year 2016 )  )  :arg0-of ( veto :arg1 fund :arg2 ( office :poss ( person :arg0-of ( have-org-role :arg2 president )  :poss-of ( candidate :mod potential )  )  )  )  :name ( name :op1 perry )  :wiki rick_perry )  :arg1 ( indict :arg0 ( temporal-quantity :unit ( month :mod this )  )  :arg1 ( person :name ( name :op1 perry )  :wiki rick_perry )  )  )  :location ( city :name ( name :op1 austin )  :wiki austin,_texas )  )
contrast :arg1 ( blood :arg1-of ( drive :arg0 ( i :arg0-of ( do :arg1 it :arg2-of ( mean :arg1 ( read :arg1-of caption :arg1-of tweet )  )  :polarity - :time always )  )  :arg1-of ( drink :arg0 ( i :arg0-of ( indict :arg1 ( person :arg0-of ( call :arg1 i :arg2 about )  :name ( name :op1 perry )  :wiki rick_perry )  )  )  )  )  :arg1-of legal :arg1-of limit :mod-of alcohol )  :arg2 i
drunk :degree most :mod-of ( democratic_party_[united_states] :domain i :location ( state :name ( name :op1 texas )  :wiki texas )  )
investigate :arg0 ( person :mod-of office :name ( name :op1 lehmberg )  )  :arg1 ( person :name ( name :op1 perry )  :wiki rick_perry )  :arg1-of ( lead :polarity - )  :mod jury :mod grand :op1-of against
judge :arg0-of ( assign :arg1 ( prosecute :arg0 ( person :arg0-of ( handle :arg1 it )  :name ( name :op1 michael :op2 mccrum )  )  :arg1-of special :arg1-of base )  )  :mod ( political-party :name ( name :op1 republican )  :wiki republican_party_[united_states] )
plead :arg0 ( person :arg0-of ( call :arg1 charge :arg2 ( ploy :mod politics )  :op1-of and )  :name ( name :op1 perry )  :wiki rick_perry )  :arg1 ( guilty :polarity - )
ask :arg1 ( oversee :arg0 ( team :arg0-of claim :arg1-of legal :arg1-of ( power :arg1-of high )  :poss ( he :arg0-of ( have-org-role :arg1-of ( serve :arg1-of long )  :arg2 governor :purpose-of ( use :arg1 law :arg2 ( prosecute :arg1 ( history :mod ( state :name ( name :op1 texas )  :wiki texas )  )  )  )  )  )  )  :arg1 ( case :arg1 ( dismiss :arg0 ( unconstitutionally :mod-of vague )  :arg1 indict )  )  )  :arg2 judge
and :arg1-of ( corrupt :arg1-of ( resign :arg0 ( state :mod-of fund )  :arg1-of ( refuse :arg0 ( state :name ( name :op1 texas )  :wiki texas )  )  )  )  :op1 ( travi :location-of ( base :arg0 ( state :arg0-of ( public :arg1 integrity :arg2 off )  )  :arg1 ( person :name ( name :op1 perry )  :wiki rick_perry )  )  )  :op2 ( county :wiki pingtung_city )  :op3 ( prosecute :arg0 public )
draw :arg0 ( veto :arg0-of ( complain :arg1 ( group :arg0-of ( lean :arg1 that :arg2 left )  :mod watchdog )  :mod formal )  )
and :arg1-of ( frequent :arg1-of ( update :arg0 ( account :arg1-of ( verify :arg0 ( person :name ( name :op1 perry )  :wiki rick_perry )  )  )  )  )  :op1 sometimes :op2 famously
speculate :arg0 ( he :arg0-of ( campaign :arg1 ( person :arg0-of ( have-org-role :arg2 president )  )  :time ( date-entity :year 2012 )  )  :arg0-of ( finish :arg1 ( place :op1-of fifth )  :time after )  )  :arg1 ( person :arg0-of ( address :arg1 caucus )  :arg0-of ( quit :arg1 ( call :arg0 ( he :arg0-of ( jog :arg1 ( photo :arg1-of near )  )  :arg0-of ( word :arg1 lake :op1-of ( and :op2 here :op3 ( come :arg1 we )  :op4 ( country :name ( name :op1 after )  )  :op5 expressive )  )  )  :arg1 it :arg1-of ( tweet :arg0 ( state :name ( name :op1 iowa )  :wiki iowa )  )  :arg1-of possible )  )  :name ( name :op1 perry )  :wiki rick_perry )
say :arg0 ( city :name ( name :op1 berkeley )  :wiki berkeley,_california )  :arg1 ( market :arg1-of house :arg1-of ( normal :arg0 back )  )
warn :arg0 ( person :arg0-of ( house :arg1 market :arg2 southeast )  :arg0-of ( develop :arg1 ( property :arg1-of ( activity :arg0 ( country :arg0-of ( revert :arg1 ( normal :arg0 ( city :name ( name :op1 london )  :wiki london )  :mod-of level )  )  :name ( name :op1 england )  :wiki england )  )  )  )  :mod ( prominent :degree most )  :quant 1 )  :arg1 that
subject :arg0-of ( prompt :arg1 ( bubble :arg1 credit :arg1-of ( fear :arg1-of wide )  )  :purpose ( impose :arg0 ( country :name ( name :op1 england )  :wiki england )  :arg1 ( limit :arg1 ( borrow :arg1 ( date-entity :month 6 )  :arg2 mortgage )  )  )  )  :arg1-of ( demand :arg1-of hot :mod red )  :op1-of ( and :op2 ( price :arg1 ( capital :location-of home )  :arg1-of surge )  )
say :arg0 monday :arg1 ( and :location ( city :name ( name :op1 berkeley )  :wiki berkeley,_california )  :op1 ( person :arg0-of ( offer :arg1 ( stable :arg1 environment :arg1-of ( operate :arg0 ( market :arg0-of normal :arg0-of high :arg0-of ( transact :arg1 finance :mod-of level )  :arg1-of ( start :arg0 since :time current )  :arg1-of ( revert :arg0 year )  )  )  )  :mod ( that :arg1-of ( add :arg2 ( point :mod-of ( date-entity :year 2013 )  )  )  )  :mod this )  :arg0-of ( have-org-role :arg1 of :arg2 chairman )  :name ( name :op1 tony )  )  :op2 ( found :arg0 housebuild :arg1 upmarket )  )
pile :arg0 ( person :arg0-of ( buy :arg1 ( property :arg1-of ( fare :arg0 market :arg2 ( city :name ( name :op1 london )  :wiki london )  :manner ( well :mod-of downturn :mod-of during )  )  )  )  :mod foreign )  :arg1 into :arg2 capital
say :arg0 ( data :mod ( thing :name ( name :op1 land :op2 registry )  )  )  :arg1 ( leap :arg0 ( thing :arg0-of ( outstrip :arg1 ( average :arg1 ( and :example whole :op1 ( country :name ( name :op1 england )  :wiki england )  :op2 ( country :name ( name :op1 wales )  :wiki wales )  )  :arg3 ( monetary-quantity :unit cent )  )  :degree far )  :arg2-of price :location city )  :arg1 ( year :mod past )  :arg2 ( monetary-quantity :unit cent )  )  :mod alone
and :location ( city :name ( name :op1 berkeley )  :wiki berkeley,_california )  :op1 ( sell :arg1 ( price :arg1-of average )  )  :op2 ( afford :arg1-of private )  :op3 ( person :arg0-of study :arg1-of scheme )  :op4 ( rise :arg1 fifth )  :op5 about :op6 ( past :quant-of ( temporal-quantity :unit year )  )  :op7 ( reach :arg1 4 )  :op8 ( end :arg1 of )
introduce :arg0 ( person :arg0-of ( buy :arg1 ( property :arg1-of ( strengthen :arg0 pound :arg2 ( recent :mod-of ( temporal-quantity :unit month )  )  )  :arg1-of ( attract :arg0 ( city :name ( name :op1 london )  :wiki london )  )  :degree-of less )  :arg2 some )  :mod foreign )  :arg1 ( property :arg1-of tax :arg1-of ( deter :arg0 also )  :arg1-of ( general :arg0 ahead :arg2 ( elect :arg0 mansion :arg1 ( potential :arg1-of tax )  :arg2 next )  )  :mod new )  :arg2 ( politics :op1-of ( and :op2 rhetoric )  :op1-of around )
warn :arg0 ( market :arg0-of ( spark :arg1 ( property :arg1-of ( transact :op2-of ( and :op1 ( grow :arg1 ( market :arg0-of ( low :arg1 rate :mod also )  :mod of )  )  :op3 ( price :arg1 half )  :op4 during )  )  :mod both )  )  :arg0-of ( introduce :arg1 ( lend :arg0 year :arg1 rule :arg1-of tough :arg2 ( city :name ( name :op1 london )  :wiki london )  )  )  :mod mortgage :mod ( that :mod-of 4 )  :mod-of review )  :arg1 ( agent :mod estate )  :time ( week :mod last )
show :arg0 ( data :mod fresh )  :arg1 ( drop :arg1 ( approve :arg1 7 :arg2 mortgage :quant number )  )  :location ( country :name ( name :op1 england )  :wiki england )  :purpose ( suggest :arg0 monday :arg1 ( cool :arg0 ( market :arg0-of house )  )  :mod further )
weaken :arg0 ( sentiment :mod ( house :arg1-of price )  )  :arg1-of ( start :arg0 ( country :arg0-of ( cut :arg1 ( forecast :arg0 ( monetary-quantity :unit cent )  :arg1 ( price :arg1 ( estate :mod-of ( agent :mod another )  )  :arg2 property )  :source ( city :name ( name :op1 london )  :wiki london )  :time ( date-entity :year 2015 )  )  :purpose ( grow :arg1 3 )  )  :name ( name :op1 hamptons :op2 international )  )  :time already )
say :arg0 ( city :location-of ( drop :arg0 ( volume :mod transaction )  :arg1 ( by :arg1-of ( quarter :arg0 year :arg2 year )  :mod meanwhile )  )  :name ( name :op1 london )  :wiki london )  :arg1 ( and :op1 ( expensive :degree most :mod-of postcod :mod-of ' )  :op2 ( chelsea :mod such )  :op3 mayfair :op4 kensington :op5 ( agent :mod-of ( wa :mod-of elli )  )  )
push :arg0 ( city :name ( name :op1 berkeley )  :wiki berkeley,_california )  :arg1 more :arg2 forward :mod-of ( cash :mod capital :mod boon :mod ( still :mod-of ( appetite :mod-of home )  )  )
add :arg0 ( person :name ( name :op1 mr )  )  :arg1 mr :arg1-of ( demand :op1-of ( and :op2 ( design :arg1 good )  :op3 ( remain :arg0-of ( maintain :arg1 forward :mod ( right :mod-of product )  )  :arg1 ( good :degree most )  :op1-of location :op1-of resilient )  :op4 ( reflect :arg1 this )  )  )
report :arg0 ( company :arg0-of ( end :arg1 4 :arg1-of ( peak :mod crisis )  )  :arg0-of ( sell :arg1 ( home :mod new )  :arg2 ( date-entity :op1-of year :year 2007 )  )  )  :arg1 almost :subevent-of ( date-entity :mod ( more :degree third )  :month 6 )
annual :arg0-of ( profit :arg2 tax :time-of ( rise :arg1 ( monetary-quantity :quant-of ( temporal-quantity :quant 40 :quant-of ( temporal-quantity :quant-of ( monetary-quantity :quant 18 :quant revenue :unit cent )  :unit year )  :unit year )  :unit cent )  )  )
say :arg0 ( line :arg0-of ( speak :arg1 monday )  :arg0-of ( expect :arg1 ( market :arg1-of anticipate :mod current )  )  )  :arg1 earn :location ( city :location-of ( meet :arg1-of ( of :arg0 company :mod ahead )  )  :name ( name :op1 berkeley )  :wiki berkeley,_california )
of :arg1-of ( profit :arg0 ( year :mod ( full :mod ( consensus :mod analyst )  )  )  :arg2 pre :mod tax )  :mod-of ( gbp :mod-of 450m )
flat :location ( city :arg1-of trade :location-of afternoon :name ( name :op1 london )  :wiki london )  :mod ( share :mod ( city :name ( name :op1 berkeley )  :wiki berkeley,_california )  )
photo :arg1-of ( leak :arg0 hack :medium online )  :topic ( person :name ( name :op1 jennifer :op2 lawrence )  )
arrive :arg1 ( person :name ( name :op1 jennifer :op2 lawrence )  )  :arg4 ( award :arg1 ( organization :name ( name :op1 academy )  :wiki academy_of_motion_picture_arts_and_sciences )  :mod 85th )
list :arg0 ( master :arg1-of ( claim :arg2 ( amr-unknown :arg1-of ( leak :arg0 lawrence :op1-of online )  :arg1-of hack )  )  :mod-of ( image :mod ( other :mod-of starlet :mod-of 100 )  )  :mod-of ( photo :arg0-of ( win :arg1 ( actres :mod-of jennif )  )  :mod nude :mod of :mod ( award :name ( name :op1 oscar )  :wiki academy_awards )  )  )
and :arg1-of blast :arg1-of ( violate :arg0 flagrant :arg2 privacy )  :mod real :op1 ( confirm :arg0 ( thing :name ( name :op1 a )  )  :arg1 ( photo :arg1-of hack )  :arg2 ( represent :arg0 of :arg1 star )  )
and :op1 ( contact :arg1 authority )  :op2 ( prosecute :arg1 ( anyone :arg0-of ( post :arg1 ( photo :arg1-of steal :topic ( person :name ( name :op1 jennifer :op2 lawrence )  )  )  )  )  )
say :arg0 ( person :name ( name :op1 mary )  :op4-of ( and :arg1-of ( include :arg0 ( master :arg0-of ( hack :arg1 ( star :mod female )  )  :arg0-of ( list :arg1 of )  :arg1-of ( weak :arg1-of ( obtain :arg1-of purport )  )  :arg1-of purport :op4-of ( and :op1 ( post :arg1 photo :op1-of original )  :op2 ( image :arg0-of ( share :arg1 site )  )  :op3 ( store :arg1 apple :mod-of ( system :mod online )  )  )  )  :mod victim :time dozen :time name )  :op1 ( person :name ( name :op1 kim )  :wiki kim_dae-jung )  :op2 ( person :name ( name :op1 mary )  :wiki - )  :op3 elizabeth )  :wiki - )  :arg1 buzzfe
denounce :arg0 ( thing :arg0-of ( hack :arg1 star )  :arg1-of ( authentic :arg0 image )  :name ( name :op1 it )  :polarity - :quant ( many :mod ( amr-unknown :arg1-of ( clear :arg0 it )  )  )  )  :arg1 ( product :name ( name :op1 twitter )  :wiki twitter )
hope :arg0 we :arg1 ( you :arg0-of ( feel :arg1 great :arg2 ( person :arg0-of ( tweet :arg1 yourself )  :name ( name :op1 &quot; )  )  )  )  :arg2 about :arg3-of ( take :arg0 i :arg1 ( i :arg1-of ( have-rel-role :arg0 person :arg2 husband )  )  :arg2 ago :arg4 home :duration ( temporal-quantity :unit year )  :purpose privacy :time ( look :arg0 you :arg1 ( photo :mod ( that :mod-of of )  )  )  )
and :op1 victoriou :op2 ( call :arg0 ( she :arg0-of ( tweet :arg1 ( photo :arg1-of ( deny :arg0 ( state :location-of justice :name ( name :op1 victoria )  :wiki victoria_[australia] )  )  :mod series )  )  )  :arg1 nud :arg2 ( person :arg1-of ( fake :arg0 i )  )  :mod this )
intend :arg1 pun :concession ( i :arg0-of ( nip :arg1 this :arg1-of let :time ( now :mod right )  )  :arg0-of bud )
report :arg0 buzzfe :arg1 ( deny :arg0 ( person :arg0-of ( have-org-role :arg2 spokesman :beneficiary ( person :name ( name :op1 ariana :op2 grande )  )  )  )  :arg1 ( authentic :arg1 ( photo :arg1-of purport :poss she )  )  )  :time ( sunday :mod late :poss ( star :mod pop )  )
and :op1 about :op2 ( love :arg0 ( person :arg0-of ( acclaim :arg1 ' )  :name ( name :op1 howard )  :op2-of ( from :op1 ( extract :arg0 exclusive )  :op3 jacobson )  :wiki john_howard )  :arg1 ( novel :mod new )  )  :op3 letter :op4 ( aircraft-type :name ( name :op1 j-10 )  :wiki chengdu_j-10 )
rain :arg1-of ( dissolve :arg0 they )  :time-of ( leave :arg0 ( they :arg1-of ( come :manner gradual :manner apart :manner ( resemble :arg1 ( put :instrument ( way :domain that :mod ( good :degree most )  )  )  )  )  )  :arg1 ( box :mod cardboard )  )
tell :arg0 occasional :arg1 woman :arg2 ( prickly :degree bit )  :op1-of ( and :mod just :op2 ( hard :arg1 ( he :arg1-of detach :arg1-of ( intense :degree too )  :domain-of serious )  )  :op3 go )
and :arg0-of ( shake :arg1 hand :time then )
recognize :arg0 he :arg1 prickly
spiny :poss-of ( hedgehog :arg2-of ( resemble :arg0 yes :arg1 he )  )
and :arg0-of ( bring :mod even )  :arg2-of ( promise :arg1 perhaps :arg3-of ( give :arg0 affair :arg1 ( content :quant some )  :instrument embryo )  :mod great )  :op1 ( relieve :arg0 ( spinines :mod this :poss-of ( casualty :mod ( late :degree most )  )  )  :arg1 ( tedium :mod lonely :poss life )  :purpose-of usual )
and :op1 ( person :domain-of ( beauty :mod delicate :mod wild )  :name ( name :op1 ailinn :op2 solomons )  )  :op2 ( village :location island :mod north :part ( heart :arg1-of flutter )  )  :op3 ( remote :degree more )  :op4 ( rugged :compared-to ( reuben :mod port :mod-of hair )  :mod even )
contrast :arg0 aunt :arg1 wet :arg2 ( call :arg1 ( valley :mod paradisal )  :arg2 ( country :name ( name :op1 paradise :op2 valley )  :part ( south :mod-of ( come :arg1 she :accompanier ( companion :mod old )  )  )  )  :mod felicitously )  :manner-of ( leave :arg0 ( person :name ( name :op1 kevern )  )  :arg1 property :arg2 latter )
live :duration ( several :mod - :op1 ( temporal-quantity :unit year )  )  :location house
cabbage :arg1-of ( belong :arg0 ( believe :arg0 ( pip :arg1-of leak )  :arg1 place )  )  :arg1-of ( resemble :arg0 ( weed :arg0 still :arg1 bath :arg1-of ( slug :arg0-of ( sign :arg1 ( signature :purpose ( window :mod all )  )  )  )  :arg2-of ( overgrow :arg0 spider :arg1 garden )  )  )  :mod giant
and :op1 ( threaten :arg0 ( story :arg0-of ( same :arg1 time )  :poss cottage )  :arg1 ( child :arg2-of ( resemble :arg1 it )  )  )  :op2 ( enchant :arg0 full :arg1 garden )  :op3 secret
longlist :arg2-of ( book :arg0 ( man :arg0-of ( view :arg1 ( aircraft-type :name ( name :op1 j-10 )  :wiki chengdu_j-10 )  :arg2 ( person :name ( name :op1 howard )  :wiki john_howard )  :mod ( author :arg1 novel )  )  )  :arg1 ( prize :mod-of ( date-entity :year 2014 )  )  )
announce :arg1 shortlist :time ( week :mod next )
blind :arg0 down :arg1 cottage :arg1-of ( listen :arg0 ( person :arg0-of ( have-rel-role :arg1 ( person :arg0-of ( enjoy :arg1 ( afternoon :arg1-of ( warm :degree unexpectedly )  )  :purpose-of ( sit :arg0 ( hand :arg1-of hold )  :arg1 ( person :name ( name :op1 kevern )  )  :arg2 ( deckchair :mod ( break :arg1 spring )  )  )  )  :name ( name :op1 ailinn )  )  :arg2 father )  :arg1-of ( entertain :arg1-of forget :arg1-of black :arg1-of long )  :arg2-of ( remind :arg0 ( leg :arg1-of cross :arg1-of sight :mod brown )  :arg1 ( song :mod old )  :purpose-of ( supply :arg0 ( console :arg0-of ( soothe :arg1 music )  :arg1 utility :arg2-of ( plug :arg1 ( pair :arg1 ( long :arg1 grass-roots )  )  :arg1-of absent )  )  :arg1 ( and :op1 ( news :arg1-of calm )  )  :arg2 country )  )  )  :arg1-of like )
foot :op1-of big :op1-of too
play :arg1 ( song :mod ( sort :mod that :part-of ( aggressivenes :location-of account :mod innate )  )  )  :arg2 console :polarity -
ban :arg1 ( nothing :arg1-of ( ban :polarity - )  )  :arg1-of ( play :polarity ( - :polarity simple )  )  :manner exact
encourage :arg2 ( fall :arg1-of ( resemble :arg2 ( word :mod desuetude )  )  :arg4 desuetude )
proscription :op1-of ( and :op2 ( do :arg0 ( and :op1 ( taste :arg1 popular )  :op2 ( come :arg1 edict :arg4 book )  )  :arg1 ( person :arg0-of ( choose :arg0-of ( cause :arg1 ( choose :arg0 they :arg1 ballad :arg1-of ( come :arg4 music )  )  )  :arg1 ( memoir :mod ( riches :arg1-of rag )  :op1-of ( and :op2 cookbook :op3 ( romance :arg1 just )  )  )  )  )  :arg1-of possible )  )
and :arg1-of play :op1 ( carry :arg0 away :arg1 day )  :op2 ( begin :arg1 voice )  :op3 imaginary :op4 piano :op5 ( foot :arg1-of serenade :op1-of big )
understand :arg1 ( person :name ( name :op1 ailinn )  )  :polarity -
tell :arg0 ( he :arg1-of ( call :arg0 pianist :arg2 lip )  )  :arg1 ( put :arg0 she :arg1 finger :arg1-of ( wall :arg0 jazz )  :arg2 2 :time automatic )  :time ( by :op1 ( song :arg1-of ( popular :arg0 it :arg2 he )  )  )
lip :arg1-of ( leave :arg0 ( person :arg0-of ( stifle :arg1 letter :arg2-of ( do :arg1 this :time always )  )  :arg0-of ( have-rel-role :arg2 father )  )  :op1-of before )
begin :arg0 it :arg1 ( game :domain-of ( small :domain he )  )
tell :arg0 ( he :arg1-of ( have-rel-role :arg0 ( person :arg1-of ( have-rel-role :arg0 person :arg2 father )  )  :arg2 father )  )  :arg1 ( it :arg1-of play )  :arg2 he
and :op1 ( begin :arg1 word :arg2 j :manner ( remember :arg1 ( put :arg1 ( finger :quant 2 )  :time ( across :op1 mouth )  )  )  )  :op2 ( cost :arg1 penny :arg2 you )
and :op1 ( fun :domain it :polarity - :quant much :time then )  :op2 ( fun :polarity - :quant much :time now )
know :arg0 he :arg1 ( expect :arg0 ( that :domain-of all )  :arg1 he )
explain :arg0 he :arg1 ( jazz :mod amr-unknown )
hear :arg0 ( person :name ( name :op1 ailinn )  )  :arg1 any
proscribe :arg0 ( country :mod-of too :name ( name :op1 jazz )  )  :arg1 ( play :polarity - )  :mod exact
improvisation :arg1-of ( fall :source fashion )
room :part-of ( life :mod only )
tune :arg1-of end :arg1-of ( begin :arg1-of ( sure :arg2 ( person :arg0-of ( want :arg1 exact )  )  )  )
wit :mod same
unsettle :arg0 it :arg1 person :arg2 nerve :mod unpredictability
express :arg0 jazz :arg1 musically :mod wit :op1-of and
age :arg0 ( he :arg0-of ( know :arg1 junior )  :arg0-of ( reach :arg1 10 )  :arg0-of ( hear :arg1 davi )  )  :arg1 ( person :arg0-of ( have-rel-role :arg1 ( he :arg0-of ( collect :arg1 secret :degree ( semi :degree-of old )  )  :poss-of jazz )  :arg2 father )  )
contrast :arg2 ( he :arg0-of ( tell :arg1 wall :arg2 black :time - )  )
age :arg0 ( she :arg0-of ( give :arg1 ( sing :arg1 - :arg1-of ( popular :arg2 time )  :arg1-of black :arg1-of ( likely :polarity - )  :arg1-of remember )  )  )  :arg1 she
or :op1 ( law :polarity - )  :op2 ( dures :mod again )
mean :arg1 ( society :arg1-of comply )  :arg1-of ( spare :arg0 providentially :consist gratitude )  :arg2 ( consent :arg0 ( section :mod every )  :arg1 ( principle :poss ( aptitude :poss group )  )  :arg2 gratitude )
cause :op3-of ( and :op1 ( suit :arg0 ( and :op1 temperament :op2 physique )  :arg1 ( person :arg1-of ( entertain :op1-of and )  :arg1-of ( originate :arg0 afro :location ( world-region :name ( name :op1 caribbean )  )  )  )  )  :op1-of ( and :op2 ( sing :arg0 they )  )  :op2 athletics )
nature :arg1-of ( ensure :arg0 person :arg1-of ( undertake :purpose-of ( function :arg0 ( phone :mod utility )  :arg1 original :purpose ( gift :arg1 ( country :mod-of subcontinent :name ( name :op1 india )  :wiki india )  :degree electronic )  )  )  :arg2 family :polarity - )
and :op1 ( plumb :arg0 ( community :arg1-of polish )  :arg1 amr-unknown :arg2 ( leave :arg1 amr-unknown :manner-of ( smash :arg1 ( plate :mod ( country :name ( name :op1 greece )  :wiki greece )  )  )  )  )
cause :arg0 ( amr-unknown :arg1-of ( happen :arg0 while )  )  :arg1 ( fear :arg0-of ( accuse :arg1 of )  :arg0-of ( stoke :arg1 ( fear :arg1 that :arg1-of flame :arg1-of ( consume :arg0 they :arg1-of ( flame :arg0 indeed )  :arg1-of ( open :arg0 ( country :arg1-of ( leave :arg0 grandparent :time-of ( quick :arg1 that :polarity - )  )  )  :arg3 next :op1-of ( and :op2 ( person :arg0-of ( head :arg1 ( keep :arg0 pipe :arg1 restaurant :time down )  )  )  :op3 ( grow :arg1 idlenes :arg1-of depress )  )  :op1-of ( and :op2 shisha )  )  )  )  )  :arg1 they :arg1-of ( happen :arg0 ( state :op2-of ( and :op1 ( world-region :name ( name :op1 gulf )  :wiki persian_gulf )  )  )  )  :arg1-of ( happen :arg0 it )  )
say :arg1 ( gift :arg0 each )
press :arg1 ( person :name ( name :op1 ailinn )  )  :arg1-of hard :arg2 ( understand :arg0 music :arg1 ( possible :arg1 ( sing :arg0 ( person :name ( name :op1 kevern )  )  :arg1 ( word :arg1-of insult )  :arg2 she :mod just )  )  )  :purpose ( hear :arg1 ( ballad :arg1-of ( have :arg0 ever )  :mod only )  )
express :arg0 music :arg1 love
say :arg0 they :arg1 kevern :arg1-of ( insult :arg0 really :polarity - )
except :destination ( person :poss-of ( foot :domain-of ( big :degree too )  )  )
contrast :arg1 ( insult :arg0 ( person :arg0-of ( have-rel-role :arg1 i :arg2 father )  )  :arg1 anybody )  :arg2 ( delight :arg0 he :arg1 ( song :mod this )  )
contrast :arg1 ( say :arg0 ( he :arg0-of ( give :arg1 illusion :arg1-of ( neglect :arg0 garden )  :arg1-of safe )  )  :arg1 ( much :degree too )  )
possible :arg1-of ( cabbage :arg2-of ( resemble :arg0 beyond :arg1 ( leave :arg0 - :arg1 word :mod giant :time-of soundproof )  )  )
comprehend :arg0 ( person :name ( name :op1 ailinn )  )  :arg1 still :polarity -
love :arg0 ( person :arg0-of ( have-rel-role :arg2 father )  )  :arg1 something :arg1-of ( resemble :arg2 that )  :mode interrogative
contrast :arg1 ( want :arg0 he :arg1 ( say :arg1 ( joke :arg1 company )  :arg0 he )  )  :arg2 ( reluctant :topic ( put :arg1 ( finger :quant 2 )  :arg2 lip :mod again )  )
think :arg0 she :arg1 ( strange :domain he )  :time already
say :arg0 ( he :arg0-of instead-of :arg1-of ( strike :arg0 it )  )  :arg1 funny
disbelief :arg1-of ( blot :arg0 ( she :arg1-of ( shake :arg0 she )  :arg1-of head )  )
contrast :arg1 ( wide :arg0 ( world :arg1-of ( see :arg0 nothing )  :mod whole )  )  :arg2 ( haystack :quant-of ( hair :arg1-of ( black :arg1-of crow )  )  )
see :arg0 he :arg1 nothing :arg1-of ( want :mod else :arg0 he )
say :arg0 ( she :arg1-of ( say :arg0 ( you :arg0-of cause )  )  )  :arg1 unconvinc
contrast :arg1 ( explain :arg0 you :purpose-of - :time ( sing :arg0 i :arg1 it )  )  :arg2 still
seem :arg1 she :arg2 ( distress :domain-of genuine )
be :arg0 interrogative :arg1 ( foot :degree-of ( too :degree-of big )  )
look :arg0 he :arg1 again
specific :arg1 foot :mod-of -
ankl :mod-of bit
say :arg0 you :arg1 ( hate :arg0 you :arg1 i :arg1-of ( cause :arg0 ( thick :arg1 ankl :degree too )  )  )  :mode interrogative :op1-of and
hate :arg1 you :mode interrogative
do :arg1 ( i :arg0-of ( hate :arg1 you :polarity - )  )
silly :domain ( that :quant just )  :quant song
contrast :arg0 too :arg1 ( love :arg0 i :arg1 you )  :arg1-of ( say :arg0 ( he :arg1-of possible )  )  :arg2 soon
instead-of :arg0 ( he :arg1-of ( attract :arg0 ( i :arg2-of ( thick :op1-of ankl )  )  )  )  :arg1 ( reason :degree very )  :arg1-of ( try :arg0 you )
way :mod perverse :poss i
come :arg0-of wrong :arg1 it
mean :arg0 he :arg1 funny
mean :arg1 ( thing :arg0-of ( land :arg1-of mess-up :arg1-of ( cause :arg0 ( lack :arg0 ( he :arg1-of ( have-rel-role :arg0 ( person :arg2-of resemble )  :arg2 father )  )  :arg1 ( charm :arg0-of ( temper :arg1 ( cruel :arg0-of ( lurk :arg1 joke )  )  )  :arg1-of reassure )  )  )  :frequency often )  )  :arg2 funny
intend :arg0 ( person :arg0-of ( have-rel-role :arg2 father )  )  :arg1 cruel
person :mod-of he :name ( name :op1 kevern )
despite :arg1 ( eye :mod kind )
and :arg1-of ( knock-down :arg0 ( she :arg0-of ( drink :arg1 they )  :arg2-of ( rise :arg1 ( and :op1 ( person :name ( name :op1 ailinn )  )  :op2 ( flush :arg1 solomon )  )  )  )  :op1-of over )  :arg1-of console :op1 ( spill :arg1 wine )
cause :arg0 wine :arg1 ( drink :arg0 ( he :arg0-of ( excuse :polarity - )  )  :arg1 elderflow )
seem :arg1 ( tremble :arg1 she :arg1-of ( resemble :arg2 ( frond :poss ( tree :arg1-of ( palm :arg0 storm )  )  )  )  )  :location agitation
say :arg0 ( she :arg2-of ( attract :arg0 perverse :arg1 you )  )  :arg1 expressive :arg2-of ( thick :arg0-of ( head :arg1 ' :arg2 i :op1-of and )  :arg1 ( reason :degree very )  )
except :op1 i :polarity -
stand :arg0 ( moment :time-of ( show :arg0 ( fear :arg1 ( unkindnes :mod unnecessary :poss word )  :op3-of ( and :op1 ( feel :arg0 he :arg1 ( sorry :arg2 she )  )  :op2 account )  )  :arg1 eye )  )  :arg1 both
think :arg0 ( she :arg1-of ( do :arg0 ( he :arg0-of ( strike :arg1 she )  )  )  )  :arg1 interrogative
contrast :arg2 ( he :arg0-of ( doubt :arg1 ( she :arg0-of ( grow :arg1 archipelago )  :arg0-of ( chill :arg1 ( life :arg1-of ( speak :arg0 she :polarity - )  :mod about )  :arg2 north )  )  :polarity - )  :arg0-of ( resemble :arg1 ( essential :mod all )  :arg2 here )  )
crash :arg0 ( and :op1 vast :op2 icy )  :arg1 ocean :arg2-of ( same :arg1 both )
and :op1 ( person :arg0-of ( happen :arg1 amr-unknown )  :arg0-of smuggle )  :op2 ( person :arg0-of ( have-rel-role :arg1 ( wreck :arg1-of befuddle :manner-of ( roam :arg0 ( and :op1 ( thin :arg1 ( man :arg0-of ( raise :arg1 hand :arg2 ( woman :arg0-of ( dare :arg1 or :arg2 refuse )  :mod any )  :arg2-of ready )  :arg1-of same )  :degree ( more :mod even )  )  :op2 ( skin :time aftermath )  :op3 peevish )  :arg1 pub :arg2 pub :manner angry )  )  :arg2 ancestor )  )
head :mode interrogative :time thick
show :arg0 ( she :arg0-of ( thick :arg1 fist )  )  :arg1 they :arg1-of ( care :arg0 she :manner expressive :polarity - )
express :arg1 ( irritate :arg1 erotic )  :arg2-of ( become :arg1 snog :op1-of ( and :arg1-of ( console :arg0 ( ballad :mod bland )  :arg1-of ( love :arg0 antidote :time ( late :op2-of ( and :op1 cuff )  )  )  :arg2-of pump )  :op3-of ( and :op1 man :op2 woman )  )  )  :mod ( common :degree most )
unnecessary :mod-of ( view :arg1 thuggery :arg2 snog :condition ( act :arg1 of )  :mod since :mod refinement )
sign :arg0 ( person :arg0-of leave :name ( name :op1 ailinn :op2 solomons )  )  :arg1 body
heave :arg0 he :arg1 ( old :mod-of ( man :arg2-of ( resemble :arg1 deckchair )  )  )
contrast :arg1 ( feel :arg0 she )  :arg2 ( surprise :arg0 ( weight :poss grief )  :arg1 she )
of :mod-of ( world :arg1-of ( end :polarity - )  :mod this )
know :arg0 they :arg1 ( other :mod each )  :degree bare
bring :arg0 man :arg1 ( he :arg0-of ( go :arg1 upstairs :arg1-of ( watch :arg0 she )  :arg1-of ( watch :arg0 she :op1-of window :op1-of companion )  )  :poss-of heavy )
think :arg0 she :arg1 ( leave :arg1 garden )
feel :arg0 she :arg1 pang :arg2 ( and :op1 man )  :purpose-of ( general :arg1 some :arg2 ( raise :arg0 she :arg1 hand :arg2 ( matter :polarity - )  )  )
cause :arg0 ( she :arg0-of ( recall :arg1 ( single :arg1 instance )  :arg2 before :polarity - :time today )  :arg1-of possible :poss-of of )  :arg1 ( know :arg0 she :arg1-of ( feel :arg0 ( she :arg0-of ( sight :arg1 that )  )  )  :arg1-of ( fight :arg0 ( he :arg0-of ( leak :arg1 why :arg2 away )  :arg0-of ( bend :arg1 ( defeat :arg1 all )  )  :arg0-of ( see :arg1 it :mode interrogative )  :arg2-of ( turn :arg0 man :arg1 ( she :poss-of back )  )  :poss-of asham )  )  :mod well )
look :arg0 ( person :name ( name :op1 ailinn :op2 solomons )  )  :arg1 foot :mod again
and :op1 ( intelligent :arg1 ( temporal-quantity :quant 32 :unit year )  )  :op2 enthusiastic :op3 ( research :arg1-of ( employ :arg0 ( mood :arg1-of ( monitor :arg0 continuance :instrument ( statutory :polarity - )  )  :arg1-of public )  )  :mod old )  :op4 ( prepare :arg1 ( paper :arg0-of ( give :arg1 money :arg2 ( and :op1 ( person :name ( name :op1 esme :op2 nussbaum )  )  :op2 ( low :arg1 ( cessation :mod - )  )  :op3 ( level :mod medium )  :op4 violence )  :op2-of ( and :op1 ( score :op1-of ( or :op2 ( temporal-quantity :arg1-of ( relate :arg2 above )  :unit year )  )  :time ( before :op1 event )  )  )  :purpose ( expend :arg0 ( country :location-of ( area :mod very )  )  :arg1 ( uproot :arg0 energy :arg1 ( reduce :arg1-of ( expect :arg0 most )  )  )  )  )  :mod short )  )
soar :arg0 church :arg1 ( breathe :arg0 sweet :arg0-of ( kind :arg1 historical )  :arg1 human :arg1-of ( feel :arg0 country :arg1-of ( rare :arg0 hedgerow )  )  :arg1-of ( fight :arg0 person :arg2 ( war :arg0 thousand :arg1 especially :op1-of ( and :arg0-of ( narrow :arg1 crevic :arg2 though )  :op2 ( twist :arg0 they :arg2 spir :mod that )  :op3 knarl )  :op1-of ( and :op2 ( win :arg0 ( she :arg0-of ( write :arg1 of )  :arg0-of ( soothe :arg2 native )  :arg2-of ( do :arg0 ( and :op1 ( do :arg0 much )  :op2 ( continue :arg0 much :arg1 aggressivenes )  )  :arg1 amr-unknown )  )  :arg1 most )  )  )  )  )  :arg2 above
contrast :arg2 ( prove :arg0 ( quality :quant some )  :arg1 ineradicable )
seem :arg1 ( passion :arg1-of ( go :arg4 ( engender :arg1 ( high :arg1 spire )  )  )  )  :arg1-of low
contrast :arg1 ( only :polarity - )  :arg2 ( retain :arg0 ( brutishnes :mod old )  :arg1 ( hold :arg0 pertinaciou :arg1 ( community :mod rural )  :manner equal )  :op4-of ( and :op1 ( weep :arg0 populace )  :op2 ( gorge :arg1 ( story :domain ( overcome :arg1 adversity )  )  )  :op3 ( profess :arg1 ( believe :arg0 ballad :arg1 ( virtue :mod ( life :op3-of ( and :op1 ( marry :arg1 sentimental )  :op2 family )  )  )  :manner ardently )  )  )  :purpose ( suggest :arg0 ( evidence :arg1 ( play :arg2 ( we :poss-of field )  )  )  :arg1 ( emerge :arg0 ( quarrelsomenes :op3-of ( and :op1 new :op2 vicious )  )  :arg1 ( and :op1 workplace :op2 ( road :poss we )  :op3 even )  :arg2 ( we :poss-of ( conurbation :mod urban )  )  :location home )  )  )
say :arg0 ( she :arg2-of ( fortunate :arg0 you :arg1 tendency :polarity - )  )  :arg1 ( he :arg0-of ( report :arg1 whole )  :arg0-of read )  :arg1-of ( supervise :arg0 overwrite )
suggest :arg0 i :arg2 ( you :arg0-of ( read :arg1 ( novel :quant few )  )  )  :time ( date-entity :month 5 )
head :arg0 ( person :arg0-of lower :name ( name :op1 esme :op2 nussbaum )  )  :arg1 she
enquire :arg0 ( i :domain-of ( atheist :domain you )  )  :mod also :mode interrogative
say :arg0 ( i :arg1-of ( believe :arg0 i )  )  :arg1 ( person :arg0-of reply :name ( name :op1 &quot; )  )  :arg1-of ( oblige :polarity - )
be :arg0 interrogative :arg1 you :arg2 lesbian
protest :arg0 ( person :mod again :name ( name :op1 esme )  )  :arg1 ( right :arg2 ( and :op1 privacy :op2 silence )  :arg1 person )
feminist :mode interrogative
silence :arg0 once :arg1 more
say :arg0 ( i :arg0-of ( do :arg1 luth :polarity - )  :arg0-of ( ask :arg1 rabinowitz :arg2 ( i :arg0-of ( object :arg1 atheism )  )  )  )  :arg1 ( or :arg1-of ( cause :arg0 last )  :op1 lesbianism :op2 feminism )
workplace :arg1-of ( free :arg1-of prejudice )  :domain this
serve :arg0 ( person :domain we )  :arg1 ( society :arg1-of ( free :arg1-of prejudice )  )
contrast :arg1 accept :arg2 ( possible :arg0 entire :arg1 ( distort :arg0 ( i :arg2-of ( present :arg0 you :arg1 ( kind :mod certain :mod-of hypersensitivity )  )  )  :arg1 ( thing :arg1-of ( find :arg0 such )  )  :arg2 ( laudable :op1-of and )  :frequency sometimes )  )
and :op1 thing :op2 ( call :arg0 you :arg1 ( interpret :arg1-of natural )  :op1-of ( and :op2 vicious :op3 brutish :op4 ( possible :arg1 other )  :op5 soon )  :op1-of ( and :op2 expression :op3 vigour :op4 vitality )  )  :op3-of ( and :op1 ( obvious :arg0 ( you :arg0-of prejudice )  )  :op2 church )
cause :arg0 ( happen :arg0 it :arg1 ( sap :arg0 yesterday :arg1 ( country :part-of ( force :mod essential :mod life )  )  )  )  :arg1 ( amr-unknown :arg1-of ( happen :arg1-of ( harp :mod still )  )  )
look :arg0 ( person :arg1-of ( speak :arg0 ( person :name ( name :op1 rabinowitz )  )  )  :name ( name :op1 esme :op2 nussbaum )  )  :arg1 ( she :op1-of around )
or :op1 ( temporal-quantity :arg1-of ( quarter :arg2-of ( dispense :arg0 ( thing :name ( name :op1 ofnow )  )  :arg1 ( advise :arg1-of ( repeat :arg0 ( scroll :arg1 lead :arg1-of pink :mod flamingo )  )  :arg2 ( head :op1-of behind )  )  :arg4 country )  :mod last )  :unit century )  :op2 ( more :compared-to temporal-quantity )
musical :arg4-of ( go :arg2 ( neighbor :arg2-of explain :arg2-of ( smile :arg1 ( person :arg0-of ( have-rel-role :arg2 spouse )  :arg1-of ( cherish :arg0-of ( listen :arg1 ballad )  )  )  )  :arg2-of apologize :arg2-of ( use :arg1 telephone )  :arg2-of converse :arg2-of agree :arg2-of listen )  )
contrast :arg2 ( good :compared-to ( silence :arg1 ( word :arg1-of sing :domain-of ( good :compared-to write )  )  )  :domain ( talk :manner ( good :compared-to love :domain nothing )  )  )
delude :arg0 ( we :arg1-of ( heal :arg0 ( we :arg1-of ( finish :arg0 ( she :arg0-of ( supervise :arg1 ( and :arg1-of ( speak :arg0 ( person :arg0-of ( quiet :arg1 voice :arg2 she )  :arg0-of ( reply :arg1 certain :arg2 once )  :arg1-of ( make :arg0 you )  :arg1-of ( understand :arg0 i :arg2 point :mod full :polarity - )  :name ( name :op1 &quot; )  )  )  :op1 ( i :arg0-of ( say :arg1 that :degree more )  )  )  )  )  )  )  :arg2 effective :polarity - )  )  :arg1 we :arg2 ourselv
cause :arg0 ( happen :arg1 amr-unknown :arg2-of ( lead :arg0 ( mistake :arg0 ( i :arg1-of concern )  :arg1-of ( repeat :arg0 ourselv :arg1-of ( find :arg0 we )  )  )  :arg1 we :prep-in place )  )  :arg1 ( happen :arg0 it :arg1 - )
anger :arg0 ( we :arg0-of ( vent :arg1 and :medium other )  )  :arg1 ( we :arg0-of ( mistrust :arg2 - :op1-of ( this :mod-of ( time :mod only )  )  )  )
pyramid :poss ( finger :poss ( person :name ( name :op1 luther :op2 rabinowitz )  )  )
suggest :arg0 this :arg1 patience :arg2 infinite
say :arg0 ( he :arg0-of describe :arg0-of ( mistake :arg1 we :arg2 action )  )  :arg1 ( or :arg1-of ( take :arg0 ( you :arg0-of ( go :arg1 far :arg4 too )  )  :polarity - )  :arg1-of possible :arg1-of possible :op1 grandparent )
anger :arg0 ( you :arg0-of go :arg0-of ( speak :arg1 ( far :arg0-of vent :op1-of too )  )  )  :op1-of ( and :op2 ( mistrust :arg0 other )  )
understand :arg0 ( we :arg0-of ( speak :arg1 and :polarity - )  :arg0-of ( recommend :arg1 it :arg1-of ( remind :arg1-of ( position :arg0 someone )  )  )  :arg0-of ( protect :arg1 present )  )  :arg1 past :polarity -
and :location - :mod other :op1 ( we :arg1-of - )
know :arg0 we :arg1 ( disord :part ( time :domain it )  )  :quant all
cause :arg0 in :arg1 ( we :arg0-of ( acquit :arg1 itself :arg1-of ( claim :arg0 ( person :arg0-of ( interject :arg1 section :arg2-of ( dare :arg0 ( ourselv :mod honest )  :arg1 ( society :mod of )  )  )  :name ( name :op1 &quot; )  )  :arg1-of ( possible :polarity - )  )  :arg2 well )  )
accuse :arg0 i :polarity -
wheth :op1 ( do :arg1 ill :op1-of ( or :arg2-of ( do :arg1 do )  :op2 do )  )
then :mod-of then
say :arg1 ( agree :arg0 we :arg1 this )  :arg1-of ( need :arg0 ( more :polarity - )  )
amend :arg1 ( blame :arg1-of ( cause :arg0 ( and :arg1-of amend :op1 appropriate :op1-of ( and :mod just )  :op2 ( way :mod any )  )  )  :arg1-of apportion :polarity - )  :polarity -
contrast :arg1 ( learn :polarity - )  :arg2 past
exist :arg0 ( we :arg0-of forget )  :arg1 past
possible :arg1 ( add :arg0 i :arg1 word :arg2 that )
collapse :arg0 ( person :name ( name :op1 luther :op2 rabinowitz )  )  :arg1 pyramid
say :arg0 ( he :arg1-of ( report :arg0 ( i :arg0-of consider )  )  )  :arg1 ( dismiss :arg1 she )
pavement :arg1-of ( mount :arg0 ( she :arg0-of ( knock :arg1 motorcyclist )  :arg0-of ( rage :arg1 vicious )  :arg0-of ( work :arg1 usual :arg1-of ( turn :arg0 ( day :mod next )  )  )  :arg0-of ( describe :arg1 ( amr-unknown :mod-of passer )  )  :poss-of down )  )
coincidenc
say :arg0 ( country :name ( name :op1 lesotho )  )  :arg1 ( plan :arg0 coup :arg1 military )  :op1-of ( and :op2 ( stay-on :arg0 pm :arg1 - :location ( country :name ( name :op1 south :op2 africa )  :wiki south_africa )  )  )
deny :arg0 ( person :arg0-of ( have-org-role :arg1 ( country :mod-of military :name ( name :op1 lesotho )  )  :arg2 official )  :arg0-of ( say :arg1 ( act :arg0 they :arg1 ( police :arg2-of ( suspect :arg1 ( try :arg1 ( arm :arg1 ( fanatic :mod politics )  )  )  )  )  )  )  )  :arg1 ( stage :arg1 ( coup :arg0-of ( overthrow :arg1 ( government-organization :arg0-of govern )  )  )  :arg0 person )
say :arg0 ( he :arg1-of ( surround :arg0 military )  )  :arg1 ( and :op1 ( person :arg0-of ( have-org-role :arg2 official )  )  :op2 home :op3 ( seize :arg0 ( government-organization :arg0-of ( govern :arg1 country )  )  :arg1 building :arg2 ( capital :mod-of maseru :mod-of of )  )  )  :arg1-of ( flee :arg0 ( person :arg0-of ( have-org-role :arg1 country :arg2 ( minister :mod prime )  )  :name ( name :op1 thomas )  :wiki - )  )
say :arg0 ( family :poss premier )  :arg1 ( receive :arg0 he :arg1 ( threaten :arg2 assassinate )  )  :arg2-of ( neighbor :arg1 ( country :name ( name :op1 south :op2 africa )  :wiki south_africa )  )  :op1-of after
contrast :arg1 ( threaten :arg0 ( person :arg0-of ( have-org-role :arg1 military :arg2 spokesman )  :arg0-of ( say :arg1 ( there :mod-of fact )  )  :arg0-of ( attempt :arg1 arm :mod police :polarity - )  :arg0-of ( have-org-role :arg2 major )  :name ( name :op1 military )  )  :arg2 ( politics :arg2-of ( respond :arg0 military :arg1 that )  :op1-of fanatic )  )  :arg2 coup
voice :arg0 ( plan :arg1 arm :arg2 ( politics :arg2-of ( act :arg0 amr-unknown :arg1 intelligence :op1-of ( after :time-of ( report :arg0 ( organization :arg0-of ( receive :arg1 several )  :arg2-of ( command :arg0 ( morning :mod this )  :arg1 of :mod that )  :name ( name :op1 &quot; )  )  :arg1 amongst )  )  )  :op1-of ( party :mod some :op2 ( politics :op1-of fanatic :op1-of youth )  )  )  :mod actual :time ( element :mod some )  :time there )  :arg1 ( country :name ( name :op1 america )  :wiki united_states )  :arg2-of ( tell :arg0 ( he :arg1-of verge :arg2-of ( wreak :arg0 ( police :op1-of service )  :arg1 havoc )  )  :arg1 amr-unknown )
say :arg0 ( government-organization :arg0-of ( govern :arg1 ( country :name ( name :op1 south :op2 africa )  :wiki south_africa )  )  :arg1-of ( have-org-role :arg2 spokesman )  )  :arg1 ( appear :arg1-of ( overthrow :arg0 military )  :op1-of action )
say :arg0 ( he :arg2-of ( bear :arg0 force :arg1 coup :location ( far :arg1-of ( defend :arg0 ( government-organization :arg0-of ( govern :arg1 through )  :arg0-of ( use :arg1 of :arg2 force )  :arg2-of ( take :arg0 although :arg1 by :arg1-of ( claim :arg0 1 )  :op1-of over :polarity - )  )  )  :arg1-of ( activity :arg0 ( account :mod all )  )  )  :location thus-far :location hallmark :location d )  )  :arg1 etat
say :arg0 ( person :arg0-of ( have-org-role :arg1 ( country :mod-of military :name ( name :op1 lesotho )  )  :arg2 official )  )  :arg1 ( and :op1 ( return :arg1 soldier :arg4 barrack :time sunday )  :op2 ( calm :location capital )  )
mets :arg1-of ( control :arg0 ( government-organization :arg0-of govern :arg1-of ( have-org-role :arg0 meanwhile :arg2 ( minister :mod deputy :mod prime )  )  )  :arg1-of absent )
say :arg0 ( person :arg0-of ( attempt :arg1 ( fight :arg1 ( corrupt :location country )  )  )  :name ( name :op1 thabane )  )  :arg1 ( believe :arg1 ( he :arg1-of target )  :arg0 person )
feud :arg2 ( government-organization :arg0-of ( govern :arg1 ( country :location-of ( high :arg0 parliament :arg1 tension :arg2 ( date-entity :month 6 )  :time since )  :name ( name :op1 lesotho )  )  )  :name ( name :op1 unity )  )  :purpose-of ( suspend :arg0 ( person :name ( name :op1 thabane )  )  :arg1 session )
say :arg0 ( he :arg0-of allege :poss-of action )  :arg1 ( undermine :arg0 otherwise :arg1 ( government-organization :arg0-of govern )  :polarity - )
manufacture :arg0-of low :arg1 ( organization :name ( name :op1 eurozone )  :wiki eurozone )  :location ( 13 :quant-of ( temporal-quantity :unit month )  )
say :arg0 ( survey :arg1 ( 13 :quant-of ( temporal-quantity :unit month )  )  :arg1-of ( watch :op1-of close )  )  :arg1 ( slow :arg0 ( grow :arg0-of ( low :location 8 )  :arg1 eurozone :arg1-of manufacture )  )
manager :arg1-of ( purchase :arg0 final :time-of ( manufacture :arg0 ( organization :arg0-of ( dip :arg2 ( 8 :mod-of 7 :mod-of down )  )  :name ( name :op1 eurozone )  :wiki eurozone )  :arg1 index )  )
indicate :arg0 ( figure :arg0-of ( expand :arg1 50 )  :location above )
dwindle :arg1 order :op1-of ( and :op2 ( suffer :arg0 factory :arg1 ( rise :arg1 tension )  )  :op3 ( country :name ( name :op1 russia )  :op2-of ( and :op1 ( organization :name ( name :op1 eu )  :wiki european_union )  )  :wiki russia )  :op4 ( country :name ( name :op1 ukraine )  :wiki ukraine )  )
come :arg0 ( organization :name ( name :op1 ecb )  :wiki european_central_bank )  :arg1 figure :direction ( ahead :op1 ( meet :arg0 ( organization :name ( name :op1 european :op2 central :op3 bank )  )  :arg1 thursday )  )
stall :arg1 ( recover :arg1 eurozone :arg2-of ( deal :arg0 ( market :arg0-of ( look :arg1 ( plan :arg0 bank :arg1 ( just :mod-of percentage-entity )  :arg1-of clear )  )  )  :arg1 ( threaten :arg1 deflation :arg2 ( stand :arg0 inflation )  )  )  )
and :arg0-of ( take :arg1 ( crisis :mod finance )  )  :arg1-of resemble :op1 ( possible :arg1 ( offer :arg0 ( person :arg0-of ( have-org-role :arg1 ( organization :name ( name :op1 ecb )  :wiki european_central_bank )  :arg2 boss )  :arg1-of ( indicate :degree further )  :name ( name :op1 mario :op2 draghi )  )  :arg1 ( consider :arg0 he :arg1 ( scheme :arg1-of ease )  :arg3 eurozone )  :time late :time ( week :mod this )  )  :arg1-of ( speculate :arg0 quantitative )  )  :op2 ( country :name ( name :op1 uk )  :wiki united_kingdom )  :op3 ( country :name ( name :op1 us )  :wiki united_states )
say :arg0 ( person :arg0-of ( manufacture :arg1 economist )  :op5-of ( and :op1 ( grow :arg0 although :arg1 good :mod some )  :op2 ( grow :arg1 ( effect :arg1 of :arg1-of ( brake :arg0 all )  )  :polarity - )  :op3 ( rise :arg1 economy :arg2 certainty )  :op4 geopolitics :op6 ( organization :name ( name :op1 &quot; )  )  )  )  :arg1 senior :arg2 ( person :arg2-of ( become :arg1 visible :degree more )  :name ( name :op1 &quot; )  )
of :arg1-of ( low :arg2 ( partner :arg0 ( country :name ( name :op1 russia )  :wiki russia )  :arg1 ( country :name ( name :op1 germany )  :wiki germany )  :arg2 ( organization :arg0-of ( fall :arg1 ( 11 :quant-of ( temporal-quantity :unit month )  )  )  :name ( name :op1 eu )  :wiki european_union )  :manner ( trade :arg1 factory )  :mod ( big :degree most )  )  )
bloc :mod-of ( economy :mod ( large :degree most )  :mod meanwhile :poss ( country :arg0-of fall :name ( name :op1 france )  :wiki france )  )
concern :arg0 ( remain :arg1 ( country :name ( name :op1 france )  :wiki france )  )  :arg1 ( expand :arg1 stagnation :arg1-of descend :arg1-of ( solid :arg0 ( country :name ( name :op1 italy )  :wiki italy )  )  )  :mod real
say :arg0 ( person :arg2-of ( reassure :arg0 than :arg1 ( less :mod also )  )  :mod mr :name ( name :op1 signs )  )  :arg1 ( and :op1 ( and :op1 ( grow :arg1 ( impetus :arg1-of wane :arg1-of sign :arg1-of ( key :mod-of ( industry :mod engine )  )  :mod that )  )  :op2 of :op3 ( country :name ( name :op1 germany )  :wiki germany )  )  :op2 ( country :name ( name :op1 spain )  :wiki spain )  :op3 ( country :mod-of too :name ( name :op1 netherlands )  :wiki netherlands )  )
expect :arg0 ( person :arg0-of analyze :arg1-of fire )  :arg1 ( or :op1 money :op2 fiscal :op3 ( stimulus :arg1-of implement :mod additional )  )  :purpose ( slow-down :arg0-of ( add :arg1 ( fuel :mod further )  :arg1-of likely )  :arg1 industry )
pmi :arg1-of ( see :arg0 ( country :arg1-of grow :mod-of republic :name ( name :op1 ireland )  :wiki republic_of_ireland )  :condition ( end :arg1 ( date-entity :year 1999 )  :op1-of ( since :time-of ( level :arg1-of ( high :degree most )  )  )  )  :topic-of ( note :mod positive :quant 1 )  )
say :arg0 ( person :arg0-of ( manage :arg1 ( it :arg0-of ( indicate :arg1 sector )  )  )  :arg1-of ( grow :mod still )  :arg1-of ( purchase :arg0 ( person :arg0-of ( say :arg1 ( globe :mod-of insight )  )  :arg0-of ( have-org-role :arg1 economist :arg2 ( chief :mod archer )  )  :name ( name :op1 howard )  :wiki john_howard )  :arg1-of ( manufacture :arg0 8 )  )  :arg1-of survey )  :arg1 ( possible :arg1 ( good :degree most )  :mod that )
add :arg0 ( he :arg0-of ( clear :arg1 ( difficult :degree very )  )  :arg0-of ( relate :arg1 particular :arg2 ( country :name ( name :op1 russia )  :op1-of ( slash :op2 ( country :arg0-of ( add :arg1 ( certainty :polarity - )  )  :name ( name :op1 ukraine )  :wiki ukraine )  :op3 ( challenge :arg0 country :arg1 many :mod-of ( condition :mod still )  )  )  :wiki russia )  )  :arg0-of ( find :arg1 life )  )  :arg1 tension :arg1-of ( mean :arg0 ( moment :arg0-of ( heighten :arg1 geopolitics :time current )  )  )  :arg1-of ( manufacture :arg0 ( organization :name ( name :op1 eurozone )  :wiki eurozone )  )
and :arg0-of ( cause :arg1-of likely :arg2 ( or :op1 ( delay :arg1 ( order :quant some )  )  :op2 ( cancel :mod even )  :op3 ( order :mod ticket :mod big )  )  )  :op1 ( hit :arg0 ( certainty :arg1-of heighten :mod this :polarity - )  :arg1 ( and :op1 business :op2 ( confidence :mod ( person :arg0-of consume )  :mod especially )  )  :arg1-of ( clear :arg0 particular )  )
say :arg0 ( he :arg0-of ( limit :arg1 ( we :arg1-of ( suspect :arg0 ( form :arg0-of undertake :mod some :mod ultimate )  )  )  )  )  :arg1 ( look :arg0 ( organization :name ( name :op1 ecb )  :wiki european_central_bank )  :arg1 ever :arg1-of ( likely :arg0 more )  )
mean :arg1 ten :arg2 ( child :arg0-of ( catch :arg1 ( school :mod horrific :mod-of siege )  :arg2 ( suffer :arg0 ( person :arg0-of survive )  :arg1 it :mod still )  )  :mod amr-unknown )  :mod ( of :mod-of hell :quant-of ( temporal-quantity :unit decade )  )  :time ( since :quant-of ( temporal-quantity :unit year )  )
take :arg0 ( militant :mod ( province :name ( name :op1 chechnya )  :wiki chechnya )  )  :arg1 ( temporal-quantity :quant ten :unit year )  :arg3 hostage :time ( school :location ( country :mod-of person :name ( name :op1 beslan )  :part ( south :part-of ( country :name ( name :op1 russia )  :wiki russia )  )  )  )
kill :arg1 ( person :quant more-than )  :location ( ordeal :arg0-of ( shock :arg1 world :arg2 child :op1-of ( half :op1-of more )  )  :duration ( temporal-quantity :quant 3 :unit day )  )
classroom :part ( atrocity :arg1-of ( die :arg0 some :arg1-of ( cheat :arg0 ( victim :arg1-of ( find :arg0 ( we :arg0-of ( go :arg4 ( thing :name ( name :op1 beslan )  )  :direction back )  )  )  )  )  )  )
warn :arg0 ( person :arg0-of survive )  :arg1 ( exact :time ( after :op1 ( siege :arg1-of ( appall :arg0 hero )  :arg1-of ( perish :arg0 ( country :location-of ( apocalypse :mod new )  :mod-of child :name ( name :op1 ukraine )  :wiki ukraine )  )  :mod ( school :mod ( thing :name ( name :op1 beslan )  )  )  )  :time-of ( temporal-quantity :unit decade )  )  )  :arg2 186 :time ( night :mod last )
and :arg1-of ( kill :arg0 ( terrorist :arg0-of ( start :arg1 ( term :mod new )  :time fanatic )  :mod ( religious-group :name ( name :op1 islam )  :wiki islam )  )  :op2-of ( and :condition-of ( seem :arg1 ( resemble :arg2 ( nadir :mod ( evil :quant all )  )  )  )  :op1 kidnap )  :time ( date-entity :day 1 :month 9 :year 2004 )  )  :op1 child :op2 ( person :arg0-of ( have-rel-role :arg2 parent )  )
and :op1 ( unite :arg1 tragedy :purpose ( revulsion :arg1-of ( turn :arg0 amaze :arg2 action :op1-of ( and :op2 ( hope :arg1 ( future :prep-in ( misery :mod dire )  )  )  )  :time then )  )  )  :op2 east :op3 west
classroom :part ( atrocity :arg1-of ( cheat :arg0 ( victim :arg1-of ( find :arg0 ( we :arg0-of ( go :arg4 ( thing :name ( name :op1 beslan )  )  :direction back :location ( south :part-of ( country :name ( name :op1 russia )  :wiki russia )  )  )  )  )  )  :arg2 ( die :arg0 ( ten :quant-of ( temporal-quantity :unit year )  )  :arg1 some )  )  )
discover :arg0 we :arg1 ( person :arg0-of ( amaze :arg1 ( this :mod-of ( hell :mod terrorist )  )  )  :arg0-of ( defy :arg1 memory :condition ( live :time forever )  :manner adversity )  :mod young )
hope :arg0 ( great :degree most )  :mode interrogative
resemble :arg1 ( child :arg0-of ( die :arg1 ( scar :arg0 war :arg1 ( country :name ( name :op1 ukraine )  :wiki ukraine )  :arg1-of ( stop :time now )  :time now )  )  )  :arg2 that
blitz :mod-of ( school :mod-of ( gym :arg1-of ( climb :arg1-of ( try :arg1-of ( picture :arg0 girl )  )  :direction back )  :op1-of inside )  )
photograph :arg0 ( person :arg0-of ( snap :arg1 ( she :arg0-of ( try :arg1 ( climb :direction back :time ( after :op1 ( explode :arg1 mine )  )  :time ( inside :op1 ( gym :arg1-of blitz :mod school )  )  )  )  :arg0-of ( wear :arg1 ( underwear :mod only )  )  )  :polarity famously )  :mod top :name ( name :op1 dmitry :op2 beliakov )  )  :arg1 ( country :name ( name :op1 russia )  :wiki russia )
search :arg2 ( person :arg0-of ( have-rel-role :arg1 ( person :arg0-of ( bewilder :arg1 ( country :name ( name :op1 larissa )  )  )  :name ( name :op1 aida )  )  :arg2 mother )  )  :manner desperate :time ( now :op1 40 )
contrast :arg1 ( fear :arg1 both )  :arg2 ( fact :arg2-of ( survive :arg0 they )  )
contrast :arg1 ( life :arg1-of run )  :arg2 ( possible :arg1 i :arg1-of ( say :arg0 ( i :arg2-of ( tell :arg0 i :arg1 woman )  )  :time time )  :polarity - )
cover :arg1 ( leg :poss i )  :arg2 blood
and :op1 ( climb :arg0 ( i :arg0-of ( get :arg1 ( look :arg1 ( person :arg0-of ( have-rel-role :arg2 mum )  )  )  )  )  :direction back )
pluck :arg0 soldier :arg1 she :arg2 safe
contrast :arg1 ( recover :arg0 ( she :arg0-of ( pain :arg1 ( month :unit-of ( temporal-quantity :quant 3 )  )  :arg1-of ( come :direction back )  )  )  :arg1 total :arg1-of ( mean :time yesterday )  :arg1-of ( say :arg0 ( she :arg0-of ( think :arg1 surgeri )  )  :time ( after :time-of series )  )  )
fear :arg0 i :arg1 ( possible :arg1 ( need :arg0 i :arg1 ( surgery :degree more )  )  )
shrapnel :mod-of ( piece :arg1-of ( knee :arg0 still )  :mod some )
medic :arg0-of ( aid :arg1 she :condition-of ( become :arg1 ( aim :arg0 she )  :arg2 dentist :manner now )  :condition-of ( help :arg2 person )  )
contrast :arg1 life :arg2 ( change :arg0 ( i :arg0-of sure :arg0-of ( do :arg1 it :polarity - )  )  :arg1 this :arg1-of ( break-up :arg0 ( she :arg0-of ( say :arg1 defiant )  )  )  :manner tragedy )
and :op1 it :op2 i :op3 ca :op4 ( change :arg0 you :arg1 this :arg2 fact :polarity - )
remain :arg1-of ( recall :purpose-of ( go :arg0 i :arg4 gym :manner ( once :op1 year )  :time always )  )  :location there
try :arg0 i :arg1 ( talk :arg0 ( person :arg0-of ( have-rel-role :arg1 i :arg2 friend )  :op1-of and )  :arg1 ( temporal-quantity :unit ( day :mod other )  )  :polarity - )
much :degree too :domain pain
gapoeva :op2-of ( name :name-of ( thing :op3-of ( and :arg1-of kill :op1 ( have-rel-role :arg1 i :arg2 ( friend :mod ( good :degree most )  )  )  :op2 classmate )  )  :op1 dzera )
and :condition-of ( play :arg0 we :arg1 together :manner together )  :op1 ( dream-up :arg0 ( we :domain-of small )  :arg1 school )
and :op1 ( study :arg0 ( i :arg0-of ( start :arg1 career )  )  :arg1-of ( finish :arg0 i )  :arg1-of ( do :arg0 ( i :arg0-of ( want :arg1 ( marry :arg1 i :op1-of until )  :polarity - )  )  )  )
think :arg0 i :arg1 about :time ( late :op1 family )
say :arg0 ( she :mod each )  :arg1 ( remain :arg1 siege :accompanier she :time ( fade :arg0 memory :arg1 little :time year )  )
and :op1 ( get :arg0 we :arg1 ( help :arg0 ( we :domain-of ( grateful :op3-of ( and :op1 ( person :quant many )  :op2 ( remember :arg0 ( i :arg1-of please )  :arg1 ( trouble :poss we :poss world )  :mod still )  )  )  )  )  )  :op2 ( country :location-of person :name ( name :op1 britain )  :wiki united_kingdom )  :op3 everywhere
think :arg0 ( i :arg0-of ( see :arg1 time )  )  :arg1 ( and :op1 ( understand :arg1 ( disaster :poss we )  :arg2 ( climb :arg0 i :arg1 ( window :mod school )  )  )  :op2 ( stop :arg0 ( person :quant many )  :arg1 this :arg2 ( happen :arg1 ( more :mod any )  )  )  )  :arg2 ( i :arg0-of ( see :arg1 ( online :op1 photograph )  )  )
believe :arg1 ( person :arg0-of ( have-rel-role :arg1 ( bullet :arg1-of ( hail :arg1-of ( flee :arg0 boy )  )  )  :arg2 mother )  )
and :op1 ( start :arg0 ( person :mod ( country :name ( name :op1 russia )  :wiki russia )  )  :arg1 ( age :arg1 school )  )  :op2 ( survive :arg0 ( he :poss-of ( day :location school )  )  :arg1 ( siege :arg0-of ( hug :arg1 ( person :arg1-of ( have-rel-role :arg0 person :arg2 mum )  :name ( name :op1 tamara )  )  :arg2 7 )  :mod ( day :quant 3 )  )  )
say :arg0 ( he :arg0-of ( tell :arg1 ( thing :arg1-of ( lie :arg0 down )  )  :arg2 i :time mummy :time then )  :arg0-of ( explode :arg1 there :arg2 ( she :arg0-of ( hold :arg1 hand :op1-of and )  )  )  )  :arg1 7
think :arg0 he :arg1 ( die :arg1 ( she :arg0-of explode )  )  :time after
mean :arg1-of ( tell :arg0 ( she :arg0-of run )  )
fear :arg1 ( she :arg0-of ( see :arg1 ( toddle :arg1-of cry )  :location way :op1-of ( and :op2 ( grab :arg0 hand :arg1 child )  :op3 ( flee :arg1 ( hail :arg1 bullet )  :op2-of ( and :op1 ( flee :arg0 he )  )  )  )  )  )
say :arg0 he :arg1 ( die :arg1-of ( tell :arg0 ( person :arg0-of ( have-rel-role :arg1 outside :arg2 son )  :arg1-of ( have-rel-role :arg0 person :arg2 dad )  :arg1-of scoop )  :arg2 ( i :arg1-of ( have-rel-role :arg0 person :arg2 mother )  )  )  )
say :arg0 ( he :arg1-of ( mean :arg0 i )  )  :arg1 ( possible :arg1 ( save :arg0 she :arg1 - )  )
and :op1 ( stumble :arg0 ( person :arg0-of ( turn :arg1 ( wound :arg0-of ( believe :arg1 ( perish :arg0 ( person :arg0-of ( have-rel-role :arg2 son )  )  )  )  :mod leg )  )  :arg1-of free :name ( name :op1 tamara )  )  :time fact )  :time hospital
say :arg0 she :arg1 reunion :arg1-of mean :time ( after :time-of ( weep :arg0 i :arg1 joy )  )
possible :arg1 ( believe :arg0 i :polarity - )
run :arg0 ( he :arg0-of ( hug :arg1 i :op1-of and )  )
crown :arg0 ( person :arg1-of ( fly :arg0 late )  :name ( name :op1 damir )  )  :arg1 ( child :arg2-of ( champion :arg0 ( city :name ( name :op1 london )  :wiki london )  :arg1 ( person :mod premier :name ( name :op1 tony :op2 blair )  :op1-of ( and :op2 ( person :arg0-of ( have-rel-role :arg1 ( person :arg0-of ( have-rel-role :arg2 wife )  )  :arg2 wife )  )  )  :wiki tony_blair )  :time then )  )  :arg2 ( newspaper :mod ( world :mod ( of :mod ( defunct :mod now )  )  )  )
contrast :arg1 ( possible :arg1 ( stop :arg0 ( you :arg1-of ( come :arg0 ( horror :mod this )  :direction back )  )  :arg1 it )  )  :arg2 ( i :arg0-of ( wish :arg2 ( i :arg0-of ( recall :arg1 ( he :arg0-of ( say :arg1 yesterday )  )  )  )  :time ( day :mod every )  )  )
say :arg0 i :arg1 ( fade :arg1 mind )  :arg1-of possible :mod still
remember :arg0 i :arg1 ( throw :arg0 i :arg1 ( gun :mod ( right :mod-of afterwards )  :mod toy :quant all )  :direction away )
contrast :arg2 ( and :op1 ( play :arg0 ( i :arg0-of shoot-down )  :arg1 ( game :mod computer )  :arg1-of ( possible :time now )  )  :op2 ( problem :polarity - :poss i )  )
contrast :arg1 gym :arg2 ( think :arg0 ( i :arg0-of ( scare :arg1 back :polarity - )  :arg0-of go )  :arg1 about :arg1-of ( do :arg0 i :polarity - )  )
remember :arg0 i :arg1 ( kid :arg1-of ( use :arg0 i :arg2 ( play :arg1 ( yard :arg0-of get )  :arg0 i )  )  )
say :arg0 we :arg1 ( or :op1 ( kill :arg1 they )  )
say :arg0 we :arg1 ( stay :arg1 they :location gym )
remember :arg0 ( i :arg0-of ( allow :arg1 ( pick :arg0 i :arg1 ( anything :arg1-of ( want :arg0 i )  )  )  )  :arg0-of trip )  :arg1 ( special :arg1 ( shop :mod toy )  :op1-of ( and :op2 ( ride :arg2 ( car :arg1-of open :mod top )  )  )  )  :arg2 ( city :name ( name :op1 london )  :wiki london )
contrast :arg2 ( fear :arg0 he :arg1 ( place :arg1-of resemble :arg1-of ( suffer :arg0 ( person :arg0-of ( have-rel-role :arg2 friend )  )  :op2-of ( and :op1 ( cause :arg0 ( war :arg1 ( country :name ( name :op1 ukraine )  :wiki ukraine )  )  :arg1 ( misery :mod kind )  )  )  )  )  :time now )
contrast :arg1 ( come :arg1 ( horror :mod this )  :direction ( back :op1 ( you :mod every )  )  :time day )  :arg2 ( wish :arg0 i :arg1 ( possible :arg1 ( stop :arg0 i :arg1 ( recall :arg0 i )  )  )  )
say :arg0 ( i :arg0-of ( feel :arg1 all :arg1-of ( cause :arg0 ( do :arg0 ( week :mod last )  :arg1 ( work :arg1 nunnery :arg1-of voluntary )  )  )  )  :arg1-of ( sorry :arg2 ( suffer :arg0 horror :arg1 that )  )  )  :arg1 this
want :arg0 i :arg1 ( help :arg1 much :arg0 i )
academy :arg1-of train :arg2-of ( enroll :arg0 they :arg1 i :arg1-of ( hope :arg0 ( next :mod-of year )  :op2-of ( and :op1 ( serve :arg0 i :arg1 police :arg1-of ( want :time day :arg0 i )  )  )  )  )
say :arg0 ( he :arg0-of ( kill :arg1 we :arg2-of ( imagine :arg0 ( you :poss-of neighbourhood )  :arg1 interrogative :arg1-of possible )  )  :arg1-of ( have-rel-role :arg0 ( person :poss-of 48 )  :arg2 mother )  :poss-of 37 )  :arg1 kid
and :op1 ( run :arg1 ( child :arg0-of ( last :arg1 ( silence :arg1 just :mod that )  :duration ( many :op1 ( temporal-quantity :unit month )  )  :op2-of ( and :op1 ( remember :arg0 i :arg1 ( silence :arg0 - :mod terrible )  :time ( after :mod right :op1 siege )  )  )  )  :arg0-of ( shout :arg1 around )  )  )
recall :arg0 she :arg1 trip :arg2 ( city :name ( name :op1 london )  :wiki london )  :manner ( person :name ( name :op1 damir )  )  :manner vividly
cry :arg0 ( person :location ( city :name ( name :op1 london )  :wiki london )  )  :time ( tell :arg0 i :arg1 ( story :poss we )  )
realize :arg0 ( i :arg0-of ( show :arg1 ( support :arg1 ( possible :arg1 ( understand :arg0 folk :arg1 ( feel :arg0 ( world :poss-of ( side :mod other )  )  :arg1 we )  )  )  )  :arg1-of possible )  )  :time then
and :op1 opportunity :op2 ( go :arg0 ( person :name ( name :op1 blair )  :op1-of ( and :op2 she :op3 foundation )  :wiki tony_blair )  :arg1 ( autumn :mod-of ( date-entity :year 2004 )  )  :arg1-of ( award :arg0 she )  :arg4 grateful :location ( city :name ( name :op1 london )  :wiki london )  )
and :arg1-of ( help :arg0 ( temporal-quantity :quant 10 :unit year )  :arg2 ( person :name ( name :op1 damir )  )  :op3-of ( and :arg2-of ( contrast :arg1 go )  :op1 ( and :op1 ( call :arg0 i :arg1 ( person :name ( name :op1 cherie )  )  :arg1-of possible :arg1-of ( wish :arg0 i )  )  :op2 ( say :arg0 i :mod just )  )  :op2 ( remember :arg0 i :arg1 ( meet :arg1 ( person :arg0-of ( have-rel-role :arg1 i :arg2 husband )  :op1-of and )  :location ( city :name ( name :op1 london )  :wiki london )  :arg0 i )  :mod still )  )  )
remember :arg0 ( i :arg0-of ( want :arg1 ( eat :arg0 ( person :name ( name :op1 damir )  )  :arg1 ( soup :arg1-of ( call :arg0 they :arg2 ( restaurant :arg1-of local :mod ( country :name ( name :op1 russia )  :wiki russia )  :quant all )  )  :mod borsch )  )  )  )
remember :arg0 ( i :arg0-of ( run :arg1 ( they :arg0-of ( play :arg1 water :op1-of and )  )  :direction away :op3-of ( and :op1 ( play :arg0 he :arg1 waiter :location restaurant )  :op2 ( shoot-down :arg0 ( person :name ( name :op1 damir )  )  :arg2 pistol )  )  )  )
and :time then :time ( away :location-of ( horror :poss ( we :mod-of we )  )  :mod just :quant ( temporal-quantity :unit month )  )
and :arg0-of ( share :arg1 ( pain :arg1 we )  )  :arg2-of ( ready :arg1 ( person :mod ( country :name ( name :op1 britain )  :wiki united_kingdom )  )  :arg1-of ( amaze :arg0 i )  )  :op1 support
say :arg0 ( she :arg0-of ( keep :arg1 ( world :mod this )  :arg1-of ( think :arg0 i )  :manner ( good :polarity - )  )  )  :arg1 ( this :mod-of ( year :unit-of ( temporal-quantity :quant 10 )  )  )  :arg1-of mean
and :op1 ( go :arg1 war :location ( country :name ( name :op1 ukraine )  :wiki ukraine )  :time now )  :op2 ( die :arg1 person )  :op3 ( believe :arg0 i :arg1 ( and :op1 kill :op2 ( kill :arg1 ( child :mod ( day :mod every )  :quant many )  )  )  )
our :arg2-of ( resemble :arg1 ( same :arg1 ( child :domain they :mod just )  )  )
listen :arg0 ( they :arg1-of ( bore :arg0 ( something :mod else )  :op1-of ( or :op2 busy )  )  :poss-of ( person :quant many )  )  :arg1 ( report :arg1-of ( think :arg0 i )  :domain war :mod news )
know :arg0 ( i :arg1-of ( feel :arg0 person )  )  :arg1 horror :mod just
and :op1 ( i :arg0-of ( feel :arg1 it :arg1-of ( stop :arg0 - )  )  )
and :op1 ( change :arg1 ( nothing :arg0-of ( want :arg1 ( kill :arg0 person :arg1 ( other :mod each )  )  :mod still )  )  )  :op2 sad
and :op1 ( become :arg1 ( person :arg1-of grow :name ( name :op1 damir )  )  :arg2 boy :op1-of ( and :op2 ( angry :op2-of ( or :op1 ( aggressive :domain he )  )  )  )  )  :op2 ( gentle :arg1 - :degree very )  :op3 ( calm :arg1 all )
seek :arg0 ( he :poss-of ( past :mod-of ( horror :arg2-of ( preoccupy :arg1 he :polarity - )  :mod this )  )  )  :arg1 revenge :polarity - :purpose example
contrast :arg1 ( know :arg0 ( i :arg0-of ( go :arg1 they :arg4 gym :op1-of and :purpose ( and :op1 time :op2 time )  )  )  :arg1 ( like :arg0 he :arg1 ( recall :arg1 there :arg2-of ( light :arg0 ( classmate :quant 6 )  :arg1 candle )  :arg0 he )  :polarity - )  )  :arg2 ( close :degree very )
sofa :arg1-of ( turn :arg0 ( temporal-quantity :unit hour )  :arg2 away :arg2-of ( suffer :arg0 ( he :domain-of small )  )  )  :arg1-of ( lie :arg2-of ( use :arg1 time :arg1-of ( remember :arg0 i )  )  )  :accompanier face
open :arg1 ( eye :arg1-of ( sleep :polarity - )  )
and :op1 ( clever :arg0 ( i :compared-to-of ( tall :domain ( toy :mod ( other :mod-of damir )  :mod army )  :op2-of ( and :op1 ( remember :arg0 i :arg1 ( throw :arg0 he :arg1 ( gun :quant all )  :arg2 away )  :mod also )  )  )  )  :arg1 ( look :arg1 type :arg1-of ( nice :arg0 now :arg2 17 )  )  )  :op2 healthy
cause :arg0 ( possible :arg1 ( believe :arg0 i :arg1 hardly )  :prep-with ( temporal-quantity :quant some :unit hour )  )  :arg1 ( and :arg1-of ( see :arg0 ( he :arg1-of ( sure :arg0 i )  )  :arg2 again )  :op1 i )
look :arg0 i :arg1 ( foot :arg1-of ( get :arg0 ( i :arg0-of ( manage :arg1 ( recover :arg0 ( i :arg0-of ( see :arg1 ( hell :location ( around :op1 i )  )  :time ( lie :arg1 ( part :part-of body )  :location everywhere )  )  )  :time ( after :op1 ( explode :arg1 around )  )  :arg1 i )  )  )  :op1-of and )  )
possible :arg1 ( survive :arg0 ( boy :mod little )  :arg1 ( hell :mod this )  )  :arg1-of ( sure :arg0 i :mod absolute )  :mod-of ( way :polarity - )
contrast :arg1 ( hear :arg0 ( he :arg1-of ( sure :arg0 ( i :arg0-of ( remember :arg1 ( i :arg0-of ( shout :arg1 ( damir :arg0-of ( run :arg1 ( run :arg1 away )  )  )  )  )  )  )  )  )  :arg1 i :arg1-of ( cause :arg0 i )  :polarity - )  :arg2 again
contrast :arg2 ( and :op1 ( run :arg0 ( he :arg0-of hear )  :arg1 away )  )
cause :arg0 ( go :arg0 many :arg1 life )
person :name ( name :op1 georgy :op2 ilyin )  :op1-of 17
siege :arg0-of ( define :arg1 ( horror :poss ( thing :name ( name :op1 beslan )  )  )  :purpose-of ( image :arg1-of shock )  :purpose-of ( come :arg1 boy )  )  :op1-of after
right :arg0 ( siege :op1-of after )  :arg1 ( person :mod ( survivor :mod ( thing :name ( name :op1 beslan )  )  )  :name ( name :op1 georgy :op2 ilyin )  :prep-with ( person :arg1-of ( have-rel-role :arg0 person :arg2 mum )  :name ( name :op1 fatima )  )  )  :arg2-of ( comfort :arg0 ( date-entity :year 2004 )  :arg1 today )
run :arg0 ( he :arg0-of ( etch :arg1 ( face :mod bloodstain :poss he )  )  :arg2-of ( gun :arg0 ( terrorist :mod ( province :name ( name :op1 chechnya )  :wiki chechnya )  )  :arg1 classmate )  :poss-of life )  :arg1 fear
thing :location-of ( barbarity :arg2-of ( symbolize :arg1 ( thing :arg0-of ( shock :arg1 ( picture :poss he )  :degree most )  )  )  )  :name ( name :op1 beslan )
drop :arg0 ( person :name ( name :op1 fatima )  :poss ( he :arg1-of ( have-rel-role :arg0 person :arg2 mother )  )  )  :duration day :time ( before :op1 ( rush :arg1 ( organization :mod senior :name ( name :op1 gp )  )  :arg2 ( take :arg0 ( person :arg0-of ( have-rel-role :arg1 54 :arg2 son )  :mod elder :poss school )  :arg1 ( person :name ( name :op1 vladimir )  )  :arg3 university )  )  )
cause :arg0 yard :arg1 ( little :mod-of boy )  :arg2 ( i :arg2-of ( rush :arg0 i :arg1 into :time ( before :quant ( temporal-quantity :quant 2 :unit minute )  )  :time ( terrorist :arg1-of ( recall :arg0 she :arg2 of :condition ( there :mod-of alone )  :prep-with ( temporal-quantity :quant 3 :unit day )  :time horror )  )  :time left )  )
contrast :arg1 alone :arg1-of ( complete :arg0 all :polarity - )  :arg2 ( kill :arg0 ( we :arg1-of ( have-rel-role :arg0 person :arg2 relative )  )  :arg1 family :manner there )
manage :arg0 ( person :arg0-of survive :name ( name :op1 georgy )  )  :mod only
hard :arg1 ( think :arg0 ( date :mod this )  :op1-of ( and :op2 ( talk :arg1 close )  )  )
recall :arg0 we :arg1 ( tragedy :mod ( this :op1 - )  )  :location ( day :arg1-of single )  :polarity -
think :arg0 i :arg1 ( yesterday :arg0-of ( come :arg1 ( day :unit-of temporal-quantity )  :arg4 ( mind :location-of ( time :mod ( all :arg2-of ( feel :arg0 we :arg1 ( scene :quant some )  :polarity - )  )  )  )  )  )  :arg1-of long
forget :arg0 nobody :arg1 ( you :arg1-of ( promise :arg0 i )  )  :time ever
haunt :arg1 ( image :topic ( person :arg0-of ( leave :arg1 right )  :name ( name :op1 georgy )  )  )  :arg1-of ( attack :arg1-of ( shock :arg0 statue :degree most )  :op1-of and )
say :arg0 ( he :arg0-of ( want :arg1 ( hug :arg1 teach )  )  )  :arg1 ( remember :arg0 i :arg1 ( want :arg0 ( person :name ( name :op1 georgy )  )  :arg1 ( go :arg4 school :time ( day :mod that )  )  :degree much )  )
see :arg0 i :arg1 tv :time-of ( alive :arg1-of ( know :arg0 i :arg1-of ( get :mod only :arg0 i )  )  :domain he )
and :op1 ( statue :arg0-of ( cry :arg1 ( person :location ( country :name ( name :op1 san :op2 marino )  )  :name ( name :op1 georgy )  )  )  :mod even )  :time now
and :op1 ( like :arg0 ( person :name ( name :op1 georgy )  )  :arg1 ( look :arg1 ( picture :mod this )  :arg0 person )  :polarity - )  :op2 ( hide :arg1 bookcase :location ( home :poss we )  )
contrast :arg1 ( understand :arg0 i )  :arg2 ( think :arg0 ( i :arg1-of ( thank :arg0 all )  )  :arg1 ( feel :arg0 ( person :mod this :mod picture )  :arg1 ( pain :arg0 world :arg1 we )  )  :mod also )
say :arg0 ( person :name ( name :op1 georgy )  )  :arg1 ( possible :arg1 ( nev :mod-of again )  :mod ( important :mod ' :mod-of this )  )  :arg2-of ( mean :arg1 it )  :time now
truth :arg1-of ( know :arg0 ( i :arg0-of ( doubt :arg1 we )  )  :time ever )
and :op1 ( keep :arg0 person :arg1 ( investigate :arg1 ( tragedy :mod such )  )  )  :op2 ( know :arg1 truth :arg0 person )
investigate :arg0 they :arg1 ( crash :arg1 ( company :name ( name :op1 boeing )  :wiki boeing )  :mod this )  :location ( country :name ( name :op1 ukraine )  :wiki ukraine )  :time now
cause :arg1-of ( know :arg0 we :arg1-of ( will :mode interrogative )  :time ever )
bad :arg0 something :arg1 ( world :arg1-of move :mod this )  :degree very
cause :arg0 ( want :arg0 ( i :arg0-of ( understand :arg1 amr-unknown :polarity - )  )  :arg0-of ( cause :arg1 ( happen :arg1 it )  )  :arg1 war :arg1-of ( ask :arg0 you :arg2 person )  :mode interrogative :polarity - )  :arg1 amr-unknown
ten :op1 ( temporal-quantity :arg0-of ( pain :mod such :purpose-of nothing )  :unit year )
need :arg0 ( we :arg0-of ( pass :arg1 ( temporal-quantity :unit year )  :purpose ( forget :arg1 little )  )  )  :arg1 dozen
affect :arg0 it :arg1 health :op1-of ( and :op2 ( feel :arg0 i :time still )  )
contrast :arg1 ( nightmar :arg1-of ( cause :arg0 siege :degree ( temporal-quantity :quant ( 4 :op1-of ( or :mod ( about :op1 3 )  )  )  :unit year )  )  :quant some )  :arg2 ( get :arg0 i :arg1 good :time then )
get :arg0 i :arg1 ( scare :arg0 very :arg1 i :time ( day :mod every :mod school )  )  :direction back :time ( late :op1 ( date-entity :year 2004 )  )
think :arg0 i :arg1 ( and :arg1-of ( kill :mod classmate )  :op1 ( person :arg0-of ( have-rel-role :arg1 i :arg2 friend )  )  )
gym :location-of ( keep :arg0 ( i :arg0-of ( approach :arg1 ( 9 :quant 1 )  :arg2 this :mod each )  )  )
want :arg0 ( i :arg1-of ( have-rel-role :arg0 ( person :mod old )  :arg2 ( friend :mod childhood )  )  )  :arg1 ( pay :arg1 tribute :arg0 i )
contrast :arg1 ( hard :arg0 ( it :arg1-of ( do :arg0 i )  )  :arg1 ( go :arg0 i :arg4 ( inside :op1 gym )  )  )
feel :arg0 i :arg1 victim :arg2 ( this :mod-of ( story :poss-of past )  )  :polarity ( - :op1 now )
contrast :arg1 ( feel :arg0 ( i :arg0-of ( forget :arg1 i :polarity - )  )  :arg1 ( sorry :arg2 myself :arg1 i )  :polarity - )
go :arg1 ( life :poss i )
finish :arg0 ( i :arg2-of ( enter :arg0 ( year :mod this )  :arg1 ( university :location ( country :name ( name :op1 vladikavkaz )  )  :mod medicine )  )  )  :arg1 school
learn :arg0 i :arg1 ( surgeon :mod heart )
choose :arg0 ( i :arg0-of ( go :arg2 army )  )
contrast :arg1 ( want :arg0 i :arg1 ( man :mod military )  )  :arg2 ( let :arg0 health :arg1 i :polarity - )
contrast :arg1 ( want :arg0 i :arg1 ( fight :arg2 ( country :quant-of - )  :arg0 i )  )
person :name ( name :op1 georgy :op2 farniyev )  :op1-of 20
terrorist :arg1-of murder :part ( foot :arg2-of ( trap :arg2-of ( survive :arg0 boy )  )  )
contrast :arg1 ( trap :arg1 ( person :name ( name :op1 georgy :op2 farniyev )  )  :arg2 ( foot :part-of ( terrorist :arg1-of murder )  )  )  :arg2 ( manage :arg0 miraculou :arg1 ( survive :arg1 siege )  :mod still )
trap :arg0 siege :arg1 ( he :arg0-of ( sit :arg1 ( murder :arg0 underway :arg1 ( terrorist :part foot )  )  :arg2 next :arg4 bomb )  )  :arg1-of picture :arg2 ( inside :op1 gym )
miracle :arg0-of ( kill :arg1 he :polarity - )  :domain it
contrast :arg1 siege :arg2 ( he :arg2-of ( damage :arg0 ( government-organization :arg1-of ( have-org-role :arg0 ( we :arg0-of ( cause :arg1 it )  :arg0-of ( feel :arg1 amr-unknown )  :arg0-of ( say :arg1 georgy :time ( yesterday :mod just )  )  :arg0-of ( want :arg0-of ( cause :arg1 of )  :arg1 intelligence :arg2 train )  )  :arg2 officer )  :name ( name :op1 fsb )  :wiki federal_security_service )  :arg1 health )  )
behind :arg3-of ( leave :arg0 i :arg1 ( something :domain this :polarity - )  :time it :time still )  :op1 i
say :arg0 person :arg1 ( cope :arg0 child :arg1 ( experience :arg1 ( say :arg0 i :arg1 ( true :domain this :polarity - )  )  :arg1-of bad )  )  :arg2-of ( use :arg0 i :arg1 now :op2-of ( and :op1 old )  )
contrast :arg1 ca :arg2 ( i :arg0-of ( forget :arg1 it :polarity - )  :arg2-of ( do :arg0 ( i :arg0-of ( feel :arg1 good :op4-of ( and :op1 in :op2 ( work :arg0 i :arg1 afterwards )  :op3 psychologist )  :time ( date-entity :year 2006 )  )  )  :arg1 bit )  )
and :op1 ( like :arg0 i :arg1 ( forget :arg0 i )  )
and :op1 ( time :mod last :time-of ( go :arg0 i :arg1 ( date-entity :year 2005 )  :arg2 ( after :location-of year )  :arg4 ( inside :op1 gym )  :mod again )  )
lose :arg0 i :arg1 consciousness
show :arg0 ( i :arg0-of ( ask :arg1 ( go :arg0 i :arg1 ever )  :polarity - )  )  :arg1 ( and :arg1-of please :op1 again )  :arg2-of ( sit :arg1 ( i :arg0-of ( know :arg1 picture )  )  )
survivor :mod-of ( person :arg0-of ( picture :arg1 photograph :location ( hospital :poss-of ( laptop :location-of siege )  )  :time today )  :name ( name :op1 georgy :op2 farniev )  )
and :op1 ( carry :arg0 i :arg1 ( pain :arg1 i :domain-of enormous )  :accompanier ( i :mod ( every :mod-of day )  )  )
discuss :op2-of ( or :arg1-of ( resemble :arg0 i :arg1-of ( know :arg0 ( person :arg0-of ( have-rel-role :arg1 i :arg2 friend )  )  )  :op1-of ( and :op2 ( ask :arg0 they :arg1 school :arg2 i )  )  :polarity - )  :op1 think )
condition :domain i :mod physical :mod-of term
contrast :arg1 ( care :arg1 i :arg2 knee )  :arg1-of recommend :arg2 ( walk :arg0 ( i :arg1-of fine )  :arg1-of injure :time now )
and :arg1-of ( want :arg0 i )  :op1 ( let :arg0 health :arg1 ( go :arg0 i )  :mod still :polarity - )  :op2 ( study :arg1 ( academy :location ( country :name ( name :op1 st :op2 petersburg )  )  :mod ( secret :mod-of service )  )  :location ( government-organization :name ( name :op1 fsb )  :wiki federal_security_service )  )
and :op1 ( send :arg0 i :arg1 document )  :op2 ( paper :mod medicine )  :op3 ( reply :arg0 they :arg1 ( possible :polarity - )  )
veterinary :mod-of ( institute :arg4-of ( go :arg0 i :arg1-of ( cause :arg0 ( animal :domain ( passion :poss i )  )  )  )  )
complete :arg0 i :location ( there :quant ( temporal-quantity :quant 2 :unit year )  )
learn :arg0 ( he :arg0-of ( treat :arg1 animal :arg2 cow :mod-of all )  )  :arg1 cat
say :arg0 ( he :arg1-of mean )  :arg1 ( know :arg0 i :arg1 ( child :arg1-of ( tell :arg0 i :arg2 ( i :arg0-of ( experience :arg1 about )  )  )  )  )
and :location-of ( know :arg0 ( child :mod ( something :domain this :polarity - )  )  :arg1 ( something :arg1-of ( experience :arg0 they :arg1-of recommend )  :polarity - )  :arg1-of recommend )
say :arg0 ( he :arg0-of ( leave :arg1 ( i :arg1-of ( have-rel-role :arg0 ( person :poss-of 42 )  :arg2 mother )  :arg1-of pain )  )  )  :arg1 this
worsen :arg1 ( get :arg0 anniversary :arg1 ( it :poss-of soul )  )
and :op1 ( attend :arg0 ( i :arg0-of go )  :arg1 ( hold :arg1 ceremony :purpose mark )  )
know :arg0 ( i :arg0-of ( go :arg4 - )  )
cause :arg0 and :arg1 ( even :mod-of ( strong :arg0 there :arg1 it :arg2 - :op1-of he )  )  :arg2 i
possible :arg1 ( help :arg1 ( wait :arg1 i :location home )  )  :polarity -
imprint :arg1 ( i :arg2-of ( return :arg1 he :arg3 ( person :name ( name :op1 god )  :prep-to-of ( grateful :domain i )  :wiki god )  :arg4 here )  )  :arg2 everyone
stay-on :arg0 it
contrast :arg1 ( person :domain-of still :domain-of ( adult :time now )  :name ( name :op1 georgy )  :poss-of ( horror :mod that )  )
cause :arg0 ( hard :arg1 ( accept :arg0 it )  )  :arg1 ( happen :arg0 ( fair :degree terrible :polarity - )  :arg1 something :arg2 you )
contrast :arg1 ( like :arg0 ( he :arg0-of ( take :arg1 he :arg1-of knee :arg1-of ( cause :arg0 boy )  :polarity - )  )  :arg1 sport )
contrast :arg2 ( possible :arg1 ( exercise :arg0 he :arg1 ( he :arg0-of ( walk :arg1 ( surgeri :quant several )  )  )  )  :polarity - )
contrast :arg1 ( say :arg0 i :arg1 ( overcome :arg0 he :arg1 ( horror :mod this )  :time percentage-entity )  )  :arg2 ( possible :arg1 ( overcome :arg1-of complete :op1-of ( and :op2 ( forget :arg1 50 )  )  :arg0 i )  )
horrible :degree-of ( experience :arg1-of stay :mod this )
and :op1 ( kill :arg1 ( and :op1 ( person :arg0-of ( have-rel-role :arg2 friend )  :quant many )  :op2 neighbour )  :location siege )  :op2 ( add :arg1 pain :mod only )
and :op1 ( lose :arg0 i :arg1 ( person :arg1-of ( know :arg0 i :arg2 dear :manner i )  :quant many )  :arg2 they )
contrast :arg1 ( thing :arg1-of gift :arg1-of ( do :arg0 ( person :name ( name :op1 god )  :wiki god )  :arg1-of possible :arg2 i )  :domain this :mod ( great :degree most )  )  :arg2 ( ache :arg0 heart :arg1 ( i :poss-of ( son :arg2-of ( have-rel-role :arg0 ( person :arg1-of kill )  :arg1 i )  )  )  :op1-of and )
contrast :arg1 ( family :arg1-of ( know :arg0 ( i :arg0-of ( bear :arg1 ( child :mod new )  )  )  :mod also )  )  :arg2 ( marry :arg0 widow :mod again )
hard :arg0 even :arg1 ( accept :arg0 it :arg1 ( go :arg1 life :time ( want :arg0 you :polarity - )  )  )
forget :arg0 i :arg1 ( heart :arg0-of ( jump :arg1 chest :time ( moment :arg1-of ( see :arg0 i :location hospital )  )  )  )
look :arg0 ( i :arg1-of ( war :location ( region :arg1-of differ )  )  )  :arg1 world :time now
fight :arg0 person :arg2 amr-unknown :mode interrogative
kill :arg0 they :arg1 ( other :mod each :mode interrogative )
and :op1 ( possible :arg0 very :arg1 ( believe :arg0 i :arg1 war :arg2 ( we :poss-of country )  :mod hardly )  )  :time now
use :arg0 we :arg1 ( country :arg1-of ( friendly :arg0 interrogative )  )  :manner-of ( fight :arg0 we :arg1 past :time now )
and :op1 child :op2 ( suffer :arg0 and )  :op3 ( sure :arg0 i :arg1 ( kill :arg1 ( child :quant many )  :location ( country :name ( name :op1 ukraine )  :wiki ukraine )  :time already )  )  :op4 ( kill :arg0 person :arg1 many )
possible :arg1 ( grab :arg0 ( we :arg0-of ( throw :arg2 away :op1-of ( and :arg1-of ( possible :compared-to-of ( away :mod far )  )  )  )  )  :arg1 ( person :arg0-of rebel :quant all )  :mod only )
person :domain-of 10 :name ( name :op1 alyona :op2 tskaeva )
commando :arg1-of ( safe :arg2-of ( carry-out :arg0 ( force :arg1-of special )  :arg1 baby :manner poignantly )  )
carry-out :arg0 ( commando :arg1-of special :mod force :mod ( country :name ( name :op1 russia )  :wiki russia )  )  :arg1 save :arg2 ( safe :arg1 ( person :arg0-of leave :name ( name :op1 alyona :op2 tskaeva )  )  )
and :op1 ( memory :polarity - )  :op2 ( atrocity :mod right :quant all )  :time ( now :time-of she )
policeman :arg1-of ( gasp :arg0 world :condition ( carry-out :arg0 ( siege :arg1-of ( cradle :arg3 arm )  )  :arg1 ( person :mod baby :name ( name :op1 alyona )  )  )  :time ( date-entity :year 2004 )  )  :mod ( country :name ( name :op1 russia )  :wiki russia )
contrast :arg0 year :arg1 ( let :arg0 terrorist :arg1 ( go :arg0 ( she :arg1-of ( have-rel-role :arg0 ( person :arg1-of ( have-rel-role :arg0 ( person :mod old :op1-of year :quant old )  :arg2 sister )  :arg1-of ( have-rel-role :arg0 ( person :name ( name :op1 makhar )  )  :arg2 brother )  :mod old )  :arg2 mother )  )  :arg1 30 )  )  :arg2 ( keep :arg1 ( and :op1 ( person :name ( name :op1 kristina )  )  :source ( school :mod-of gym )  )  :manner cruelly )
contrast :arg1 carnage :arg2 ( and :op1 ( person :arg0-of ( have-rel-role :arg1 ( person :arg0-of ( escape :arg1 3 :arg2 then )  :name ( name :op1 makhar )  )  :arg2 mother )  )  :op2 ( person :arg0-of ( have-rel-role :arg1 murder :arg2 sister )  :arg1-of die )  )
and :op1 ( remarry :arg0 ( person :arg1-of ( have-rel-role :arg0 ( person :arg1-of lose :op1-of ( after :time-of ( name :arg0 he :arg1 ( person :name ( name :op1 kristina )  )  :arg2 ( girl :mod baby )  )  )  )  :arg2 daughter )  :name ( name :op1 ruslan )  )  :arg1 ( she :arg1-of ( have-rel-role :arg0 person :arg2 father )  )  :time since )  :op2 ( person :arg0-of ( have-rel-role :arg1 ( person :mod new :name ( name :op1 svetlana )  )  :arg2 wife )  )
say :arg0 ( and :op1 ( blossom :arg0 ( person :name ( name :op1 alyona )  )  :arg1 ( memory :poss siege )  )  )  :arg1 neighbour :op4-of ( and :op1 ( bright :arg0 now :arg1 - )  :op2 happy :op3 girl )
say :arg0 family :arg1 ( and :op1 ( and :op1 they :op2 ( happy :mod big )  :op3 now )  :op2 alyona :op3 makhar :op4 both )  :arg2 ( close :arg0-of ( have-rel-role :arg1 ( kid :mod great )  :arg2 friend )  )
mark :arg1 ( anniversary :mod tenth )  :arg1-of ( want :arg0 ( person :arg1-of ( have-rel-role :arg0 ( person :arg1-of fantastic )  :arg2 dad )  :name ( name :op1 ruslan )  )  :op1-of and )  :topic-of ( memory :mod all :op1-of away )
understand :arg0 you :arg1 why :arg1-of possible
accuse :arg0 man :arg1 ( country :mod-of ( pelican :arg1-of cross )  :name ( name :op1 fife )  )  :arg2 ( knock-down :arg1 girl )
pelican :arg1-of ( cross :arg0 ( man :arg0-of ( stand :arg1 ( trial :arg0-of ( accuse :arg2 ( run :arg1 ( girl :mod ( old :quant ( temporal-quantity :quant 3 :unit year )  )  )  )  )  )  )  :age ( temporal-quantity :quant 78 :unit year )  :mod old )  :manner fife )
allege :arg1 ( knock :arg0 ( person :name ( name :op1 stewart )  :wiki jon_stewart )  :arg1 girl :arg1-of ( cross :location ( country :name ( name :op1 pittenween )  )  :location ( country :name ( name :op1 east :op2 neuk )  )  )  )
say :arg0 ( person :arg0-of prosecute )  :arg1 ( drive :arg0 ( person :arg0-of ( knock :arg1 girl :op1-of ( and :arg0-of injure )  :op3-of ( and :op1 care :op2 attend )  )  :name ( name :op1 stewart )  :wiki jon_stewart )  :arg1 3 :arg2 ( q :mod ( organization :name ( name :op1 audi )  )  )  )
deny :arg1 ( charge :arg0 78 :arg1 ( person :name ( name :op1 stewart )  :source ( country :name ( name :op1 anstruther )  )  :wiki jon_stewart )  )  :arg2 ( organization :name ( name :op1 dundee :op2 sheriff :op3 court )  )
sheriff :mod-of ( person :domain-of ( date :location 1 :mod trial )  :name ( name :op1 charles :op2 macnair :op3 qc )  )
tip :arg1 ( photo :mod ( under :degree good )  :op1-of ( and :op2 video )  )  :quant 4
interest :arg0 ( you :arg0-of ( shoot-down :arg1 photo )  )  :arg1 ( or :op1 ( video :poss ( you :poss-of ( choices :op1-of equipment )  :poss-of variety )  )  )  :arg2 under
and :arg1-of ( shoot-down :arg0 ( option :arg1-of ( cheap :arg0 such :degree most )  :domain-of ( point :mod waterproof )  )  :example ( or :op1 ( thing :name ( name :op1 coolpix :op2 aw )  )  :op2 120 :op3 ( cam :mod action )  :op4 ( thing :name ( name :op1 gopro :op2 hero3 )  )  :op5 ( thing :arg4-of ( go :arg0 both :arg2 such :time around )  :name ( name :op1 silver :op2 edition )  )  )  :op1-of 300 )
price :arg1 all :arg2 ( shoot :arg0 i :arg1 ( photo :mod this )  :arg2 350 :manner ( use :arg0 ( party :poss family )  :arg1 ( camera :quant several )  )  )
use :arg0 ( you :poss-of ( matter :polarity - )  )  :arg1 ( gear :arg0-of ( apply :arg1 ( rule :arg0-of ( result :arg2 ( thing :mod ( good :degree most )  )  )  :quant few )  )  )
check :arg1 ( gear :arg1-of double )
and :arg1-of ( tight :arg1-of ( close :arg0 ( you :arg0-of ( sure :arg1 ( camera :mod waterproof )  )  :mod even )  :mod ( other :mod-of compartment )  )  )  :op1 camera :op2 battery
or :arg1-of ( shoot-down :arg0 you )  :op1 ( photo :arg1-of ( match :arg0 camera )  :mod type :mod also )  :op2 video
dim :arg1 ( setting :arg1-of ( expose :arg1-of ( optimize :arg0 ( mod :arg1-of shoot-down :op2-of ( or :location ( and :op1 camera :op2 camcorder :quant some )  :op1 scene )  )  )  )  :mod undersea )
and :op1 ( know :arg1 ( possible :arg1 ( go :arg0 ( equipment :arg0-of deep )  )  )  :time ( before :op1 ( jump :arg0 you )  )  )
or :op1 ( 5 :quant-of ( foot :mod ( only :arg2-of ( rate :arg0 50 :arg1 ( camera :quant some )  :op1-of ( foot :beneficiary-of other )  )  )  )  )  :op2 60
check-out :arg0 we :arg1 ( and :op1 ( guide :arg1 ( buy :arg1 ( camera :beneficiary ( model :mod waterproof :mod both :op2-of ( and :op1 conventional )  )  :mod digital )  )  )  :op2 rating )
cause :arg0 ( many :quant-of of )  :arg1 ( take :arg0 they :arg1 shot :op1-of multiple :purpose ( work :polarity - )  )
compose :arg0 ( you :arg0-of ( do :arg1 while :arg2-of ( general :arg0 action :arg1 cam )  :polarity - )  :arg2-of ( help :arg0 lcd )  )  :arg1 ( photo :arg1-of ( point :op1-of ( and :arg1-of shoot-down :op2 camera )  )  )
compose :arg0 under :arg1 ( and :arg1-of ( see :arg0 you :arg1-of hard :mod even )  :op1 ( process :arg1 ( hit :arg0 lcd :arg1-of ( shoot :arg0 it )  )  :arg1-of ( miss :arg0 or )  )  )
cause :arg1 ( shoot-down :arg2 multiple )
setting :arg1-of ( expose :mod ( advantage :arg1-of ( take :arg0 ( camera :arg0-of ( bracket :manner-of ( mode :arg0-of ( shoot :arg1 ( burst :arg1 shot )  )  )  )  )  )  )  )  :arg1-of ( differ :arg0 also :degree slight )
stay :arg1-of ( near :arg2 surface )
light :arg1-of ( fall :arg2 dramatic :arg3 ( dive :arg0 you :arg1 under :arg1-of deep )  )
or :arg2-of ( shoot-down :arg0 ( you :arg1-of ( stay :arg1-of possible )  )  :arg1 surface )  :op1 pool :op2 lake :op3 ocean
and :op1 ( capture :arg0 ( you :arg0-of ( allow :arg1 this )  )  :arg1 color :arg3 also :prep-on more )  :op2 photo :op3 ( go :arg0 you :arg1 color :arg1-of deep :arg4 ( see :arg0 you :arg1 less )  )
subject :arg1-of get
contrast :arg1 ( advise :arg1 this :arg2 ( shoot-down :arg1 ( land :arg1-of dry )  )  :mod great )  :arg2 ( cause :arg0 ( condition :arg1-of dim :mod light )  :arg1 ( important :degree ( more :mod even )  )  :mod under )
fill :arg0 ( want :arg0 ( you :poss-of ( close :arg2-of ( mean :arg0 you :arg1 ( angle :arg1-of ( wide :arg0 ( you :arg0-of ( shoot-down :arg1 ( cam :op1 ( mean :arg0 action :arg1 this :arg2 device )  )  )  :poss-of particular :poss-of ( important :poss it )  )  )  :arg1-of ( fix :arg0 often )  :op1 len )  )  )  :poss-of subject )  )  :arg1 picture :manner frame
resemble :arg1 ( person :domain-of ( kind :mod-of ( man :poss-of ( force :arg0-of ( shake :arg1 thing :arg1-of possible )  :consist-of personality )  )  )  :name ( name :op1 andrew :op2 lawson )  )  :arg2 ( government-organization :arg1-of ( organize :mod even :mod gargantuan )  :name ( name :op1 nhs )  :wiki national_health_service_[england] )
and :op1 ( agoni :op1-of ( both :arg1-of ( spar :arg0 ( career :poss ( he :arg0-of ( devote :arg1 ( anaesthetist :arg1-of ( consult :arg0 ( person :arg1-of sick )  )  )  )  )  )  )  )  )  :op2 illness :op3 ( torment :arg1 treat )
seek :arg1 ( have-org-role :arg0 ( person :arg0-of ( have-rel-role :arg1 6 :arg2 wife )  :arg0-of remember )  :arg0-of ( live :manner ( after :arg0-of cripple )  :manner effect )  :arg1 ( organization :name ( name :op1 mi6 )  :wiki secret_intelligence_service )  :arg2 officer )  :arg1-of torture
understand :arg0 ( person :name ( name :op1 lawson )  :op1-of ( and :arg0-of ( captivate :arg1 doctor )  :op2 diagnose :op3 disease :op4 ( pain :arg1 entire )  )  )  :arg1 ( concern :arg0 ( something :mod else )  :arg1 treat :arg1-of overwhelm )
suffer :arg0 ( 1 :quant-of day )  :arg1 ( date-entity :year 2007 )  :arg1-of ( begin :arg0 he )
write :arg0 ( he :arg1-of ( feel :arg0 i :polarity - )  )  :arg1 ( that :mod-of ( year :time ( date-entity :month 5 )  )  )
difficult :domain i :domain energise
find :arg0 ( he :arg0-of ( struggle :arg1 ( symptom :arg1-of ( resemble :arg2 flu )  )  )  )  :arg1 ( berate :arg1 ( person :arg0-of ( have-rel-role :arg2 wife )  )  :manner impatiently )
note :arg0 he :arg1 ( rather :arg2-of ( want :arg0 i :arg1 everything )  )  :time late :time soon
upset :arg1 ( usual :polarity - )  :op3-of ( and :op1 ( person :arg0-of ( go :arg1 business :direction away :purpose week :time-of ( find :arg0 ( person :name ( name :op1 lawson )  )  )  )  :name ( name :op1 juliet )  )  :op2 unaccountably )
something
get :arg0 ( he :arg0-of ( perform :arg1 ray :arg2 ( x :mod chest )  )  )  :arg1 colleague
ski :arg0 he :arg1 ( temporal-quantity :mod ( just :mod-of france )  :quant 2 :unit week )  :arg2 alp :time early
come :arg1 ( thing :arg2-of ( result :arg0 ray :arg1 x )  )  :direction back
cancer :arg0-of ( affect :arg1 ( or :op1 pleura :op2 ( line :arg0 ( he :mod-of mesothelioma )  :arg1 lung )  )  )  :mod incurable
hard :arg1 ( know :arg1 ( cause :mod exact )  )  :arg2 ( cancer :quant most )
cancer :arg1-of ( suffer :arg0 ( person :arg0-of ( smoke :arg1 ( person :arg0-of smoke :quant some )  :condition ( cancer :mod lung )  :purpose example )  :mod lung :quant ( all :polarity - )  )  )
contrast :arg2 ( differ :arg1 mesothelioma )
contrast :arg1 ( dub :arg0 once :arg1 ( material :location-of ( build :arg0 fibrou :arg1 ( expose :arg0 almost :arg1 asbesto :arg1-of ( cause :arg0 ( every :arg1-of case )  )  )  )  )  )  :arg1-of ( know :arg0 miraculou :manner ( mortally :mod-of dangerous )  :time now )
mesothelioma :domain-of ( disease :arg0-of ( easy :arg1 most )  :arg1-of ignore )
asbesto :quant ( all :beneficiary-of ( product :poss past )  :op1-of after )
effect :arg2-of ( come :arg0 ( type :arg1-of ( use :location ( country :name ( name :op1 britain )  :wiki united_kingdom )  :polarity - :time since )  :mod ( dangerous :degree most )  :mod-of asbesto )  :arg1 ( ban :arg0 industry :arg1 1960 :arg1-of voluntary )  )
and :arg1-of ( work :arg0 ( person :location ( industry :arg1-of specific )  :mod only )  :condition ( use :mod even )  :manner close )  :op1 ( lagger :mod pipe )  :op2 builder :op3 carpenter :op4 ( person :arg0-of ( work :arg1 example :arg2 shipyard )  )
seem :arg0 ( era :mod another :source-of toxin )  :arg1 ( cause :arg1 ( concern :arg1 industry )  :time today )  :mod hardly
contrast :arg2 ( misplace :arg1 ( complacency :mod such )  )
turn :arg0 ( epidemic :arg1-of ( peak :arg0 today )  :mod mesothelioma )  :arg1 ( country :name ( name :op1 britain )  :wiki united_kingdom )
death :location here :mod mesothelioma :mod more :op1 ( planet :location-of ( country :mod any :mod other )  )
die :arg0 disease :arg1 ( person :arg1-of ( die :arg0 more :location ( accident :location ( vehicle :mod motorcycle )  )  :op1-of ( about :consist toll )  )  :quant many )
and :op1 ( project :arg1 ( death :time ( since :op1 ( date-entity :year 1980 )  )  )  :arg2 future :location ( country :name ( name :op1 great :op2 britain )  :wiki united_kingdom )  )
asbesto :arg1-of ( ban :arg0 law :arg1-of ( develop :arg0-of ( take :arg1 ( temporal-quantity :unit decade )  :arg2 mesothelioma :mod usual )  )  :arg2 ( feel :arg0 ( we :arg0-of ( use :arg1 asbesto :domain-of ( law :polarity - )  )  :poss-of reason )  :arg1 ( effect :mod deadly )  :duration ( temporal-quantity :unit year )  :location now )  :time eventual :time ( date-entity :year 1999 )  )  :mod ( type :quant all )
and :op1 ( scourge :arg1-of ( confine :arg2 ( veteran :mod ( job :arg1-of ( build :arg0 industry :arg2 mesothelioma )  )  )  :polarity - )  )
and :op1 asbesto :op2 office :op3 ( work :arg0 ( we :arg0-of ( embed :arg1 ( case :quant many )  :location ( home :arg1-of ( live :arg0 we )  )  )  :arg0-of ( educate :arg1 we :arg2 still )  :poss-of ( shop :arg0 we )  )  :location ( school :op1-of ( and :op2 store )  )  )
mesothelioma :arg0-of ( respect :arg1 class :arg2-of result :op1-of ( or :op2 wealth :op3 occupy :op4 age )  :polarity - )
prove :arg1 ( refuge :arg0-of ( smart :arg1 ( store :arg2-of ( privilege :arg0 ( public :mod-of school )  :mod-of bastion )  :location ( city :name ( name :op1 london )  :wiki london )  :mod department )  )  )  :polarity -
riddle :arg0 ( organization :name ( name :op1 houses :op2 of :op3 parliament )  )  :arg1 asbesto
mean :arg0 good :arg1 ( hospital :mod even )  :arg2 ( reservoir :poss ( carcinogen :mod this :mod deadly )  )
old :domain ( person :name ( name :op1 andrew :op2 lawson )  )  :quant-of -
pipe :mod-of ( lagg :mod-of he )
struggle :arg0 he :arg1 ( think :arg1 ( come :arg4 ( contact :arg1 asbesto )  )  :arg1-of possible :arg0 he )  :prep-in fact
put :arg0 he :arg1 finger :time then
seem :arg0 it :arg1 ( possible :arg0 there :arg1 ( of :mod-of asbesto )  )  :arg2 ( i :arg0-of ( spend :arg1 ( 6 :arg1-of ( train :arg0 ( guy :mod tunnel :op1-of ' :poss-of ( hospital :wiki - )  :quant lot )  :arg2 ( he :arg0-of write )  )  :quant-of ( temporal-quantity :unit year )  )  )  )  :op1-of that
use :arg0 everybody :arg1 tunnel :op5-of ( and :op1 ( person :arg0-of study )  :op2 nurse :op3 doctor :op4 porter )
wonder :mode ( interrogative :mode-of ( same :arg0 1 :arg1 disease :arg2 ( contemporari :quant many )  )  )
answer :arg1-of ( provide :arg0 he :arg1-of possible :arg2 ( question :arg2 it )  :mod sadly )  :mod partial
note :arg0 ( he :arg2-of ( train :arg0 4 :arg1 guy :op3-of ( and :op1 doctor :op2 amr-unknown :op4 ' :op5 ( hospital :wiki - )  :op6 ( develop :arg0 subsequent :arg1 ( past :quant-of ( temporal-quantity :quant 5 :unit year )  )  :arg2 ( left :mod only :mod-of alive :op1 1 )  :op1-of mesothelioma )  )  )  )  :arg1 letter :arg2 i :time ( date-entity :year 2010 )
amr-unknown :degree-of ( many :poss-of ( disease :mod this )  )  :domain-of interrogative
diagnose :arg0 48 :arg1 ( person :name ( name :op1 andrew :op2 lawson )  )  :arg2 he
die :arg0 ( this :mod-of year )  :arg1 he :arg2 17 :time-of 55
long :arg1 ( survive :domain-of ( usual :polarity - )  )
fifty :op1 ( mesothelioma :arg1-of ( suffer :arg0 ( person :poss-of ( cent :unit-of monetary-quantity )  )  :arg2 ( diagnosi :op1-of ( after :duration ( temporal-quantity :quant 8 :unit month )  )  )  )  )
fatal :domain it :time always
cause :arg0 ( possible :arg1 ( echo :arg0 we :arg1 ( same :arg1 disease :arg2 interrogative )  :arg2 ( amr-unknown :arg1-of ( question :arg2 many )  )  :mod only )  :time now )
say :arg0 ( country :arg0-of ( lead :arg1 ( expert :arg0 ( we :arg0-of ( guess :arg1 between :mod ( good :degree most )  )  )  :arg1 ( person :arg0-of play :arg0-of ( have-org-role :arg1 ( country :name ( name :op1 britain )  :wiki united_kingdom )  :arg2 professor )  :arg0-of ( recommend :arg1 epidemic )  :arg1-of die :mod some )  )  )  :name ( name :op1 britain )  :wiki united_kingdom )  :arg1 ( and :op1 ( date-entity :year 1970 )  :op2 ( date-entity :year 2050 )  )
idea :polarity - :time current :topic ( die :arg0 most :arg1 they :manner ( way :mod this )  )
asbesto :mod-of ( mine :location ( province :location ( country :name ( name :op1 canada )  :wiki canada )  :name ( name :op1 quebec )  :wiki quebec )  )
affect :arg1 ( turn :arg1 ( court :arg0-of ( report :arg0-of ( spread :arg1 ( scourge :mod mesothelioma )  :arg1-of show :degree far )  :arg1-of ( glance :arg1-of quick )  )  )  :purpose compensate )  :frequency often
negligently :arg0-of ( expose :arg1 ( person :name ( name :op1 allen )  :poss-of asbesto :wiki - )  :arg1-of ( admit :arg0 ( organization :mod ( this :mod-of ( date-entity :month 6 )  )  :name ( name :op1 this )  )  :arg3 example )  )
flagship :arg1-of ( work :arg0 ( she :arg0-of ( supervise :arg1 ( section :mod clothes )  )  :poss-of ( site :quant 2 )  )  :arg2 chain :duration ( temporal-quantity :quant 9 :unit year )  :mod ( country :name ( name :op1 oxford :op2 street )  )  )  :mod ( date-entity :year 1987 )  :mod-of ( store :poss ( date-entity :year 1978 )  )
mr :arg1-of ( work :arg0 ( person :name ( name :op1 allen )  :wiki - )  :arg1-of ( start :arg0 she )  :location ( organization :name ( name :op1 mrs )  )  :mod ( only :mod-of 18 )  )
child :location ( 20 :poss she )  :quant 20 :time now
say :arg0 she :arg1 ( hear :arg0 i :arg1 mesothelioma :arg2 ( i :arg0-of ( know :arg1 asbesto :mod bare :op1-of about )  )  :op1-of of :op1-of nev )  :time ( before :mod this )
affect :arg1 i :arg1-of ( dream-up :arg0 i )
know :arg0 ( person :quant ( few :mod-of asbesto )  )  :arg1 much
contrast :arg1 ( describe :arg0 asbesto :arg1 ( substance :quant - )  :prep-in fact )  :arg2 ( group :consist-of ( mineral :quant 6 )  )
and :op1 ( word :name name )  :op2 ( endow :arg0 fibrou :arg1 ( structure :arg1-of ( describe :arg0 they )  )  )  :op3 strength :op4 flexibility
use :arg2 ( trade :arg1 6 :mod ( build :arg1 3 )  )  :mod common
find :arg0 ( person :arg2-of ( know :arg0 far :arg1 chrysotile :mod common )  :name ( name :op1 white :op2 asbestos )  )  :arg1 ( building :time today )  :arg1-of ( frequent :arg0 most )
use :arg0 ( even :mod-of ( brake :arg1 ( insulation :mod pipe )  :mod-of lining )  )  :arg1 ( it :arg0-of ( boil :arg1 seal )  )  :arg2 ( panel :arg0 ( car :arg0-of ( tile :arg1 floor )  )  :arg1 roof )
contrast :arg1 asbesto :arg2 ( and :arg1-of possible :arg1-of ( kill :arg0 it )  :op1 ( form :arg0-of ( major :arg1 less )  :arg0-of ( consider :arg1 still )  :arg0-of ( hazard :arg1 health )  :mod other :mod lethal )  :op2 ( organization :name ( name :op1 eu )  :wiki european_union )  :op3 ( organization :name ( name :op1 who )  :wiki world_health_organization )  )
crocidolite :domain ( country :name ( name :op1 brown :op2 asbestos )  :op1-of ( and :op2 ( person :name ( name :op1 blue :op2 asbestos )  )  )  )  :mod-of ( more :degree-of dangerous :op1 amosite )
contrast :arg1 ( and :arg0-of ( cause :arg1 ( rate :arg1-of ( high :arg0 uniquely )  :mod mesothelioma )  )  :op1 ( person :arg0-of ( import :arg2 ( country :name ( name :op1 britain )  :wiki united_kingdom )  :mod ( large :degree most :mod-of ( world :mod once )  )  )  :mod of :name ( name :op1 brown )  :wiki gordon_brown )  :op2 asbesto :op3 ( person :arg0-of ( suggest :arg1 that )  :arg1-of expert )  )  :arg2 ( evidence :arg0 ( country :name ( name :op1 uk )  :wiki united_kingdom )  :arg1 this :arg1-of major :arg1-of direct :arg2-of ( strong :arg1 there )  )
flagship :poss ( it :arg0-of ( expose :arg1 ( person :arg1-of employ :poss ( organization :name ( name :op1 a )  )  :poss-of asbesto )  :arg2 ( city :name ( name :op1 london )  :wiki london )  )  :poss-of store )  :poss ( country :name ( name :op1 a )  )
contrast :arg1 ( work :arg0 ( she :arg2-of ( suggest :arg0 ( person :name ( name :op1 janice )  )  :arg1 that )  :topic-of story )  :arg1 ( far :mod-of common )  :mod mesothelioma )  :arg2 ( think :arg0 ( person :arg0-of ( typical :arg1 victim )  :arg1-of possible :name ( name :op1 allen )  :wiki - )  :arg1 of :polarity - )
cause :arg0 ( or :arg1-of ( know :arg0 mesothelioma :polarity - )  :arg1-of ( expose :arg0 ( he :arg0-of ( study :arg1 substantial :arg1-of ( suffer :arg0 person )  :arg1-of ( suggest :arg0 proportion )  )  :arg0-of produce )  :op1-of domestic )  :op1 occupational )  :arg1 ( probable :arg1-of ( expose :arg0 environment :op1-of asbesto )  )
say :arg0 ( he :arg0-of ( expose :arg1 much )  :arg0-of ( weather :arg1 building )  )  :arg1 ( and :arg1-of ( occupy :arg0 we :arg1-of normal )  )
possible :arg1 ( sure :arg1 ( safe :arg0 - :arg1 they )  )  :arg1-of seem
show :arg0 report :arg1 ( possible :arg1 ( expose :arg1 person :manner unawar :manner ( heart :mod even :part-of ( government-organization :arg0-of govern )  )  )  )  :arg2 ( person :arg0-of ( look :arg1 ( palace :mod ( city-district :name ( name :op1 westminster )  :wiki westminster_system )  )  )  :name ( name :op1 goddard :op2 consulting )  )
and :arg1-of ( report :time ( date-entity :year 2009 )  )  :op1 ( pip :arg0 service :arg1 shaft )  :op2 duct :op3 ( behind :op1 parliamentary )  :op4 ( room :location-of ( contaminate :arg0 committee :arg1 asbesto )  )  :op5 ( disturb :arg0 lethal :arg1 ( possible :arg1 fibr )  :location ( something :location-of ( innocuou :arg0-of ( strong :arg1 current :location air )  )  )  )
contrast :arg1 ( accuse :arg1 mp :arg1-of frequent :arg2 ( look :arg1 interest :time after )  )  :arg2 ( seem :arg1 ( possible :arg1 ( true :domain opposite )  )  :time ( case :mod this )  )
and :arg1-of ( upgrade :arg0 ( accept :arg0 it :arg1 ( give :arg0 ( city-district :name ( name :op1 westminster )  :wiki westminster_system )  :arg1-of ( while :arg0-of ( work :arg1 directorate :arg1-of insist :arg1-of service )  )  :arg1-of ( clean :arg0 palace )  )  :arg1-of ( work :arg0 health :arg1-of ( require :arg1-of ( overhaul :arg0 several )  )  :arg1-of ( last :arg0 bill :arg2 ( temporal-quantity :unit year )  )  )  :time now )  )  :op1 ( remove :arg0 electric :arg1 asbesto )  :op2 ( sit :arg1 ( rather :arg0-of ( bench :arg1 ( green :arg0 centre :arg1 conference )  :location ( city-district :name ( name :op1 westminster )  :wiki westminster_system )  )  )  :arg2 nearby :op1-of ( and :arg0-of ( general :arg1 ( elect :arg1 2 :time ( date-entity :year 2015 )  )  :time after )  :arg1-of possible )  )
note :arg1 that :arg1-of ( report :arg0 ( presence :mod-of of )  :arg1-of ( accord :arg1-of ( manage :arg0 asbesto :polarity - )  :arg1-of ( regulate :arg0 various )  )  )
mismanage :arg1-of ( know :arg0 it )  :arg1-of ( cost :arg2 life )  :mod this
possible :arg1 ( do :arg0 anyone :arg1 all :arg1-of wait :time now )
possible :arg1 ( pinpoint :arg0 ( person :quant 1 )  :arg1 ( expose :arg1 ( organization :name ( name :op1 gp )  )  :arg2 asbesto )  :arg2 ( company :name ( name :op1 abbott )  :wiki abbott_laboratories )  )
suspect :arg0 ( company :name ( name :op1 abbott )  :wiki abbott_laboratories )  :arg1 ( expose :arg1 ( he :arg1-of ( work :arg0 asbesto :location hospital )  )  :arg1-of ( resemble :arg0 50 :arg2 ( person :name ( name :op1 andrew :op2 lawson )  )  )  )
contrast :arg1 ca :arg1-of ( say :arg0 ( he :arg0-of ( prove :arg1 it :arg2 ( i :arg0-of case )  :polarity - )  :arg2-of ( claim :arg0 asbesto :arg1 positive :arg1-of ( work :arg0 i :arg2 hospital )  )  )  )  :arg2 i
cause :arg0 it :arg1 ( hard :arg1 ( work :arg0 ( place :arg0-of ( remember :arg1 all )  )  :arg1 ( and :op1 date )  )  )
resemble :arg1 ( feel :arg0 ( day :arg2-of ( remember :arg0 he :arg1 amr-unknown :arg1-of clear )  :time early )  :arg1 ( date-entity :year 2009 )  :arg1-of ( overcome :arg0 12 )  )  :arg2 fever
surgery :arg1 he :arg2 evening :op2-of ( and :op1 45 )  :part middle :time late
start :arg0 i :arg1 ( shivery :arg1-of feel )  :op1-of sudden
come :arg1 it :arg1-of ( quick :degree very )
feel :arg0 i :arg1 dreadful
think :arg0 i :arg1 ( way :mod all )  :arg2 ( i :arg0-of ( drive :arg1 home :arg1-of possible )  )  :polarity -
know :arg0 ( company :arg0-of ( come :arg0-of ( line :arg1 ( lung :op1-of around )  )  :arg1 pain :arg3 pleura )  :name ( name :op1 abbott )  :wiki abbott_laboratories )  :arg1 ( be :arg1 doctor )
contrast :arg1 ( resemble :arg2 ( person :name ( name :op1 allen )  :wiki - )  )  :arg2 ( reason :manner simple :polarity - :poss he :purpose ( suspect :arg1 mesothelioma )  )
end :arg0 ( he :arg0-of ( spend :arg1 ( temporal-quantity :unit month )  :arg2 work )  )
and :op1 ( draw :arg1 fluid :arg2 lung :purpose-of ( administer :arg1 ( catheter :mod pleural )  :op2-of ( and :op1 ( give :arg0 ( doctor :arg1-of puzzle )  :arg1 ray :arg2 ( x :mod chest )  )  )  )  )  :op2 ( send :purpose assess )
undiagnos :arg1-of ( go :arg0 condition :time yet )
and :op1 ( improve :arg1 health :time slowly )  :op2 ( go :arg0 he :arg1 work :direction back )
contrast :arg1 hard :arg2 ( return :arg1 ( symptom :arg1-of same )  :arg3 time :op1-of ( and :op1-of after :op2 ( breathe :arg0 ( he :arg0-of ( exercise :arg1 often )  )  :arg1 time )  )  )
and :op1 subsequent :op2 ( diagnose :arg0 ( he :arg0-of ( surgery :arg1 symptom :arg1-of resemble )  :arg1-of ( have-rel-role :arg0 ( person :arg1-of ( arrive :arg0 ( company :name ( name :op1 abbott )  :wiki abbott_laboratories )  :time ( date-entity :year 2011 )  )  )  :arg2 patient )  )  :arg1 mesothelioma )
contrast :arg1 ( connect :arg0 ( company :name ( name :op1 abbott )  :wiki abbott_laboratories )  :arg1 case :arg2 he :mod even :time - )  :arg2 then
and :op1 after :op2 ( work :arg0 ( person :arg0-of ( have-rel-role :arg2 patient )  :domain-of ( decade :unit-of ( temporal-quantity :mod old )  )  )  :arg1 asbesto :arg1-of ( direct :arg0 all )  )
clear :arg1 ( link :arg1 ( case :mod that )  )
consult :arg0 ( person :arg0-of ( take :arg1 ( he :arg0-of ( scan :arg1 ( and :op1 x :op2 ray :op3 ( person :arg1-of ( expert :arg0 panel )  )  )  )  )  :op1-of and :time ( date-entity :month 9 )  :time ( date-entity :year 2011 )  )  )  :arg1 ( worsen :arg0 ( company :name ( name :op1 abbott )  :wiki abbott_laboratories )  :arg1 ( condition :mod again )  )
lung :arg1-of ( line :op3-of ( and :op1 ( start :arg0 ( company :name ( name :op1 abbott )  :wiki abbott_laboratories )  :arg1 ( feel :arg1 unwell :arg0 company )  :op1-of ( after :quant ( temporal-quantity :quant 2 :unit year )  :time-of ( feed-up :arg1 ( probe :arg1-of ( equip :arg2 camera )  )  :arg2 cavity )  )  :time exact )  :op2 ( line :arg1 chest :arg2 ( date-entity :year 2011 )  :op1-of 12 )  )  )
optimist :poss i
say :arg0 ( he :arg0-of ( plod :arg1 just )  :arg0-of ( tend :arg1 i )  )  :arg1 along
worry :arg0 i :arg1 much :arg2 honest :domain-of too :manner about :polarity -
contrast :arg2 ( worry :arg1 ( person :arg1-of ( have-rel-role :arg0 person :arg2 wife )  :name ( name :op1 rachel )  )  )
mean :op5-of ( and :arg2-of ( result :arg1 of )  :arg2-of ( tell :arg0 i :arg1 it :time mesothelioma )  :op1 ( come :arg1 biopsy :time week )  :op2 between :op3 ( festival :name ( name :op1 christmas )  :wiki christmas )  :op4 ( festival :name ( name :op1 new :op2 year )  )  )
mesothelioma :arg2-of ( diagnose :arg1 ( company :name ( name :op1 abbott )  :wiki abbott_laboratories )  )
recommend :arg1-of ( suggest :arg0 ( nurse :arg1-of ( meet :arg4-of ( plunge :arg1 ( company :mod sudden :name ( name :op1 abbott )  :wiki abbott_laboratories )  )  )  :mod ( thing :name ( name :op1 macmillan )  )  )  :arg2 ( he :arg0-of ( touch :arg1 lawyer )  )  )
realize :arg0 he :arg1 ( scale :mod ( epidemic :mod-of that )  )
say :arg0 ( he :arg1-of ( pip :arg0 ( it :op1-of ( turn :op1-of out )  )  )  :arg2-of ( lag :arg1 asbesto :mod ( quite :mod-of often )  )  )  :arg1 ( building :arg1-of ( use :arg0 ( asbesto :mod that )  :arg2 particular :mod wide )  :mod ( big :mod-of public )  )
come :arg0 building :arg1 ( person :arg0-of ( expose :arg1 asbesto )  )  :arg3 disease :time now
affect :arg0 mesothelioma :arg1 person :arg1-of ( cause :arg0 young )  :location - :manner ( profession :arg1-of typical )  :time now
cause :arg0 ( below :arg0-of ( pip :arg1 hospital :arg1-of ( lag :arg2 asbesto )  :mod ( dangerous :degree most )  )  )  :arg1 ( likely :arg1 ( affect :arg1 ( person :arg0-of ( have-rel-role :arg1 ( level :mod ground )  :arg2 patient )  )  )  :polarity - )
contrast :arg1 ( walk :arg0-of ( resemble :arg2 ( person :name ( name :op1 andrew :op2 lawson )  )  )  :arg1 tunnel :op1-of ( or :op2 ( eat :arg0 ( person :arg1-of ( come :arg4 ( contact :arg1 ( substance :mod toxic )  )  :mod ( certain :mod almost )  )  :arg2-of staff :quant many )  :arg1 ( build :arg0 ( company :arg0-of ( frequent :arg1 pedestrian )  :name ( name :op1 abbott )  :wiki abbott_laboratories )  :arg1 another )  :location ( canteen :mod basement )  )  )  )
contrast :arg1 ( place :arg1-of ( threaten :arg2 life )  )  :arg2 ( person :arg0-of ( have-rel-role :arg1 ( doctor :arg0-of ( treat :arg1 ( turn :arg0 potential :arg1 ( hospital :domain-of ( place :arg0-of ( save :arg1 life )  :time ( after :duration ( temporal-quantity :op1-of several :unit decade )  :op1 war )  )  )  )  )  )  :arg2 patient )  )
remove :arg1 it :mod still :time today
burn :arg1 ( thing :name ( name :op1 bunsen )  )  :arg1-of ( perch :arg0 pupil :arg2 ( mat :mod asbesto )  )
and :op1 ( hospital :mod just :polarity - )
use :arg1 asbesto :arg1-of frequent :arg2 ( and :op1 ( insulate :arg0 ( hall :mod town )  :arg1 library :mod marvellou )  :op2 ( property :mod ( retard :arg1 flame )  )  )  :location ( office :op1-of ( and :op2 shop )  )
school :arg2 too
expose :arg1 ( person :quant many )  :arg2 ( asbesto :location classroom )  :prep-in fact
and :op1 ( down :arg1-of ( up :arg0 chemistry :time-of ( perch :arg0 pupil :arg1 ( burn :arg1 ( thing :name ( name :op1 bunsen )  )  )  :arg2 ( mat :mod asbesto )  :time lesson )  )  :op1 country )  :op2 myriad
spring-up :arg1 ( address :arg0 websit :arg1 ( issue :arg0 ( asbesto :location school )  )  )
shed :arg1 roof :op3-of ( or :op1 ( item :arg0-of ( contain :arg1 ( asbesto :location ( home :poss we )  )  :manner routine :time meanwhile )  )  :op2 ( innocuou :compared-to ( tile :arg1 floor )  )  )
andrew :mod-of ( morgan :op1-of ( against :op2 ( represent :arg0 ( we :arg0-of ( house :arg1 stock :arg2 note )  :arg1-of ( poison :arg0 it :arg2 ( build :arg0 ( industry :mod ' )  :arg1 into :arg2 ( amount :mod ( large :mod-of of )  )  )  )  )  :arg1 ( he :arg0-of ( case :arg1 ( hospital :wiki - )  )  )  :op1-of lawyer :op1-of amr-unknown :op1-of lawson :op1-of andrew )  :op3 guy )  )
shed :arg1 ( garden :arg1-of ( pull :arg0 ( contact :arg1-of case :arg1-of ( think :arg0 ( suffer :arg0 woman :arg1 1970 )  :arg1-of possible )  :mod only )  )  )
cause :arg1 ( pull-out :arg0 you :arg1 ( shed :arg1 garden )  :arg1-of care )
incurable :arg1-of ( know :arg1-of ( impact :arg0 diagnosi :domain-of huge )  )  :domain disease
say :arg0 ( sink :arg1 ( take :arg0 it :arg1 while )  )  :arg1 ( company :name ( name :op1 abbott )  :wiki abbott_laboratories )
contrast :arg1 ( carry :arg1 ( go :arg0 ( i :arg0-of ( try :arg1 and )  )  :arg1-of ( work :arg0 back )  :arg1-of possible )  :arg1-of ( do :arg0 i )  :arg1-of ( realize :arg0 ( i :arg0-of ( concentrate :polarity - )  )  )  )
surgery :arg1 i :arg2 ( temporal-quantity :quant 2 :unit week )
realize :arg0 i :arg1 ( and :op1 ( leave :arg0 i )  :op2 sort )  :time then
see :arg0 i :arg1 ( festival :name ( name :op1 christmas )  :wiki christmas )  :arg2 again :mod well :polarity -
move :arg0 ( thing :arg1-of ( hard :degree ( most :quant 1 )  )  )  :arg2 ( position :poss ( doctor :arg1-of ( have-rel-role :arg0 person :arg2 patient )  )  :topic that )
remember :arg0 ( he :arg1-of ( have-rel-role :arg0 ( person :mod countless )  :arg2 patient :time before )  )  :arg1 ( feel :arg1 ( bewilder :arg0 ( amount :quant-of ( information :arg1-of grip )  )  )  :arg0 he )  :arg1-of resemble
say :arg0 he :arg1 ( everything :arg1-of ( take :arg0 it :arg1-of hard )  )
consult :arg0 ( person :arg0-of ( do :arg1 interrogative :arg1-of long :arg2 i )  :arg2-of ( ask :arg0 i :arg1 i )  )  :arg1 amr-unknown
quote :arg1 ( about :op1 ( 12 :quant-of ( temporal-quantity :unit month )  )  )  :beneficiary i
think :arg0 ( i :arg0-of ( remember :arg1 well )  )  :arg1 ( see :arg0 i :arg1 ( festival :name ( name :op1 christmas )  :wiki christmas )  :arg2 again :polarity - )
it :quant-of that
cause :arg0 ( breathe :mod-of ( act :arg1 ( stay :arg1 we :arg2 alive )  :degree very )  )  :arg1 ( cancer :arg0-of ( kill :arg1 ( perniciou :domain mesothelioma :mod particular )  :arg1-of ( cause :arg0 mechanic )  )  )
cause :arg0 ( expose :arg2 asbesto )  :arg1 ( case :mod mesothelioma :mod most )
tiny :mod-of ( fibr :op1-of asbesto )
possible :arg1 ( become :arg1 they :arg2 ( embed :arg0 ( lung :arg1-of line )  :arg1 pleura )  )  :op3-of ( and :op1 ( disturb :arg1 asbesto )  :op2 ( inhale :arg1 fibr )  )
and :op1 ( irritate :arg1 pleura )  :op2 possible :op3 ( cause :arg0 ( fibr :mod asbesto )  :arg1 ( mutate :arg1 cell )  )
move :arg1 ' :arg1-of ( treasure :arg0 ( person :arg0-of ( have-org-role :arg1 thoracic :arg2 professor )  :arg1-of ( come :arg0-of ( needle :arg1 ( shape :arg1 asbesto :arg1-of ( inhale :arg0 problem )  :mod-of fibr :mod-of of )  )  )  :name ( name :op1 tom )  :wiki tom_brady )  :arg2 cardio )  :arg2 ( hospital :wiki - )  :manner amr-unknown :op1-of ( 2001 :year-of date-entity )  :source surgeon
ironically :arg1-of ( lead :arg0 ( centre-left :arg0-of ( treat :arg1 mesothelioma :purpose ( suspect :arg0 ( person :arg0-of ( expose :arg1 he :arg2 asbesto )  :name ( name :op1 andrew :op2 lawson )  )  :arg1 ( hospital :mod very )  )  )  )  :arg2 now )
and :op1 ( know :arg0 ( person :name ( name :op1 treasure )  )  :arg1 ( person :name ( name :op1 lawson )  )  )  :op2 ( treat :arg2 ( other :arg0-of ( likely :arg1 ( expose :arg1 ( train :location hospital )  )  )  :quant some )  )
say :arg0 ( tissue :mod lung )  :arg1 ( breathe :arg1-of ( push :arg0 they :arg2 periphery )  :arg1-of line :arg1-of ( act :arg0 ( asbesto :mod once :mod-of needle )  )  )
invasive :domain ( it :arg0-of ( begin :degree very )  :poss-of nature )
cancer :mod ( form :arg1-of ( treat :arg0 less :mod-of ( option :arg0-of ( work :arg3 mesothelioma )  :arg1-of normal )  )  :mod other )
debate :arg1 ( effective :arg0 ( surgery :arg2 example )  )  :manner hotly
feel :arg0 some :arg1 ( worth :domain try )
disagree :arg0 ( person :name ( name :op1 treasure )  )
say :arg0 ( he :arg2-of ( excise :arg0 you :arg1 pleura :polarity - )  )  :arg1 ca
round :arg0 you :arg1 knife :polarity -
contrast :arg1 chemotherapy :arg2 ( cure :arg0 ( cancer :mod meanwhile )  :arg1 ( responsive :degree very :polarity - )  :polarity - )
say :arg0 ( person :arg0-of survive :arg1-of long :arg1-of ( get :arg0 you :op4-of ( and :op1 every :op2 now :op3 again )  )  )  :arg1 treasure
contrast :arg2 ( die :arg1 ( they :quant all )  )  :time end
live :arg0 ( person :arg0-of ( have-rel-role :arg2 patient )  :quant some )  :location far :time ( beyond :mod far :op1 ( expect :arg1 happily )  )
die :arg0 ( person :name ( name :op1 stephen :op2 jay :op3 gould )  )  :arg1 ( person :arg0-of author )  :time ( after :op1 diagnosi :quant ( temporal-quantity :quant 20 :unit year )  )
and :quant-of ( after :op1 ( diagnosi :location-of ( temporal-quantity :unit year )  )  :quant half :quant 2 :time-of ( battle :arg0 ( company :mod graham :name ( name :op1 abbott )  :wiki abbott_laboratories )  :mod still )  )
and :op1 ( support :arg1 ( person :arg0-of suffer :mod fellow )  :arg2-of ( become :arg1 ( person :arg0-of ( put :arg1 ( company :name ( name :op1 abbott )  :wiki abbott_laboratories )  :arg2 touch :time ( after :op1 ( contact :arg0 1 :arg1 mesothelioma )  )  )  :name ( name :op1 andrew :op2 lawson )  )  :time ( after :op1 ( diagnosi :poss-of ( temporal-quantity :unit year )  )  )  )  :mod man )  :op2 ( bureau :arg0-of ( advise :arg1 4 )  )
announce :arg0 he :arg1 ( call :arg0 they :arg1 canc :arg2 hello )  :op1-of cheerily
say :arg0 ( he :domain-of ( positive :degree very )  )  :arg1 ( company :name ( name :op1 abbott )  :wiki abbott_laboratories )
and :op1 ( diagnose :arg1 he :time ( before :quant ( temporal-quantity :quant 4 :unit year )  )  )  :op2 ( activity :degree very :mod still )
and :op1 ( offer :arg1 ( cycle :arg0-of ( take :arg1 ( temporal-quantity :unit ( month :mod just )  )  )  :arg1 chemotherapy :quant 6 )  :arg2 ( company :name ( name :op1 abbott )  :wiki abbott_laboratories )  )  :op2 ( prolong :arg1 ( life :arg1-of ( likely :arg0 ( 4 :quant-of ( temporal-quantity :unit month )  )  )  )  )  :time initial
say :arg0 he :arg1 ( feel :arg0 i :arg1 desperate )
feel :arg0 ( i :arg0-of give )  :arg2-of resemble
manage :arg0 howev :arg1 ( put :arg0 ( person :name ( name :op1 lawson )  )  :arg1 thing :arg1-of ( tint :mod good )  :arg2 slight )
see :arg0 ( he :arg0-of ( treat :arg1 ( person :arg0-of ( have-org-role :arg1 guy :arg2 professor )  :name ( name :op1 lang )  :wiki rein_lang )  )  :arg0-of ( surgery :arg1 thoracic )  :arg0-of ( pursue :arg1 prof )  )  :arg1 several :op1-of ( after :time-of ( decide :arg0 ( company :name ( name :op1 abbott )  :wiki abbott_laboratories )  :arg1 consultant )  )
refer :arg0 ( we :poss-of advantage )  :arg1 ( i :arg0-of ( ring :arg1 they :mod just :op1-of ( and :op2 ( see :arg0 they :arg1 ( i :arg0-of ( admit :arg1 graham )  )  )  )  )  :arg2-of ( do :arg0 i :arg1 that :polarity - )  )
and :op1 ( refer :arg0 ( person :arg0-of ( have-rel-role :arg2 patient )  :arg1-of average )  )  :op2 ( fund :arg1-of approve )
mesothelioma :arg0-of ( pursue :arg1 ( treat :arg2-of ( available :arg1 ( good :degree most )  )  )  :domain-of ( crucial :domain money )  )
contrast :arg1 ( face :arg0 ( treat :arg0 about :arg1 ( they :arg0-of ( leave :arg1 ( family :poss-of future )  :arg3 behind )  )  :arg1-of ( fail :arg0 inevitable )  :time eventual )  :arg1 ( person :arg0-of ( worry :mod another :mod finance )  :arg0-of suffer :quant many )  )
cause :arg1 ( turn :arg0 they :arg2 court :purpose ( pursue :arg1 compensate )  )  :op1-of and
contact :arg0 ( person :name ( name :op1 andrew :op2 morgan )  )  :arg1 ( person :name ( name :op1 andrew :op2 lawson )  )  :arg2 ( thing :name ( name :op1 waterhouse :op2 ( llp :mod ( person :name ( name :op1 field :op2 fisher )  )  )  )  )
say :arg0 ( health :mod noxious )  :arg1 ( person :arg1-of ( know :arg0 it :arg2 asbesto :mod that )  :name ( name :op1 &quot; )  )  :time ( date-entity :year 1898 )  :time since
contrast :arg1 ( possible :arg1 ( risk :arg0 ( level :arg1-of ( low :degree very :mod even )  )  :arg2 health )  :arg1-of realize )  :arg2 ( change :arg1 1960 )
company :arg0-of ( come :arg1 ( neglect :arg1 that )  )
contrast :arg2 ( and :op1 ( person :name ( name :op1 andrew )  )  :op2 ( call :arg0 ( he :arg0-of ( expose :arg1 ( asbesto :mod down )  )  :arg0-of ( settle :arg2 value )  :arg0-of ( prove :arg1 ( possible :polarity since )  :arg2 definitive :polarity - )  :mod-of ( mesothelioma :mod that )  )  :arg1 it :arg2 amr-unknown :manner ( case :arg2-of ( settle :arg0 hospital :arg1 eventual )  )  :mod morgan :op1-of full :polarity - )  )
concern :arg0 ( he :arg0-of ( remove :arg1 1990 )  :arg0-of ( do :arg0-of ( confirm :arg1 asbesto )  :arg1 inquest :time after )  :arg0-of ( have-org-role :arg2 spokesman )  :arg1-of die )  :arg1 area :time basement
late :degree ( too :beneficiary ( person :name ( name :op1 andrew :op2 lawson )  )  )  :domain that
remove :arg1 asbesto :manner amr-unknown
prove :arg1 ( problem :mod huge :prep-for ( person :arg0-of ( work :mod ( place :op1-of ( or :domain ( temporal-quantity :duration-of ( after :op1 fact )  :unit decade )  :location-of ( pin :arg0 fact :arg1 ( expose :arg1 asbesto :arg2 company :mod lethal )  )  )  )  )  :arg0-of ( suffer :arg1 mesothelioma )  :arg0-of ( compensate :arg1 usual )  :arg1-of seek )  )
employer :quant ( many :arg0-of ( go :arg1 ( hand :arg1-of change )  :op1-of ( or :op2 business )  )  )  :time former
possible :arg1 ( lose :arg1 ( record :mod insurance )  )
claim :arg0 - :arg1-of ( know :arg0 ( time :location ( side :poss they )  )  :op1-of and )  :arg3-of ( defend :arg0 claimant :arg1 certain )
possible :arg1 ( trace :arg1 ( employer :time former )  )  :polarity - :purpose-of ( claim :arg0 mesothelioma :arg1 ( compensate :arg1 ( major :arg1 ( legislation :arg0-of ( make :arg1 easy )  :arg1-of ( see :arg0 ( year :mod this )  :arg2-of respond )  :mod new )  )  )  :concession even )
contrast :arg1 ( expose :arg1 - :arg1-of ( sue :arg0 1 )  :arg1-of possible :arg1-of ( prove :arg0 7 )  )  :arg2 ( fund :arg1 ( money :arg1-of ( insure :op1-of ( industry :mod law )  )  :arg1-of ( diagnose :time after :time ( date-entity :year 2012 )  )  :arg1-of create :mod ( of :mod pot )  )  )
possible :arg1 ( court :arg0-of ( award :arg1 ( monetary-quantity :unit cent )  )  :arg0-of ( compensate :arg1 ( normal :arg0 ( person :arg0-of ( suffer :arg1 ( case :arg1 this )  )  :arg0-of ( award :arg1 80 )  :arg0-of will )  :arg1 amr-unknown )  :arg1-of case )  )
expect :arg1 ( scheme :arg1-of ( claim :arg0 300 :arg1-of ( succeed :arg0 about )  )  )  :time ( year :mod each )
think :arg0 ( person :arg0-of ( suffer :arg1 mesothelioma )  :arg1-of ( involve :mod many )  :arg1-of ( represent :arg0 ( person :arg2-of ( resemble :arg1 morgan )  :name ( name :op1 andrew )  )  )  )  :arg1 ( good :degree very :mod-of ( industry :arg1-of insure :mod that )  :mod-of job )
say :arg0 ( he :arg0-of ( suggest :arg1 that :arg2 sum )  :arg0-of ( pass :arg1 time :arg1-of ( pay :arg0 insurer )  )  :arg0-of ( quarter :arg1 of :arg2 amr-unknown )  :arg2-of ( deal :arg0 ' :arg1 ( write :arg0 it :arg1 insurer :op1-of by )  )  )  :arg1 ( and :arg1-of ( cause :arg0 insurer )  :op1 ( intervene :arg1 mesothelioma )  :op2 ( person :arg0-of ( suffer :arg1 track )  :arg0-of ( sue :arg1 ( they :arg0-of ( normal :arg1 way )  )  )  :op1-of ( and :arg1-of ( possible :polarity - )  :op2 down :op3 company )  )  )
and :arg0-of ( have-org-role :arg2 minister )  :arg1-of ( admit :arg0 law )  :op1 ( work :arg0 then :arg1-of ( pen :mod even )  :arg1-of ( perfect :polarity - )  )  :op2 pension
contrast :arg1 ( admit :arg0 ( and :mod both :op1 ( person :name ( name :op1 penning )  )  :op2 ( person :name ( name :op1 morgan )  )  )  :arg1 ( need :arg1 ( action :arg0-of ( die :arg1 ( victim :quant 7 )  :time ( day :mod each )  )  :arg1-of quick )  )  )
say :arg0 ( person :arg0-of ( read :arg1 ( year :mod last )  :arg2 12 )  :arg0-of ( suffer :arg0-of ( cause :arg1 ( need :arg0 ( and :arg0-of help )  :arg1 ( ' :arg1-of bill )  )  )  :arg1 much )  )  :arg1 ( pen :arg0 today :arg1 during )
company :name ( name :op1 abbott )  :poss ( prof :mod-of ( person :name ( name :op1 loic :op2 lang-lazdunski )  :part hand :poss ( then :mod ( 19 :quant-of ( temporal-quantity :unit month )  )  )  )  )  :wiki abbott_laboratories
contrast :arg1 ( surgery :arg0-of ( effect :arg2-of ( treasure :arg0 ( he :arg0-of believe )  :arg1 ( person :name ( name :op1 tom )  :wiki tom_brady )  )  :mod positive )  :arg1-of ( advise :arg0 ( person :name ( name :op1 lang-lazdunski )  )  :time ( after :op1 ( consult :time initial )  )  )  )
possible :arg1 ( boast :arg0 ( person :name ( name :op1 lang )  :wiki rein_lang )  :arg1 ( rate :mod ( survive :arg0 ( monetary-quantity :unit cent )  :arg1 40 )  )  )  :concession-of high :location ( therapy :mod tri :op3-of ( and :arg0-of ( follow :arg1 ( this :mod-of year )  :arg2 5 )  :op1 radiotherapy :op2 chemotherapy )  )
feel :arg0 ( company :name ( name :op1 abbott )  :wiki abbott_laboratories )  :arg1 empower
say :arg0 ( thing :domain ( that :mod-of ( course :mod of :quant 1 )  )  :mod important :mod most )  :arg1 ( company :name ( name :op1 abbott )  :wiki abbott_laboratories )
see :arg0 ( you :arg1-of ( have-rel-role :arg0 person :arg2 patient )  )  :arg1 ( time :mod all )
keep :arg0 ( drive :mod some )  :arg1 you
possible :arg1 ( give :arg0 you :purpose-of ( deteriorate :arg0 you :arg1-of ( quick :degree very )  )  )
go :arg0 ( company :name ( name :op1 abbott )  :wiki abbott_laboratories )  :purpose ( surgery :time ( date-entity :month 3 )  )  :time ( date-entity :year 2012 )
chemotherapy :arg1-of ( cycle :arg2-of ( end :arg1 ( he :arg0-of ( complete :arg1 8 )  )  )  :quant 6 :topic-of last )
reveal :arg0 ( scan :arg1 follow )  :arg1 ( sign :arg1 disease :polarity - )
scan :arg0 i :arg1 i :arg2 ( date-entity :year 2014 )  :mod-of ( date-entity :month 3 )  :time then
cancer :arg1-of ( spot :arg1-of multiple :arg2 ( i :arg1-of around :part chest )  )
turn :arg1 ( i :op1 50 )  :time ( about :mod just )
threaten :arg1 ( life :poss it )  :polarity -
end :arg1 ( life :poss it )
put :arg0 ( company :name ( name :op1 abbott )  :wiki abbott_laboratories )  :arg2 ( cycle :arg1 chemotherapy :quant 6 )  :mod ( again :mod once )
sign :arg1 tumour :polarity - :time now
contrast :arg0 both :arg2 ( and :arg1-of process :op1 physical :op2 ( gruell :manner emotion )  )
think :arg0 you :arg1 ( thing :mod practical :mod about :op1-of ( or :op2 finance :op3 ( show :arg1 ( go :arg0 i )  )  :op4 ( person :arg0-of ( have-rel-role :arg1 i :arg2 wife )  :arg0-of ( boil :arg1 ( work :arg0 timer )  )  )  :op5 amr-unknown )  )
start :arg0 ( you :domain-of negative )  :arg1 ( you :domain-of ( news :arg1-of bad )  )
look :arg0 you :arg1 forward
easy :arg0 16 :arg1 that :arg2 14 :op3-of ( and :op1 ( person :arg1-of ( have-rel-role :arg0 person :arg2 father )  :name ( name :op1 ellie )  )  :op2 ( person :name ( name :op1 tamsin )  )  )  :polarity - :time always
say :arg0 ( he :arg1-of ( hard :arg0 it :time ' )  )  :arg1 parent
say :op2-of ( and :arg1-of ( know :arg0 it :domain-of difficult )  :op1 ( say :arg1 much )  )
mean :arg0 i :arg1 ( girl :arg1-of ( become :arg0 i :arg2 - :purpose old )  :arg1-of ( tell :arg0 i :arg2 ( i :arg0-of diagnose )  )  )  :arg2 condition
react :arg0 they :arg1-of ( differ :degree very )
and :op1 ( sociable :degree very :domain ( person :name ( name :op1 tamsin )  )  )  :op2 boisterou
tell :arg0 ( she :arg1-of ( have-rel-role :arg2 friend :arg0 person )  )  :arg1 ( and :op2 ( get :arg0 we :arg1 ( lot :quant-of call )  :arg1-of ( quick :degree very )  )  )  :arg2 person
reserved :arg1 ( person :name ( name :op1 ellie )  )  :degree more
say :arg0 she :arg1 ( much :polarity - )
something :arg1-of ( face :arg0 ( person :arg0-of ( have-rel-role :arg2 ( patient :mod cancer )  )  :quant all )  :arg2 ( conversation :mod such )  )
contrast :arg1 ( leaven :arg0 ( hope :arg1 ( discuss :arg0 mesothelioma :arg1 even :arg1-of ( suffer :arg0 person )  :mod such )  )  :polarity - )  :arg2 ( possible :arg1 survive :arg1-of glimmer )
carry-out :arg0 ( person :name ( name :op1 stephen :op2 jay :op3 gould )  )  :arg1 ( certainty :mod grim :mod-of even )  :arg2 ( disease :mod-of eventual )
say :arg0 ( person :name ( name :op1 as )  :poss-of ( life :arg1-of ( threaten :polarity - )  :poss mesothelioma )  )
wrap :arg0 ( body :poss ( thing :arg1-of embalm :name ( name :op1 pharaohs )  )  )  :arg1 ( cloth :mod asbesto )
and :arg1-of use :op1 ( strengthen :arg0 ( fibr :mod asbesto )  :arg1 ( pot :arg1 cook )  )  :op2 ( provide :arg1 ( resist :arg1 heat :mod great )  )
describe :arg0 ( person :name ( name :op1 pliny :op2 the :op3 elder )  )  :arg1 asbesto
invent :arg1 linen :arg2 ( incombustible :domain that )  :time now
see :arg0 i :arg1 ( napkin :arg0-of ( glow :arg1 hearth :location banquet )  )
cloth :op2-of ( and :arg2-of ( use :location ( country :location-of ( begin :arg0 even :arg1 ( use :arg0 ( bank :mod-of note )  :arg1 asbesto :mod commerce :mod modern )  )  :name ( name :op1 italy )  :wiki italy )  )  :op1 paper )
and :op1 ( after :op1-of soon )  :op4-of ( and :op1 ( open :arg1 ( mine :mod ( asbesto :arg1-of ( have-org-role :arg0 ( person :name ( name :op1 itlay )  :op2-of ( and :op1 ( country :name ( name :op1 america )  :wiki united_states )  :op3 ( country :name ( name :op1 russia )  :wiki russia )  )  )  :arg2 major )  )  )  )  :op2 ( country :name ( name :op1 canada )  :wiki canada )  :op3 ( country :name ( name :op1 south :op2 africa )  :wiki south_africa )  )
insulator :domain it :mod ideal :op1-of ( and :op2 ( engine :mod steam )  :op3 ( and :op1 ( turbine :poss ( thing :name ( name :op1 industrial :op2 revolution )  )  )  )  )
rise :arg1 ( produce :arg1 asbesto :extent globe )  :arg2 more :arg4 ( mass-quantity :unit ton )
asbesto :arg1-of ( work :arg0 ( organization :name ( name :op1 prudential )  )  )  :arg3-of ( identify :arg0 ( thing :arg1-of ( insure :arg1-of ( refuse :time subsequent )  :mod life )  :name ( name :op1 statisticians )  )  :arg1 ( mortality :mod premature )  )
die :arg1 ( person :name ( name :op1 nellie :op2 kershaw )  )
cause :arg0 of :arg1 ( die :arg1 ( person :arg0-of ( testify :arg1 ( that :mod-of asbesto :mod-of particle )  )  :arg0-of ( doubt :arg1 ( reasonable :arg1 lung :op1-of beyond )  )  :name ( name :op1 dr )  )  )  :mod primary
case :arg1 kind :domain it
employer :mod ( ' :mod ( person :arg0-of ( do :arg0-of ( admit :arg1 liability :polarity - )  :arg1 ( asbesto :mod bro )  )  :name ( name :op1 kershaw )  :name ( name :op1 turner )  )  )
pay :arg2 ( compensate :polarity - )
see :arg0 ( thing :name ( name :op1 world :op2 war :op3 two )  )  :arg1 ( shipbuilding :mod intensive )  :purpose ( expose :arg1 asbesto :purpose-of ( occupation :mod deadly )  )
ban :arg0 ( industry :mod voluntary )  :arg1 ( import :arg1 ( asbesto :mod blue )  )
confirm :arg0 court :arg1 ( claim :arg0 ( appeal :mod-of injure )  :arg1-of succeed :arg1-of personal :arg2-of ( result :arg1 ( expose :arg1 asbesto )  )  :location ( country :name ( name :op1 britain )  :wiki united_kingdom )  )
rise :arg1 ( produce :arg1 asbesto :extent globe )  :arg2 more :arg4 ( mass-quantity :unit ton )
ton :unit-of ( mass-quantity :arg1-of ( import :arg2 ( country :name ( name :op1 uk )  :wiki united_kingdom )  )  )
require :arg0 ( organization :name ( name :op1 health :op2 and :op3 safety :op4 executive )  )  :arg1 ( work :arg0 ( person :arg0-of ( license :arg1 ( country :name ( name :op1 britain )  :wiki united_kingdom )  )  :arg0-of contract :quant all )  :arg1 asbesto )
and :op1 ( import :arg1 ( and :op1 use :op2 blue :op3 ( person :name ( name :op1 brown )  :wiki gordon_brown )  :op4 ( ban :arg0 law :arg1 asbesto :location ( country :name ( name :op1 britain )  :wiki united_kingdom )  )  )  )
use :arg1 asbesto :arg1-of ( ban :location ( country :name ( name :op1 britain )  :wiki united_kingdom )  )  :quant all
pass :arg1 ( organization :name ( name :op1 mesothelioma :op2 act )  )  :location ( country :name ( name :op1 uk )  :wiki united_kingdom )
announce :arg1 scheme :arg1-of compensate
contrast :arg2 ( ban :arg1 ( asbesto :arg0-of ( use :arg1 ( asbesto :mod white )  :arg2 ( material :arg1-of build :arg1-of cheap :purpose ( part :part-of world :quant many )  )  :mod still )  )  :arg2 more :location ( country :quant 50 )  )
hover :arg1 ( produce :extent globe )  :arg2 ( around :op1 ( mass-quantity :unit ton )  )
refuse :arg0 ( country :name ( name :op1 china )  :wiki china )  :arg1 ( give :arg1 ( right :arg2 ( choose :arg0 ( vengeance :arg1-of ( vow :arg0 ( person :arg0-of protest )  :op1-of and )  )  :arg1 ( person :arg0-of lead )  )  )  :arg2 ( city :name ( name :op1 hong :op2 kong )  :wiki hong_kong )  )
let :arg0 ( person :arg0-of ( vote :arg1 ( candidate :arg0-of ( grow :arg1 agitation )  :arg0-of ( reform :arg1 democracy )  :arg1-of nominate :arg1-of ( elect :arg2 despite :time ( date-entity :year 2017 )  )  )  )  )  :arg1 against :arg2 sunday :arg2-of ( decide :arg0 ( country :name ( name :op1 china )  :wiki china )  :arg1 parliament )  :location ( city :name ( name :op1 hong :op2 kong )  :wiki hong_kong )
announce :arg1 of :op4-of ( and :arg2-of ( move :arg1 ( protest :arg1 ( city :name ( name :op1 hong :op2 kong )  :wiki hong_kong )  :arg1-of promise )  :arg1-of ( long :arg1-of spark )  :arg1-of likely )  :op1 ( begin :arg1 activist )  :op2 ( plan :arg1 ( district :mod business )  :time ( hour :unit-of temporal-quantity )  )  :op3 ( mobilize :arg1 within )  )
allow :arg0 ( government-organization :arg0-of ( decide :arg1 ( city :name ( name :op1 beijing )  :wiki beijing )  :polarity - :time ( country :name ( name :op1 china )  :wiki china )  :time essential )  :name ( name :op1 national :op2 people's :op3 congress )  :wiki national_people's_congress )  :arg1 ( candidate :arg1-of ( lead :arg0 ( person :mod communism )  :arg2 weed )  :mod any :mod-of loyal )
contrast :arg1 lau :arg2 ( say :arg1 legislator :arg2 emily :arg2-of ( infuriate :arg0 it :arg1 chairwoman :mod still )  )  :arg2-of ( expect :arg0 it :arg1 ( party :arg0 of :arg1 democratic )  :polarity - :polarity - :time ' )
promise :arg0 ( city :name ( name :op1 beijing )  :wiki beijing )  :arg1 this :polarity -
lie :arg0 person :arg1 they :location ( city :name ( name :op1 hong :op2 kong )  :wiki hong_kong )
and :arg1-of ( clear :arg0 ( we :arg0-of ( deal :arg1 regime :arg2 authoritarian )  )  )  :op1 it
say :arg0 ( government-organization :arg0-of ( general :arg1 ( of :arg1 ( government-organization :name ( name :op1 standing :op2 committee )  :wiki standing_committee_of_the_national_people's_congress )  )  )  :name ( name :op1 national :op2 people's :op3 congress )  :wiki national_people's_congress )  :arg1 ( allow :arg1 ( lead :arg0 ( country :arg0-of ( rule :arg1 ( deputy :mod-of secretary )  )  :arg1-of defend :name ( name :op1 china )  :wiki china )  :arg1 ( city :arg1-of ( elect :arg1-of public :degree too )  :name ( name :op1 hong :op2 kong )  :wiki hong_kong )  )  )
allow :arg1 ( promise :arg0 ( country :arg1-of ( have-org-role :arg0 ( person :arg0-of vote :arg0-of ( reside :arg1 region )  :arg0-of ( begin :arg1 executive :time ( date-entity :year 2017 )  )  )  :arg2 chief )  :name ( name :op1 china )  :wiki china )  :arg1 ( control :arg0 ( country :arg0-of ( hand-over :time ( date-entity :year 1997 )  )  :name ( name :op1 britain )  :wiki united_kingdom )  :location ( city :location-of back :name ( name :op1 hong :op2 kong )  :wiki hong_kong )  :time since )  :location ( city :name ( name :op1 beijing )  :wiki beijing )  )
contrast :arg1 ( present :arg0 ( person :arg0-of ( lead :arg1 ( country :name ( name :op1 china )  :wiki china )  )  :arg0-of ( give :arg0-of cause :arg1 ( vote :arg1-of direct )  :arg2 ( thing :name ( name :op1 hong :op2 kongers )  )  )  )  :arg1 ( rule :arg1 sunday )  :arg2 ( break-through :mod democracy )  )  :arg2 ( make :arg0 ( decide :arg1 ( city :name ( name :op1 beijing )  :wiki beijing )  )  :arg1 ( retain :arg0 ( person :arg0-of ( lead :arg1 ( country :name ( name :op1 china )  :wiki china )  )  )  :arg1 ( hold :arg0 firm :arg3 process )  :arg2 ( committee :arg0-of nominate :arg1-of ( control :arg1-of tight )  )  )  :arg2 clear :mod also )
say :arg0 ( candidate :arg0-of love :mod only )  :arg1 ( and :example ( and :arg1-of allow :example-of ( clause :mod new )  :location ( city :name ( name :op1 hong :op2 kong )  :wiki hong_kong )  :op1 country :op2 love )  )
and :op1 ( come :arg1 ( rule :arg1 ( large :degree most )  )  :time ( after :op1 ( summer :arg0-of ( feature :arg1 ( protest :arg2 ( temporal-quantity :unit year )  :arg2-of ( high :arg1 profile :degree most )  :location ( city :name ( name :op1 hong :op2 kong )  :wiki hong_kong )  :quant some )  )  )  )  )
and :arg1-of movement :op1 ( campaign :arg1 ( much :op1-of behind )  :location ( city :name ( name :op1 hong :op2 kong )  :wiki hong_kong )  )  :op2 ( love :arg0 ( pro :mod democracy )  )  :op3 ( peace :arg1-of ( organize :arg0 ( person :arg0-of ( shut-down :arg1 ( district :arg1-of authentic :mod finance )  )  :arg0-of ( threaten :arg2 ( thing :name ( name :op1 occupy :op2 central )  )  :condition ( grant :arg0 ( city :name ( name :op1 beijing )  :wiki beijing )  :arg1 ( suffrage :mod universal )  :polarity - )  :arg1 shut-down )  )  )  )
headquarter :arg0 ( government-organization :arg0-of ( govern :arg1 ( city :name ( name :op1 hong :op2 kong )  :wiki hong_kong )  )  )  :arg1 ( occupy :arg0 night :arg1 ( announce :arg0 ( temporal-quantity :unit hour )  :arg1 sunday )  :arg1-of ( support :arg0 ( person :arg0-of ( rain :arg1 outside )  :arg1-of assemble )  )  )
say :arg0 ( person :arg0-of organize )  :arg1 ( and :op1 ( enter :arg0 ( movement :purpose-of ( mount :arg0 they :arg1 ( wave :poss protest )  )  )  :arg1 ( stage :mod new :part-of ( disobedience :mod civil )  )  )  :op2 ( come :arg1 ( week :unit-of temporal-quantity )  )  )  :location demonstrate
give :arg0 ( they :arg0-of ( look :arg1 ( avoid :arg1 ( problem :prep-with authority )  )  :manner apparent )  )  :arg1 detail :polarity -
state :arg1 online :arg1-of ( say :arg0 ( person :arg0-of ( organize :arg1 ( choose :arg1 other :arg1-of ( exhaust :arg0 action )  :arg1-of dialogue :op1-of ( and :quant all )  :polarity - )  )  :arg0-of movement :arg0-of ( take :arg1 ( resort :arg1 last )  :arg1-of ( chance :arg0 only )  )  :arg0-of ( occupy :arg1 only :arg1-of consider )  )  )
sorry :arg1 ( we :arg0-of ( say :arg1 ( and :op1 ( exhaust :arg1 ( chance :arg1 ( dialogue :arg1 definite )  :quant all )  :time today )  :op2 occupy )  )  )  :degree very
announce :arg0 ( authority :arg0-of ( tight :arg1 sunday :arg2 at )  :arg0-of ( prepare :arg1 ( and :op1 ( security :op1-of ( and :op2 with :op3 police :op4 barricade :op5 ( deploy :arg1 ( headquarters :arg1-of ( govern :arg0 government-organization )  )  )  )  )  )  :arg2 ( city :name ( name :op1 hong :op2 kong )  :wiki hong_kong )  :location ( city :name ( name :op1 beijing )  :wiki beijing )  )  )  :arg1 ( thing :mod ' :quant-of ( temporal-quantity :unit day )  )
sense :arg0 ( city :name ( name :op1 hong :op2 kong )  :wiki hong_kong )  :arg1 ( drive :arg0 ( they :arg0-of ( lose :arg1 ( control :location city )  :mod slow )  )  :arg1 unrest )  :time many
flux :arg0-of ( fuel :arg1 ( compete :arg1 ( and :op1 service )  :arg3 product )  )  :arg1 mainlander
fear :arg1 ( value :mod such )  :arg1-of ( grow :location ( city :name ( name :op1 hong :op2 kong )  :wiki hong_kong )  :mod also )  :arg1-of ( increase :arg2 ( pressure :arg1 ( city :name ( name :op1 beijing )  :wiki beijing )  :arg2-of ( free :arg1 ( and :op1 democracy )  :arg1-of speak :arg1-of begin )  :arg2-of ( bend :arg1 under )  )  )
lifeblood :part-of ( city :arg1-of ( demonstrate :arg0-of ( put :arg1 business :arg1-of ( say :arg0 ( movement :arg1 ( thing :name ( name :op1 occupy :op2 central )  )  :arg1-of criticize )  )  )  :arg2-of ( risk :arg1 some )  )  :name ( name :op1 hong :op2 kong )  :wiki hong_kong )
say :arg0 amr-unknown :arg1 legislator :arg2-of ( long :arg1 ( amr-unknown :arg1-of ( movement :arg0 ( person :name ( name :op1 &quot; )  )  :arg1-of ( criticize :arg0 ( and :arg2-of ( result :arg1 ( much :mod-of economy )  :arg1-of possible )  :arg2-of ( involve :arg0 many )  :op1 ( talk :arg0 they :arg2-of protest :op1-of about )  :op2 ( damage :arg1 ( amr-unknown :arg1-of ( depend :arg0 it )  )  )  )  :arg1-of long )  )  )  )
concern :arg0 ( want :arg0 ( we :arg0-of control )  :arg0-of spread :arg1 ( city :name ( name :op1 hong :op2 kong )  :wiki hong_kong )  :polarity - )
perceive :arg1 this :arg1-of ( bad :arg2 invest )
direct :arg0 ( person :arg0-of ( have-org-role :arg1 ( country :name ( name :op1 china )  :wiki china )  :arg2 agent )  :arg2-of ( subvert :arg1 of )  :poss-of ( story :arg0-of ( paint :arg1 ( democracy :mod-of activist )  :arg2 ( recent :quant-of ( temporal-quantity :unit day )  )  :location ( city :name ( name :op1 hong :op2 kong )  :wiki hong_kong )  )  :mod also :topic ( run :arg0 state :arg1 media )  )  )  :arg1 power :arg2 ( world-region :name ( name :op1 west )  :wiki western_world )
fifth :topic ( person :arg0-of ( vote :arg1 ( city :name ( name :op1 hong :op2 kong )  :wiki hong_kong )  )  :arg1-of ( vote :arg0 ( right :topic-of ( referendum :arg1-of ( organize :arg0 ( activist :arg0-of ( draw :arg1 ( person :arg0-of participate )  )  )  )  :mod unofficial )  )  :arg2 more )  :mod ( this :mod-of summer )  )
and :op1 7 :op2 ( turn :arg0 ten :arg1 ( large :degree most )  )  :op3 ( demonstrate :arg1 region :example history :mod democracy )
hit :arg0 ( culture :arg0-of ( entrance :arg1 jet :arg1-of offer :arg1-of private )  :mod prom :mod ( country :name ( name :op1 us )  :wiki united_states )  )  :arg1 ( life :mod university )  :arg2 fresher
answer :arg0 ( we :arg0-of ( excite :arg1 ( travel :arg0 ( person :arg0-of study )  :arg1 luxuriou :arg1-of ( launch :arg0 ( country :name ( name :op1 uk )  :wiki united_kingdom )  :arg3 today )  :arg3 service )  )  :arg0-of ( demand :arg1 this )  )
or :op1 ( jet :arg1-of ( private :arg1-of ( impact :arg1-of ( arrive :arg4 university )  :arg2 ( company :arg0-of ( offer :arg1 ( option :mod ( transport :arg1 maximum )  )  :mod also )  )  )  )  )  :op2 ( thing :name ( name :op1 rolls-royce :op2 phantom )  )  :op3 ( thing :name ( name :op1 aston :op2 martin )  )  :op4 p60 :op5 1
claim :arg0 ( person :name ( name :op1 stewart )  :wiki jon_stewart )  :arg1 ( aspect :mod ( safe :arg0 service :mod mr )  )  :mod also
overload :arg0 usual :arg1 ( car :arg2-of ( haul :arg0 ( person :arg0-of study :prep-for-of ( alternative :domain service :mod ideal )  )  :arg1 ( thing :arg0-of belong )  :path ( across :op1 country )  )  )  :degree dangerous
and :arg1-of ( fuss :arg0 ( person :arg0-of ( study :arg1 ( reach :arg1 university )  )  :arg1-of ( ensure :arg0 we )  :mod this )  )  :op1 ( look :arg0 ( option :mod new )  :arg1-of ( pair :arg0 we )  :degree forward )  :op2 minimum :op3 maximum :op4 luxury
add :arg0 ( person :arg0-of ( have-org-role :arg2 spokesman )  :arg0-of ( book :arg1 ( next :mod-of ( week :unit-of temporal-quantity )  :mod-of few )  )  :arg0-of study :poss-of over :poss-of service )  :arg1 yet :arg1-of ( contrast :arg2 booking )  :arg1-of ( cause :arg0 ( company :arg0-of ( say :arg1 that )  )  )  :arg1-of ( launch :arg0 service :arg2 there :mod just )  :polarity -
say :arg0 company :arg1 that :arg1-of ( face :arg0 ( person :arg0-of study :arg0-of ( find :arg1 ( market :mod-of service )  :arg1-of ( expect :arg0 ( it :quant-of ( temporal-quantity :unit year )  )  :mod still )  )  )  :arg2 fee :mod despite :time tuition :time of )  :mod also
impression :arg0 it :arg1 make :mod great :op4-of ( and :op1 ( person :arg0-of ( study :arg1 10 )  :op3-of ( and :op1 ( expect :arg0 ( term :arg1-of ( differ :arg0 today :mod quite )  )  :arg1 ( or :op1 30 :op2 ( 40 :quant-of ( temporal-quantity :quant 20 :unit year )  )  :op3 ago )  )  :op2 ( thing :arg0-of compare :arg1-of ( aspire :arg0 ( person :arg0-of ( study :arg1 of )  )  )  )  )  )  :op2 ( ever :mod ( important :degree more :mod ' :mod-of than )  )  :op3 first :op5 vif :op6 ( way :domain that :mod just )  )
criticize :arg0 ( person :arg0-of study :arg1-of touch )  :arg1 service :medium ( thing :name ( name :op1 national :op2 union )  )
say :arg0 ( person :arg0-of ( have-org-role :arg1 ( organization :name ( name :op1 megan )  )  :arg2 ( president :mod vice )  )  :name ( name :op1 megan )  )  :arg1 ( touch :arg0 scheme :arg1 ( person :arg0-of study :mod majority :poss-of life )  :arg1-of high :arg1-of ( seem :op1-of incredible )  :arg1-of educate :arg2 out :mod of :mod this )
think :arg0 ( they :arg0-of ( keep :arg1 pace :arg2 ( bill :arg1 ( essential :mod basic )  )  :arg2-of ( fail :arg1 ( and :arg1-of ( support :arg0 ( person :arg0-of ( start :arg1 university )  :arg0-of ( face :arg1 ( cost :arg1 ( crisis :mod ( live :arg0 ( temporal-quantity :unit ( month :mod this )  )  )  )  )  )  :arg0-of study :quant many )  :arg2-of ( available :arg1 even )  :mod finance )  :op1 loan :op2 grant )  )  :manner ( spiral :arg1 ( simple :arg1 something :arg1-of ( arrive :arg4 hall )  )  )  )  )  :arg1 ( fork :arg1 thousand )  :arg1-of reside :arg1-of ( start :arg1-of possible :op1-of before :arg0 they )
take :arg0 feminist :arg1 race :arg2 ( and :op1 ( person :arg0-of ( conduct :mod-of ( post :mod police )  )  :name ( name :op1 ferguson )  :wiki - )  )
kill :arg0 ( country :name ( name :op1 mo )  )  :arg1 ( teenager :mod unarm )  :manner ( have-org-role :arg0 ( person :accompanier-of ( this :mod-of ( temporal-quantity :unit month )  )  :name ( name :op1 ferguson )  :wiki - )  :arg1 police :arg2 officer )  :time early
funeral :arg1-of ( shoot-down :arg0 ( line :arg0-of ( hold :arg1 hand :mod attende :op1-of their )  :arg0-of ( hand :arg1 ( chant :arg0 while :arg1 up )  )  :arg2-of ( wait :arg1 they )  :mod-of before )  :polarity - )
notice :arg0 ( person :arg0-of ( blog :arg1 ( 2 :quant-of ( temporal-quantity :unit week )  )  )  :arg0-of protest :name ( name :op1 miriam :op2 zoila :op3 perez )  )  :arg1 ( shift :arg0 ( person :arg1-of ( shoot-down :arg0 ( country :name ( name :op1 mo. )  )  )  :mod unarm :name ( name :name-of teenager :op1 michael :op2 brown )  )  :arg1 ( converse :arg1 ( feminist :mod white )  :arg2 ( person :name ( name :op1 ferguson )  :wiki - )  :mod online )  )  :time after
prioritize :arg0 ( commenter :mod feminist :mod white )  :arg1 ( gender :arg0-of ( come :arg1 income :purpose ( push :arg1 ( and :op1 ( right :mod reproductive )  :op2 inequality )  :direction forward )  )  )  :path ( above :op1 race )  :prep-in experience
contrast :arg2 ( see :arg0 ( person :arg0-of ( rise :arg1 tension :location ( country :name ( name :op1 midwest )  )  :op1-of ( and :op2 ( draw :arg1 ( cover :mod nationwide )  )  )  )  :name ( name :op1 perez )  )  :arg1 ( thing :arg0-of ( center :arg1 ( woman :mod white )  :time ( around :location-of ( percentage-entity :value 100 )  :op1 race )  )  :arg2-of respond )  )
respond :arg0 ( of :arg1 ( black :arg1 woman )  :time ( after :op1 soon :op2 ( shoot-down :arg0 ( and :arg1-of ( think :arg1-of essay :arg1-of personal :arg2-of ( resemble :arg1 title )  )  :op1 white :op2 woman :op3 ( be :arg1 ( just :mod-of about )  )  :op4 woman :op5 ( come :arg1 relative :polarity - :time late )  )  :arg1 ( 8 :mod-of 9 )  )  )  )  :arg1-of compare
contrast :arg2 ( demonstrate :arg1 ( shift :arg1-of significant )  :arg2 ( person :name ( name :op1 perez )  )  )
say :arg0 she :arg1 ( and :op1 ( talk :arg0 ( person :arg1-of ( get :arg0 ( you :arg0-of ( high :arg1 level )  )  :arg1-of ( think :arg0 ( i :arg0-of ( do :arg1 of :arg3 in :polarity - )  )  )  )  :quant lot )  )  :op2 about :op3 whitenes :op4 ( privilege :arg0 feminism :arg1 way :arg2 such )  )
feel :arg0 person :arg1 ( call :arg1 ( voice :arg1 something )  )
cause :arg0 ( and :arg0-of ( cause :arg1 situation )  :op1 crisis :op2 ( face :arg0 we :degree very )  :op3 ( person :name ( name :op1 ferguson )  :wiki - )  :op4 ( call :arg0 they :arg1 ( it :poss-of emblematic )  :arg2 racializ )  )
contrast :arg1 ( face :arg0 ( person :arg0-of ( light :arg1 ( issue :arg1-of ( black :arg0 ( culture :op1 sphere )  )  )  )  :arg0-of ( have-org-role :arg1 state :arg2 professor )  :arg0-of ( bring :arg1 mitchell )  :arg0-of ( see :arg1 woman :polarity - )  :name ( name :op1 ferguson )  :wiki - )  :arg1 every :time woman :time day )  :arg2 issue
say :arg0 ( i :op5-of ( and :op1 ( possible :arg1 something :op1-of post )  :op2 about :op3 amr-unknown :op3-of ( and :op1 funny :op2 ' :op4 ( partner :arg0 ( company :name ( name :op1 facebook )  :wiki facebook )  :arg1 ( like :arg1 place :op1-of ( over :mod all )  )  :arg2 150 )  :op5 it :op6 ( get :arg0 i )  )  :op4 i )  )  :arg1 mitchell
siege :location ( country :arg1-of ( silence :arg0 ( i :arg0-of ( post :arg1 something )  )  :arg1-of ( deafen :arg0 ( person :mod color )  )  )  )
contrast :arg1 sphere :arg1-of ( relation :arg0 about :arg1-of safe :arg1-of public :arg1-of ( speak :arg0 it :time woman )  :arg2 ( she :arg0-of ( ask :arg1 amr-unknown :arg1-of safe :mode interrogative :polarity - )  )  )  :arg2 public
gender :op1-of ( and :arg2-of ( study :arg0 - :arg1 race :location ( woman :arg1-of black :arg1-of ( resemble :arg2 ( person :name ( name :op1 mitchell )  :op1-of ( and :arg0-of ( issue :arg0-of ( regard :arg1 race )  )  :op2 dichotomy :op3 gender )  )  )  )  )  :op2 sexuality :op3 ( country :mod-of history :name ( name :op1 u.s. )  :wiki united_states )  )
and :arg0-of ( issue :arg1 she :arg1-of ( separate :arg0 luxury :arg2 ( woman :arg1-of black )  :manner neat )  )  :op1 ( live :arg0 they :arg1 ( reality :arg2-of ( combine :arg1 - )  )  :time ( day :mod every )  )
say :arg0 ( person :arg0-of ( have-org-role :arg1 ( organization :name ( name :op1 george :op2 mason :op3 university )  )  :arg2 professor )  :arg1-of ( combine :arg0 ( woman :arg1-of ( issue :arg0 ( and :op1 gender :op2 ( study :arg1 gender )  )  :mod race :prep-in ( sphere :mod feminist )  )  :mod white )  :arg1-of while :time now )  :name ( name :op1 angela :op2 hattery )  :op1-of ( and :op2 woman )  )  :arg1 ( opposite :arg0 predecessor :arg1-of mainstream )
say :arg0 white :arg1 ( person :name ( name :op1 &quot; )  :op3-of ( and :arg0-of ( justify :arg1 almost )  :op1 ( man :arg0-of ( rape :arg1 woman :arg2 of :time always )  :arg1-of ( black :arg0 least )  :op4-of ( and :op1 between :op2 ( date-entity :year 1865 )  :op3 ( date-entity :year 1890 )  )  )  :op2 lynch )  )
need :arg0 you :arg1 ( woman :mod white )  :purpose ( complicit :purpose ( justify :arg1 lynch )  :topic narrative )
and :op1 white :op2 ( woman :arg1-of black :arg1-of ( break-down :arg1-of ( come :arg2 ( person :name ( name :op1 hattery )  )  :op1-of ( and :op2 ( survey :arg0 ( person :arg2-of resemble :mod late :name ( name :op1 susan :op2 b. :op3 anthony )  )  :arg1 ( landscape :arg0 ( right :arg1-of ( vote :arg0 ( person :arg1-of black :op2-of ( or :op1 woman )  )  )  )  :arg1 time )  )  :op3 ( see :arg0 ( suffragist :mod white )  :arg1 ( work :arg1 ( fight :arg1 1800 )  :arg2 group :mod only )  )  )  )  )  )
say :arg0 late :arg1 ( person :arg1-of ( vote :arg0 basket :arg2-of ( put :arg1 egg :arg1-of ( decide :arg0 they )  )  :op1-of ( and :op2 woman :op3 ( vote :arg1 black )  )  )  :arg1-of come :name ( name :op1 &quot; )  )
resemble :arg1 ( give :arg0 ( thing :arg1-of ( look :arg2 at :direction back )  )  :arg1 of :arg2 woman :condition ( do :arg0 color :arg1 ( trust :arg0 white )  :arg3 woman :condition-of ( powerful :arg2 perspective :degree why )  :polarity - )  )  :arg2 that
do :arg0 we :arg1 job :arg3 good :polarity -
and :op1 ( person :arg0-of ( have-rel-role :arg1 ever :arg2 son )  :arg0-of protect :arg0-of ( have-rel-role :arg1 ( we :arg0-of ( help :polarity - )  :arg0-of ( black :arg1 woman )  )  :arg2 husband )  )
win :arg0 woman :arg1 ( right :arg2 ( vote :arg0 ( organization :beneficiary-of ( organization :name ( name :op1 association :op2 of :op3 southern :op4 woman )  )  :name ( name :op1 prevention :op2 of :op3 lynching )  )  :time ( date-entity :year 1920 )  )  )  :op1-of ( after :mod even :time-of ( temporal-quantity :arg0-of ( organize :arg1 ( woman :mod white )  )  :unit decade )  )
say :arg0 ( person :name ( name :op1 mitchell )  )  :arg1 ( come :arg1 group :time ( after :op1 ( woman :arg1-of ( assist :arg1-of ( ask :arg0 ( temporal-quantity :op2-of ( nearly :op1 40 )  :unit year )  :mod original )  )  :arg1-of black )  )  )
respond :arg0 ( person :name ( name :op1 to )  :part the )  :arg1 ( issue :arg2 ( person :arg0-of ( conduct :arg1 racial :arg2 ( newspaper :arg2-of ( reflect :arg1 feminist )  :arg2-of ( discriminate :arg0 police )  :name ( name :op1 the :op2 times )  :wiki los_angeles_times )  )  :arg0-of ( play :arg2 ( catch-up :arg0 white :arg1 up :arg2 ( issue :arg0-of ( black :arg1 woman :arg2 ( grapple :arg1 with :arg2 generation )  )  )  )  )  :arg2-of ( raise :arg1 by )  :name ( name :op1 ferguson )  :wiki - )  )  :arg2 ( thing :source-of white :source-of of :source-of upswell :source-of feminist )
cause :arg1 ( amr-unknown :arg1-of ( do :arg0 they :arg2 ( control :arg0 it :arg0-of ( pose :arg1 mitchell )  :arg1 interrogative :arg1-of ( birth :arg0 would )  :mod right )  :arg2-of ( raise :arg1 ( child :arg1-of ( take :arg2 serious :arg3 that :polarity - :time platform :time ( tradition :mod-of feminist )  :time activist )  )  :mod right )  )  )  :mod great
figure :arg0 ( feminist :arg1-of wave :arg1-of second )  :arg1 ( mean :arg1 that :arg2 ( and :arg0-of fight :op1 right :op2 ( access :arg1-of ( birth :arg1-of ( control :arg0 career )  )  :mod reproductive )  )  )  :time now
note :arg1 white :arg3-of ( take :arg0 ( person :arg0-of shoot-down :name ( name :op1 brown )  :wiki gordon_brown )  :arg1 ( person :arg0-of ( point-out :arg1 column )  :arg0-of ( have-org-role :arg1 ( company :name ( name :op1 facebook )  :wiki facebook )  :arg2 activist )  :name ( name :op1 michael )  :quant ( 2 :quant-of ( temporal-quantity :unit week )  )  :wiki michael_jackson )  :arg2 feminist :op1-of ( post :op2 ( demand :arg1 ( issue :op1-of ( of :mod-of racism )  )  :arg2-of ( protest :arg1 ( person :mod ( country :name ( name :op1 america )  :wiki united_states )  :mod white :name ( name :op1 guardian )  )  :degree more )  :op1-of carroll :op1-of columnist :op1-of that )  )  :op1-of steinem :time after )
parallel :arg1 ( reason :arg1-of ( contrast :arg2 ( and :op1 ( body :arg1-of ( locate :arg0 danger )  )  )  )  :arg1-of ( differ :arg0 ( i :arg0-of ( understand :arg1 that )  :arg0-of ( hope :arg1 woman :arg2 amr-unknown )  )  :arg2 ( change :arg1 ( person :arg0-of write :name ( name :op1 &quot; )  )  :arg1-of ( opine :arg0 racial )  :arg1-of ( poll :arg0 public )  :arg1-of ( differ :arg0 measurably )  :arg1-of lead )  )  )
puzzle :arg0 ( comment :arg1 more :arg1-of ( vouch :arg0 ( person :name ( name :op1 steinem )  )  :arg2 ( feminism :arg0-of ( include :arg1 ( issue :mod race )  :arg2 gender )  )  )  :arg3 ( race :location ( country :name ( name :op1 america )  :wiki united_states )  )  )  :arg1 some :mod still
contrast :arg1 ( vulnerable :arg1-of ( remark :arg0 ( person :arg0-of ( criticize :arg1 ( she :arg0-of ( launch :arg1 past )  )  )  :arg1-of ( counter :arg0 ( man :mod-of color :op1-of ( young :mod ( especially :mod ( country :name ( name :op1 united :op2 states )  :wiki united_states )  )  )  )  )  :name ( name :op1 ferguson )  :wiki - )  )  :arg1-of ( tell :arg0 ( person :mod ( that :mod-of young )  )  :arg3 ( she :arg2-of ( steal :arg0 ( person :arg0-of ( author :arg1 of )  :arg2-of ( institute :arg1 scholar :mod enterprise )  :mod sommer )  :arg1 amr-unknown )  )  :mod feminism :prep-to man :time interrogative )  :mod far :mod more )  :arg2 sister
contrast :arg0 now :arg1 ( program :arg1-of ( special :arg0 almost )  :op1-of ( and :op2 girl :op3 ( woman :location ( boy :beneficiary-of nothing )  :mod young )  :topic-of ( hundred :poss we )  )  )
contrast :arg2 ( and :arg2-of ( help :arg0 ( government-organization :arg0-of ( react :arg1 steinem :arg2 ( many :mod-of feminist )  :mod angry )  :arg0-of ( initiate :arg1 ( program :mod small )  )  :name ( name :op1 white :op2 house )  :wiki white_house )  :purpose-of ( keep :arg0 i :arg1 ( vulnerable :arg1-of black )  :time recent :time broth :time young )  )  :op1 hispanic :op2 man )
feminism :arg1-of ( mainstream :arg0 ( community :arg1-of black :arg2-of ( relation :arg0-of ( issue :arg1 only :arg1-of ( push :arg2 forefront :polarity - )  )  :arg1 police )  )  )
unaccompani :arg1-of ( patrol :arg0 ( country :arg0-of ( surface :arg1 ( reform :arg0 ( country :arg1-of ( border :arg0 southwest )  )  :arg1 ( immigrate :arg0 ( year :arg0-of ( issue :arg1 woman :time ( time :mod this :mod ( again :mod once )  )  )  )  :arg1 this )  )  )  :arg0-of ( apprehend :arg1 nearly )  :arg1-of ( border :time ( after :time-of minor )  )  :name ( name :op1 u.s. )  :wiki united_states )  )
say :arg0 ( she :arg0-of ( need :arg1 ( issue :arg0 ( we :arg0-of ( belong :arg1 together :arg2 chair :mod of )  )  )  :arg1-of ( share :arg0 ( person :arg0-of immigrate :poss-of ( story :topic woman :topic woman )  )  )  :mod all :mod essential )  )  :arg1 that :arg2-of ( reform :arg0 ( organization :arg0-of ( mobilize :arg1 woman )  )  :arg1 ( immigrate :arg0 ( person :name ( name :op1 andrea )  :wiki - )  )  )
say :arg0 ( person :name ( name :op1 &quot; )  )  :arg1 ( themselv :arg1-of ( speak :arg0 they )  )
and :arg0-of ( exploit :arg1 ( vulnerable :arg1-of ( position :arg0 they :arg2 ( give :arg0 majority :arg1 visa :arg2 ( employ :arg0 vast )  :arg2-of ( immigrate :arg0 ( person :arg1-of ( come :arg0 male :arg2 woman :purpose domestic )  )  )  )  )  )  :arg2 violence )
say :arg0 she :arg1 ( story :arg0-of ( resonate :arg1 ' :arg2 organization )  :mod this :topic woman )
reside :arg0 pig :arg1 house :arg2 ( country :name ( name :op1 ipswich )  )
remove :arg0 ( person :arg0-of ( have-org-role :arg1 ( university :location-of sale :name ( name :op1 suffolk )  :wiki suffolk_university )  :arg2 ( agent :mod estate )  )  )  :arg1 ( picture :beneficiary house )  :condition ( emerge :arg1 ( show :arg1 ( pig :mod large )  :location ( room :mod live )  :location rest )  )
detach :arg1 ( property :arg1-of private :arg1-of ( sit :arg0 bedroom :arg2 road )  )
feature :arg0 particular :arg1 ( picture :arg0-of ( include :arg1 pig :arg2 ( rest :arg0-of head :arg1 settee )  )  :poss ( room :mod live :mod house )  )
say :arg0 ( person :arg0-of ( have-org-role :arg1 connell :arg2 agent )  :mod estate )  :arg1 ( photo :arg1-of ( own :arg0 ( person :mod home :mod-of ( ' :mod-of pet )  )  )  :mod pig )
say :arg0 ( company :arg1-of ( have-org-role :arg2 spokeswoman )  )  :arg1 ( and :arg2-of ( put :arg0 howev :arg1 photo )  :op1 error )  :arg1-of ( remove :arg0 since )
meet :arg0 former :arg1 ( property :arg1-of ( detach :arg0 ( bedroom :op1-of unique )  :location house )  :arg1-of ( describe :arg0 particular )  )  :location house
appear :arg0 ( material :mod publicity )  :purpose ( remove :arg0 agency :arg1 image :arg2 website )  :time still
spark :arg0 ( sale :mod house )  :arg1 ( interest :arg1 some )  :arg2 ( media :arg2-of ( enquire :arg1 ( include :arg1 pig )  )  :mod society )
millionaire :arg1-of fresh :time ( after :op1 ( win :arg0 ( person :name ( name :op1 lotto )  )  :arg1 ( town :mod sw :poss ( person :name ( name :op1 harvey )  )  )  )  )
play :arg0 thing :arg1 ( person :name ( name :op1 harvey )  )  :arg2 lotto :location ( temporal-quantity :unit month )
draw :arg0 ( person :arg0-of ( take :arg1 lucky :arg2 saturday :manner 1 :time night :time nearly :time home :time 1.1 )  :arg0-of ( search :arg1 ( south :mod-of west )  :arg2 ( millionaire :mod new )  )  )  :arg1 lotto
strike :arg0 ( person :name ( name :op1 harvey )  )  :arg1 ( draw :arg0 time :arg1 ( division :poss-of last )  :op1-of ( date-entity :time-of ( date-entity :month 11 )  :year 2009 )  :op1-of ( 1 :quant-of ( temporal-quantity :quant 5 :unit year )  )  )  :arg2 newsagency :mod-of gold
winn :arg1-of ( come :direction forward :mod yet )  :mod lucky
say :arg0 store :arg1 ( win :arg0 ( of :mod owner )  :arg1 ( create :arg0-of ( buzz :arg1 ( town :mod small :mod-of perth )  :op1-of around )  :arg1 ( south :mod-of west :part-of ' )  )  )  :arg1-of ( forward :arg0 steve )
and :op1 ( talk :arg1 it )  :op2 town :op3 ( excite :arg0 everyone :arg1 pretty )
think :arg0 we :arg1 ( possible :arg1 ( close :arg1 ( win :arg1-of ( resemble :arg2 this )  )  )  )
win :arg0 ( person :arg0-of play :mod state )  :arg1 ( last :mod-of ( temporal-quantity :unit month )  )  :arg2 ( off :arg2-of ( celebrate :arg1 division :mod winner )  :arg2-of ( cap :arg0 eight :arg1 ( lucky :mod-of ( week :unit-of temporal-quantity )  :op1-of few )  )  )
become :arg1 ( thing :arg0-of play :arg1-of ( can :time ( week :mod last )  )  :arg1-of ( win :arg0 ( couple :arg1-of follow :mod belmont :mod-of massive :quant ( 8 :quant 5 :quant-of millionaire :quant-of ( temporal-quantity :quant 1 :quant-of prior :unit week )  )  )  :mod ( only :mod-of few )  )  :mod vale )  :arg2 of
and :op1 ( travel :arg1 world :purpose-of ( opportunity :arg1-of ( gift :arg0 ( win :arg1 ( twenty :quant-of ( temporal-quantity :unit year )  )  )  :arg1-of ( say :arg0 ( couple :arg1-of win )  :op2-of ( and :op1 ( play :arg1 game )  )  )  )  )  )  :op2 ( buy :arg1 ( house :mod new )  )
bring :arg0 ( millionaire :mod ( person :arg1-of total :name ( name :op1 harvey )  )  )  :arg1 ( country :name ( name :op1 wa )  )  :arg2 ( division :quant 59 )  :arg3 ( winner :time year )  :op1-of 85 :op1-of nearly
beg :arg0 ( person :name ( name :op1 leonidas )  )  :location ( arena :mod gladiatorial )
stand :arg0 ( day :mod ( religious-group :name ( name :op1 roman :op2 catholic )  :wiki catholic_church )  )  :arg1 ( gladiator :mod only :poss it )  :manner ( ankle :arg1-of ( deep :arg0 mud :polarity - )  )  :purpose park
show :arg1 1000 :manner-of ( take :arg0 ( person :arg0-of visit :quant more )  :arg1 rain :arg1-of complete :op3-of ( and :arg1-of ( attract :domain-of ( great :domain ( appeal :arg1 event )  )  :time yesterday )  :op1 ( brave :arg1 and )  :op2 ( chill :mod autumn )  )  )  :mod history
significant :arg1 ( country :name ( name :op1 rhineland )  )  :op1-of ( and :op5-of ( and :arg1-of ( start :mod colorful )  :op1 representation :op2 ( thing :arg1-of perform )  :op3 game :op4 ( piece :arg0-of exhibit )  )  :topic-of ( information :topic ( thing :name ( name :op1 roman :op2 times )  )  )  )
seize :arg0 ( art :arg1-of ( doubt :polarity - )  :arg1-of ( attract :arg0 ( main :mod-of of )  )  :domain-of gladiator :domain-of ( thing :mod school :name ( name :op1 the )  )  :mod martial :mod day :mod-of group )  :arg1 ( art :arg0-of ( cover :arg1 arena )  :arg1-of soft :arg1-of demonstrate :arg1-of sand :mod martial :mod robust )  :arg1-of ( rain :arg1-of ( stop :arg0 it :mod ( time :mod every )  )  )  :arg2 opportunity
prove :arg0 of :arg1 ( gladiator :arg1-of ( own :arg0 ( person :arg1-of ( expert :op2-of ( and :op1 humorou :time ( after :mod-of ( ring :mod into )  :time-of ( send :arg0 man :arg1 presenter :arg2 ( hero :arg1-of duel :mod-of ( variety :quant ( gladiatorial :mod-of genr )  )  )  :quant 1 )  )  )  )  )  )  )
and :arg1-of ( right :arg0 ( rectangular :arg0-of ( shield :arg1 ( and :arg1-of ( well :arg0 ( sword :mod short )  )  )  )  )  :arg0-of ( arm :arg1 ( leg :arg1-of ( leave :arg0 cuisse )  :arg1-of ( line :arg0 provocateur )  )  )  )
and :op1 cuisse :op2 ( arm :arg0-of ( guard :arg1 ( gladiator :arg1-of ( carry :arg0 there :arg1-of ( wear :arg0 then )  :arg2 short :op1-of ( and :arg0-of spear :op2 sword )  :op2-of ( and :op1 ( plate :mod breast )  )  )  :mod iron :mod-of helmet )  )  )
and :op1 ( perform :arg1 ( go :arg0 amr-unknown :arg4 ground :op1-of against )  :time impress :time particular )  :op2 net :op2-of ( and :op1 cast :time ( after :time-of ( fight :mod short :time-of guy :time-of knock )  )  )  :op3 trident :op4 dagg
and :op1 ( clash :arg0 sword )  :op2 ( clank :arg1 shield )  :op3 ( fly :arg0 ( you :arg0-of ( zoom :arg1 arena )  :arg0-of ( fear :arg2 ( safe :arg1 gladiator )  )  )  :arg1 ( spear :arg1 another )  :degree much )
referee :arg0 muscular :arg1 ( keep :arg0 constant :arg1 ( thing :mod gigantic :name ( name :op1 however )  )  :arg1-of ( keen :arg0 they :arg2 eye )  )
spectacle :arg1-of ( intend :arg0 ( organization :arg1-of ( have-org-role :arg0 ( person :name ( name :op1 &quot; )  )  :arg2 chairman )  :mod event )  :arg1-of ( explain :arg0 ( thing :arg1-of ( experience :arg0 ( thing :arg1-of ( enable :arg0 ( and :arg1-of ( want :arg0 we :arg0-of ( revive :arg1 life :arg2 ( religious-group :name ( name :op1 roman :op2 catholic )  :wiki catholic_church )  )  )  :op1 everyday )  :arg2 culture )  :mod of :name ( name :op1 &quot; )  )  )  :name ( name :op1 &quot; )  )  )  :op1-of behind )
welcome :arg0 ( he :arg0-of ( prepare :arg1 ( day :mod 1 :mod-of into )  :arg2 ( transform :arg0 park :arg1 ( thing :location ( city :location-of ( religious-group :name ( name :op1 roman :op2 catholic )  :wiki catholic_church )  )  :name ( name :op1 claus )  )  )  :duration ( temporal-quantity :quant 2 :unit year )  :mod of :time ( after :op1 that )  )  :arg1-of ( announce :arg0 ( person :arg0-of ( have-org-role :arg2 mayor )  :mod deputy )  :arg2 ( person :name ( name :op1 claus )  )  )  )  :arg1 speech
contrast :arg0 ( building :quant numerous )  :arg1 ( bring :arg0 war :arg1 ( and :op1 conquer )  :arg2 ( region :poss we )  :mod ( only :polarity - )  :time end )  :arg2 ( and :arg1-of ( admire :arg0 we :arg1-of possible :mod still :time today )  :op1 ( culture :mod also :mod ( religious-group :name ( name :op1 roman :op2 catholic )  :wiki catholic_church )  )  )
and :arg1-of ( long :arg2 bridge )  :op1 ( remain :arg1 ( thing :arg1-of high :name ( name :op1 some )  :poss such :poss-of ( distance-quantity :quant eleven :unit meter )  )  :arg1-of possible :arg3 some :arg3-of ( marvel :arg0 also :arg1 during )  :mod this :op1-of of :time ( day :time-of ( religious-group :name ( name :op1 roman :op2 catholic )  :wiki catholic_church )  )  )  :op2 ( 1400 :quant-of ( distance-quantity :quant canal :quant 1 :quant ( religious-group :name ( name :op1 roman :op2 catholic )  :wiki catholic_church )  :quant only :unit meter )  )
say :arg0 ( person :arg0-of ( have-org-role :arg1 ( organization :arg0-of compare )  :arg2 director )  :arg1-of ( benefit :arg0 we :arg1-of derive :mod still :time ( today :poss-of ( knowledge :mod of :poss then :poss back )  )  )  :name ( name :op1 the )  )  :arg1 ( and :arg1-of manage :op1 ( supply :arg1 energy :op2-of ( and :op1 water )  :op2-of ( and :mod both :op1 then :time now )  )  )  :arg1-of mean
introduce :arg0 ( person :arg0-of ( survey :arg1 ( person :name ( name :op1 this )  )  )  :arg0-of ( confirm :arg1 this )  )  :arg1 ( use :arg1 instrument :arg1-of ( survey :arg0 such :example and )  )
heat :arg0 ( brick :op2-of ( and :arg1-of ( present :arg0 ( thing :location ( country :name ( name :op1 blankenheim )  )  :name ( name :op1 r√∂mervilla )  )  :arg2 ( sketch :arg1 excavation )  )  :op1 model :op3 ( use :arg1 ( hypocaust :mod original )  :arg2 ( warm :arg1 ( date-entity :year 1894 )  )  :time once )  )  )  :mod ( air :arg2-of force )
burn :op1-of ( before :time-of ( tread :arg0 ( they :arg0-of clay )  :op1-of ( after :time-of ( leave :arg3 behind :op2-of ( and :mod also :op1 ( impress :arg1 ( footprint :op1-of ( and :op2 ( fox :arg1 thousand :arg2 ( temporal-quantity :quant 2 :unit year )  )  )  )  )  :poss wolf )  )  )  )  )
excavate :arg0 ( country :location-of ( associate :arg1 state )  :name ( name :op1 rheinland )  )  :arg1 ( remain :arg0 ( office :mod ( conserve :arg1 monument :mod archaeological )  )  :arg1 ( thing :name ( name :op1 roman :op2 villa )  )  :location ( country :name ( name :op1 rheinbach )  :part north )  )  :arg2 ( estate :mod industry )  :time ( date-entity :year 2011 )
and :op1 ( discover :arg1 kiln :purpose ( crop :arg1-of dry )  )  :op2 ( contain :arg0 ( wall :arg1-of enclose :arg1-of ( build :mod agriculture )  )  :arg1 ( and :op1 malt )  )
manor :mod ( agriculture :arg0-of ( build :arg0-of ( belong :arg1 ( person :name ( name :op1 villa :op2 rustica )  )  :arg1-of ( explain :arg0 ( person :mod archaeologist :name ( name :op1 jennifer :op2 morscheiser )  )  )  :mod probable )  :arg1 dr. )  )
and :op1 ( plate :mod large )  :op2 ( jar :arg1 glass :arg1-of fine :arg1-of ( find :arg1-of ( range :arg1-of ( present :location ( cabinet :consist-of glass )  )  )  :arg2 excavation )  :quant several )  :op3 ( part :part-of ( necklace :mod small )  )
and :op1 ( thing :arg1-of ( presume :arg0 ( person :name ( name :op1 morscheiser )  )  :arg2 ( former :time-of ( thing :name ( name :op1 roman :op2 rheinland )  )  )  :op1-of ( thing :name ( name :op1 germanic )  )  :time ( until :op1 ( invade :arg0 person :arg2 ( thing :name ( name :op1 anno :op2 domini )  )  )  )  )  :location there :name ( name :op1 villa )  )  :op2 ( fourth :mod-of ( temporal-quantity :unit century )  )
write :arg0 ( they :arg0-of ( do :arg1 ( pupil :mod-of ( religious-group :name ( name :op1 roman :op2 catholic )  :name name :wiki catholic_church )  )  :concession ( pen :arg1 ( metal :arg0-of ( wax :arg1 tablet )  )  )  :time time )  )  :op2-of ( or :arg1-of ( resemble :arg2 ( child :arg1-of ( keep :mod also :time ( busy :arg1-of ( play :mod-of ( religious-group :name ( name :op1 roman :op2 catholic )  :wiki catholic_church )  )  :mod themselv )  :time today )  )  )  :arg1-of ( mill :arg0 ( windmill :mod-of game )  )  :op1 game )
cause :arg0 ( use :arg0 ( country :mod-of ( glass :consist ( stand :mod museum )  )  :name ( name :op1 rheinbach )  )  :arg1 ( mill :arg0 ( religious-group :name ( name :op1 roman :op2 catholic )  :wiki catholic_church )  :arg1 wheat :mod heavy )  :arg1-of ( get :arg0 stone :op4-of ( and :arg0-of ( allow :arg1 ( lay :arg0 child :arg1 mosaic )  :time ( stand :arg1-of ( bathe :arg0 thermal )  :source ( country :name ( name :op1 z√ºlpich )  )  )  )  :op1 ( mosaic :consist-of glass :domain they )  :op1-of and :op2 ( thing :name ( name :op1 eifel :op2 nettersheim )  )  :op3 ( center :location-of nature )  )  :time stand )  )  :arg1 ( possible :arg1 ( grind :arg1 ( flour :arg1-of ( need :arg2 ( or :op1 ( bread :mod pita )  :op2 muesli )  )  )  )  )
reveal :arg1 ( and :op1 ( horse :mod ( blood :mod ( cold :arg2-of ( pull :arg1 2 :op3-of ( and :arg1-of ( visit :arg0 ( person :arg0-of ( ride :arg1 park )  )  )  :op1 ( true :arg1-of ( reconstruct :arg0 ( carriage :mod ( religious-group :name ( name :op1 roman :op2 catholic )  :wiki catholic_church )  )  )  )  :op2 original :op4 along )  )  )  )  )  :op2 ( pass :arg1 ( impress :arg1 city :arg1-of ( stand :mod gym :time ( week :time-of ( project :mod ( religious-group :name ( name :op1 roman :op2 catholic )  :wiki catholic_church )  )  )  :time ( result :arg1 of )  )  )  :mod also )  )
remember :arg0 ( event :arg1-of ( participate :arg0 ( community :poss ( country :name ( name :op1 wachtberg )  )  )  :arg2 ( call :arg1 ( year :mod ( religious-group :name ( name :op1 roman :op2 catholic )  :wiki catholic_church )  :mod-of 21 )  :arg2 ( date-entity :year 2014 )  :op1-of 13 :op1-of 9 :prep-with-of ( temporal-quantity :unit year )  :purpose-of ( date-entity :year 2000 )  :time ( throughout :op1 ( country :name ( name :op1 rhineland )  )  )  )  :manner ( week :mod ( religious-group :name ( name :op1 roman :op2 catholic )  :wiki catholic_church )  )  :mod also )  )  :arg1 ( die :arg1 ( person :name ( name :op1 augustus )  :wiki augustus )  )
and :op1 history :op2 tradition :op3 ( and :op1 ( dedicate :purpose local )  :op2 ( associate :arg1 ( partner :arg1 ( club :quant together )  :arg2 ( hike :arg1 region )  :op1-of school )  :op2-of ( and :op1 ( thing :arg2-of characteristic )  :op3 ( thing :name ( name :op1 oberbachem )  )  :op4 amateur )  :op2-of ( and :op1 club :op3 ( club :mod dramatic )  )  )  :op3 ( evening :arg1-of cook )  :op4 ( guide :arg0 recital :arg1 ( class :arg0-of ( remember :arg1 ( history :poss ( religious-group :name ( name :op1 roman :op2 catholic )  :wiki catholic_church )  )  :op2-of ( and :op1 ( offer :arg0 ( country :arg1-of hike :name ( name :op1 wachtberg )  )  :arg1 ( thing :mod other )  )  )  )  )  )  )
understand :arg0 ( he :arg0-of ( work :arg1 ( legionnaire :mod ( religious-group :name ( name :op1 roman :op2 catholic )  :wiki catholic_church )  )  :mod drafty :op1-of ( and :op2 plant :op3 ( present :arg1 ( thing :mod of :name ( name :op1 the )  :op1-of ( and :arg1-of showcase :op2 group :op3 ( religious-group :name ( name :op1 roman :op2 catholic )  :wiki catholic_church )  :op4 invader )  :op1-of ( and :op2 humorou :op3 lesson )  )  )  )  )  :arg0-of ( talk :arg1 example :op1-of about )  :arg0-of ( live :arg1 monument )  )  :arg1 between :mod ( international :mod-of matter )
devote :arg1 ( school :mod elementary :mod ( country :name ( name :op1 adendorf )  )  )  :arg2 ( project :arg1-of ( long :arg2 week )  :mod ( religious-group :name ( name :op1 roman :op2 catholic )  :wiki catholic_church )  :mod theme )
and :arg1-of ( experience :arg1-of ( enable :arg1-of recommend :mod ( again :mod once )  :time ( week :domain-of trace :mod ( religious-group :name ( name :op1 roman :op2 catholic )  :wiki catholic_church )  )  )  :location ( country :name ( name :op1 wachtberg )  )  :time yet :time ( glance :arg1 ( long :arg1 visible :polarity - )  )  )  :op1 numerous :op2 common
give :arg0 ( hall :mod ( country :name ( name :op1 wachtberg )  )  :mod town )  :arg1 ( presentation :mod small )  :arg2 ( sanctuary :location ( country :arg1-of ( find :time ( date-entity :year 1879 )  )  :name ( name :op1 berkum )  )  )
mean :arg1 ( put :arg0 epidemic :arg1 ( economy :mod ' :mod ( world-region :name ( name :op1 west :op2 africa )  :wiki west_africa )  )  :arg2 ( strain :wiki influenza_a_virus_subtype_h5n1 )  )  :arg2 ( thing :name ( name :op1 ebola )  )  :op1-of the
hit :arg1 ( economy :location ( world-region :location-of ( epidemic :mod ( thing :name ( name :op1 ebola )  )  )  :name ( name :op1 west :op2 africa )  :wiki west_africa )  )  :mod huge :mod also
and :op1 ( keep :arg0 company :arg1 ( market :arg1-of abandon )  :arg2 ( distance :arg1 international )  )
deal :arg0 ( epidemic :arg0-of ( devastate :arg1 ( thing :arg0-of ( blow :arg1 ( world-region :name ( name :op1 west :op2 africa )  :wiki west_africa )  :mod heavy )  :name ( name :op1 ebola )  )  )  )  :arg1 economy
and :op1 ( rot :arg1 crop :location field )  :op2 ( desert :arg1 mine )  :op3 ( abandon :arg1 market )  :op4 virus :op5 ( cost :arg1 region )  :op6 dearly
keep :arg1 ( distance :arg1 international )  :arg2 ( company :mod even :quant some )
contrast :arg0 crisis :arg1 ( economy :mod also :mod only :mod 1 :mod medicine )  :arg2 ( person :arg1-of ( conclude :arg0 ( company :name ( name :op1 development :op2 bank )  :wiki asian_development_bank )  )  :arg2-of ( head :arg0 ( thing :name ( name :op1 &quot; )  :op1-of epidemic )  :arg1 of :polarity - )  :name ( name :op1 &quot; )  )
affect :arg1 ( country :domain ( country :name ( name :op1 liberia )  )  )  :degree most
say :arg0 ( we :arg0-of ( lose :arg1 ( money :op1 of :quant lot )  :arg2-of ( total :arg0 it :arg1 ( market :mod ( large :degree most )  )  )  :op2-of ( and :op1 catastrophe )  )  )  :arg2 ( sell :arg0 amr-unknown :arg1 clothes :arg2 ( city :location-of monrovia :mod ( capital :mod-of ' )  )  )  :time bamogo
or :op1 ( food :arg1-of ( buy :arg0 ( person :arg1-of ( come :arg4 market )  :mod only )  :arg1-of want )  )  :op2 disinfectant :op3 ( thing :name ( name :op1 ebola )  )
fever :arg4-of ( fall :arg0 ( person :quant more :quant 600 )  :arg1 victim :manner ( alone :location here )  :op1-of ( and :domain ( country :domain-of ( country :arg1-of ( affect :arg0 virus :degree most )  )  :name ( name :op1 liberia )  )  )  )
explain :arg0 ( authority :mod health :mod country )  :arg1 ( corner :arg1-of ( reach :arg0 disease )  :quant all )  :time recent
and :op1 ( country :location-of ( spread :arg1 virus :mod even )  :name ( name :op1 guinea )  :wiki guinea )  :op2 ( country :name ( name :op1 sierra :op2 leone )  :wiki sierra_leone )  :op3 ( country :name ( name :op1 nigeria )  :wiki nigeria )
and :op1 ( infect :arg0 ( person :arg1-of ( die :time already )  :quant ( more :op1 1500 )  )  :arg1 thousand :arg1-of ( total :arg0 more )  )
pull :arg0 ( business :mod foreign )  :arg1 ( person :arg1-of employ )
suspend :arg0 company :arg1 operation :topic ( resource :compared-to-of ( rich :location-of ( country :quant all )  )  )
affect :arg0 such :arg1 region :arg2-of ( fly :arg0 ( company :arg0-of ( withdraw :arg1 ( person :arg1-of ( employ :arg0 ( organization :name ( name :name-of ( group :consist-of steel )  :op1 arcelor :op2 mittal )  )  )  )  :polarity - )  :mod foreign )  :arg1 ( airlin :mod international :quant several )  :op1-of and )
replenish :arg1 ( supply :arg1 business :arg2 ( person :arg0-of farm :op2-of ( and :arg0-of react :op1 ( trader :arg1-of local :mod even )  )  )  )  :arg2-of ( leave :arg0 ( person :mod ( only :mod-of few )  )  :arg1 ( town :mod home )  :mod still )
and :op1 ( name :arg1 few :op4-of ( and :arg0-of ( rot :arg1 field )  :op1 cacao :op2 coffee :op3 ( bean :arg0-of ( put :arg1 they :arg2 quarantine :location ( country :arg0-of export :name ( name :op1 liberia )  :op3-of ( and :op1 ( area :quant some )  :op2 ( country :name ( name :op1 sierra :op2 leone )  :wiki sierra_leone )  )  )  )  )  )  )  :op2 important
dare :arg0 ( person :arg0-of farm )  :arg2 ( leave :arg1 home :arg2 crop :polarity - )
scarce :domain ( supply :arg1 food )
say :arg0 ( person :name ( name :op1 &quot; )  :op2-of ( and :op1 ( travel :arg0 person :arg1 less :arg2 less )  )  )  :arg1 ( economy :arg1-of ( expert :arg0 parisian :arg2 ( world-region :name ( name :op1 west :op2 africa )  :wiki west_africa )  )  :mod of )
and :op1 ( go :arg1 ( man :arg0-of ( choose :arg1 ( stay :arg1 example :location home )  )  )  :arg1-of normal :arg4 market )  :op2 ( sell :arg1 vegetabl )
and :op1 ( face :arg0 population :arg1 consequence )  :op2 ( head :arg1 epidemic )  :op3 ( feel :arg0 ( food :arg1-of ( supply :domain-of scarce )  )  :arg1 pressure )
dwindle :arg0 rice :arg1 ( supply :arg1 ( food :arg1-of staple )  )  :arg2 such :location market
and :op1 ( company :mod international )  :op2 ( threaten :arg1 heavy :arg2 ( image :topic region )  )  :op3 ( consequence :arg0-of ( reach :arg1 far )  )  :time ( time :arg1-of ( same :arg0 this )  )
say :arg0 ( person :name ( name :op1 phillippe :op2 hugon )  :source ( organization :name ( name :op1 think :op2 tank )  )  )  :arg1 ( company :arg0-of ( avoid :arg1 region :arg2 france )  :mod international )  :arg2 ( person :name ( name :op1 iris )  )  :purpose-of ( long :arg0 ( danger :mod ( big :degree most )  )  :arg1 time )  :time essential
and :op1 ( long :arg1 ( wide :arg1 crucial )  )  :op2 ( continue :arg1 ( spread :arg0 virus :arg1 amr-unknown )  )
impression :arg0 ( person :arg0-of ( invest :arg1 ( possible :arg1 it )  )  :arg0-of ( live :arg1 dangerous )  :op1-of ( and :op1-of and :op2 ( country :name ( name :op1 guinea )  :wiki guinea )  :op3 ( country :name ( name :op1 sierra :op2 leone )  :wiki sierra_leone )  :op4 ( country :name ( name :op1 investors )  )  :op5 ( person :arg0-of warn :arg0-of ( invest :arg1 therefore :mod also )  :name ( name :op1 investors )  )  )  )  :arg1 that
burden :arg0 disease :arg1 ( budget :arg1-of ( strain :time already )  :poss state :poss nation )  :mod also
affect :arg1 ( state :poss-of ( budget :arg1-of ( burden :arg0 disease :mod also )  :arg1-of ( strain :time already )  :poss nation )  )
fear :arg0-of ( expend :arg1 budget :arg2 ( and :op1 ( health :mod-of system )  :op2 ( decline :arg1 ( economy :mod also )  )  )  )  :arg0-of ( rate :arg1 agency )  :arg0-of ( strain :arg1 heavy )  :arg1 that :arg1-of high
affect :arg1 ( country :poss-of ( system :mod ( health :arg0-of ( tune :arg1 ( monetary-quantity :unit dollar )  :arg2-of ( aid :arg0 ( monetary-quantity :unit euro )  :arg1 60 :arg1-of ( provide :arg0 ( company :name ( name :op1 development :op2 bank )  :wiki asian_development_bank )  :arg2-of ( promise :arg1 45 :time already :arg0 company )  )  :mod finance )  )  )  )  )
noticeable :time ( already :arg2-of ( diagnose :arg0 ( effect :location ( country :name ( name :op1 nigeria )  :wiki nigeria )  )  :arg1 ( case :arg0 now :arg2 ( thing :name ( name :op1 ebola )  )  :quant ( few :mod only )  )  )  )
affect :arg1 ( region :mod ( rich :source oil )  :mod yet )  :arg2 ( country :mod-of ( delta :part south )  :name ( name :op1 niger )  :wiki niger )  :mod yet :polarity -
infect :arg2-of ( become :arg1-of ( fear :arg0 ( person :arg1-of ( stay :arg3 elsewhere :location home :time already )  :quant many )  )  )
reserve :arg1 hotel :quant ( number :arg1-of ( decline :arg1-of ( mark :mod even )  )  )
shooter :arg0-of ( celebrate :arg1 ( anniversary :mod 50th )  )
club :arg0-of ( celebrate :arg1 it :arg2 ( anniversary :mod 50th :mod-of 12th )  :time ( date-entity :mod 14th :month 9 )  )  :mod gun
establish :arg0 ( thing :mod-of gun :name ( name :op1 tannenwald )  )  :arg1 ( temporal-quantity :quant 50 :unit year )  :arg2 ( 9 :mod 14th )  :arg2-of ( prepare :arg1 party :domain-of underway )  :location 12th :op1-of ( since :time-of ( celebrate :arg0 club )  )
plan :arg1 12th :time ( date-entity :month 9 )  :time friday :time ( provide :arg0 evening :arg1 group :arg1-of ( entertain :arg0 of )  )
fire :arg1 ( cannon :mod large )  :arg2 saturday :time 18
rascal :mod-of ( party :degree tent :domain ( thing :arg1-of follow :arg1-of ( pleasant :arg0 evening )  :name ( name :op1 followed )  )  :mod large )
cater :arg0 ( band :mod bras )  :arg1 music
highlight :arg0 9 :arg1 sunday :domain-of ( service :arg0-of ( take :arg1 place :op1-of ( and :op2 ( church :mod parish )  :op3 ( procession :location 2pm :mod also )  )  )  :mod festival )
announce :arg1 afternoon :concession ( and :op1 county :op2 ( compete :arg1 also :arg1-of shoot-down )  )  :manner rank :op1-of nation
sight :arg1 ( woman :location ( organization :name ( name :op1 dirndls )  )  :mod festival :quant 25 )  :arg1-of ( attract :time particular )
band :domain ( band :mod ( festival :domain-of ( bras :mod ( thing :name ( name :op1 berngau )  )  )  )  )
take :arg0 ( and :op1 ( wild :mod ( thing :name ( name :op1 mayor :op2 wolfgang )  )  )  :op2 state :op3 secretary :op4 ( person :name ( name :op1 albert :op2 f√ºracker )  )  )  :arg1 sponsorship
mean :arg1 of :arg2 ( and :arg1-of describe :op1 ( person :arg0-of ( entertain :arg1 society )  :mod ( society :domain-of ( thing :domain-of original :name ( name :op1 the )  )  :mod gun :time ( date-entity :year 1907 )  )  :name ( name :op1 the )  :name name :poss-of back :poss-of date )  :op2 ( found :arg0 club :arg1 ( 21st :mod-of ( date-entity :month 3 )  )  )  )  :op1-of ( and :arg1-of ( target :arg0 caliber :arg1-of practice :mod small )  :op2 pistol )
close :arg0 ( regime :mod ( thing :name ( name :op1 nazi )  )  )  :arg1 club :time ( date-entity :year 1937 )
and :mod again :op1 ( launch :arg0 ( man :arg0-of ( found :arg1 19 :arg2 club :mod young :time then )  )  :arg1 ( guest :mod-of house )  :arg2 ( gun :mod new :mod-of club )  :time ( date-entity :mod 30th :month 4 :year 1964 )  )
and :op1 ( find :arg0 ( and :arg0-of ( shoot-down :arg1 company )  :arg0-of ( lead :arg1 club :time ( early :op1 ( temporal-quantity :arg1-of tough :unit year )  )  )  :op1 ( person :arg0-of ( range :arg1 ( person :arg0-of ( have-org-role :arg2 officer )  )  )  :name ( name :op1 karl :op2 m√§rz )  )  :op2 ( person :name ( name :op1 adolf :op2 ried )  )  :purpose-of then :purpose-of ( main :mod-of objective )  )  :arg1 ( pub :mod club )  )
club :arg0-of ( start :arg1 ( shoot-down :arg0 autumn :arg1 ( compete :arg0 team :arg1 house :duration 2 :medium guest :mod another )  )  :time ( date-entity :year 1965 )  :time early )
follow :arg0 ( all :mod-of way )  :arg1 year :arg2-of ( local :arg1 ( premier :mod-of league )  :arg1-of ( shoot-down :arg0-of ( range :arg1 ( sport :arg1-of ( organize :arg2 ( team :quant 7 )  )  )  :location ability )  :arg1-of target )  )
and :op1 ( roll :arg0 ( record :mod club )  :arg1 ( round :mod magic :quant 380 )  :time ( year :op1 ( date-entity :year 1980 )  :poss-of time )  )  :op2 ( person :name ( name :op1 rudi :op2 meier )  :quant every )
increase :arg0 ( thing :arg1-of ( achieve :arg0 ( person :arg0-of ( have-org-role :arg2 ( member :arg1-of activity )  )  )  )  )  :arg1 ( number :quant-of ( person :arg0-of ( have-org-role :arg2 member )  )  )  :mod just
require :arg1 ( thing :arg0-of ( manage :arg1 club :arg2 ( time :time-of ( decide :arg0 ( country :mod-of hotel )  :arg1 future :arg1-of ( lead :arg2 ( room :location-of ( h√§rtei :mod new )  )  )  :arg2 basement :arg4 home )  )  )  :arg0-of ( modern :arg1 gun :arg2 club )  :arg1-of ( meet :arg0 ( club :mod once :mod-of pub )  )  :polarity - )
issue :arg0 ( thing :name ( name :op1 father :op2 strasser )  )  :arg1 ( bless :arg0 ( date-entity :year 1988 )  :arg1 church )  :purpose ( room :mod gun :mod new )  :time ( after :op1 ( date-entity :year 2700 )  :op2 ( work :arg1-of ( hard :arg2 ( thing :name ( name :op1 8th :op2 may )  )  )  :duration ( temporal-quantity :unit hour )  )  )
doubt :arg0 ( date-entity :year 1991 )  :arg1 ( compete :arg1 ( highlight :time ( history :compared-to-of ( great :degree ( most :quant 1 )  )  :topic club )  )  :arg1-of shoot-down :arg1-of local :arg1-of ( link :arg2 ( consecration :mod formal )  :manner ( shoot-down :arg1 ( flag :mod new )  :time 7 )  )  :mod 44th )
and :arg2-of ( celebrate :arg0 ( club :arg1-of ( shoot-down :op1-of ( date-entity :year 1994 )  )  )  :arg1 ( anniversary :mod 30th )  )  :op1 23rd :op2 ( 24th :mod-of 4 )
found :arg1 ( group :mod cannon )  :time ( date-entity :year 1995 )
head :arg0 ( person :name ( name :op1 josef :op2 schmalzl )  )  :arg1 ( division :mod cannon )
and :op1 ( challenge :arg1 whole :arg1-of ( meet :arg0 ( person :arg1-of organize :mod ( state :name ( name :op1 bavaria )  )  )  :time ( date-entity :year 2005 )  )  :op1-of huge )  :op2 club
dedicate :arg0 ( person :arg0-of ( have-org-role :arg1 club :arg2 member )  )  :arg1 ( work :arg1-of voluntary :arg2 ( state :mod art )  )  :purpose ( modernize :arg0 ( temporal-quantity :op1-of many :unit hour )  :arg1 ( room :op1-of ( and :op2 ( facility :mod ( shoot-down :arg0 ( thing :mod-of courtyard :name ( name :op1 berngau )  )  :arg1 ( year :mod last )  )  )  )  )  )
head :arg1 head :arg2-of ( go :arg0 ( team :mod eleven )  )
impress :arg1 ( thing :arg1-of ( achieve :arg0 ( club :arg1-of shoot-down )  )  :mod sport )  :time also
and :arg0-of ( total :arg1 ( team :part-of ( compete :arg2 ( old :mod-of timer )  :op1-of current )  )  :arg1-of ( take :arg0 1 )  )  :op1 ( team :mod ( rifle :mod air )  :quant 6 )  :op2 ( team :mod gun :mod pellet )  :op3 ( team :arg0-of ( target :arg1 sport :arg2 eleven )  :mod pistol )  :op4 ( team :mod youth )  :op5 ( team :quant 2 )
comprise :arg0 ( league :mod region )  :arg1 ( person :name ( name :op1 lars :op2 ellrich )  :op1-of ( slash :op2 14 )  )  :arg2 ( and :arg0-of ( promote :arg1 team :arg2 number :arg2-of ( shoot-down :arg1 ( league :location ( country :name ( name :op1 anb )  )  )  )  :time ( date-entity :year 2013 )  :time 1 )  :op1 ( person :name ( name :op1 katharina :op2 ellrich )  )  :op2 ( person :arg2-of ( local :arg1 ( premier :mod-of ( league :arg1-of ( high :degree most )  )  )  )  :name ( name :op1 steffi :op2 grad )  )  :op3 ( person :name ( name :op1 kerstin :op2 kellermann )  )  )
comprise :arg1 ( person :name ( name :op1 verena :op2 moosburger )  )  :arg2 ( and :arg0-of ( promote :arg1 team :arg2 ( league :arg1-of ( local :arg2 north_korea )  )  )  :op1 ( person :name ( name :op1 alexandra :op2 meier )  )  :op2 ( person :name ( name :op1 eva :op2 schuhmann )  )  :op3 ( person :name ( name :op1 tobias :op2 graml )  )  )  :arg2-of ( local :arg1 ( premier :mod-of league )  )
and :example-of event :op1 ( person :name ( name :op1 fasching )  :op2-of ( and :location-of such :op1 ( shoot-down :arg1 addition :arg2 ( all :quant-of ( tradition :mod club )  )  :op1-of also )  )  )  :op2 ( excursion :mod club )  :op3 ( celebration :mod ( festival :name ( name :op1 christmas )  :wiki christmas )  )
attend :arg0 shooter :arg1 ( festival :mod community )  :mod also :op1-of ( and :op2 parish )
crash :arg0 ( person :arg1-of ( return :arg2 track )  :name ( name :op1 stewart )  :wiki jon_stewart )
halfway :mod-of through :op1-of ( over :domain ( he :arg0-of ( motor :arg1 race :arg2 ( city :name ( name :op1 atlanta )  :wiki atlanta )  )  :arg0-of ( end :arg1 ( return :arg0 ( person :name ( name :op1 tony )  )  :arg1 ( person :name ( name :op1 stewart )  :wiki jon_stewart )  :purpose-of track )  )  )  :mod little :mod only )
tire :arg0-of ( blow :arg2 ( end :arg1 night )  :manner lap :op1-of after )  :arg1 ( front :mod right :poss ( person :arg0-of ( hit :arg1 wall :purpose time )  :name ( name :op1 stewart )  :wiki jon_stewart )  )
report :arg0 ( person :arg2-of ( speak :manner-of ( exit :arg0 ( person :arg0-of ( drive :arg1 ( car :arg1-of batter )  :destination garage )  :name ( name :op1 stewart )  :wiki jon_stewart )  :op1-of and :time then )  )  )
contrast :arg1 race :arg2 ( focus :arg1 ( state :name ( name :op1 virginia )  :wiki virginia )  :arg1-of ( disappoint :arg0 team )  :arg1-of ( start :arg0 ( he :arg0-of ( have-org-role :arg1 ( country :name ( name :op1 chad )  :wiki chad )  :arg2 chief )  :arg0-of ( say :arg1 14 )  :poss-of johnston :poss-of crew )  :time now )  :arg2 ( city :name ( name :op1 richmond )  :wiki richmond,_virginia )  :op1-of next :op1-of weekend )
say :arg0 ( person :arg1-of ( finish :arg0 ( we :arg1-of ( wish :arg0 i )  )  )  :name ( name :op1 &quot; )  )  :arg1 ( and :arg1-of possible :op1 ( good :mod-of effort )  :op2 good )
hope :arg0 we :arg1 ( go :arg0 we )  :manner good :op2-of ( and :arg1-of possible :op1 ( city :name ( name :op1 richmond )  :wiki richmond,_virginia )  )
require :arg1 ( work :arg0 ( person :arg0-of ( go :arg1 into :arg4 wall :mod first :time ( early :mod-of sunday )  )  :name ( name :op1 stewart )  :wiki jon_stewart )  :arg1 car :arg2-of ( collide :arg0 he :arg1 race :arg1-of ( follow :arg0 night )  )  :mod ( right :mod-of side :mod-of of )  )
say :arg0 ( i :arg0-of ( hope :arg0-of ( finish :arg1 well )  :arg1 of :manner good )  :arg0-of ( work :arg1 out :arg1-of ( do :arg0 it :mod just :polarity - )  )  :arg0-of ( go :arg1 into :arg4 today )  )  :arg1 ( add :arg0 ( pretty :mod some )  )
crash :arg0 ( person :arg0-of ( leave :op1-of ( and :arg1-of ( ready :arg0 car )  :arg2-of ( pack :arg0 team :arg1 ( and :arg1-of haul )  )  )  )  :arg0-of ( load :arg1 onto )  :name ( name :op1 stewart )  :wiki jon_stewart )  :arg1 ( long :arg1 after :polarity - )
skip :arg0 ( person :name ( name :op1 stewart )  :wiki jon_stewart )  :arg1 ( race :purpose ( thing :name ( name :op1 nascar :op2 sprint :op3 cup )  )  :quant 3 )  :time ( after :op1 ( and :op1 ( kill :arg0 car :arg1 ( person :arg0-of drive :arg1-of ( strike :location ( race :location ( city :mod upstate :name ( name :op1 new :op2 york )  :wiki new_york_city )  :mod track :mod dirt )  )  :mod fellow )  )  )  )
or :arg0-of ( claim :arg1 spot :arg2 ( city :location-of ( race :mod next )  :name ( name :op1 richmond )  :wiki richmond,_virginia )  )  :op1 ( city :arg1-of ( win :arg1-of ( need :arg0 ( he :arg0-of ( decide :arg1 ( return :arg1 ( person :name ( name :op1 chase )  )  :time ( week :mod this )  :arg0 he )  )  )  )  :op1-of either )  :name ( name :op1 atlanta )  :wiki atlanta )
confront :arg0 ( person :name ( name :op1 stewart )  :wiki jon_stewart )  :arg1 ( step-in :arg1 race )  :arg2 ( investigate :arg1 ( 20 :quant-of ( temporal-quantity :quant-of old :unit year )  )  :arg2-of ( return :arg1 he :arg4 ( work :arg0 ( incident :arg1-of ( result :arg2 ( die :arg1 ( thing :name ( name :op1 ward :op2 jr )  )  )  )  :mod tragic )  )  )  )  :purpose-of track
say :arg0 authority :arg1 ( last :arg1 ( probe :arg1 ( cause :arg1 ( crash :arg0 friday )  )  )  :arg2 ( temporal-quantity :mod another :quant 2 :unit week )  )
face :arg0 ( person :name ( name :op1 stewart )  :wiki jon_stewart )  :arg1 ( charge :arg0 - :arg1 decide )
receive :arg0 ( champion :mod time :mod 3 )  :arg1 ( cheer-on :mod big )  :time ( introduce :arg1 he :time ( before :op1 race )  )
run :arg0 ( person :arg0-of ( high :arg1 ( early :time-of race )  :arg2 ( 12th :mod-of spot )  :compared-to fourth )  :arg2-of ( start :arg0 10 )  :name ( name :op1 stewart )  :wiki jon_stewart )  :arg1 top
lap :arg1-of ( restart :arg2 - :time after :time then )
and :arg1-of ( get :arg0 ( machine :arg0-of ( send :arg1 ( car :mod both )  :arg2 2 :prep-against wall )  )  )  :op1 ( come :arg1 ( turn :arg1 18 )  :arg1-of loose )  :op2 ( bang :arg1 ( person :name ( name :op1 stewart )  :wiki jon_stewart )  )
contrast :arg2 ( drop :arg0 ( person :arg0-of ( carry :arg1 21st )  :name ( name :op1 stewart )  :wiki jon_stewart )  :direction back )
want :arg0 ( youth :mod ( crazy :arg1 dance )  )
and :arg0-of ( try :arg1 ( right :arg1 ( person :name ( name :op1 lena )  )  )  :mod just )  :op1 ( person :arg0-of manage :name ( name :op1 laura )  )  :op2 ( person :name ( name :op1 lisa )  )  :op3 ( person :name ( name :op1 bettina )  )  :op4 ( person :arg0-of ( look :arg1 ( person :arg0-of ( have-org-role :arg2 member )  :mod new )  :direction forward )  :name ( name :op1 emma )  )  :op5 ( person :name ( name :op1 lisa :op2 neitzel )  )
run :arg0 ( group :mod jazz )  :arg1 ( thing :name ( name :op1 tv :op2 jahn )  )  :arg1-of ( resemble :arg0 ( prep :mod-of school )  :arg2 ( club :mod other :quant many )  )  :arg2 ( class :arg1-of ( long :arg2 ( temporal-quantity :unit day )  )  )  :mod also
see :arg0 ( group :quant some )  :arg1 ( decline :arg1 ( person :arg0-of attend )  :arg1-of sharp )  :time ( after :op1 ( holiday :mod summer )  )
fun :mod now :quant ( lot :op3-of ( and :op1 ( look :arg0 they :manner eagerly )  :op2 ( healthy :domain ( sport :beneficiary-of youth )  )  )  )
and :arg1-of ( give :arg2 ( person :arg1-of ( spirit :arg2-of ( form :arg1 ( and :arg1-of modern :arg2-of ( dance :arg1 former )  :op1 jazz )  :arg1-of dance )  )  :name ( name :op1 there )  )  :arg2-of ( dance :arg1 group )  :arg2-of ( modern :arg1 ( child :arg1-of 9 :mod ( only :mod-of now )  :mod both )  )  )  :op1 jazz
tell :arg0 20 :arg1 ( 6 :quant-of ( temporal-quantity :quant 15 :quant 3 :unit year )  )  :arg2 there :mod old :time 8 :time twelv
say :arg0 she :arg1 ( thing :arg1-of ( differ :arg0 ( we :arg0-of ( dance :arg1 ( possible :arg1 fun )  )  :arg1-of complete )  :arg1-of ( choreograph :arg0 lot )  :degree more )  :arg1-of ( activity :arg1-of ( participate :arg0 person :degree more )  )  :extent whole )
and :op1 ( come :arg0 ( anyone :arg1-of ( interest :arg2 ( dance :arg1 5 )  )  )  :arg1 ( person :arg0-of ( run :arg1 session :arg2 thursday )  :name ( name :op1 hotel :op2 meyer )  )  :mod along :op1-of ( and :arg1-of possible :op2 ( go :arg1 friday )  :op3 ( thing :arg2-of ( obligate :arg1 ( join :arg0 and :arg1 6 )  )  :polarity - )  :op4 ( until :quant 5 )  :op5 6 :op6 30 :op7 pm :op8 ( dance :arg1 room )  :op9 9 )  )
explain :arg0 ( program :arg1-of warm )  :arg1-of ( start :arg0 ( usual :arg1-of train )  )  :arg1-of train
practice :arg0 we :arg1 ( choreograph :arg1-of differ )  :time then
and :arg0-of ( do :arg1 ( make :arg0 such :arg1 ( open :arg1 ( style :arg1 - :quant many )  )  )  :instrument way )  :op1 hard :op2 fast
and :arg3-of ( range :arg1 ( element :arg1-of ( work :arg2 ( thing :name ( name :op1 jazz :op2 dance )  )  )  )  :arg4 ( and :op1 folklore :op2 classics :op3 sport )  )  :op1 acrobatic
and :example ( socialize :arg1 ( bad :arg1 either :polarity - )  )
tell :arg0 ( person :name ( name :op1 &quot; )  )  :arg1 ( go :arg0 ( we :arg0-of ( eat :arg1 ( watch :arg0-of ( dance :arg1 ( we :arg0-of ( sleep :arg1 over :mod also )  :arg0-of ( dance :arg1 hall )  )  )  :arg1 film :op1-of and )  )  )  :arg1 out :arg4 sometimes )  :time before :time now
possible :arg1 ( and :op1 ( share :arg1 ( hobby :arg1-of wonderful )  )  :op2 ( do :arg0 ( you :arg1-of ( have-rel-role :arg0 person :arg2 friend )  )  :arg1 ( deal :arg1 group :mod great )  :arg2 ( develop :arg1 motorcycle )  :mod also )  )
possible :arg1 ( come :arg1 ( you :arg0-of ( try :arg1 ( group :arg2-of ( offer :arg0 ( thing :name ( name :op1 tv :op2 jahn )  )  :arg1 - )  :mod other )  :op2-of ( and :op1 ( thing :domain jazz )  )  )  )  :mod also :mod along :time then )
welcome :arg1 ( and :op1 pop :op2 ( go :arg0 during :arg4 ( ' :mod wednesday )  )  :op3 ( choose :arg0 they :arg1 child :arg1-of hop :arg1-of ( dance :arg0 class )  :arg1-of possible :op1-of from :op1-of ( slash :op2 jazz )  :op1-of video :op1-of ( and :op2 ( dance :arg1 clip )  :op3 hip )  :op4-of ( and :op1 child :op2 youngster :op3 always )  )  )
dance :arg1-of ( teach :arg2 ( person :name ( name :op1 francisco :op2 afonso )  )  )
welcome :arg1 couple :arg2 ( attend :arg0 ( and :op1 monday :op2 wednesday )  :arg1 ( evening :arg1-of ( dance :arg0 adult )  )  )
and :op1 ( slow :arg0 ( you :arg1-of ( interest :arg2 discofox )  )  :arg1 ( or :op1 ( waltz :arg1 ( thing :name ( name :op1 viennese )  )  )  :op2 rumba :op3 tango )  )  :op2 drop :op3 ( take :arg1 waltz )
protest :arg0 ( country :mod-of prison :name ( name :op1 bulgaria )  :wiki bulgaria )  :arg1 officer
hold :arg0 ( person :arg0-of ( work :location prison :source ( across :op1 ( country :name ( name :op1 bulgaria )  :wiki bulgaria )  )  )  :mod ( country :location-of ( organization :name ( name :op1 justice :op2 ministry )  )  :name ( name :op1 sofia )  )  :poss-of hundred )  :arg1 ( protest :arg1 capital :mod nation )  :location front
reiterate :arg0 ( they :arg0-of ( demonstrate :manner peaceful )  )  :arg1 ( call :arg0 ( condition :arg0-of ( restore :arg1-of ( change :time recent )  )  :arg0-of work :mod old )  :arg1 they )
discuss :arg0 ( person :arg0-of ( have-org-role :arg2 ( minister :mod justice )  )  :mod interim :name ( name :op1 hristo :op2 ivanov )  )  :arg1 ( request :arg1 ( salary :arg1-of high )  :arg2-of ( list :mod also )  )
protest :arg0 ( person :arg0-of ( demand :arg1 ( return :arg1 ( temporal-quantity :arg0-of work :mod new :unit hour )  :arg4 ( shift :duration ( temporal-quantity :quant 24 :unit hour )  :mod old )  )  )  :arg0-of ( have-org-role :arg2 officer )  )  :arg1 symbolically :duration ( temporal-quantity :unit month )
inform :arg0 ( organization :name ( name :op1 bnr )  )  :arg1 ( reach :arg1 ( agree :arg1 prison :op3-of ( and :arg1-of ( meet :op1-of despite )  :op1 ( person :arg0-of ( have-org-role :arg1 ( organization :name ( name :op1 bulgarian :op2 national :op3 radio )  )  :arg2 officer )  :arg1-of ( union :arg0 - )  )  :op2 ( person :arg0-of ( represent :arg1 ( organization :name ( name :op1 justice :op2 ministry )  )  )  )  )  )  )
tell :arg0 ( head :arg0 ( person :mod penalti :name ( name :op1 rosen :op2 zhelyazkov )  )  :arg1 ( directorate :mod chief )  :arg2 execution )  :arg1 ( ongo :domain negotiation )  :arg2 ( organization :name ( name :op1 bnr )  )
expect :arg1 ( join :arg0 ( person :arg0-of ( have-org-role :arg1 ( organization :name ( name :op1 trade :op2 union :op3 federation )  :part-of employe )  :arg2 member )  :location ( ministry :mod interior )  )  :arg1 ( union :arg1 ( person :arg0-of ( work :mod prison )  )  )  :arg2 protest )
abandon :arg0 ( army :mod ( country :name ( name :op1 ukraine )  :wiki ukraine )  )  :arg1 ( airport :mod ( country :name ( name :op1 luhansk )  )  )
gain :arg0 ( person :arg0-of fight :mod ( country :mod-of pro :name ( name :op1 russia )  :wiki russia )  )  :arg1 ground :location ( country :name ( name :op1 ukraine )  :wiki ukraine )  :mod again
division :arg1-of ( participate :arg0 ( country :mod-of ( airport :arg1-of abandon )  :name ( name :op1 luhansk )  )  :arg1-of ( say :arg0 ( fight :arg0 ( country :mod-of ( army :arg0-of today )  :name ( name :op1 ukraine )  :wiki ukraine )  :arg1 tank :arg2-of ( follow :arg0 monday :arg1 ( rebel :arg0 stronghold )  )  :mod heavy )  :mod also )  )  :mod ( country :name ( name :op1 russia )  :wiki russia )
announce :arg0 army :arg1 ( kill :arg1 soldier :time ( past :op1 ( temporal-quantity :quant 24 :unit hour )  )  )  :time ( time :arg1-of ( same :arg0 7 )  )
and :op1 ( take :arg0 ( person :name ( name :op1 petro :op2 poroschenko )  )  :arg1 ( action :arg1-of appropriate )  :arg1-of personal :time previous )  :op2 ( army :arg0-of ( suffer :arg1 ( defeat :manner heavy )  )  )  :op3 ( announce :arg0 ( have-org-role :arg0-of ( fight :arg1 separatist )  :arg1 ( country :name ( name :op1 ukraine )  :wiki ukraine )  :arg2 president )  :arg1 change )  :op4 ( change :arg1 ( leadership :arg1-of detail :mod senior :poss army )  )
pro :mod-of ( separatist :arg0-of ( shoot :arg1 aircraft )  :mod ( country :name ( name :op1 russia )  :wiki russia )  )
say :arg0 ( separatist :arg0-of ( fight :arg1 ( troop :mod ( government-organization :arg0-of ( govern :arg1 ( country :name ( name :op1 ukraine )  :wiki ukraine )  )  )  )  )  :mod ( country :name ( name :op1 russia )  :wiki russia )  :mod pro )  :arg1 ( shoot :arg0 they :arg1 ( and :op1 warplane :op2 ( helicopter :mod military :quant 2 )  )  :mod ( again :time once )  )
say :arg0 ( agency :mod ( country :name ( name :op1 russia )  :wiki russia )  )  :arg1 and :arg2 ( announce :arg0 ( force :mod ( person :arg0-of rebel )  )  :arg1 ( believe :arg1 ( or :op1 ( injure :arg1 ( soldier :quant ( around :op1 100 )  )  )  :op2 ( kill :arg1 ( fight :location ( region :mod ( country :name ( name :op1 donezk )  )  )  )  )  )  :mod also )  :location monday )
sink :arg0 coastguard :arg1 ship
sink :arg0 ( country :mod-of coastguard :name ( name :op1 ukraine )  :poss-of boat :wiki ukraine )  :arg1 2 :arg2 of :time ( time :mod ( that :arg1-of ( claim :arg0 ( person :arg0-of ( rebel :arg1 sea )  )  :mod also )  )  :mod they )
confirm :arg0 ( police :location ( border :arg1 ( country :name ( name :op1 ukraine )  :wiki ukraine )  )  )  :arg1 ( come :arg0 ( ship :quant 2 )  :arg1 ( fire :arg2 sunday )  :manner ( near :arg1 ( town :mod harbor :name ( country :name ( name :op1 mariupol )  )  )  )  )
say :arg0 ( person :arg0-of ( have-org-role :arg2 spokesperson )  :arg0-of ( speak :arg2 station )  )  :arg1 ( injure :arg1 ( person :arg0-of ( guard :arg1 border )  :quant 7 )  :time attack )  :arg2 ( city :name ( name :op1 kiev )  :wiki kiev )
miss :arg0 ( person :arg0-of ( have-org-role :arg1 crew :arg2 member )  :quant 2 )
blame :arg0 ( media :arg1-of local )  :arg1 ( country :name ( name :op1 russia )  :wiki russia )  :arg2 incident
and :arg1-of ( control :arg0 ( town :quant several )  :arg1-of ( take :arg0 ( they :poss-of ( addition :topic this )  )  :arg1-of ( report :arg0 separatist )  )  :location ( region :mod ( country :name ( name :op1 donezk )  )  )  )  :op1 village
offense :arg0 ( country :name ( name :op1 minsk )  )  :mod-of diplomacy
meet :arg0 ( group :arg1-of ( contract :arg0 ( country :name ( name :op1 ukraine )  :wiki ukraine )  )  )  :location ( city :location ( thing :name ( name :op1 belorussian )  )  :location ( country :name ( name :op1 minsk )  )  :mod capital )  :time today
recommend :arg1 ( take :arg0 ( and :arg0-of ( represent :arg1 ( country :arg1-of ( have-org-role :arg0 ( separatist :source ( country :name ( name :op1 east :op2 ukraine )  )  )  :arg2 ambassador )  :name ( name :op1 ukraine )  :wiki ukraine )  )  :op1 ( country :name ( name :op1 russia )  :wiki russia )  :op2 ( organization :name ( name :op1 osce )  :wiki organization_for_security_and_co-operation_in_europe )  )  )
use :arg0 ( party :quant all )  :arg1 ( appear :arg0 ( meet :op1-of prior )  :arg1 party )  :arg2 ( mean :arg2 ( announce :arg1 demand :arg1-of public )  )
want :arg0 ( military :name ( name :op1 nato )  :wiki nato )  :arg1 ( break-up :arg1 ( agree :arg2 ( country :name ( name :op1 russia )  :wiki russia )  )  )  :polarity -
respond :arg1 ( crisis :arg0-of ( deploy :arg1-of plan :arg1-of ( result :arg2 ( break-up :arg0 ( military :name ( name :op1 nato )  :wiki nato )  :arg1 ( agree :arg2 ( country :name ( name :op1 russia )  :wiki russia )  )  :polarity - )  )  :arg2 ( continent :name ( name :op1 europe )  :wiki europe )  )  :mod ( country :name ( name :op1 ukraine )  :wiki ukraine )  )
say :arg0 ( person :arg0-of ( have-org-role :arg1 ( military :name ( name :op1 nato )  :wiki nato )  :arg2 ( secretary :mod general )  )  :name ( name :op1 anders :op2 fogh :op3 rasmussen )  :wiki anders_fogh_rasmussen )  :arg1 ( adhere :arg0 ( military :name ( name :op1 nato )  :wiki nato )  :arg1 ( agree :arg0 ( organization :name ( name :op1 nato-russia :op2 council )  )  :arg1 ( form :arg1 monday )  :time ( date-entity :year 1997 )  )  )  :location ( city :name ( name :op1 brussels )  :wiki brussels )
breach :arg0 ( military :arg0-of ( accuse :arg1 ( country :name ( name :op1 russia )  :wiki russia )  )  :arg0-of ( head :arg1 nevertheles )  :name ( name :op1 nato )  :wiki nato )  :arg1 flagrant :arg1-of agree
say :arg0 ( person :arg1-of ( partner :arg0 ( military :name ( name :op1 nato )  :wiki nato )  :arg1-of ( consider :arg0 ( country :name ( name :op1 russia )  :wiki russia )  :polarity - )  :arg2-of ( face :arg0 we :arg1 reality :time today :time must )  )  :name ( name :op1 rasmussen )  :wiki anders_fogh_rasmussen )  :arg1 that
state :arg1 ( thing :arg1-of reveal :arg1-of ( consider :arg0 ( they :arg1-of ( have-rel-role :arg0 ( country :mod-of side :name ( name :op1 russia )  :wiki russia )  :arg2 enemy )  )  :mod that )  :op2-of ( and :op1 ( document :arg1 from )  )  )
strengthen :arg1 ( presence :mod ( military :name ( name :op1 nato )  :wiki nato )  )
announce :arg0 ( person :name ( name :op1 rasmussen )  :wiki anders_fogh_rasmussen )  :arg1 ( want :arg0 he :arg1 ( strengthen :arg1 ( presence :location ( continent :name ( name :op1 europe )  :wiki europe )  :poss ( military :name ( name :op1 nato )  :wiki nato )  )  :arg0 he )  )  :mod also
cause :arg0 ( military :name ( name :op1 nato )  :poss-of ( visible :mod more )  :poss-of presence :wiki nato )  :arg1 ( need :arg0 ( we :arg0-of ( ensure :arg2 that )  )  :arg1 ( explain :arg0 ( person :arg1-of ( meet :arg0 ( military :name ( name :op1 nato )  :poss ( country :arg0-of decide :name ( name :op1 wales )  :poss-of ( action :mod-of plan )  :wiki wales )  :poss-of summit :wiki nato )  )  :name ( name :op1 rasmussen )  :wiki anders_fogh_rasmussen )  :arg1 ( city :name ( name :op1 brussels )  :poss-of monday :wiki brussels )  )  )
agree :arg0 ( and :op1 ( city :name ( name :op1 kiev )  :wiki kiev )  :op2 ( city :name ( name :op1 moscow )  :wiki moscow )  )  :arg1 new :arg2 ( talk :arg1 gas )
say :arg0 ( data :mod official )  :arg1 ( agree :arg0 ( and :op1 ( country :name ( name :op1 russia )  :wiki russia )  )  :arg1 new :arg2 ( talk :arg1 ( settle :arg0 ( country :name ( name :op1 ukraine )  :wiki ukraine )  :arg1 ( dispute :arg0 gas )  )  )  )
say :arg0 ( person :arg0-of ( have-org-role :arg1 ( country :name ( name :op1 russia )  :wiki russia )  :arg2 ( minister :mod energy )  :mod next )  :name ( name :op1 alexander :op2 nowak )  )  :arg1 ( schedule :arg1 ( take :arg0 negotiate :arg1 place :time saturday )  )  :location monday
talk :arg0 ( organization :arg1-of decide :name ( name :op1 european :op2 union )  :wiki european_union )  :arg2-of ( send :arg0 they :arg1 ( represent :arg1 yet )  :mod also )
receive :arg0 ( country :name ( name :op1 ukraine )  :wiki ukraine )  :arg1 fuel :arg2 ( country :name ( name :op1 russia )  :wiki russia )  :polarity - :purpose ( dispute :arg1 due :arg2 ( price :arg0 ( temporal-quantity :unit week )  :arg1 gas )  )
arbitrate :arg0 ( side :quant 2 )  :arg1 ( person :arg0-of ( have-org-role :arg1 ( organization :name ( name :op1 eu )  :wiki european_union )  :arg2 ( commissioner :mod energy )  )  :name ( name :op1 g√ºnther :op2 oettinger )  )  :time recent
warn :arg0 ( country :name ( name :op1 ukraine )  :wiki ukraine )  :arg1 ( suspend :arg0 ( country :name ( name :op1 russia )  :wiki russia )  :arg1 ( supply :arg2 gas )  :arg1-of possible :arg2 ( continent :name ( name :op1 europe )  :wiki europe )  :mod also )
purchase :arg0 ( continent :name ( name :op1 europe )  :wiki europe )  :arg1 ( gas :arg1-of ( natural :purpose ( flow :arg1 around :path ( country :name ( name :op1 ukraine )  :wiki ukraine )  :topic-of ( proportion :mod large )  )  )  )  :arg2 ( source :mod ( country :name ( name :op1 russia )  :wiki russia )  )
mean :arg1 ( let :arg1 ( clear :arg1 ( toll :arg1 ( will :arg1 ( come :arg1 ( put :arg1 foot )  )  )  )  )  )
make :arg0 ( chancellor :arg2-of have-org-role )  :arg1 clear :mod ( again :mod once )
charter :arg0-of ( explain :arg1 ( detail :mod complex :quant all )  :time still )  :polarity -
oppose :arg0 ( organization :name ( name :op1 cdu )  )  :arg1 ( toll :manner-of ( increase :arg1 ( angry :mod-of ( organization :name ( name :op1 csu )  )  )  )  )  :manner stiff
follow :arg1 ( put :arg0 ( person :arg0-of ( have-org-role :arg1 ( country :name ( name :op1 germany )  :wiki germany )  :arg2 chancellor )  :name ( name :op1 angela :op2 merkel )  :wiki angela_merkel )  :arg1 foot :arg2 ( regard :arg1 ( introduce :arg1 toll )  )  :direction down )  :arg2 ( oppose :arg0 ( organization :name ( name :op1 cdu )  )  :arg1-of persist )
say :arg0 ( we :arg1-of ( agree :arg0 coalition :arg2 ( committe :mod top )  :op1-of ( and :arg2-of ( mean :arg1 ( mention :arg0 they :arg1-of ( let :arg2 ' )  :arg1-of ( clear :arg0 crystal )  )  )  :op2 party )  )  )  :arg1 ( follow :arg0 monday :arg1 conference :arg2 ( cdu :mod-of party )  )  :arg2-of ( lead :arg0 they :arg1 ( city :name ( name :op1 berlin )  :wiki berlin )  )
contrast :arg2 ( establish :arg0 ( person :name ( name :op1 merkel )  )  :arg1 ( model :arg1-of ( detail :arg0 - )  )  :duration time )
mention :arg0 parameter :arg1 ( black :arg0 certain :arg1 ( program :arg1-of ( govern :arg0 government-organization )  :mod red )  )
suggest :arg0 ( person :arg0-of ( have-org-role :arg1 of :arg2 minister )  :name ( name :op1 the )  )  :arg1 ( thing :op1-of ( and :op2 ( continue :arg0 we :arg1 ( work :arg1 it )  :arg1-of transport )  )  )
thing :arg0-of ( insist :arg1 ( object :arg1 ( toll :arg1 ( street :quant all )  )  )  )  :name ( name :op1 nw-cdu )
stress :arg0 ( person :name ( name :op1 merkel )  )  :arg1 ( participate :arg0 ( person :arg0-of ( have-org-role :arg1 finance :arg2 minister :mod even )  :name ( name :op1 wolfgang :op2 sch√§uble )  )  :arg1 ( consult :arg2 ( bill :arg1-of ( draft :arg0 ( organization :name ( name :op1 cdu )  )  )  )  )  :manner constructively )
and :op1 ( person :arg2-of ( speak :arg0 he :arg1 ( and :op1 ( develop :arg0 such :arg1 broadband )  )  :time topic )  :name ( name :op1 dobrindt )  )  :op2 ( capitalize :arg1 more :arg2-of ( possible :arg1 ( thing :mod further )  )  )  :op3 ( invest :arg1 more :arg2 infrastructure )
state :arg0 ( person :arg0-of ( let :arg1 ( article :arg0-of ( return :arg1 ( toll :arg0 there :arg1 after )  :arg1-of ( invest :arg0 ( person :arg1-of ( elect :arg0 ( he :arg0-of ( test :arg1 it )  :arg0-of ( own :arg1 ( concept :mod house )  )  )  :time ( date-entity :year 2017 )  )  :arg2-of ( compensate :arg0 it :arg1 motorway )  )  )  )  )  :arg2-of ( special :arg1 about )  :condition ( on :op1 sunday )  :condition nothing )  :arg0-of ( comment :arg1-of ( pass :arg0 ( country :name ( name :op1 &quot; )  )  )  )  :name ( name :op1 &quot; )  )  :arg1 that
warn :arg0 ( person :arg0-of ( have-org-role :arg2 minister )  :name ( name :op1 horst :op2 seehofer )  )  :arg1 ( develop :arg0 ( person :arg0-of ( lead :arg1 ( organization :name ( name :op1 csu )  )  )  )  :arg1 ( concept :arg1-of charge :mod toll )  :location cabinet )  :arg2-of result
reinforce :arg0 ( person :name ( name :op1 armin :op2 laschet )  )  :arg1 ( object :arg0 ( person :arg0-of ( lead :arg1 ( organization :name ( name :op1 cdu )  )  )  :mod deputy )  )
say :arg0 westphalia :arg1 ( and :arg0-of ( get :arg1 ( toll :arg0 road :arg1 ( state :arg0-of ( have-org-role :arg1 rhine :arg2 chairman )  )  :arg2 north_korea )  )  :arg1-of ( agree :arg0 coalition :arg2 ( assume :arg0 nev :arg1 that )  )  :op1 district :quant all )
announce :arg0 ( person :name ( name :op1 seehofer )  )  :arg1 ( discuss :arg0 he :arg1 ( topic :mod this )  :mod again )  :time now :topic-of ( fact :arg0-of ( sign :mod important )  )
plan :arg1-of ( oppose :arg1-of ( receive :arg0 ( and :op1 ( country :location-of ( associate :arg0 ( organization :name ( name :op1 cdu )  )  :arg1 state )  :name ( name :op1 baden-w√ºrttemberg )  )  :op2 rhineland :op3 palatinate )  :mod also )  )
toll :arg0-of ( impact :arg1 ( traffic :arg0-of ( neighbor :arg1 state :arg1-of concern )  :mod scale :mod ( border :arg1 this )  :mod small )  :mod negative )
demand :arg0 ( person :name ( name :op1 seehofer )  )  :arg1 ( loyal :arg2 coalition )  :arg1-of ( follow :arg2 ( criticize :arg1 ( toll :arg0 ( person :arg0-of ( have-org-role :arg1 ( organization :name ( name :op1 cdu )  )  :arg2 member )  )  )  )  )
argue :arg1 ( union :arg1 lefti )  :arg2-of ( give :arg1 ( fail :arg2-of ( consider :arg0 ( person :name ( name :op1 die :op2 linke )  )  :arg1 plan )  )  )
tell :arg0 ( person :arg0-of ( lead :arg1 ( organization :name ( name :op1 &quot; )  :op1-of zeitung )  )  :arg1-of ( mess-up :arg2 toll )  :name ( name :op1 &quot; )  )  :arg1 monday :arg2 newspaper :time party :time dead
obligate :arg1 ( country :mod-of ( street :quant all )  :name ( name :op1 germany )  :wiki germany )  :arg2 ( thing :arg1-of ( want :arg0 ( person :arg1-of ( fail :arg1-of ( have-org-role :arg2 minister )  :arg1-of ( fail :arg0 toll )  :arg2 ( label :arg0 toll :arg2 ( of :mod-of ( date-entity :year 2016 )  )  )  )  :name ( name :op1 &quot; )  )  :arg0-of introduce )  )
say :arg0 ( agree :arg0 - :arg1 coalition :arg1-of ( charge :arg1-of ( face :arg0 ( person :arg0-of ( own :arg1 car )  :location ( country :name ( name :op1 germany )  :wiki germany )  )  )  :mod additional )  )
recommend :arg1 ( offset :arg1 ( tax :arg1 road )  :manner toll )  :concession-of such
say :arg0 ( law :poss ( organization :name ( name :op1 eu )  :wiki european_union )  )  :arg1 ( disadvantage :arg0 model :arg1 ( person :arg0-of drive :mod foreign )  :polarity - )  :arg2 nationality
misdiagnose :arg1 ( disord :mod genetic )  :frequency often
say :arg0 ( woman :mod ( country :name ( name :op1 britain )  :wiki united_kingdom )  )  :arg1 ( spend :arg0 she :arg1 ( think :arg1 ( die :arg0 ( temporal-quantity :op1-of many :unit year )  :time ( after :op1 misdiagnosi )  )  )  )
diagnose :arg0 only :arg1 ( disease :mod another )  :op1-of ( after :time-of ( live :arg0 ( she :arg1-of ( believe :arg0 ( person :arg0-of ( spend :arg1 ( life :mod teenage )  :degree most )  :name ( name :op1 karin :op2 rodgers )  )  )  )  :purpose-of ( temporal-quantity :unit year )  )  )
and :op1 she :op2 ( thing :mod-of ( disease :mod actual )  :name ( name :op1 charcot-marie-tooth )  )  :op2-of ( outside :location-of ( damage :arg0 group :arg1 nerve )  :op1 ( brain :part ( disorder :arg1-of inherit )  )  )  :op3 spine
say :arg0 ( country :mod ( thing :name ( name :op1 charity :op2 cmt )  )  :name ( name :op1 uk )  :wiki united_kingdom )  :arg1 ( problem :arg1-of ( cause :arg0 ( know :arg1 little :arg2 condition )  )  :domain misdiagnosi :mod common :prep-among person )
think :arg1 ( person :location ( country :name ( name :op1 uk )  :wiki united_kingdom )  :op1-of ( and :op2 ( cause :arg0 such :arg1 ( symptom :mod motorcycle )  :arg1-of possible )  :op3 ( weak :arg1 muscle )  :op4 ( gait :mod awkward )  :op5 ( toe :arg1 ( curl :arg1 about )  )  )  )
mean :arg2 ( possible :arg1 ( experience :arg0 sufferer :arg1 ( or :op1 pain )  :mod also :op1-of ( and :op2 numbnes :op3 ( incurable :domain ( condition :arg1-of ( progressive :op1-of and )  )  )  )  )  )  :mod-of ( symptom :arg1-of ( bad :arg2 time )  )
impression :arg0 ( she :arg2-of ( suffer :arg0 she :arg1 ataxia :domain-of ( league :name ( name :op1 fa )  :wiki the_football_association )  :domain-of condition )  )  :arg1 ( poor :degree very )  :arg2 13
think :arg0 ( person :name ( name :op1 rodgers )  )  :arg1 ( she :arg0-of ( bind :arg1 wheelchair :arg3 time )  :arg0-of ( reach :arg1 30 :op1-of ( before :op1-of and )  )  )  :op1-of 18
say :arg0 ( person :arg0-of ( have-rel-role :arg1 ( i :arg0-of ( do :arg1 ( thing :arg1-of ( know :arg0 i )  :arg1-of same :mod other )  :arg1-of possible :polarity - )  )  :arg2 mother )  :poss-of ( of :quant 2 )  )  :arg1 51 :arg2-of ( mean :arg1 child )  :time now
and :arg2-of ( do :arg0 ( everything :arg1-of ( long :arg0 i )  )  )  :op1 ( fall :arg1 i )
cause :arg0 ( way :arg1-of ( run :arg0 i :op2-of ( and :op1 ( walk :arg0 i )  )  )  )  :arg1 ( and :op1 ( get :arg0 ( i :arg0-of ( skateboard :arg1 ( kid :mod other )  :op1-of ( or :arg1-of possible )  )  :arg0-of roll :arg0-of skate )  :arg1 ( bully :arg1 lot :location school )  )  )
say :arg0 ( room :arg1-of ( leave :arg0 ( person :arg0-of consult )  :condition-of ( peak :arg1 ( note :mod medicine )  :condition ( age :arg1 she :time ( after :op1 ( release :arg1 ( tendon :mod ( event :name ( name :op1 achilles )  :wiki operation_achilles )  )  :op1-of ( and :arg1-of ( say :arg0 ( person :name ( name :op1 rodgers )  )  )  :op2 ( straighten-up :arg0 ( operation :quant several )  :arg1 foot )  )  )  )  )  )  )  )  :arg1 ( suffer :arg0 13 :arg1 ( league :name ( name :op1 fa )  :wiki the_football_association )  )
contrast :arg1 ( look :arg0 ( i :arg2-of ( tell :arg0 ( i :arg0-of do :arg0-of ( write :arg1 ( league :name ( name :op1 fa )  :wiki the_football_association )  )  )  :arg1 anybody :arg1-of ( cause :arg0 ( and :arg1-of ( cause :arg0 ( i :arg0-of ( guilty :arg2 i )  :arg0-of feel )  )  :op1 nosy )  )  :polarity - )  )  :arg1 association :arg1-of ( come :arg4 home )  :op1-of ( and :arg1-of ( say :arg0 she )  :op2 condition :op3 library )  )
possible :arg1 ( get :arg0 i :arg1 ( information :direction back )  :arg1-of ( panic :mod-of ( state :arg1-of bad :op2-of ( and :op1 ( gobsmack :domain i )  )  )  )  )
think :arg0 i :arg1 ( and :op1 wheelchair :op2 18 :op3 time :op4 ( lose :arg0 i :arg1 gradual :op4-of ( and :op1 i :op2 25 :op3 between )  :poss-of ( ability :mod all )  )  )  :arg2 i
and :op1 ( plan :arg0 i :arg1 funeral :arg2 i )  :topic this
say :arg0 she :arg1 ( and :arg1-of ( think :arg0 ( she :arg0-of ( walk :arg1 ( realize :arg0 ( she :arg0-of ( reach :arg1 time )  )  :arg1 17 )  :mod-of ability )  :arg0-of ( deteriorate :arg1 much )  )  )  :op1 ( ask :arg0 they :arg2 about :polarity - )  :op2 surgeon )
say :arg0 you :arg1 ( and :op1 i :op2 i :op2-of ( and :op1 ( hug :arg0 ( he :arg0-of ( stand :mod just )  )  :arg1 ( wheelchair :mod-of now )  )  )  :op3 dear :op4 ( think :arg0 i :arg1 you :polarity - )  )
think :arg0 i :arg1 ( life :op2-of ( less :op1 ( lot :arg2-of ( threaten :arg1 something )  )  )  )  :arg2 you
find :arg1 she :time ( after :op1 ( test :arg1 gene :mod some )  )
say :arg0 ( she :arg2-of ( draw :arg0 ( he :arg0-of ( explain :arg1 amr-unknown :mod-of cmt )  )  :arg1 lucky :arg1-of ( think :arg0 i :arg2 i )  )  )  :arg1 straw
launch :arg0 ( country :arg0-of ( try :arg1 ( draw :arg0 ( temporal-quantity :unit month )  :arg1 ( attend :arg1 condition :location ( thing :name ( name :op1 charity :op2 cmt )  )  )  )  )  :name ( name :op1 uk )  :wiki united_kingdom )  :arg1 awareness
work :arg0 ( person :arg0-of ( have-org-role :arg1 sergeant :arg2 major :time former )  :arg0-of retire :arg2-of ( train :location ( ground :mod military )  )  :name ( name :op1 berni :op2 biether )  )  :arg1 artific :time ( since :op1 closure :op1-of ever )
fire :arg0 - :arg1 shoot :duration ( almost :op1 ( temporal-quantity :unit year )  )  :location ( ground :location ( country :name ( name :op1 m√ºnsingen )  )  :location-of train :mod ( military :mod former )  )
turn :arg0 ( temporal-quantity :unit ( month :mod every )  )  :arg1 ( ammunition :mod deadly )  :arg2 ( center :poss ( organization :name ( name :op1 swabian :op2 jura )  :part-of ( region :mod biosphere )  )  )  :op1-of nevertheles
detonate :arg0 ( shell :domain-of ( dangerous :frequency sometimes :op1 still )  )  :arg1 they :location there
echo :arg0 ( bang :arg1 detonation :arg1-of deafen )  :arg1 ( across :op1 ( center :poss ( region :mod biosphere )  )  )
round :arg1-of ( fire :destination ( ground :location ( country :arg0-of ( close :arg1 12 :time ( after :op1 ( temporal-quantity :quant 110 :unit year )  :op2 ( operation :mod military )  )  :time ( end :arg0 last :arg1 ( date-entity :year 2005 )  )  )  :name ( name :op1 m√ºnsingen )  )  :mod military :purpose train )  )  :arg1-of ( live :arg0 ( date-entity :year 2004 )  )
and :op1 ( open :arg0 biosphere :arg1 land :arg3 ( center :poss ( since :time-of 6500 )  :poss ( area-quantity :unit hectare )  :time then :time-of jus )  :op1-of region :time-of ( designate :arg0 13 :arg1 pathway )  )  :op2 cyclist :time hiker
tax :mod-of ( burden :arg1 ( economy :arg1-of rebound :arg1-of ( mount :arg0 ( person :arg0-of ( own :arg1 ( city :name ( name :op1 washington )  :wiki washington,_d.c. )  )  :mod area :mod business )  )  )  )
mean :arg1 ( economy :arg1-of rebound )  :op1-of ( and :op2 ( customer :arg1-of high :quant more )  :op3 ( job :mod new )  )
mean :arg1 it :arg2 ( tax :arg1-of high )  :mod also
release :arg1 ( research :arg0-of ( say :arg1 ( and :condition-of ( grow :arg0 and :arg1 ( bill :arg1 ( across :op1 country )  :arg2 company :arg3 ( tax :arg1-of local :arg3 state )  )  :arg2 modestly )  :op1 ( accelerate :arg0 ( recover :arg1 economy )  :arg1 ( year :mod last )  )  :op2 ( except :arg1 ( firm :mod ( area :location ( city :name ( name :op1 washington )  :wiki washington,_d.c. )  )  )  :polarity - )  )  )  :mod new )  :time ( week :mod last )
collect :arg1-of ( pay :arg0 ( business :mod ( state :name ( name :op1 virginia )  :op3-of ( and :arg1-of ( increase :arg2 ( percentage-entity :value 3.8 )  :time ( date-entity :mod fiscal :year 2013 )  )  :op1 district :op2 ( state :name ( name :op1 maryland )  :wiki maryland )  )  :wiki virginia )  )  :arg2 ( coffer :arg1-of local :op2-of ( and :op1 state )  )  :manner collective )  :time ( date-entity :year 2012 )
and :arg1-of ( shrink :arg1-of bill :duration ( temporal-quantity :mod back :unit year )  )  :op1 ( grow :arg1 back :mod ( of :mod ( consecutive :mod third :mod-of year )  )  :op1-of after :op2-of ( and :domain ( expand :arg1 ( percentage-entity :mod 3.9 )  :arg1-of local :arg1-of ( burden :arg2 ( and :domain business :op1 state )  :mod tax )  :arg1-of compare :domain-of ( 671 :mod-of billion )  :domain-of percentage-entity :mod ( last :mod-of year )  :mod-of by :mod-of 4.3 )  :mod ( before :mod year )  :op1 it )  )  :op2 ( date-entity :year 2009 )  :op3 ( date-entity :year 2010 )
say :arg0 3.9 :arg1 ( study :arg0-of ( conduct :op1-of ( by :op2 ( professional :mod-of service )  )  )  :arg1 ( policy :arg1-of tax )  :arg1-of ( rise :arg0 state :arg2 at :manner ( fast :mod-of clip )  :mod ( tax :arg1 ( percentage-entity :mod 4.3 )  )  )  :arg1-of ( levy :arg0 than )  :arg2-of local :mod-of which :op1-of ( and :op2 firm :op3 ( organization :name ( name :op1 state )  )  :op4 ( center :part-of taxation :part-of group :part-of state )  )  )  :quant percentage-entity
than :degree-of more-than :mod ( half :mod ( of :mod ( district :arg0-of ( tax :arg1 revenue :arg3 ( come :arg0 56 :arg1 while :arg2 percentage-entity :arg3 ( come :arg0 ( state :name ( name :op1 maryland )  :wiki maryland )  :arg1 firm :arg2 revenue )  :purpose ( tax :arg1 ( percentage-entity :quant-of 36 )  )  :purpose business )  )  :mod ' )  )  )
generate :arg0 ( state :name ( name :op1 virginia )  :wiki virginia )  :arg1 ( revenue :quant ( amount :mod proportionately )  :source ( tax :arg1 ( percentage-entity :value 28 )  )  )  :arg2 business
say :arg0 ( person :arg0-of ( push :arg1 ( property :arg1-of ( grow :arg0 ( year :mod this )  :mod ( sub :mod-of percentage-entity )  :time ( after :mod-of ( consecutive :mod 3 :mod-of ( temporal-quantity :quant 1 :unit year )  )  )  )  :arg1-of tax )  :arg2 percentage-entity )  :arg0-of ( research :arg1 ( value :mod ( real :mod-of estate )  )  )  )  :arg2-of ( rebound :arg0 company :arg2-of ( drive :arg0 revenue :arg1 ( much :arg1-of grow )  :arg1-of tax )  )
appear :arg0 ( share :arg1 ( thing :arg1-of gain )  :arg1-of ( come :arg0-of ( while :arg1 such )  :arg3 ( state :mod big )  :location ( and :op1 ( state :name ( name :op1 california )  :wiki california )  :op2 ( city :name ( name :op1 new :op2 york )  :wiki new_york_city )  :op3 ( state :name ( name :op1 texas )  :wiki texas )  )  )  :mod large )  :arg1 ( story :arg1-of same :location ( area :location-of ( city :name ( name :op1 washington )  :wiki washington,_d.c. )  )  )
and :op1 state :op2 ( tax :arg0 ( date-entity :year 2012 )  :arg1 ( last :mod-of year )  :arg1-of ( fork :arg0 ( company :op1-of ( and :op2 district :op3 ( state :name ( name :op1 maryland )  :wiki maryland )  :op4 ( state :name ( name :op1 virginia )  :wiki virginia )  )  )  :manner collective )  :arg3 property :manner local )  :op3 ( grow :arg1 ( 10 :value-of ( percentage-entity :value 4.2 )  )  :duration ( temporal-quantity :quant ( temporal-quantity :unit year )  :unit year )  )
contrast :arg1 ( property :mod-of value :time-of ( do :arg0 ( state :name ( name :op1 maryland )  :wiki maryland )  :arg1 much :arg2 ( and :arg2-of ( inflate :arg0 state :arg1 ( property :arg1-of ( local :arg2 tax )  :mod-of ( amount :mod tax :mod ( bare :mod-of ( more :degree-of fifth :degree-of ( company :arg0-of ( tax :time-of bill )  )  )  )  )  )  )  :op1 revenue )  :polarity - :time nearly )  )  :arg2 apparent
pay :arg0 ( and :op1 ( state :name ( name :op1 virginia )  :wiki virginia )  :op2 ( country :name ( name :op1 d.c. )  )  )  :arg1 ( half :poss ( state :op1-of and )  :poss-of ( form :mod-of ( tax :arg1-of ( bill :arg3 ( tax :arg1 nearly :arg1-of local )  )  :arg3 property )  )  )  :arg2 firm
say :arg0 ( government-organization :arg0-of ( pay :arg1 ( property :arg1-of ( do :arg0 nonprofit :arg2 ( center :arg1-of ( have-org-role :arg0 executive :arg2 director )  :part-of taxation :part-of state )  :polarity - )  :arg1-of tax :arg1-of ( own :arg0 ( state :name ( name :op1 maryland )  :wiki maryland )  )  )  :arg2 lindholm )  :arg0-of ( govern :arg1 ( or :arg1-of ( tax :mod-of ( base :arg0-of ( surround :arg1 d.c. )  )  )  :op1 ( property :arg1-of ( happen :arg0 ' :arg2 ( of :mod much )  )  :arg1-of ( cause :arg0 amr-unknown :mod that )  :mod-of especially )  :op2 area :op3 ( by :op1 either )  )  )  )  :arg1 dougla
cause :arg0 example :arg1 ( force :arg1 ( state :name ( name :op1 maryland )  :wiki maryland )  :arg2 ( rely :arg1 ( tax :arg1 you :arg3 income )  :manner ( heavy :degree ( more :degree much )  )  :purpose ( pay :arg1 ( other :mod-of state )  :arg3 ( service :arg1-of same )  )  )  )
possible :arg1 ( attribute :arg1 ( rebound :arg1 ( tax :arg1 all :arg2 business :source-of revenue )  :time recent )  :arg2 ( market :arg1-of recover :mod ( estate :mod real )  )  )  :polarity -
say :arg0 data :arg1 ( appear :arg1 ( income :arg1-of ( mend :op1-of business )  )  :mod also )
report :arg0 ( company :location region )  :arg1 ( tax :arg0 corporation :arg1 income :mod state )  :time ( date-entity :year 2012 )
collect :arg0 ( state :name ( name :op1 maryland )  :wiki maryland )  :arg2 ( revenue :source ( tax :arg0 most :arg1 1 :arg2 corporation :arg3 income )  )  :op1-of region
while :arg1 ( direction :arg1-of local :arg1-of tax :arg1-of ( same :arg0-of ( pace :arg1 ( place :quant all :quant 3 )  )  )  :arg1-of burden :arg1-of same :arg1-of ( grow :arg0 business :polarity - )  )  :arg1-of trend
of :op1 ( grow :arg1 ( district :mod-of rate )  :mod-of ( level :mod ( nation :mod-of ( average :arg0 ( state :arg0-of ( grow :arg1 while :manner ( fast :mod substantial :quant percentage-entity )  )  :name ( name :op1 maryland )  :wiki maryland )  :arg2 ( percentage-entity :mod 4.3 )  )  )  )  )
post :arg0 ( state :mod ( only :poss-of 4.1 )  :name ( name :op1 virginia )  :wiki virginia )  :arg1 ( bump :arg1-of ( average :arg2-of ( tax :arg1 percentage-entity :arg3 bill )  :op1-of below )  )
flat :mod-of ( rate :poss ( corporation :arg2-of ( tax :arg0 ( state :mod all :name ( name :op1 virginia )  :wiki virginia )  :arg1 income :arg1-of ( low :degree most )  :arg3 ( jurisdiction :quant 3 )  :manner corporation :manner far :time ( percentage-entity :value 6 )  )  )  )
rate :op1-of corporate :quant-of ( percentage-entity :quant-of ( district :arg1-of ( high :arg0 ( state :name ( name :op1 maryland )  :wiki maryland )  :arg2 percentage-entity :mod relative )  :mod while :mod-of stand )  )
show :arg0 ( study :arg0 ( government-organization :mod ( country :name ( name :op1 u.s. )  :wiki united_states )  :name ( name :op1 chamber :op2 of :op3 commerce )  :wiki united_states_chamber_of_commerce )  :arg1-of resemble :arg2-of ( tax :arg0 ( state :name ( name :op1 virginia )  :wiki virginia )  :arg1-of local :arg3 business :op1-of ( and :op2 ( climate :mod overall :source ( tax :arg1 early :arg2 business )  )  :op2-of ( and :op1 ( state :arg1-of low )  :op3 ( good :compared-to ( state :name ( name :op1 maryland )  :wiki maryland )  )  )  )  )  )  :arg1 ( year :mod this )
evaluate :arg1 ( study :arg1 district )  :polarity -
face :arg0 ( state :name ( name :op1 virginia )  :wiki virginia )  :arg1 ( pressure :arg0 neighbor :arg1 south :mod compete )  :time ( despite :op1 advantage )
and :op1 ( sign :arg0 ( country :arg0-of ( lower :arg1 ( rate :poss corporation )  :arg2 ( percentage-entity :value 5 )  :arg3 ( percentage-entity :value 6 )  :time ( year :mod ( this :mod-of ( year :mod next )  )  )  )  :arg0-of ( drop :arg1 rate )  :name ( name :op1 north :op2 carolina )  )  :arg1 legislation :arg4 ( percentage-entity :value 6.9 )  :time recent :time line )  :op2 ( state :name ( name :op1 virginia )  :wiki virginia )
push :arg0 year :arg1 ( possible :arg1 law )  :arg3 ( come :arg1 ( continue :arg0 state :arg1 goal :arg1-of ( meet :arg0 revenue )  )  )  :location ( state :arg0-of ( tax :arg1 income )  :arg0-of ( low :arg1 rate :arg2 ( percentage-entity :quant 3 :quant-of ( 2017 :year-of date-entity )  )  )  )  :location business
say :arg0 ( study :time recent )  :arg1 ( seem :arg1 ( and :op1 ( fare :arg0 ( business :location ( region :part ( city :name ( name :op1 washington )  :wiki washington,_d.c. )  )  :mod small )  :arg1 ( and :op1 state )  :manner good )  :op2 ( pay :arg0 more :arg1 ( tax :arg1 local )  :time thus-far )  )  :time meanwhile )
and :arg0-of ( pass :arg1 ( structure :mod through )  :time ( last :mod-of year )  )  :arg0-of ( surge :arg1 ( percentage-entity :value 20 )  )  :op1 ( person :arg0-of ( pay :arg1 ( tax :arg1 much :arg1-of personal :arg3 income )  :arg2 ( tax :arg1 ( organize :arg0 fast :arg1 ( firm :mod small :quant most )  )  :arg3 business )  )  :arg0-of ( own :arg1 business )  :mod small )  :op2 ( state :name ( name :op1 maryland )  :wiki maryland )  :op3 ( state :name ( name :op1 virginia )  :wiki virginia )  :poss-of ( rate :mod ( grow :arg1 ( tax :arg0 2.4 :arg3 business :mod overall )  )  )
say :arg0 researcher :arg1 ( and :arg0-of ( continue :arg1 ( revenue :mod overall :op1-of ( and :op2 state :op3 ( government-organization :arg0-of govern :arg1-of local )  )  :source ( tax :arg1 ( date-entity :year 2014 )  )  )  :arg1-of likely :time ( year :mod this )  :time nationwide )  :op1 ( trend :arg1 6.2 )  :op2 ( increase :arg1 ( tax :arg1 3 :arg3 business )  :arg1-of ( compare :arg2 ( period :arg1-of same :part-of ( year :mod last )  )  :mod-of quarter )  :arg2 percentage-entity )  )
possible :arg0-of ( lag :arg1 ( take :arg1 ( market :mod labor )  :arg1-of ( slow-down :arg2 region )  :arg1-of spend :arg2 toll :mod federal )  :arg2 behind :location ( city :name ( name :op1 washington )  :wiki washington,_d.c. )  )  :arg1 area
town :arg1-of ( twin :arg0 ( city :beneficiary-of ( beer :mod ( country :name ( name :op1 germany )  :wiki germany )  )  :name ( name :op1 guangzhou )  :wiki guangzhou )  )
and :op1 hop :op2 malt :op3 ( combine :arg1 popular :mod even )  :op4 ( country :name ( name :op1 china )  :wiki china )
enjoy :arg0 ( beer :mod ( country :name ( name :op1 germany )  :wiki germany )  )  :arg1 ( reputation :arg1-of excellent )  :location ( country :name ( name :op1 china )  :wiki china )
hope :arg0 ( country :name ( name :op1 china )  :wiki china )  :arg1 ( connect :arg1 between :arg1-of flight :arg1-of direct :arg2 2 :location city )  :mod also :op2-of ( and :arg1-of ( resemble :arg2 ( town :arg1-of ( twin :arg0 ( country :name ( name :op1 frankfurt )  )  )  )  )  :op1 brewery )
burn :arg0 ( city :name ( name :op1 guangzhou )  :wiki guangzhou )  :arg1 ( desire :arg0 ( country :mod-of ( beer :arg1-of brew )  :name ( name :op1 germany )  :wiki germany )  :arg1 ( person :arg0-of ( have-org-role :arg2 official )  :mod ( country :name ( name :op1 china )  :wiki china )  )  )  :arg2 ( town :arg1-of twin :mod of )  :mod that
say :arg0 ( person :arg0-of ( visit :arg1 ( city :arg1-of ( delegate :arg0 ( organization :name ( name :op1 &quot; )  )  )  )  :arg2 by :time ( week :mod this )  )  :mod ( country :name ( name :op1 china )  :part ( south :part-of ( party :location city :mod ( country :arg2-of ( delight :arg0 ( we :arg0-of ( cause :arg1 brewery )  )  :arg1 we )  :name ( name :op1 germany )  :wiki germany )  :op1 ( deputy :mod-of secretary :op1-of of )  :part business )  )  :wiki china )  :name ( name :op1 &quot; )  )  :arg1 during :location city
time :op1-of ( and :op1-of again :op2 time :op3 ( person :arg0-of ( have-org-role :arg1 ( political-party :arg0-of ( rule :arg1 twelve )  :location ( country :name ( name :op1 china )  :wiki china )  :name ( name :op1 communist :op2 party )  :wiki communist_party_of_the_russian_federation )  :arg2 official )  :arg1-of ( come :arg4 ( wish :mod this )  :direction back )  :arg1-of ( converse :op1-of throughout )  )  :op4 ( person :poss-of metropolis )  )
advertise :arg1 ( thing :name ( name :op1 china :op2 li )  )  :beneficiary-of ( city :mod ( rich :degree most )  )  :purpose ( know :arg1 ( city :name ( name :op1 guangzhou )  :wiki guangzhou )  :arg2 ( organization :location ( country :name ( name :op1 germany )  :wiki germany )  :name ( name :op1 canton )  )  :mod also )
cause :arg2 ( power :mod buy :mod also :purpose ( afford :arg0 person :arg1 ( beer :mod ( country :name ( name :op1 germany )  :wiki germany )  )  )  )
say :arg0 ( person :arg0-of ( have-org-role :arg1 ( thing :name ( name :op1 hessian :op2 spd )  )  :arg2 chairman )  :arg0-of ( lead :arg1 ( delegation :mod ( country :name ( name :op1 germany )  :wiki germany )  )  )  :name ( name :op1 thorsten :op2 sch√§fer-g√ºmbel )  )  :arg1 ( keep :arg0 ( he :arg1-of ( partner :arg1-of possible )  )  :arg1 ( ear :arg1-of ( open :location ( country :name ( name :op1 germany )  :wiki germany )  )  )  )  :arg2 host
add :arg0 ( he :arg0-of ( have-org-role :arg1 ( city :name ( name :op1 guangzhou )  :wiki guangzhou )  :arg2 member )  :arg0-of ( lunch :arg1 party )  )  :arg1 senior :arg1-of ( zest :arg0 ( and :arg2-of ( mean :arg1 water )  :op1 ( need :arg0 ( you :arg0-of ( do :arg1 beer :polarity - )  )  :arg1 lot )  :op2 good :op3 grain )  :arg2 life )  :op1-of over
say :arg0 ( he :arg1-of ( zest :mod this )  )  :arg1 ( beam :arg1-of resemble :time already )  :arg2 ( flatter :arg1 ( thing :name ( name :op1 mr :op2 li )  )  )  :time host
click :arg0 ( person :arg0-of ( have-org-role :arg1 ( city :name ( name :op1 guangzhou )  :wiki guangzhou )  :arg2 official )  )  :arg1 ( glass :mod ( red :mod-of wine )  )  :arg3 ( person :arg0-of ( serve :arg1 dinner )  :name ( name :op1 sch√§fer-g√ºmbel )  )  :time ( after :op1 that )
trace :arg1-of ( lead :arg0 ( organization :mod brand :mod ( country :name ( name :op1 china )  :wiki china )  :name ( name :op1 tsingtao )  )  :arg4 ( art :compared-to brew :mod ( country :name ( name :op1 germany )  :wiki germany )  )  :direction back )
say :arg0 ( law :mod ( country :name ( name :op1 germany )  :wiki germany )  :topic purity )  :arg1 ( brew :arg1 ( beer :mod ( organization :name ( name :op1 tsingtao )  )  )  )
business :mod-of ( operation :mod more-than )
say :arg0 ( person :name ( name :op1 li )  :wiki - )  :arg1 ( connect :arg1 ( country :arg0-of wish :name ( name :op1 frankfurt )  :op1-of ( and :op2 ( person :arg0-of ( lead :arg1 ( party :mod deputy )  )  )  )  )  :arg1-of direct :arg1-of ( flight :arg0 ( country :arg0-of host :name ( name :op1 china )  :wiki china )  )  :arg2 ( city :name ( name :op1 guangzhou )  :wiki guangzhou )  )
contrast :arg1 ( use :arg0 ( organization :name ( name :op1 lufthansa )  )  :arg2 ( offer :arg1 ( flight :mod such )  :arg0 organization )  )  :arg2 ( cancel :arg2 ( reason :mod economy :time ( date-entity :year 2012 )  )  :arg0 organization )
seem :arg1 ( convince :arg0 it :arg1 worth :arg1-of ( local :arg0 it :arg2 ( politician :mod again )  )  )
grow :arg1 ( between :mod-of 2 :op1 ( operation :mod business )  )  :arg1-of ( continue :arg0 we :location city )
complain :arg0 ( person :name ( name :op1 li )  :wiki - )  :arg1 ( province :location-of ( take :arg0 ( person :arg0-of travel )  :arg1 detour :path ( country :name ( name :op1 changsha )  )  :purpose present )  :name ( name :name-of ( province :wiki hunan )  :op1 hunan )  :wiki helmand_province )
hope :arg0 ( city :domain-of ( city :arg0-of ( administrate :arg1 ( province :wiki helmand_province )  )  :name ( name :op1 guangzhou )  :wiki guangzhou )  :mod capital )  :arg1 ( connect :arg1 ( flight :arg1 ( province :name ( name :op1 guangdong )  )  )  )  :mod also
emphasize :arg1 ( wish :mod this )  :arg2 ( talk :arg0 ( have-org-role :arg0 ( person :name ( name :op1 chen :op2 yunxian )  )  :arg1 ( province :wiki helmand_province )  :arg2 ( governor :mod deputy )  )  :arg2 ( political-party :mod society :name ( name :op1 democrat )  :wiki democratic_party_[united_states] )  )
answer :arg0 ( person :arg0-of ( have-org-role :arg1 ( country :arg0-of ( nod :arg1 ( agree :arg1 ( idea :mod ( good :degree very )  :mod that )  :arg2-of ( expert :arg0 intimate :arg1 ( person :name ( name :op1 li )  :wiki - )  )  )  )  :name ( name :op1 germany )  :wiki germany )  :arg2 ( minister :mod deputy )  )  :name ( name :op1 &quot; )  )  :arg1 jinjun :arg2 ( country :name ( name :op1 china )  :wiki china )
partner :arg1-of ( cultivate :mod well )
hope :arg1 ( visit :arg0 ( person :arg0-of ( lead :arg1 ( city :name ( name :op1 guangzhou )  :wiki guangzhou )  :arg2 ( party :mod ( deputy :mod affable )  )  )  :arg1-of ( meet :mod ( partner :arg0 ( year :mod next )  )  )  )  :arg1 ( country :name ( name :op1 frankfurt )  )  )
contrast :arg0 already :arg1 ( role :domain ( person :mod ( country :name ( name :op1 main )  )  :name ( name :op1 li :op2 yiwei )  )  :poss-of capacity )  :arg2 -
predecessor :arg1-of ( remove :arg0 he :arg2 office :op1-of ( after :time-of office )  :time ( allege :arg0 ( this :mod-of year )  :arg1 ( corrupt :arg1 only )  )  )
region :arg1-of ( leave :arg0 ( person :name ( name :op1 wan :op2 qinglian )  )  )  :arg1-of ( lead :arg0 person :arg2 party :manner even )
implement :arg0 ( head :arg0 ( person :name ( name :op1 xi :op2 jinping )  :wiki xi_jinping )  :arg1 state )  :arg1 ( party :op2-of ( and :arg1-of ( corrupt :mod-of ( city :arg1-of ( have-org-role :arg0 ( person :arg0-of ( take :arg1 action )  )  :arg2 official )  :name ( name :op1 guangzhou )  :wiki guangzhou )  )  :op1 ( campaign :mod nationwide )  :op3 administrate )  )  :manner rigorously
work :arg0 ( person :mod ( country :mod-of ( political-party :name ( name :op1 communist :op2 party )  :wiki communist_party_of_the_russian_federation )  :name ( name :op1 china )  :wiki china )  :name ( name :op1 li :op2 yiwei )  )  :arg1 ( politician :mod senior :mod new )  :arg2 company :time ( before :op1 ( career :prep-in politics )  )  :time ( usual :degree high :polarity - )
manufacture :arg0 ( company :arg0-of ( build :arg1 ( factory :mod large )  :arg1-of ( work :arg0 ( he :arg0-of ( take :arg1 office :location ( city :name ( name :op1 guangzhou )  :wiki guangzhou )  :op1-of before )  )  :arg2 ( person :arg0-of ( have-org-role :arg2 ( official :mod senior )  )  :location ( province :name ( name :op1 fujian )  :wiki fujian )  )  )  )  :name ( name :op1 vw )  :wiki volkswagen )  :arg1 car
adopt :arg0 ( country :name ( name :op1 frankfurt )  )  :arg1 ( city :arg0-of ( twin :arg1 dozen )  :quant more )  :mod official
and :op1 ( cherish :arg0 ( city :name ( name :op1 guangzhou )  :wiki guangzhou )  :arg1 example :op2-of ( and :op1 ( look :arg0 ( side :mod both )  :arg1 ( connect :arg1 ( some :op1 ( 9000 :quant-of ( distance-quantity :unit kilometer )  )  )  )  :time after )  :op3 ( exchange :arg0 away :arg1 school )  )  :purpose ( twin :arg1 ( city :arg1-of locate )  )  )
mark :arg0 ( year :mod last )  :arg1 ( year :mod ( relation :arg1 ( thing :name ( name :op1 german-chinese )  )  )  :quant 25 )
power :arg1-of ( thank :arg0 ( country :name ( name :op1 hessen )  )  :mod ( whole :arg2-of ( strong :arg1 ( metropolis :arg1-of ( lie :arg0 ( country-region :name ( name :op1 south :op2 china )  :wiki south_china )  :arg2 ( country :name ( name :op1 pearl :op2 river )  )  )  )  :mod almost )  )  )  :mod economy
report :arg0 ( person :name ( name :op1 li )  :wiki - )  :arg1 ( like :arg0 they :arg1 ( reach :arg1 ( product :arg1-of ( gross :arg0 250 )  :mod domestic :quant ( monetary-quantity :unit euro )  )  :arg0 they )  :time ( year :mod next )  )
finger :arg0 ( we :arg0-of ( cross :arg1 ( person :name ( name :op1 joan )  )  )  )  :arg1 ( keep :arg0 family :arg1 river )
contrast :arg1 ( conscious :domain ( person :name ( name :op1 joan :op2 rivers )  )  :polarity - :time ( since :op1 ( arrive :arg1 ( temporal-quantity :quant 81 :unit year )  )  )  )  :arg2 ( express :arg0 ( person :arg0-of ( have-rel-role :arg1 ( hospital :mod ( country :name ( name :op1 new :op2 york :op3 city )  )  )  :arg2 daughter )  )  :arg1 ( hope :arg1 ( temporal-quantity :quant 3 :unit day )  :arg1-of ( recover :arg0 ( comedian :mod old )  :arg2 illness )  :arg0 person )  :time today )
state :arg0 ( person :arg1-of ( support :arg0 ( and :arg1-of continue :arg2-of thank :op1 ( love :arg0 you )  )  )  :name ( name :op1 &quot; )  )  :arg1 today :arg1-of say
keep :arg0 we :arg1 ( finger :arg0-of cross :poss we )
say :arg0 source :arg1 ( arrive :arg1 ( person :arg0-of ( have-rel-role :arg1 she :arg2 mother )  )  :arg4 ( country :name ( name :op1 mount :op2 sinai :op3 hospital )  )  :time ( after :op1 ( call :arg0 emergency :arg1 ( she :arg0-of ( arrest :arg1 ( person :name ( name :op1 yorkville :op2 endoscopy )  )  :arg2 thursday :mod cardiac )  )  )  )  )  :purpose ( country :mod-of clinic :name ( name :op1 upper :op2 east :op3 side )  )
and :arg1-of ( supervise :arg2 close )  :arg1-of ( sedate :arg0 ( she :arg0-of ( keep :arg1 intentional )  )  )  :op1 doctor :op2 under :op3 ( remain :arg1 ( she :arg2-of ( comfortable :arg0 they :arg1 with :mod more :mod until )  )  :arg3 serious :op1-of condition :op1-of which )
and :op1 ( person :arg1-of ( like :arg0-of ( support :arg1-of overwhelm :manner online )  :arg1-of ( react :arg1-of wide )  )  :name ( name :op1 donald :op2 trump )  :wiki donald_trump )  :op2 ( person :name ( name :op1 montel :op2 williams )  )  :op3 ( person :name ( name :op1 kelly :op2 ripa )  )
increase :arg1 ( wage :op2-of ( and :op1 ( clean :arg1 vacuum :arg1-of friendly )  )  )
vacuum :arg1-of ( clean :arg0 today :op1-of ( and :arg0-of ( go :arg1 sale )  :arg3-of ( apply :arg0 future :arg1 ( standard :mod environment :mod strict )  :arg2 car )  :quant all )  )
and :op1 ( come :arg1 ( clean :arg1 vacuum :mod new )  :accompanier ( label :arg0-of ( allow :arg1 ( see :arg0 ( person :arg0-of buy )  :arg1 ( information :arg1-of key )  )  )  :arg1-of ( resemble :arg0 such :arg2 that )  )  )  :op2 refrigerator :op3 ( machine :arg0-of ( wash :arg1 9 )  )  :op4 ( efficient :arg1 appliance :arg1-of glance :mod energy )
value :time ( oxide :mod ( nitric :arg1-of high :arg1-of ( receive :arg1-of ( will :arg0 ( class :mod ( emission :op3-of ( under :op1 ( car :quant new )  :op2 ( fall :mod that )  )  )  )  :quant ( 6 :mod euro )  )  )  )  )
receive :arg0 they :arg1 ( wage :arg0 this :mod minimum )  :arg2 ( standard :location ( across :mod-of aside :op1 ( whole :mod-of ( country :name ( name :op1 germany )  :poss scaffolder :wiki germany )  )  )  )  :arg3 ( monetary-quantity :unit euro )  :time ( money :mod more )
buy :arg0 ( country :name ( name :op1 amazon )  )  :arg1 twitch
and :op1 ( confirm :arg0 amazon :arg1 ( person :arg0-of ( retail :arg1 online )  )  :mod just )  :op2 ( report :arg0 information :arg1 monday :time morning )  :op3 ( buy :arg0 ( produce :arg0 ( country :name ( name :op1 us )  :wiki united_states )  :mod video )  :arg1 ( twitch :arg0 and :arg1 service :arg1-of stream :arg2 ( thing :mod other )  :mod video )  )
cause :arg0 ( expect :arg1 ( person :arg0-of ( buy :arg1 ( publication :name ( name :op1 youtube )  :wiki youtube )  )  )  :arg2-of ( contrast :arg1 ( expect :arg0-of ( cause :arg1 ( come :arg1 ( announce :arg1 - )  :arg2 surprise )  )  :arg1 ( buy :arg1 ( twitch :arg1 - )  )  )  )  :degree wide )
seem :arg1 ( natural :arg1 ( look :arg0 ( company :name ( name :op1 google )  :wiki google )  :arg1 all :arg1-of ( twitch :duration ( temporal-quantity :quant 3 :unit month )  )  :arg1-of wrap :arg1-of cool :op3-of ( and :op1 video :op2 service )  )  )  :arg1-of pair
version :arg0-of ( live :arg1 ( found :arg1 twitch :arg2 tv :arg3 ( only :mod-of ( temporal-quantity :arg1-of ( stream :mod-of ( service :arg1-of general )  )  :quant 3 :unit year )  )  )  )  :mod-of ( publication :name ( name :op1 youtube )  :wiki youtube )
and :arg0-of ( live :arg1 game )  :arg2-of ( become :arg1 ( it :arg0-of ( quick :arg1 platform :arg2 ( broadcast :arg0 game :arg1 game )  :arg2-of ( instead-of :arg1 ( business :mod-of ( word :mod insider )  )  )  )  )  )  :op1 feat :op2 ( publication :name ( name :op1 youtube )  :wiki youtube )
twitch :arg1 interface
and :op1 ( let :arg0 science :arg1 ( give :arg0 wiseacr :arg1 ( mystery :arg1-of ( popular :arg0 already :location ( publication :name ( name :op1 youtube )  :wiki youtube )  )  )  :example-of video :location most )  :example play :example genre )  :op2 ( treat :example-of game :mod old )
textbook :mod-of ( example :mod ( company :arg1-of ( buy :arg0 ( person :arg0-of compete :mod potential )  :arg0-of ( greet :arg1 news :arg1-of ( cause :arg0 ( come :arg0 point :arg1 ( publication :arg0-of ( describe :arg1 twitch )  :name ( name :op1 youtube )  :wiki youtube )  )  :arg1-of ( twitch :arg1-of ( acquire :arg0 ( publication :name ( name :op1 youtube )  :wiki youtube )  )  )  )  :arg3 ( yawn :arg1 lot )  )  )  :arg1-of entrench :mod tech )  )
report :arg0 ( consider :arg0 ( publication :name ( name :op1 youtube )  :wiki youtube )  :arg1 ( mystery :arg1-of fall :arg1-of ( deal :arg0 it )  )  )  :arg1 ( less :polarity - )  :arg1-of ( pay :arg0 amazon )  :arg1-of will
state :arg0 moment :arg1 ( choose :arg0 we :arg1 we :arg1-of twitch :arg1-of ( believe :arg0 they )  :arg1-of shear :arg1-of ( have-org-role :arg0 ( we :quant all )  :arg2 ceo )  :arg1-of ( cause :arg0 ( want :arg0 they :arg0-of ( help :arg1 ( get :arg0 ( we :arg1-of ( share :arg0 they )  )  :arg1 there :arg3 fast )  )  :arg1 and )  )  :arg1-of ( mean :arg2 ( community :arg2-of ( long :arg1 term )  )  )  :op1-of ( and :op2 value )  )  :mod this
twitch :arg0 frank :arg1 ( succeed :arg0 incredible :arg1 ( mystery :mod another )  )
appeal :arg0 snob :arg1 of :arg2 ( watch :arg1 game :arg2-of ( see :arg0 they :arg1 the :arg1-of ( hard :arg0 ' )  )  :mod rather :purpose-of ( take :arg0 ( i :arg0-of ( declare :arg1 that :arg2 rather )  :arg0-of ( watch :arg1 they :arg2-of ( play :arg1 sport )  :extent-of than )  :arg1-of ( resemble :arg2 amr-unknown )  )  :arg1 myself :arg3 up :manner ( control :arg0 it )  )  )
and :op1 ( person :arg0-of ( have-rel-role :arg1 ( look :arg0 it :arg1 thing )  :arg2 friend )  :arg0-of ( reside :arg1 3 )  :name ( name :op1 dr. :op2 evil )  :wiki dr._evil )  :op2 quite :op3 ( watch :arg0 20 :arg1 some :mod another )  :op4 ( call :arg0 ( she :arg0-of ( creep :arg1 shoulder )  :poss-of morning )  :arg1 headshot :arg2 duty :op1-of row )
possible :arg1 ( watch :arg0 you :arg1 game )  :arg2 all :time ( now :mod right )
cause :arg0 of :arg1 ( watch :arg0 ( person :arg0-of ( do :arg1 it :arg1-of possible :arg2 recipe :arg3 ( control :arg0 they :arg1 viewpoint )  :time ( right :mod-of worthy )  :time headache )  :arg2-of ( popular :arg0 another :arg1 game :arg3 ( many :mod that :quant-of problem )  :degree most :time today )  )  :arg1 footage )
age :arg0 ( person :arg0-of ( entertain :arg1 ( i :arg0-of concede )  )  :arg0-of ( complete :arg1 ( game :mod entire )  :arg2 speedrun )  :name ( name :op1 roger :op2 bannisters )  )  :arg1 we :mod ( electronic :mod-of ( time :mod record )  )
contrast :arg1 ( or :arg1-of ( twitch :arg0 ( he :arg0-of ( interest :mod all )  :arg0-of likely )  :mod-of ( channel :mod humour :mod someone :mod virtuoso :mod game :polarity - )  )  )
contrast :arg2 ( know :arg0 ( i :arg2-of ( resemble :arg1 interrogative )  )  :arg1 sceptic )
and :arg1-of ( visit :arg0 ( person :mod unique )  :duration ( temporal-quantity :unit month )  )  :op1 ( twitch :arg0 ( large :degree most :mod-of fourth )  )  :op2 source :op3 ( traffic :arg1-of ( peak :arg0 55 )  :mod internet )
country :manner ( amr-unknown :domain ( this :op1-of interrogative )  :mod-of exact )  :name ( name :op1 amazon )
imagine :arg0 ( it :arg1-of hard :poss-of video )  :arg1 ( possible :arg1 elegantly :arg1-of ( swallow :arg0 just :arg1-of ( twitch :arg0 ( publication :name ( name :op1 youtube )  :wiki youtube )  )  )  )  :arg1-of ( twitch :arg0 amazon :arg1-of ( fold :arg0 instant )  )
advertise :arg1 ( covet :arg1 ( man :mod young :poss-of ( horde :arg1-of ( attract :arg0 ( company :arg0-of ( love :arg1 something )  :mod any )  :arg1-of ( contrast :arg2 twitch )  )  )  )  )
say :arg0 ( shear :arg1 ( twitch :arg1 sport :arg1-of ( have-org-role :arg2 chief )  )  )  :arg1 ( and :arg1-of twitch :arg1-of ( believe :arg0 both :mode future )  :op1 ( and :op1 ( show :arg0 medium :arg1-of ( shrink :arg0 game )  :arg1-of ( sign :polarity - )  :arg1-of ( gulp :arg0 even )  )  :op2 spectator )  )
castle :arg1 ( festival :mod garden )  :purpose-of ( happen :arg0 something :arg2 ( castle :arg0 ( person :name ( name :op1 burggartenfest )  )  :mod bouncy )  )
idea :arg1-of ( organize :arg0 person )  :mod right
castle :arg2 ( fan :arg0-of ( go :arg1 ( saturday :location-of ( rain :arg0 1200 :arg1 evening :mod-of ( downpour :mod heavy :op1-of despite )  )  )  :arg4 ( festival :arg1-of open :mod air )  )  :mod music :quant approximately )  :mod-of garden
admission :arg1-of ( stop :arg1-of occasion )
say :arg0 ( annoy :arg0 it :arg1 ( person :arg0-of ( organize :arg1 of )  )  )  :arg1 1 :arg2 ( person :name ( name :op1 &quot; )  )
and :op1 light :op2 ( fun :arg0 ( country :name ( name :op1 salzwedel )  )  )
and :op1 ( person :name ( name :op1 maxim )  )  :op2 ( person :arg0-of ( coin :arg1 ( thing :domain-of ( language :mod-of word :name ( name :op1 spanish )  :quant 2 :wiki spanish_language )  :name ( name :op1 maxim )  )  )  :name ( name :op1 maxim )  :name name )
suppose :arg1 ( garden :location ( country :name ( name :op1 salzwedel )  )  :op2-of ( since :op1 ( castle :arg1 air :arg1-of open )  )  )  :arg2 ( beam :arg1 ( light :arg1-of ( range :arg2 wide :op1-of ( and :arg1-of ( show :arg0 evening )  :op2 daytime )  )  :arg1-of bright )  )
fun :mod anyway :op1-of well :poss you
visit :arg0 person :arg1 ( air :arg1-of ( open :arg0 early :op1-of saturday :op1-of ( this :domain-of ( apparent :time already )  )  )  )
promise :arg0 ( person :arg0-of organize )  :arg1 festival :arg2 ( fit :arg2 ( generation :quant all )  )
and :op1 ( deliver :arg0 they :arg1 that )
contrast :arg0 also :arg1 guest :arg2 ( and :op1 ( near :arg1 home )  :op2 far )  :manner-of ( locate :arg0 ( person :source ( country :name ( name :op1 salzwedel )  )  )  :arg1 ( stand :arg1-of supply :op1-of around )  :location ( meadow :poss ( garden :arg1-of castle )  )  )
and :op1 ( enjoy :arg1 ( and :op1 ( tap :arg0 ( they :arg0-of ( follow :arg1 ( perform :arg1-of pure :arg1-of live :arg1-of relax )  )  )  :arg1 foot :frequency time )  :op2 ( enjoy :arg1 refreshment )  :op3 short )  )
and :op1 ( go :arg1 that :arg2 ( generation :quant all )  )
indulge :arg1 store :arg2-of ( cart :arg1 ( person :arg0-of ( sprawl :arg1 ( blanket :arg1-of ( place :arg2 ( top :part-of ( sand :arg1 wine :mod white )  )  :time ( around :op1 ( bar :arg1 beach )  )  )  )  )  :mod some )  )  :location ( glass :quant-of wine )  :op1-of ( and :op2 ( go :arg0 other :arg1 ( crazy :arg1 kid )  :time ( castle :arg1 especially :mod bouncy :time ( attract :arg1 ( guest :mod little )  :degree huge )  )  )  )
mean :arg1 ( strict :degree most )  :arg2 ( child :arg0-of ( become :arg1 ( person :arg0-of ( face :arg1 ( child :arg1-of ( keep :arg1-of paint )  :mod even )  :arg2 full )  :arg0-of ( volunteer :arg1 hand )  )  :arg2 ( and :arg1-of ( face :mod small )  :op1 ( man :arg0-of ( conjure :arg2 fanciful )  )  )  )  :arg1-of ( rush :arg0 word :arg2 creation )  )
or :op1 ( grow :arg1 ( one :arg1-of ( play :arg0 ( workshop :arg0-of ( organize :arg1 ( thing :name ( name :op1 goodfoot-crew )  )  )  :arg1-of skateboard )  :location ( table :mod football )  )  )  :degree more )
and :op1 ( come :arg1 rain :time then )
and :op1 ( pelt :arg0 ( rain :arg0 runn :arg1 somewhere :arg1-of ( search :arg0 ( 30 :quant-of pm )  :arg1-of ( dry :arg0 5 )  )  )  :arg1 ( person :arg0-of visit :op1-of onto )  :time ( before :quant short )  )  :op1-of and :op2 family
despite :arg0-of ( get :arg1 ( thing :arg0-of attract :arg1-of ( do :arg0 festival :arg0-of ( call :arg1 this :arg2 off :polarity - )  )  )  )
say :arg0 ( person :arg0-of ( call :arg1 ( succeed :arg1 all :arg1-of ( round :arg0 more-than )  )  :arg2 event )  :arg1-of ( come :arg1-of ( expect :arg0 person )  )  :name ( name :op1 &quot; )  )  :arg1 amr-unknown
stop :arg1 nothing :arg2 ( repeat :arg0 such :arg1 ( party :mod big )  :time ( year :mod next )  )
and :op1 ( size :mod-of ( term :manner-of ( do :arg1 ( voice :poss ( person :arg1-of ( clear :arg0 more :arg2 ( person :name ( name :op1 sem )  )  )  :mod-of crystal )  )  :mod even )  )  :poss event )  :op2 ( content :arg1-of ( balance :mod-of ( sheet :arg1-of ( do :arg0 sunday )  )  )  )
say :arg0 ( he :poss-of ( thing :arg1-of ( annoy :arg0 event )  )  )  :arg1 ( stop :arg0 they :arg1 ( allow :arg1 entry :arg0 they )  :duration temporary )
book :arg1 ( person :arg0-of ( guard :arg1 security )  :quant ( enough :degree-of apparent :polarity - )  )  :arg2 ( company :mod security )
consequence :arg2-of ( pay :arg0 ( person :mod some )  :arg1-of ( possible :condition ground :polarity - )  :time already )
good :degree very :domain feedback
and :op1 preliminary :op2 ( estimate :arg0 ( organize :arg0 ( country :name ( name :op1 salzwedel )  )  )  :arg1 ( attend :arg0 ( person :arg0-of visit :quant around )  :arg1 ( garden :arg1-of castle )  )  :arg1-of ( estimate :arg2 ( thing :arg1-of ( cautious :arg0 1200 )  )  )  )
problem :prep-with ( engineer :arg1 sound )
unnerve :arg1 ( perform :arg1 problem :arg1-of abandon :arg2-of ( block :arg1 ( band :arg1-of ( hop :arg0 hip )  )  )  :time somewhat :time this )
possible :arg1 ( sound :mod ( decent :mod half )  :poss ( person :arg0-of engineer )  )  :polarity -
contrast :arg1 ( plan :arg1 ( lounge :mod shisha )  :arg1-of puncture )  :arg2 ( possible :arg1 ( build :arg1-of ( cause :arg0 ( possible :arg1 ( deliver :arg1 tent :arg2 ( country :name ( name :op1 salzwedel )  )  )  :polarity - )  )  )  :polarity - )
insist :arg1 that :arg1-of ( organize :arg0 they :arg2 ( there :mod-of ( next :mod-of ( temporal-quantity :unit year )  )  )  )
visit :arg0 ( person :quant number )  :arg1 ( succeed :arg1 term :degree ( more :domain ( premier :poss ( thing :name ( name :op1 amula-open-airs )  )  )  )  )
and :op1 ( weather :arg1-of bad :prep-at-of that )
contrast :arg0 time :arg1 ( excuse :arg1 ( mistake :arg0 ( person :arg0-of organize )  :arg0-of ( avoid :arg1 ( round :mod time )  :arg2 nevertheles )  :arg1 next :mod some )  )
organize :arg0 ( person :arg0-of ( accept :arg1 ( criticize :arg0 ( company :name ( name :op1 facebook )  :wiki facebook )  )  )  )  :arg1 ( event :arg0-of ( network :arg1 also :mod society )  :mod site )
contrast :arg1 ( monetary-quantity :unit euro )  :arg2 ( expect :arg0 ( i :arg1-of ( sorry :arg2 twelve )  )  :arg1 more :arg2 ( event :arg1-of ( comment :arg0 mei )  :mod-of page :mod-of ' )  :time really )
say :arg0 ( you :arg1-of ( fortunate :arg2 ( off :degree more :mod bit )  )  )  :arg1 ( person :arg0-of ( same :arg1 page )  :name ( name :op1 &quot; )  )  :arg1-of ( chew :arg0 you :arg1-of possible )
issue :arg0 ( problem :arg1-of teethe )  :arg1 other :mod ( big :mod ( such :mod-of - )  )
contrast :arg1 ( good :arg1-of ( think :arg0 i )  :degree really )  :arg2 ( and :op1 ( effort :mod real )  :op2 ( run :arg0 ( person :arg0-of ( talk :arg1 rubbish )  :arg1-of ( stand :arg2 around :polarity - :time just )  :mod some )  :arg1 something )  :time actual )
write
address :arg0 year :arg1 ( this :mod-of criticism )  :arg1-of ( organize :arg0 ( person :time now )  )  :time time
dwindle :arg1 landmark :arg1-of ( mean :arg2 ( dome :mod ( radar :mod new )  )  )
expect :arg1 - :op1-of and
element :arg0-of ( install :arg1 ( structure :op1-of onto )  :arg2-of ( wait :prep-in fact )  )  :arg1-of ready :mod structure
contrast :arg1 ( do :arg0 ( thing :domain this :mod just :quant many )  :arg1 ( construct :arg1 ( country :mod radar :name ( name :op1 tira )  )  :arg1-of ( rebuild :arg0 ( case :arg1-of ( know :arg2 ( dome :mod ( radar :name ( space :mod-of ( observation :mod ( temporal-quantity :op1-of almost :quant 50 :unit year )  )  )  )  )  )  )  :arg1-of complete )  :op1-of after )  :arg1-of need )
old :mod-of ( diameter :poss ( distance-quantity :name-of ( dome :domain-of ( small :mod somewhat )  :mod radar :mod new )  :unit meter )  )
say :arg0 ( world :mod-of ( record :domain size )  )  :arg1 that :location still
phase :arg0-of ( change :arg1 cap )  :arg1-of ( case :arg1-of complete :mod new )  :mod final
and :op1 ( lift :arg0 crane :arg1 ( quarter :arg1 ( case :mod old )  :arg1-of separate :mod top )  )
put :arg1 ( quarter :arg1 ( case :mod new )  :mod last )  :arg2 place :time ( after :op1 that )
recommend :arg1 ( take :arg0 this :arg1 place :arg2 ( start :arg0 ( side :poss weather )  :arg1 ( week :mod this )  )  )  :concession long
dislocate :arg1 ( participate :arg1 ( organization :name ( name :op1 ice :op2 bucket :op3 challenge )  )  )  :poss-of jaw
bone :arg1-of ( head :arg0 ( she :arg0-of ( damage :arg1 ( structure :poss face )  )  )  :arg2-of ( pour :arg0 ( person :arg0-of ( shout :arg1 hard )  :name ( name :op1 isabelle :op2 roberts )  )  :arg1 ( water :arg1-of ( freeze :arg0 ( country :name ( name :op1 uk )  :wiki united_kingdom )  )  )  )  )
pain :arg1 ( wrong :arg1-of ( go :arg0 ( organization :mod this :name ( name :op1 ice :op2 bucket :op3 challenge )  )  )  )
dislocate :arg0 she :arg1 jaw :arg1-of ( scream :arg0 woman :op1-of after :time ( organization :name ( name :op1 ice :op2 bucket :op3 challenge )  )  )  :arg1-of hard
shout :arg0 ( person :arg0-of ( pour :arg1 ( water :arg1-of freeze )  :arg2 head )  :name ( name :op1 isabelle :op2 roberts )  )  :arg1 ( damage :arg0 she :arg1 structure :arg3 face )  :manner violent
contrast :arg1 jaw :arg2 ( i :arg0-of ( do :arg1 it )  :arg0-of ( tell :arg1 ( mirror :arg0 ( she :arg1-of ( stick :arg1-of ( start :arg0 i :arg1-of ( cause :arg0 ( cold :arg1-of ( cause :arg0 water )  )  )  :mod just )  )  )  )  :arg2 ( i :arg0-of scream )  )  )
pour :arg0 year :arg1 ( ' :mod old )  :op1-of ( over :domain ( water :arg1-of ice )  :op2 20 )
moment :arg0 ( person :name ( name :op1 isabelle :op2 roberts )  )  :time ( before :op1 accident )
contrast :arg1 ( try :arg0 i :arg1 ( close :arg1 mouth :arg0 i )  )  :arg2 ( and :op1 lock :op2 ( come :arg1 i :arg2 something :arg4 ( realize :arg1 - )  :time then )  )
contrast :arg1 ( and :arg1-of ( start :arg0 they :arg1-of wet )  :arg1-of ( realize :arg0 ( person :arg0-of ( have-rel-role :arg1 ( person :arg0-of ( have-rel-role :arg1 i :arg2 mum )  )  :arg2 sister )  :arg1-of ( come :time then )  :op1-of and )  )  )  :arg2 ( i :arg0-of rush )
viral :mod-of ( craze :arg1 tuesday :arg2-of ( take :arg0 ( jaw :poss ( hospital :arg3-of ( take :arg1 ( country :name ( name :op1 uk )  :wiki united_kingdom )  )  )  )  :arg1 ( temporal-quantity :quant 20 :quant-of old :unit year )  :op1-of ( after :time-of reposition )  )  )
become :arg1 ( clip :arg0-of ( share :arg1 thousand :arg2 ( and :op1 ( company :name ( name :op1 facebook )  :wiki facebook )  :op2 ( product :name ( name :op1 twitter )  :wiki twitter )  )  )  )  :arg2 ( sensation :mod internet )
will :arg0 ( back :arg2-of ( castle :arg0 again :arg1 club )  :op1 together )  :arg1 ( person :name ( name :op1 burgvereine )  )  :mode interrogative
castle :arg0 recent :arg1 ( group :location ( country :arg0-of ( dispute :quant lot )  :name ( name :op1 wolfratshausen )  )  :quant both )
contemplate :arg0 boardroom :arg1 ( possible :arg1 ( work :manner together )  )  :time now
castle :arg0 ( person :arg0-of ( have-rel-role :arg1 ( person :arg1-of decease :mod-of ( person :arg0-of ( lead :arg1 ( project :location ( organization :name ( name :op1 gu√©delon )  )  :mod ( country :location-of ( castle :arg0 ( chairman :poss ( person :name ( name :op1 wolfratshauser :op2 burgfreunde )  )  :time former )  :arg1-of ( reconstruct :purpose-of example )  )  :name ( name :op1 wolfratshausen )  )  )  )  :name ( name :op1 richard :op2 dimbath )  )  )  :arg2 friend )  )  :arg1 france
and :op1 ( club :compared-to-of ( atmosphere :mod good )  )  :op2 ( group :arg0-of ( castle :arg1 ( castle :arg0 year :arg1 ( up :arg1 until )  )  )  :arg1-of ( have-rel-role :arg0 person :arg2 friend )  :location ( country :name ( name :op1 wolfratshausen )  )  )
and :op1 ( history :arg1-of ( handle :arg1-of ( regard :arg2-of ( differ :arg1 ( point :poss view )  :mod markedly :time now )  )  :arg1-of recommend )  )  :op2 ( reconstruct :arg1 ( country :arg1-of castle :name ( name :op1 wolfratshausen )  )  :arg1-of possible )
recommend :arg1 ( talk :arg0 ( venture :mod joint )  :arg1 2 )  :arg2-of ( come :manner together :time now )  :manner soon
answer :arg1 ( we :arg0-of ( query :arg1 ( confirm :arg0 ( person :arg0-of ( have-org-role :arg1 of :arg2 member )  :arg1-of ( have-rel-role :arg0 ( person :arg1-of castle )  :arg2 friend )  :mod both )  :arg2 newspaper :mod board :mod this :op2-of ( and :op1 ( person :arg0-of ( castle :arg1 club )  :name ( name :op1 torsten )  )  )  )  )  )
suggest :arg0 ( person :arg1-of ( ring :arg0 i )  :name ( name :op1 &quot; )  :op1-of ( and :op2 ( get :arg0 we :arg1 together )  )  )  :arg1 that :arg2 ( person :arg0-of report :name ( name :op1 &quot; )  )
opine :arg0 ( person :arg0-of ( have-org-role :arg1 ( club :mod each )  :arg2 member )  :arg1-of ( come :arg1-of possible :manner together :mod again :time future )  :quant all )
enable :arg0 this :arg1 ( succeed :arg0 ( and :op1 ( quick :arg1 more )  )  :arg1-of achieve :mod visible )
bitter :arg1-of ( end :op2-of ( and :op1 ( person :arg0-of ( right :arg1 ( person :arg0-of ( want :arg0-of ( develop :arg1 club )  :arg1 ( and :arg1-of ( bring :arg0 ( forest :arg0-of ( castle :arg1 mountain )  )  )  :op1 premise :op2 ( place :op1-of original )  )  )  :arg0-of ( castle :arg1 ( reconstruct :arg0 until :arg1 eye )  )  :name ( name :op1 whereas )  :poss-of life )  )  :arg1-of ( decease :arg0 recent )  :arg1-of ( have-rel-role :arg0 ( person :arg1-of ( castle :arg0 wherea )  )  :arg2 friend )  )  )  )
say :arg0 ( person :arg0-of ( have-org-role :arg1 ( person :arg0-of ( have-rel-role :arg2 friend )  :arg1-of castle )  :arg2 chairman )  :name ( name :op1 herbert :op2 piffl )  )  :arg1 ( please :arg1 he :arg2 ( call :arg1 deputy )  :degree very )
preside :arg0 ( he :arg1-of ( have-rel-role :arg0 ( person :arg1-of castle )  :arg2 friend )  )  :time ( since :op1 ( die :arg1 ( person :name ( name :op1 dimbath )  )  )  )
meet :arg0 ( person :arg0-of ( find :arg2 mid :manner ( chairperson :mod new )  :time ( date-entity :month 9 )  )  :arg0-of ( have-org-role :arg2 member )  :poss-of during )
say :arg0 year :arg1 ( moment :poss 74 )  :manner-of ( have-org-role :arg0 ( person :domain-of old :quant around :quant 40 )  :arg1 club :arg2 member )
think :arg0 ( i :arg0-of ( think :arg1 period :arg2-of ( respect :arg0 dimbath :arg1 this :arg1-of ( proceed :arg0 it :arg1-of possible )  :arg1-of ( adjourn :arg0 ( we :arg1-of die )  :arg2 club )  :arg1-of ( activity :arg0 ' :op1-of out :op1-of initial )  )  )  :arg1-of ( have-rel-role :arg0 of :arg2 friend :time after )  )  :arg1 amr-unknown :arg2 about
say :arg0 ( person :name ( name :op1 piffl )  )  :arg1 ( enter :arg0 ( chairperson :mod new )  :arg1 ( discuss :arg1 ( club :arg1-of castle )  )  :time then )
possible :arg0 ( group :poss-of ( picture :mod atmosphere :time ( current :arg1-of ( castle :arg1-of ( have-rel-role :arg0 person :arg2 friend )  )  )  )  )  :time ( until :op1 then )
say :arg0 ( person :name ( name :op1 piffl )  )  :arg1 ( candidate :location moment :mod ( chair :mod still )  :polarity - :poss they )
cause :arg0 ( want :arg0 he :arg0-of ( stand :arg1 it )  :arg1 life :polarity - )  :arg1 ( bad :arg0 he :arg1 ( confident :arg0 i :arg1 ( we :arg0-of ( find :arg2 someone :manner that :manner howev )  )  )  )
recommend :arg2 ( chairperson :mod new )  :prep-in ( country :name ( name :op1 wolfratshausen )  )
resemble :arg1 ( continue :arg1 ( work :arg0 man :arg1 they )  )  :arg2 project
subject :arg1 ( continue :arg1 eye :arg1-of differ :arg1-of exist :arg1-of ( view :arg2 ( time :mod some )  :mod of :mod point )  :arg1-of reconstruct )
acknowledge :arg0 ( he :arg0-of ( believe :arg1 always :arg1-of ( reconstruct :arg1-of castle )  )  )  :arg1 missionary
show :arg0 ( and :op1 ( country :location-of way :name ( name :op1 austria )  :wiki austria )  :op2 ( country :name ( name :op1 france )  :wiki france )  )  :arg1 ( task :arg1-of easy :domain ( idea :mod ( this :arg2-of ( resemble :arg1 ( project :quant 2 )  )  )  )  )  :arg2 -
contrast :arg0 ( population :arg1-of ( participate :arg0 ( person :arg1-of ( volunteer :arg0 ( person :arg1-of ( become :arg2 ( magnet :mod ( person :arg0-of tour )  )  )  :quant some )  :arg2 all )  :quant ( number :arg1-of ( high :arg0 world )  )  )  )  )
mean :arg0 i :arg1 ( skeptical :mod-of ( at :mod-of first )  )  :mod ( person :name ( name :op1 piffl )  )  :mod even
sense :arg0 ( city :location-of raftsman )  :arg1 press :arg2 ahead :manner ( make :arg0 it :arg1 ( convince :arg0 i :arg1 ( create :arg0 it :arg1 ( unique :mod-of characteristic )  :arg1-of possible )  :arg1-of ( become :arg0 time :arg2 ( and :degree more :op1 project )  )  :degree more )  )
nothing :location here :source otherwise
believe :arg0 ( person :name ( name :op1 piffl )  )  :arg1 ( finance :arg0 ( grant :arg1 ( organization :name ( name :op1 eu )  :wiki european_union )  :op1-of ( and :op2 ( person :arg0-of visit )  :op3 ticket :op4 ( sponsor :mod potential )  )  )  :arg1 project :location addition )
hope :arg0 ( he :arg0-of ( castle :arg1 club )  :arg0-of ( move :arg1 towards :arg2 somewhat )  :arg1-of ( abandon :arg0 ( want :arg0 ( i :arg0-of ( do :arg1 ( something :mod that )  )  :arg2-of ( reconstruct :arg0 ( of :op1 idea )  :arg1 therefore )  )  :arg1 simple :arg1-of personal :polarity - )  )  )  :arg1 ( idea :topic this )
aim :op1-of ( and :mod important :op2 ( document :mod all )  :op3 history :op4 good )
see :arg0 we :time then
smart-ass :purpose ( save :arg1 ( textbook :mod college )  :instrument way )
textbook :arg1-of ( cost :arg1-of ( surpass :arg0 ( person :arg1-of ( come :arg0 year :accompanier ( way :arg1-of ( smart :arg0 soon )  :manner-of ( trim :arg1 ( cost :arg1 ( person :arg0-of study :quant many )  )  )  )  )  :mod ( matt :mod sophomore )  :name ( name :op1 schroeder )  :wiki gerhard_schr√∂der )  )  )  :mod college
delay :arg0 ( compensate :arg1 upperclassman :arg1-of ( offer :arg0 ( he :arg0-of ( work :arg1 ( system :mod ( book :arg1-of borrow )  )  )  )  )  :mod nominal )  :arg1 ( sell :manner back )
say :arg0 i :arg1 19 :arg2 ( person :arg0-of ( attend :arg1 covenant :arg2 college :extent amr-unknown )  :name ( name :op1 schroeder )  :op6-of ( and :op1 ( book :op1 calculu )  :op2 180 :op3 ( get :arg0 i :arg1 semester :arg1-of ( cost :arg0 ( usual :mod that )  )  )  :op4 10 :op5 ( organization :name ( name :op1 &quot; )  )  :op7 ( country :name ( name :op1 georgia )  :wiki georgia_[country] )  )  :wiki gerhard_schr√∂der )
say :arg0 he :arg1 ( cost :arg1 ( text :arg0 430 :arg1 ( semester :mod last )  :arg1-of require )  )
spend :arg0 ( he :op1-of 120 )
contrast :arg1 ( say :arg0 ( organization :name ( name :op1 the :op2 college :op3 board )  )  :arg1 ( spend :arg0 ( person :arg0-of study :arg1-of ( average :arg0 this )  )  :arg1 ( and :arg0-of ( supply :arg1 school )  :op1 textbook :op2 ( person :arg0-of study )  )  )  )  :arg2 ( variety :mod ( option :arg0-of ( cost :arg1 year :arg1-of manage :arg2 more )  )  )
and :op1 online :op2 outlet :op3 creative :op4 ( approach :arg0 ( person :name ( name :op1 schroeder )  :wiki gerhard_schr√∂der )  :arg2-of resemble )  :op5 ( increase :arg1 ( go :arg0 ( person :arg0-of study )  )  )  :op6 choices
significant :arg1 ( discount :arg1 buy :arg2-of ( use :arg0 ( person :arg0-of study )  :arg1 ( book :topic semester )  :arg1-of ( allow :arg0 ( textbook :arg0-of ( rise :arg1 often )  :arg1-of rent )  )  )  )
say :arg0 ( organization :arg0-of ( operate :arg1 ( more :quant-of ( bookstor :mod campus )  )  )  :name ( name :op1 neebo :op2 inc )  )  :arg1 ( double :arg0 250 :arg1 ( rental :mod textbook )  :time ( since :op1 ( date-entity :year 2011 )  )  )
say :arg0 ( thing :arg0-of ( have-org-role :arg1 ( semester :mod this )  :arg2 ( president :mod vice )  )  :mod about :name ( name :op1 trevor :op2 meyer )  )  :arg1 ( show :arg0 ( research :arg0 past :arg1 industry )  :arg1 ( rent-out :arg1 ( fourth :consist-of ( book :location ( bookstor :mod college )  )  :mod one )  )  )  :arg2 spring
say :arg0 ( organization :arg0-of trade :arg1-of associate :name ( name :op1 national :op2 association :op3 of :op4 college :op5 stores )  )  :arg1 ( purchase :arg1 ( text :arg0 few :quant all :topic-of half )  :arg2 ( bookstor :mod campus )  )
way :instrument-of ( score :arg2 ( deal :arg1 here )  )  :mod ( good :degree most :quant 101 )
buy :arg1 online
possible :arg1 ( 1 :domain ( price :arg1 book :arg2-of ( find :arg0 you :arg1 ( bookstore :mod campus )  :arg1-of possible :condition ( go :arg0 you :medium online )  )  :mod some :mod new )  )
contrast :arg1 ( possible :arg1 ( purchase :arg0 ( person :arg0-of ( retail :arg1 specialty )  :mod textbook )  :mod new )  )  :arg2 ( and :op1 ( of :mod ( edition :mod ninth )  )  :op2 ( person :name ( name :op1 the )  )  :op3 ( person :name ( name :op1 the )  )  :op4 ( person :arg0-of ( carry-out :arg1 ( price :arg1 nearly :arg1-of ( list :arg0 calculu )  )  )  :name ( name :op1 the )  )  )
use :manner buy
note :arg0 ( person :arg0-of ( use :arg1 option :arg1-of ( text :arg0 ( you :arg0-of ( do :arg1 mind :polarity - )  )  )  )  )  :arg1 ( or :arg0-of ( tear :op1-of ( and :op2 good )  )  :arg1-of ( wear :arg0 other )  )
calculu :arg0-of ( sell :arg1 ( use :arg1 ( organization :name ( name :op1 &quot; )  )  )  )
advertise :arg0 ( he :arg0-of ( use :arg1 ( thing :arg1-of ( understand :arg0 ( organization :name ( name :op1 matt )  )  )  :arg2-of ( copy :arg1 of )  )  :arg2 amazon.com )  :arg0-of ( say :arg1 ( monetary-quantity :unit cent )  :mod ( organization :mod senior :name ( name :op1 matt )  )  )  :arg0-of ( end :arg1 business )  :arg2-of ( pay :arg0 ( person :mod-of 25 :name ( name :op1 matt )  )  :arg1 42 )  )  :arg1 business
sell :arg0 book :arg1 new :arg2 48
suggest :arg0 without :arg1 wall :arg2 ( person :arg0-of ( have-org-role :arg1 ( bracey :mod ( ingrid :arg1-of resemble :mod academic )  )  :arg2 director )  :arg0-of ( check :arg1 with :arg2 ( person :arg0-of ( see :arg1 ( accept :arg0 ( state :location-of ( university :mod of )  :name ( name :op1 massachusetts )  :wiki massachusetts )  :arg1 edition :arg2 previous :polarity ( ' :mod ( amherst :mod at )  :mod-of college )  )  )  :arg0-of ( have-org-role :arg2 professor )  :mod their )  )  :arg0-of study )
relevant :arg1 update :arg2 classwork :manner sometimes :polarity -
possible :arg1 ( find :arg1 ( edition :mod old )  :arg2 ( fraction :mod tiny :part-of ( cost :arg1 ( version :mod ( late :degree most )  )  )  )  :frequency often )
and :op1 ( company :name ( name :op1 ebay )  :wiki ebay )  :op2 inc :op3 ( use :arg1 book :arg2-of ( popular :arg0 besides :arg1 alternative )  )
rent
and :arg1-of ( consider :condition-of ( worth :domain ( rent :arg1 textbook )  )  )  :op1 ( care :arg0 ( you :arg0-of ( remember :arg1 ( return :arg0 you )  )  :arg0-of take )  :arg1-of reasonable )  :op2 ( care :arg0 you :arg1 ( own :arg0 you )  :polarity - :time ( after :op1 ( complete :arg0 you :arg1 class )  )  )
possible :arg1 ( save :arg0 you :arg1 more )  :condition ( buy :arg1 ( book :mod new )  :arg1-of ( cost :arg2 ( monetary-quantity :unit cent )  :op1-of 80 )  )
possible :arg1 ( person :arg0-of rent :arg0-of ( study :arg1 ( length :location 20 )  )  :poss-of calculu :poss-of semester )
penalize :arg1 ( you :arg0-of ( know :arg1 ( rule :mod ( store :arg1-of ( rent :arg0 you )  )  )  )  :arg0-of ( take :arg1 note )  :arg0-of ( wear :op1-of ( or :op2 ( and :op1 tear )  )  )  :arg1-of highlight :arg1-of ( assess :arg1-of possible )  )  :mod any
possible :arg1 ( exceed :arg0 penalize :mod actual :purpose ( fail :arg0 you :arg2 ( return :arg1 book :arg0 you )  :condition-of ( cost :arg1 ( buy :arg1 new )  )  )  )  :purpose-of ( beware :arg0 ( person :name ( name :op1 renter )  )  )
e-book
instead-of :arg1 ( e-book :arg1-of get )  :arg2 ( text :arg1 ( option :mod another )  :mod tradition )
and :op1 ( person :arg0-of ( distribute :arg1 ( period :arg1-of specific )  )  :arg2-of ( provide :arg0 sometimes :arg2-of ( rent-out :arg0 ( book :mod that )  :arg1 ( license :arg0 electronic )  :mod essential )  )  )  :op2 ( amazon.com :mod such )  :op3 ( organization :name ( name :op1 sometimes )  )
calculu :arg2-of ( rent :arg0 ( person :name ( name :op1 chegg )  )  :arg1 ( 6 :mod-of ( 61 :mod about )  :quant-of ( temporal-quantity :unit month )  )  )
say :arg0 ( person :name ( name :op1 bracey )  )  :arg1 ( possible :arg1 ( find :arg0 ( person :arg0-of ( study :arg1 ( class :mod literature )  )  )  :arg1 ( bargain :arg1 ( available :arg1 ( download :arg1 free )  :arg2 ( classic :quant many )  :time now )  :mod ( good :degree most )  :time since )  :condition ( expensive :arg1-of possible :degree extreme :domain ( text :op3-of ( and :op1 science :op2 engineer )  )  )  :frequency often )  )
matter :domain shop :polarity ( - :op1-of around )
recommend :arg0 ( person :arg0-of ( enter :arg1 ( thing :name ( name :op1 pepperdine :op2 law :op3 school )  )  )  :name ( name :op1 joe :op2 gault )  )  :arg1 ( use :arg1 ( number :arg0-of ( price :arg1 29 :topic-of book )  )  :time ( since :op1 ( ensure :arg1 ( shop :arg0 you :arg1 ( text :mod right )  )  )  )  )
sure :arg1 ( check :arg1 book )  :time ( before :op1 ( order :arg0 actual :arg1 ( online :arg2-of ( say :arg0 ( person :name ( name :op1 gault )  )  :arg1 stock )  )  )  )
learn :arg0 he :arg1 ( lesson :mod ( way :arg1-of hard )  )
order :arg1 ( book :arg1-of ( purchase :arg0 he )  )  :op2-of ( and :op1 back :op3 ( end :arg1 ( price :arg0 ( temporal-quantity :unit week )  :arg1 college :manner full )  :arg2 ( pay :arg0 bookstore :arg1 4 )  )  )
possible :arg1 ( save :arg0 - :arg1 ( box :mod-of office )  )
expendabl :domain ( person :arg1-of ( kill :arg0 ( it :mod ( of :mod ( less :degree back )  :mod 30 )  )  :arg2 back :arg2-of ( sin :arg0 ( country :name ( name :op1 us )  :wiki united_states )  :arg1 ( budget :mod 90 )  :mod while )  :mod dame :mod ( only :mod-of ( 70 :mod-of budget )  :mod-of 12 )  )  :name ( name :op1 sylvester )  )  :quant 3
show :arg0 dragon :arg1 2 :arg1-of ( disappoint :arg0 ( child :arg2-of ( take :arg0 ( person :name ( name :op1 cameron )  :poss-of vehicle :wiki david_cameron )  :arg1 diaz :arg1-of ( tape :arg0 sex )  :mod only )  :arg2-of ( train :arg1 amr-unknown )  :arg2-of ( open :arg0 it :arg1 film :op1-of weekend )  :mod while :mod such )  )  :arg1-of ( return :arg0 ( office :mod box )  )  :mod also
indicate :arg0 ( article :arg0-of ( criticize :arg1 film )  )  :arg1 ( quality :arg1-of film :arg1-of blame :arg1-of ( come :arg3 it )  :arg1-of poor :arg1-of of :arg1-of possible :arg1-of movie :arg1-of child :arg1-of ( publication :name ( name :op1 telegraph )  :wiki the_daily_telegraph )  :arg1-of themselv :mod that )
and :op1 ( call :arg0 ( person :name ( name :op1 collin )  )  :arg1 film :arg2 ( child :arg1-of ( bad :arg0 year )  :mod yet )  :op1-of ( 2014 :year-of date-entity )  )  :op2 ( describe :arg1 amr-unknown )  :op3 ( dragon :mod-of 2 )  :op4 ( functional :mod ( mere :mod-of ( fantasy :mod-of sequel )  )  )
contrast :arg1 ( possible :arg1 ( lie :arg0 issue :arg1 ( quality :poss film )  :arg1-of appear :manner necessarily :polarity - )  )  :arg2 ( come :arg4 ( film :arg1-of ( pitch-in :arg2 ( market :mod ( old :degree slight )  )  )  )  )
screen :arg1 ( every :arg1-of ( release :arg0 summer :arg1-of play :op2-of ( and :arg1-of ( average :arg0 ( compare :arg0 entertainment :arg1 weekly )  )  :op1 rating :op3 ( and :arg1-of ( holiday :arg0 memorial )  :op1 20 :op2 ( and :op1 ( year :mod this )  :time ( date-entity :year 2013 )  )  )  )  )  )
opine :arg1 ( take :arg0 of :arg1 both :arg1-of result :arg2 ( critic :arg0-of ( hit :arg1 film :arg1-of ( resemble :arg2 ( calibre :mod last )  )  )  :arg2-of ( suggest :arg0 account :arg1 ( that :mod-of ( this :mod-of ( year :unit-of ( temporal-quantity :quant crop )  )  )  )  )  :mod-of into )  :op1-of ( and :op2 cinema :op3 audience :op4 film )  )
suggest :arg0 ( person :arg0-of comment :quant some )  :arg1 ( possible :manner such )  :op1-of ( and :arg0-of ( blame :arg1 ( service :name ( name :op1 netflix )  :wiki netflix )  )  :op2 ( change :arg1 ( habit :arg1-of view )  )  :op3 ( popularity :arg1-of increase :poss ( service :mod ( stream :arg1 web )  )  )  )
think :arg0 ( i :arg0-of ( work :arg1-of ( have-org-role :arg2 director )  :location ( amusement-park :name ( name :op1 disney )  :wiki hong_kong_disneyland )  :mod current )  :arg2-of ( tell :arg0 ( book :mod ( jungle :mod forthcoming )  :wiki - )  :arg1 film )  )  :arg1 ( change :arg1 ( report :arg1 ( city-district :name ( name :op1 hollywood )  :wiki hollywood )  :arg2 website )  )
use :arg1-of ( chase :arg1-of ( try :op2-of ( and :op1 ( acknowledge :arg0 we :arg1 that )  )  :polarity - )  )
contrast :arg1 ( recent :arg0-of ( see :arg1 ( slump :arg1 office :time current )  :arg1-of ( stream :arg0 revenue )  :arg1-of ( reach :arg0 ( content :arg0-of ( double :arg1 ( almost :op1 ( figure :mod ( last :mod-of year )  )  )  )  )  :op1-of service )  :op1-of ( service :name ( name :op1 netflix )  :wiki netflix )  )  )  :arg2 ( city-district :location-of box :name ( name :op1 hollywood )  :wiki hollywood )
predict :arg1 ( city-district :mod-of ( meltdown :mod ( last :mod-of summer )  )  :name ( name :op1 hollywood )  :wiki hollywood )  :op3-of ( and :op1 ( person :arg0-of ( have-org-role :arg2 director )  :arg0-of ( criticize :arg1 studio )  :arg2-of ( rely :arg1 ( much :degree too :quant-of comic :quant-of book )  )  :name ( name :op1 steven :op2 spielberg )  :wiki steven_spielberg )  :op2 franchise )
argue :arg0 ( person :arg0-of comment :quant some )  :arg1 ( hold :arg0 ( prophecy :mod dire )  :arg1 ( truth :quant some )  :arg1-of possible )  :arg2 ( light :poss ( downturn :mod current )  )
and :op1 ( organization :name ( name :op1 age :op2 of :op3 ultron )  )  :op2 minion :op3 ( country :arg0-of ( hit :arg1 ( office :mod box :mod avenger )  :arg1-of ( slate :arg0 ( date-entity :year 2015 )  :arg1-of ( usher-in :arg0 summer )  )  :mod big :mod potential )  :name ( name :op1 jurassic :op2 world )  )  :op4 ( figure :arg0-of ( feel :arg1 ( optimistic :degree more )  )  :mod other :topic ( industry :mod film )  )
mean :arg1 next :arg2 ( report :arg0 ( city-district :name ( name :op1 hollywood )  :wiki hollywood )  :arg1 ( will :arg1 ( box :mod ( big :degree most )  )  :mod summer )  :arg1-of ( tell :arg0 ( person :arg1-of ( produce :arg0 man :arg2 x )  :name ( name :op1 simon )  :wiki - )  :op1-of ( and :op2 office :op3 ( history :mod summer )  :op4 ( nobody :arg0-of ( worry :arg1 about )  )  :op5 business )  :time simple :time cyclical :time ( recent :mod-of describe :time-of ( drop :arg1 box )  )  :time office :time taking )  )
tennis :mod-of ( division :arg0-of ( streamline :arg1 league :arg1-of ( attempt :arg0 ( temporal-quantity :op1-of few :unit year )  :arg2-of ( cancel :arg1 table :time-of ( take :arg1 ( step :direction ( direction :mod right )  )  )  )  )  )  :mod region )
introduce :arg0 ( associate :arg0 ( country :name ( name :op1 germany )  :wiki germany )  :arg1 tennis :mod-of table )  :arg1 ( league :mod additional )  :arg2 program :time now
demote :arg1 ( team :arg2-of ( promote :polarity - )  :mod any )  :arg2 consequence
contrast :arg1 relegation :arg2 ( will :arg0 class :arg1 ( league :op1-of premier )  :arg1-of ( play :arg0 ( team :arg0-of ( torpedo :arg1 top )  :arg0-of ( avoid :arg1 demotion )  )  :time ( now :time-of ( fifth :op1 division )  :time-of ( next :mod-of season )  )  )  )
superb :arg1-of ( clean :arg0 despite :arg1-of ( sweep :arg0 ( team :mod woman :op1 ( remain :arg1 division :arg1-of torpedo :op1-of fourth )  )  )  )
start :arg0 ( and :arg1-of ( resemble :arg2 ( lad :source ( thing :name ( name :op1 sc :op2 weende )  )  )  :mod just )  :op1 ( boy :arg1-of torpedo )  )  :arg1 girl :location ( thing :name ( name :op1 saxony :op2 liga )  )
contrast :arg1 ( step-up :arg0 ( and :op1 ( organization :name ( name :op1 sg :op2 lenglern )  )  :op1-of ( club :arg1-of ( long :polarity - )  :mod any )  :op2 ( reserve :arg1-of torpedo )  :op3 ( thing :name ( name :op1 g√∂ttingern )  )  :op4 ( thing :name ( name :op1 landesliga )  )  )  :arg1 ( thing :mod new :name ( name :op1 verbandsliga )  )  )
and :arg1-of ( torpedo :arg1-of ( play :arg0 ( team :arg0-of ( do :arg1 woman :arg1-of play )  )  )  )
seem :arg1 ( division :domain this :mod good :mod region )  :arg2 ( point :mod structure :mod-of ( view :arg0 ( just :mod-of ( organization :mod new :name ( name :op1 southern :op2 regional :op3 premier :op4 league )  )  )  :arg1 fact )  )
and :op1 ( country :name ( name :domain ( step :arg1 this )  :op1 tsv :op2 seulingen )  )  :op10 ( organization :name ( name :op1 ttc )  )  :op2 ( person :name ( name :op1 vfb :op2 l√∂dingsen )  )  :op3 ( organization :name ( name :op1 torpedo :op2 iii )  )  :op4 ( country :name ( name :op1 geismar )  )  :op5 ( country :name ( name :op1 einbeck )  )  :op6 ( country :name ( name :op1 hammenstedt )  )  :op7 ( thing :name ( name :op1 bovender :op2 sv )  )  :op8 ( person :name ( name :op1 langenholtensen )  )  :op9 ( organization :name ( name :op1 fc :op2 weser )  )
kick :arg0 ( and :arg0-of ( start :arg1 good )  :arg0-of ( represent :arg1 area :op1-of ( and :op2 ( organization :name ( name :op1 ttc :op2 ii )  :op1-of whereas )  :op3 ( represent :arg0 ( and :op1 ( thing :name ( name :op1 rot-wei√ü )  )  :op2 ( thing :mod bovend :name ( name :op1 sv :op2 ii )  )  :op3 ( thing :name ( name :op1 geismar :op2 ii )  )  :op4 iii )  :arg1 ( area :location ( division :mod region )  )  :condition-of woman )  )  :prep-in ( league :mod region )  )  :op1 ( country :name ( name :op1 dransfeld )  )  :op2 ( thing :name ( name :op1 sc :op2 weende )  )  )  :arg1 ( thing :mod region :name ( name :op1 premier :op2 league )  )
and :mod ( all :mod here )  :op1 ( person :name ( name :op1 g√ºntersen )  )  :op2 ( organization :name ( name :op1 ttc )  )  :op3 ( organization :name ( name :op1 ttv :op2 geismar :op3 ii )  )  :op4 party
take :arg0 ( organization :name ( name :op1 torpedo :op2 iii )  )  :arg1 ( league :mod region )  :arg3 field :op2-of ( and :op1 ( organization :name ( name :op1 sattenhausen :op2 / :op3 w√∂llmarshausen )  )  )
team :mod each :quant 9
send-out :arg0 ( organization :name ( name :op1 sc :op2 weende )  )  :arg1 girl :arg2 ( league :mod small :mod region )
start :arg0 ( team :arg0-of ( torpedo :arg1 boy )  :arg0-of ( relay :arg1 ( league :mod ( region :mod even )  )  )  )  :arg1-of ( complete :polarity - )  :mod also
head :arg0 ( and :op1 ( division :mod region )  :op2 ( person :name ( name :op1 geismar )  )  :op3 ( person :name ( name :op1 tuspo :op2 weende )  )  :op4 ( thing :name ( name :op1 bovender :op2 sv )  )  )  :arg1 season
start :arg0 ( division :mod district :mod both )  :arg1 ( each :mod-of team )  :time ( season :mod-of ( associate :arg0 9 :arg0-of ( found :arg1 newly )  :arg1 region )  )
and :op1-of ( and :op2 ( thing :mod bovend :name ( name :op1 sv :op2 iii )  )  :op3 ( thing :name ( name :op1 laubach :op2 ii )  )  :op3-of ( and :arg1-of ( relay :arg0 ( team :poss ( world-region :name ( name :op1 west )  :wiki western_world )  )  )  :op1 ( country :name ( name :op1 rot-wei√ü :op2 ii )  )  :op2 ( thing :name ( name :op1 torpedo :op2 iv )  )  )  :op4 ( thing :mod that :name ( name :op1 mtv :op2 grone )  )  :op5 ( thing :name ( name :op1 dransfelder :op2 sc :op3 ii )  )  :op6 ( thing :mod sg :name ( name :op1 lenglern :op2 ii )  )  )
relay :arg0 team :arg1 ( and :mod ( some :quant-of team )  :op1 ( organization :name ( name :op1 sattenhausen :op2 / :op3 w√∂llmarshausen )  )  :op2 ( country :name ( name :op1 nikolausberg )  )  :op3 ( country :name ( name :op1 landolfshausen )  )  )
and :op1 ( war :name ( name :op1 world :op2 war :op3 ii )  :op3-of ( slash :op1 ( district :mod woman :mod-of division )  :op2 of )  :wiki world_war_ii )
female :mod-of ( team :arg1-of ( long :arg0 ( good :compared-to ( district :location ( country :name ( name :op1 osterode )  )  )  :domain that )  :arg2 much :polarity - )  :location ( level :mod district )  :mod any )
and :op1 ( district :arg1-of ( bustle :arg0 ( achieve :arg0 ( it :arg1-of remarkable )  :arg1 ( potential :poss ( district :location-of ( team :mod division :quant none :quant 6 )  )  )  )  )  :mod-of ( committee :arg1-of innovate )  )  :op2 ( come :arg1 something )
and :arg1-of protest :op1 ( country :name ( name :op1 newport )  )  :op2 ( country :name ( name :op1 cardiff )  )  :source ( summit :mod ( military :name ( name :op1 nato )  :wiki nato )  )
protest :arg0 weekend :arg1 ( oppose :arg1 ( military :mod-of ( summit :location ( country :name ( name :op1 newport )  )  )  :name ( name :op1 nato )  :wiki nato )  )
hundred :arg1-of ( gather :location ( city :mod-of ( centre-left :arg2-of ( oppose :arg0 ( date-entity :month 3 )  :arg1 ( military :name ( name :op1 nato )  :wiki nato )  )  :mod ( country :name ( name :op1 newport )  )  :time-of saturday )  )  )
and :op1 sunday :op2 ( person :arg1-of ( come :example ( amr-unknown :arg0-of ( counter :arg1 summit )  :arg1-of describe :location-of ( hall :mod county )  )  :op2-of ( around :op1 150 )  :purpose together )  )
travel :arg0 ( person :arg0-of protest :arg2-of ( speak :arg0 ( person :arg0-of follow :arg1-of ( develop :arg2 weekend )  :name ( name :op1 stephen :op2 fairclough )  )  :op1-of and )  )  :arg2 ( country :name ( name :op1 bridgend )  )  :arg4 ( country :name ( name :op1 belgium )  :wiki belgium )
airlift :arg0 teen :arg2 ( country :name ( name :op1 blue :op2 mountains )  )
bushwalker :arg0-of ( spend :arg1 ( night :arg1-of ( strand :arg0 two :arg2 ( organization :name ( name :op1 nsw :op2 blue :op3 mountains )  )  )  )  :arg1-of safe :op1-of after )  :mod teenage
and :arg0-of ( go :arg1 ( hike :arg1 ( girl :mod old :mod ( 16 :quant-of ( temporal-quantity :unit year )  )  )  )  :time ( after :mod just :op1 midday )  :time ( leap :arg1 govett :topic-of sunday )  )  :op1 ( man :age ( temporal-quantity :quant 18 :unit year )  :mod old )
concern :arg1 ( person :arg1-of ( have-rel-role :arg0 ( person :arg0-of ( call :arg1 they :arg2 about :op1-of police :purpose ( return :arg4 home :polarity - )  )  )  :arg2 relative )  )
and :op1 send :op2 ( find :arg0 ( party :arg0-of search :arg2-of ( involve :arg1 ( and :op1 ( police :arg1-of local )  :op2 ( squad :mod rescue )  )  )  )  :arg1 pair :arg1-of ( near :arg2 ( thing :name ( name :op1 bridal :op2 veil :op3 falls )  )  )  )
and :op1 ( injure :arg0 girl :arg1 ( knee :arg0 girl )  )  :op2 ( fall :arg1 man :op1-of ( and :op2 ( hit :arg1 head )  )  )
and :op1 ( remain :arg1 officer :arg2 ( pair :arg1 ( morning :domain they )  )  :time overnight )  :op2 monday
take :arg0 ambulance :arg1 they :prep-in ( condition :arg1-of stable :destination ( country :name ( name :op1 blue :op2 mountains :op3 hospital )  )  )
escalate :arg1 ( protest :arg0-of ( oppose :arg1 ( government-organization :arg0-of govern )  )  )  :location ( country :name ( name :op1 pakistan )  :wiki pakistan )
say :arg0 ( organization :name ( name :op1 minister :op2 of :op3 information )  )  :arg1 ( force :arg0 soldier :arg1 ( person :arg0-of protest :name-of ( organization :mod-of building :name ( name :op1 ptv )  )  )  :time ( around :op1 1000 )  )  :arg2 ( person :name ( name :op1 pervaiz :op2 rashid )  )
begin :arg1 ( broadcast :arg0 station :arg1 ( temporal-quantity :unit hour )  :mod again )  :op1-of or :time ( after :op1 ( half :mod good )  )
say :arg0 ( person :arg0-of ( have-org-role :arg1 ( organization :name ( name :op1 ptv )  )  :arg2 director )  :name ( name :op1 athar :op2 farooq )  )  :arg1 ( damage :arg0 ( person :arg0-of demonstrate :arg1-of ( arm :arg0 editorial )  )  :arg1 equipment :arg2 ( office :op1 stick )  )
mention :arg1 ( number :quant-of ( person :arg1-of ( kill :op1-of ( or :op2 ( injure :arg1 - )  )  )  )  )
demand :arg0 ( person :arg0-of demonstrate :arg0-of ( head :arg1 ( government-organization :arg0-of govern )  )  :arg0-of ( accuse :arg2 ( rig :arg1-of vote )  )  )  :arg1 resign
announce :arg0 ( police :arg1-of ( have-org-role :arg1-of ( reside :arg0 ( person :name ( name :op1 nawaz :op2 sharif )  )  :op1-of away )  :arg2 ( minister :mod prime )  )  )  :arg1 ( clash :arg0 ( person :arg0-of demonstrate :poss-of monday :quant approximately :quant 3000 )  :arg1 ( force :mod security )  )  :arg2 ( distance-quantity :unit kilometer )  :op1-of around
state :arg1 ( thing :arg0-of ( say :arg1 ( injure :arg1 ( have-org-role :arg1 police :arg2 officer )  )  )  :arg1-of ( release :arg0 hospital )  )
and :arg1-of ( attempt :arg0 ( person :arg0-of ( demonstrate :arg1 weekend )  :arg0-of ( gain :arg1 ( injure :arg0 500 :arg1 ( person :arg1-of ( kill :arg0 3 )  )  :degree more )  :arg1-of ( access :arg1-of reside )  )  )  )
demand :arg0 they :arg1 ( resign :arg1 ( have-org-role :arg2 ( minister :mod prime )  )  )
state :arg1 ( need :arg0 ( or :arg1-of waste :op1 ( call :arg0 ( military :arg0-of ( headquarter :arg1 ( sunday :mod-of evening )  )  )  :arg1 solution :arg1-of powerful :arg1-of ( meet :arg1-of ( follow :arg0 army )  )  :arg2 politics :polarity - )  :op2 time )  :arg1 ( use :arg1 violence )  )  :arg1-of conflict
state :arg0 ( organization :arg0-of ( ensure :arg1 ( of :arg1-of safe )  )  :name ( name :op1 the )  )  :arg1 ( announce :arg1 that )  :concession ( remain :arg1 duty :arg1-of ( bind :arg0 army )  :arg2-of ( mean :arg1 it )  )  :mod also
occasion :arg1 past :arg1-of ( revolt :arg0 military :arg1-of ( intervene :arg0 ( military :arg1-of ( concern :arg0 possible :arg1-of ( stir-up :arg0 ( violence :arg1-of escalate )  )  )  )  )  :time already )  :quant many
oppose :arg0 ( politician :op2-of ( and :arg0-of ( depend :arg1 above :polarity - :time day )  :op1 ( person :arg0-of ( preach :arg1 8 )  :arg0-of ( lead :arg2 ( protest :arg1 14 )  )  :name ( name :op1 imran :op2 khan )  )  :op3 ( person :name ( name :op1 tahirul :op2 qadri )  )  )  )  :arg1 since
refuse :arg0 ( person :name ( name :op1 sharif )  )  :arg1 ( step :arg0 person )
call :arg0 ( and :op1 sunday :op2 ( person :name ( name :op1 qadri )  )  )  :arg1 ( persevere :arg0 ( person :name ( name :op1 khan )  )  )  :arg2 ( person :arg0-of support )
say :arg0 ( person :arg2-of ( force :arg0 we :arg1 ( person :arg0-of resign :name ( name :op1 &quot; )  )  )  :name ( name :op1 &quot; )  )  :arg1 ( we :arg0-of ( leave :op1-of ( until :polarity - )  )  )
comment :arg0 ( person :name ( name :op1 qadri )  )  :arg1-of resemble
accuse :arg0 ( person :name ( name :op1 khan )  )  :arg1 ( person :arg0-of ( win :arg2 ( vote :mod parliament )  :manner fraudulent :time ( date-entity :mod last :month 5 )  )  :name ( name :op1 sharif )  )
demand :arg0 ( person :name ( name :op1 qadri )  )  :arg1 ( resign :arg1 ( and :op1 central :op2 province :op3 ( government-organization :arg0-of ( govern :arg1 both )  )  )  )
recommend :arg1 ( reform :arg0 ( government-organization :arg0-of govern :arg1-of ( call :arg0 provisional :arg2 ( elect :mod new )  )  )  :arg1 ( system :instrument-of vote )  :op1-of and :time then )
deploy :arg1 ( person :arg0-of ( have-org-role :arg1 ( force :mod security )  :arg2 member )  :quant more-than )  :arg2 ( protect :arg1 ( district :mod ( government-organization :arg0-of govern )  )  )
and :op1 ( call :arg0 ( person :arg0-of ( demonstrate :arg1 ( protest :arg1 peaceful )  )  :arg0-of ( build :arg1 parliament :location front :location then )  :arg0-of ( lead :arg1 weekend )  )  :arg1 they :arg1-of ( reside :arg0 force )  )
win :arg0 ( country :name ( name :op1 h√ºtteldorf )  )  :arg1 season :arg2 table :op1-of after :time place
bitter :mod-of ( week :arg1-of ( come :arg2 sunday :arg4 ( end :arg0 ( country :arg4-of ( win :arg0 0 :arg1 2 )  :name ( name :op1 gr√∂dig )  )  :arg1 rapid )  )  )
say :arg0 ( thing :arg0-of ( liberate :arg1 victory :degree very )  :arg1-of ( low :arg0 ( team :arg0-of ( reach :arg1 ( person :arg1-of coach :name ( name :op1 coach )  )  )  )  :arg2 ( end :arg1 of )  :mod interim )  :mod-of thursday :name ( name :op1 coach )  )  :arg1 that
sense :arg1 ( achieve :arg0 important :arg1 extreme :concession-of ( confirm :arg0 ( person :name ( name :op1 the )  )  :arg1 that :op3-of ( and :op1 goalkeep :op2 ( person :arg0-of ( climb :arg1 place )  :arg0-of ( have-org-role :arg2 captain )  :name ( name :op1 the )  )  )  )  :op1-of of )
show :arg0 road :arg1 ( that :mod-of rapid )  :arg1-of ( season :arg0 victory )  :arg1-of ( lead :arg0 rapid :arg2-of ( dream :arg1 goal )  )  :arg1-of ( win :arg0 2 )  :arg1-of ( react :arg0-of ( disappoint :arg1 ( experience :arg1 ( and :op1 ( reach :arg0 they :arg1 ( heighten :arg0 ( season :mod international )  :arg1 morale )  )  :op2 ( end :arg1 of )  )  :op1-of ( against :location ( city :name ( name :op1 helsinki )  :wiki helsinki )  :mod ( right :mod-of way )  )  )  )  )
say :arg0 ( person :arg1-of ( defend :arg0 ( we :arg0-of ( want :arg0-of ( show :arg1 positive )  :arg1 ( 14th :mod-of ( temporal-quantity :unit minute )  )  )  )  )  :arg1-of react :name ( name :op1 &quot; )  )  :arg1 ( and :op1 magnificent :op2 skillful :op3 corner :op4 ( win :arg0 they :arg1 course )  )
say :arg0 ( i :arg0-of ( build :arg2-of ( think :arg0 i :arg1 ( frustrate :arg0 of :arg1 net :op1-of ( and :arg0-of ( smash :arg1 it :arg2 top )  :op2 thursday :op3 into :quant all )  )  )  )  )  :arg1 ( smile :arg0 year :arg1 26 )  :mod old
and :op1 ( score :arg0 ri :arg1 ( person :name ( name :op1 schrammel )  )  :arg2 team :accompanier ( 13th :time ( date-entity :month 11 )  )  :op1-of ( date-entity :year 2010 )  :time-of ( time :mod last )  )  :op2 ( thing :name ( name :op1 bundesliga )  :op2-of ( until :op1 now )  )
memory :arg1-of ( special :arg0 ( championship :mod-of ( goal :poss ( he :arg0-of ( dress :arg1 rapid )  )  )  )  :time always )
say :arg0 ( person :name ( name :op1 &quot; )  )  :arg1 ( something :mod that :mod ( quite :arg0-of ( special :arg1 i :arg2 i )  )  )  :manner ( rapid :mod-of offspr )
move :arg1 back :arg1-of ( injure :arg0 ( he :arg0-of ( do :arg1 ( job :mod ( good :degree very )  )  :mod also )  )  :arg2 due :degree pelvi :time recent )  :arg2 ( play :mod-of left )  :mod ( right :mod-of back )
possible :arg1 ( play :arg1 ( position :arg1-of mirror )  )  :condition-of ( experience :arg0 he :quant enough )
state :arg0 ( person :arg0-of ( assist :arg1-of ( achieve :arg0 he :time already )  :mod some :time-of ( year :mod this )  )  :name ( name :op1 barisic )  )  :arg1 ( he :arg0-of ( deserve :arg1 goal )  )
show :arg0 ( team :arg1-of ( lead :arg0 ( person :name ( name :op1 hofmann )  )  :purpose ( cross :arg0 ( person :name ( name :op1 schrammel )  )  :arg1 ball :arg2 ( decisive :mod-of ( victory :quant 0 )  :mod-of 2 )  :time also :time after )  )  )  :arg1 character :arg2 ( temporal-quantity :unit hour )
contrast :arg2 ( possible :arg1 ( keep :arg0 ( fan :mod even )  :arg1 score :time ( before :op1 that )  )  )
contrast :arg1 game :arg2 ( compare :arg0 ( achieve :arg0 we :arg1 ( past :arg0-of ( mean :arg1 ( result :arg1 ( justify :arg1 good )  :polarity - )  )  :mod-of ( week :unit-of temporal-quantity )  )  :arg1-of result :op3-of ( and :op1 ( person :arg1-of ( thank :arg2 ( luck :mod some )  )  :name ( name :op1 god )  :wiki god )  :op2 ( person :arg0-of ( allude :arg1 between :arg2 gap )  :arg0-of ( note :arg1 effort :time today )  :name ( name :op1 &quot; )  )  )  )  :arg1 last :arg2 year :time always )
and :arg1-of ( strong :arg0 ( team :arg0-of ( play :arg1 ( stadium :mod-of ( this :mod-of season )  )  )  )  :degree most )  :op1 ( decide :arg0 ( person :arg0-of play :name ( name :op1 barisic )  )  :arg1 ( that :mod-of team )  :mod even :time previous )  :op2 good :op3 today :op4 ( against :mod ( other :mod-of game )  )
mean :arg0 despite :arg1 ( structure :arg1-of ( prove :arg0 team :arg2 that :op3-of ( and :example-of ( point :mod since :mod this :mod 3 )  :op1 26th :op2 7 )  )  :mod-of of )  :arg2 ( i :arg3-of ( show :arg0 team :arg1 character :arg2 they )  )  :manner intact :mod setback :time today
mean :arg1 ( please :arg0 ( we :arg0-of ( play :arg1 fact )  :arg0-of ( clean :arg1 ( sheet :mod-of again )  :time final )  )  :arg1 amr-unknown :mod just )
fortunate :arg1 ( circumstance :arg1-of ( lead :arg2 ( absent :arg1 ( and :mod all :op1 ( person :arg0-of ( break-up :arg1 football :arg1-of internal :time-of ( do :arg0 ( person :name ( name :op1 michael :op2 schimpelsberger )  )  :arg1 ( lot :quant-of ( work :arg0 ( person :arg1-of ( join :arg0 ( and :domain-of fact :op1 ( person :name ( name :op1 srdjan :op2 grahovac )  )  :op2 ( person :name ( name :op1 stefan :op2 stangl )  )  )  :arg2 ( team :arg0-of ( make :arg1 ( succeed :arg1-of ( value :degree more )  :mod this )  )  )  )  :name ( name :op1 philipp :op2 schobesberger )  )  )  )  )  )  :name ( name :op1 brian :op2 behrendt )  )  :op2 ( person :name ( name :op1 mario :op2 pavelic )  )  :op3 ( person :name ( name :op1 christopher :op2 dibon )  )  :op4 ( person :name ( name :op1 deni :op2 alar )  )  )  )  )  )  :polarity -
say :arg0 ( person :name ( name :op1 &quot; )  )  :arg1 amr-unknown :arg2 ( lose :arg0 must :arg1 ( person :arg0-of play )  :arg2-of ( forget :arg0 we :arg1 that :polarity - )  :op1-of ( and :op2 ( last :mod-of ( day :unit-of ( temporal-quantity :quant 3 )  )  )  :op3 ( person :name ( name :op1 &quot; )  )  :op4 ( person :name ( name :op1 &quot; )  )  :op5 ( stable :arg1 recent :degree very )  )  )
and :arg1-of ( use :arg1-of ( break-up :mod ( international :mod-of football )  )  :arg1-of ( lick :arg0 ( he :mod-of rank )  )  )  :op1 ( wound :arg1 ( explain :arg0 bit :arg1 ( 5 :op1-of ( under :op2 21 )  )  )  )  :op2 ( improve :arg1 physical )
come :arg1 ( break-up :arg1 ( person :arg0-of ( have-org-role :arg2 captain )  :name ( name :op1 hofmann )  )  )  :arg2 ( useful :mod particular )
bend :arg0 ( he :arg0-of ( ignore :arg1 ( pain :mod any )  )  )  :arg1 backwards :arg3 team
state :arg1 ( thing :arg0-of ( play :arg1 ( he :arg2-of ( show :arg0 he :arg1 ( difficult :domain this :domain ( especially :mod-of during )  )  )  )  )  :mod ( important :degree very )  )
contrast :arg1 ( give :arg0 only :arg1 goal :arg1-of ( structure :arg0 rapid )  :arg1-of ( substitute :arg0 before )  :duration ( temporal-quantity :unit minute )  :polarity - )  :arg2 ( score :arg0 also :arg1 game )
bundesliga :arg2-of ( play :arg0 old :arg1 game :op1-of 2 :op1-of ( 4 :quant-of ( temporal-quantity :quant 33 :unit year )  )  :op1-of ( date-entity :day 2 :month 11 :op1-of ( since :time-of goal )  :year 2013 )  )
contrast :arg1 ( point :arg0 ( we :arg0-of ( of :arg1 luck :mod bit )  :arg0-of ( well :arg1 ( we :arg1-of ( sure :arg0 ( i :arg0-of ( think :arg1 all :arg2-of ( mean :arg1 we )  :polarity - :time now )  )  )  )  )  :arg1-of ( on :arg0 side )  )  :arg1 luck :arg3 ( come :arg1 back )  :mod some )
say :arg0 time :arg1 ( it :arg1-of high )
mean :arg1 ( continue :arg1 and :arg1-of ( work :arg0 ( he :arg0-of focus :arg0-of ( speak :arg1 ( thing :arg1-of ( do :arg0 you :polarity - )  :arg1-of black :time always )  )  :arg0-of ( see :arg1 ( and :op1 white )  )  )  )  )
badly :quant-of ( temporal-quantity :quant ( recent :arg1-of ( play :arg0 we :polarity - )  )  :unit week )
think :arg0 we :arg1 all :arg2 now :polarity -
something :arg1-of ( deny :arg0 he :arg1-of possible :polarity - )  :domain ( important :beneficiary team :poss he )
possible :arg0 after :arg1 ( help :arg0 i :arg1 moment :arg2 ( team :mod ( young :degree very )  )  :op1-of all )
say :arg0 ( i :arg2-of ( hold :arg0 they :arg1 certain )  )  :arg1 phase
blame :arg0 ( he :op3-of ( and :op1 ( person :arg0-of ( coach :arg1 little )  :mod ( country :name ( name :op1 gr√∂dig )  )  )  :op2 ( person :name ( name :op1 michael )  :wiki michael_jackson )  :op4 team )  )  :arg1 themselv
sorry :arg0 ( he :arg0-of referee :arg0-of ( counter :arg1 goal )  :arg0-of ( deny :arg1 wrongfully )  :arg0-of ( normal :arg1 ( goal :arg1-of ( score :arg2 ( 40th :quant-of ( temporal-quantity :unit minute )  )  )  )  )  :arg0-of ( quick :arg2 ( kind :mod magic )  )  :arg0-of ( describe :arg1 goal )  )  :arg1 about
criticize :arg0 i :arg1 ( possible :arg1 ( upfield :degree enough :domain ( we :domain-of ( precise :domain-of team :polarity - )  :quant sometimes )  )  )  :frequency only
cause :arg1 ( few :quant-of ( goal :domain we :op1-of far )  )
contrast :arg1 badly :arg2 ( and :op1 ( foot :arg2-of ( find :arg0 ( we :arg1-of ( same :arg0 ( person :arg0-of ( think :arg1 back )  :arg0-of ( start :arg1 it )  :name ( name :op1 center )  )  )  )  :arg1 ( we :arg0-of ( score :arg1 goal )  )  :manner then )  )  :op2 even )
possible :arg1 all :domain-of more :li ( all :mod-of we )
prevail :arg0 silence :arg1 ( treetop :mod this )  :arg2 beneath
puzzle :arg2 ( piece :arg1-of ( give :arg2 i )  :arg2-of ( show :arg0 we :arg1 ( trunk :mod tree :mod mighty :mod ( last :mod-of friday )  )  )  :quant-of ( thing :mod of :mod-of happiness :name ( name :op1 last )  )  :topic ( series :mod summer )  )
show :arg1 ( and :op1 region )  :arg1-of ( giant :mod tree :mod ( this :mod-of ( several :mod still )  )  )  :arg1-of example :arg1-of ( oak :mod tree )  :arg2 ( stand :mod ( above :mod-of village )  )
lead :arg0 ( footpath :mod rocky )  :arg1 ( somewhat :degree-of ( 600 :mod-of year )  )  :arg2 ( tree :mod oak :mod old )
and :op1 ( walk :arg0 you :arg1 past )  :op2 enclosur :op3 ( cairn :mod basalt )  :op4 ( sea :poss stone )
of :quant-of ( distance-quantity :quant ( north :arg2-of ( quarry :arg1 ( stone :arg1-of ( locate :arg0 tree :mod ( just :mod-of below )  )  )  )  )  :quant 1 :quant street :unit kilometer )
and :op1 ( remind :arg0 ( monument :arg0-of ( look :arg1 energetic )  :arg0-of ( natural :op1-of 8 )  )  :arg1 ( organization :mod giant :name ( name :op1 sequoia )  :poss ( size :quant more )  )  :arg2 you :purpose ( distance-quantity :unit meter )  )  :op2-of ( and :op1 ( tower :location ( above :op1 ( tree :location area :mod other )  )  )  )
indicate :arg0 ( work-of-art :mod small :name ( name :op1 buddha )  :wiki tian_tan_buddha )  :arg1 ( place :op3-of ( or :domain this :op1 spiritual :op2 mystic )  )  :manner ( stub :arg1 tree :part top )
despite :op1 ( research :arg1 ( name :name-of ( origin :beneficiary-of ( clue :mod only )  )  )  :manner intensive )
consult :arg1 archive :manner ( again :mod once )  :op1-of ( and :op2 ( ask :arg0 ( person :arg0-of ( do :arg1 ( thing :name ( name :op1 geissruheiche )  )  )  :name ( name :op1 wolfgang :op2 schneider )  )  :arg1 ( country :name ( name :op1 unterweissenbrunn )  )  :arg2 ( person :arg0-of find :mod elderly )  )  )
reveal :arg0 ( thing :arg2-of ( result :arg1 investigate )  )  :arg1 ( explain :arg1 name :manner ( colorful :degree less )  )
say :arg1 ( lead :arg0 ( herder :mod goat )  :arg1 animal :op1-of ( and :op2 ( clear :arg0 ( 80 :quant-of ( temporal-quantity :op1-of around :unit year )  )  :arg1 meadow )  )  )  :arg1-of ( say :arg0 ( research :arg1 ( along :location-of ( country :name ( name :op1 unterweissenbrunn )  )  :op1 arduous )  )  )
herdsman :arg0-of ( rest :arg1 ( foot :part-of tree )  )  :arg1-of ( exhaust :time ( after :op1 ascent )  )
win :arg0 area :arg1 significant :arg1-of ( cause :arg0 ( graze :arg0 ( herd :arg1 goat )  :arg1 meadow :mod ( again :mod once )  )  )  :location back :time ( since :op1 then )
reserve :arg1 biosphere :arg2 ( declare :arg1 region :arg1-of ( discover :arg0 ( person :name ( name :op1 schneider )  )  :location addition :mod also )  :arg2 ( area :mod core )  )
recommend :arg1 ( exercise :arg0 ( 1 :arg0-of ( tread :arg1 ( mass :quant-of stone )  )  )  :arg1 ( caution :arg1 ( continent :mod-of vip :name ( name :op1 europe )  :wiki europe )  )  :arg1-of ( cause :arg0 ( whereabouts :arg1-of popular :domain ( basalt :arg1-of ( warm :arg2 sun )  )  :mod also )  )  )
contrast :arg1 ( lead :arg0 ( trail :arg1-of hike )  :arg2 ( country :name ( name :op1 unterweissenbrunn )  :topic tree )  )  :arg2 ( hide :degree somewhat )
and :op1 ( lead :arg4 ( country :name ( name :op1 hochrh√∂n )  )  :time ( trail :domain-of signpost :mod further )  )  :op2 ( offer :arg1 ( hike :arg1-of extensive )  )
castle :mod moat :mode interrogative
hard :arg1 ( find :arg0 ( we :arg1-of ( challenge :mod next )  )  :arg1 ( castle :arg1-of ( look :arg0 we )  :mod moat )  :mod ( way :arg1-of high )  )
contrast :arg1 ( provide :arg0 ( reflect :arg1 moat )  :arg1 ( impression :arg1 structure :mod good :mod just )  :arg2 we :time already )  :arg2 ( and :op1 ( possible :arg1 ( example :compared-to this :domain ( portrait :arg1-of ( build :beneficiary district )  )  :mod good )  )  )  :instrument ( building :mod history :quant some )
happiness :mod ( piece :mod we )  :mod-of interrogative
piece :mod ( happiness :mod ( thing :name ( name :op1 rh√∂n )  )  )  :poss i
answer :arg1 ( temporal-quantity :unit year )  :arg1-of correct :arg1-of ( guess :arg0 ( you :arg0-of ( win :arg1 prize :mod again :time ( year :mod this )  )  :arg0-of ( post :arg1 ( series :mod other )  :mod main )  )  )
resemble :arg1 ( take :arg1 photo :arg1-of ( join :polarity - )  )  :arg2 you
mean :arg1 ( red :op1-of ( and :arg1-of ( send :arg0 ( thing :arg1-of use :name ( name :op1 using )  )  :arg1-of subject :arg2 ( piece :arg0-of ( of :arg1 happiness )  :arg1-of own :arg1-of personal )  )  :arg1-of answer )  )
publish :arg1 ( photo :mod ( nice :degree most )  )
push :arg0 ( he :arg0-of ( have-org-role :arg1 ( country :name ( name :op1 britain )  :wiki united_kingdom )  :arg2 minister )  :arg0-of ( nominate :arg1 foreign )  :arg0-of ( have-org-role :arg1 ( organization :name ( name :op1 eu )  :op2-of ( and :op1 ( sit :arg1 ( wrangle :arg1 verbal )  :duration ( temporal-quantity :unit week )  )  :op3 ( organization :name ( name :op1 eu )  :wiki european_union )  :time after )  :wiki european_union )  :arg2 chairman )  :arg0-of ( head :arg1 ( organization :name ( name :op1 eu )  :wiki european_union )  )  :arg0-of ( oppose :arg1 ( policy :arg1-of special :arg1-of ( strong :arg0 foreign )  )  :op1-of conservative )  )  :arg1 ( manage :arg0 ( country :arg1-of ( have-org-role :arg0 ( she :arg0-of ( succeed :arg1 ( catherine :op1 ashton )  )  :arg0-of ( will :arg1 summit )  )  :arg2 premier )  :name ( name :op1 italy )  :wiki italy )  )
favor :arg0 ( government-organization :arg0-of govern )  :arg1 ( and :arg0-of ( strengthen :arg1 ( position :poss ( democratic_party_[united_states] :mod social )  )  )  :op1 ( position :location ( organization :name ( name :op1 eu )  :wiki european_union )  )  )  :arg2-of ( see :arg1 ( appointment :arg1 ( newspaper :arg1-of ( friendly :arg2 ( government-organization :arg0-of govern )  )  )  :arg1-of ( describe :arg0 ( newspaper :name ( name :op1 la :op2 repubblica )  :wiki la_repubblica )  :arg1-of ( observe :arg0 ( person :name ( name :op1 renzi )  )  )  )  )  :mod also )
expect :arg1 ( he :arg1-of ( provide :arg0 ( country :name ( name :op1 italy )  :wiki italy )  :arg1-of boost )  :arg1-of ( reform :arg1-of package )  )
hope :arg0 ( person :name ( name :op1 renzi )  )  :arg1 ( possible :arg1 ( quieten :arg1 ( party :mod ( wing :mod left )  )  :time thus-far )  :manner-of ( stir :arg1 - :time always )  :time ( consider :arg1-of ( moderate :degree more )  :arg2 group )  )
opine :arg0 ( person :arg0-of ( have-org-role :arg1 council :arg2 president )  :arg0-of represent :arg1-of ( oppose :arg0 ( person :arg0-of ( have-org-role :arg1 commission :arg2 president )  :arg1-of vote :name ( name :op1 jean-claude :op2 juncker )  :op1-of ( and :arg0-of ( achieve :arg1 ( balance :arg1 politics )  )  :op2 ( thing :mod pole :name ( name :op1 donald :op2 tusk )  )  )  )  )  :mod conservative )  :arg1 prevail :location ( city :name ( name :op1 rome )  :wiki rome )
serve :arg0 ( diplomat :mod chief :poss ( organization :name ( name :op1 eu )  :wiki european_union )  )  :arg1 deputy :arg2 ( thing :name ( name :op1 president :op2 juncker )  :source commission )  :mod also
consider :arg1 ( secure :arg0 ( agree :arg0 ( organization :name ( name :op1 eu )  :wiki european_union )  :arg1 parliament )  :manner safe )
recognize :arg0 important :arg1 ( politician :arg0-of ( party :arg1 ( call :arg0 ( person :arg0-of ( have-org-role :arg1 ( organization :name ( name :op1 eu )  :wiki european_union )  :arg2 ( president :arg1-of case )  :location state :time then )  :name ( name :op1 if )  )  :arg1 this :arg1-of ( nominate :arg0 year )  :arg2 41 :op1-of hardly :polarity - )  )  :arg0-of rule :mod old )  :location ( country :location-of role :name ( name :op1 italy )  :wiki italy )
optimistic :arg2-of ( hold :arg0 ( person :mod that :name ( name :op1 la )  )  :arg1 ( and :arg1-of ( differ :arg0 ( government-organization :arg0-of govern )  :arg2 ( newspaper :name ( name :op1 la :op2 repubblica )  :wiki la_repubblica )  :duration ( temporal-quantity :quant 2 :unit decade )  )  :arg1-of ( know :arg0 ( she :arg0-of ( meet :arg1 ( thing :arg2-of challenge :mod enormous )  :arg1-of possible )  :mod-of ambition )  )  )  :op1-of ( over :mod ( office :arg1-of high )  )  )
and :op1 ( marry :arg1 ( woman :arg0-of ( bear :location ( city :name ( name :op1 rome )  :wiki rome )  )  )  :arg2 ( person :arg0-of ( have-rel-role :arg2 daughter )  :quant 2 )  )
of :mod-of ( politics :arg2-of ( qualify :arg0 doctor )  :poss-of ( career :poss ( she :arg0-of ( merge :arg1 ( centre-left :mod-of ( party :mod ( religious-group :name ( name :op1 catholic )  :wiki catholicism )  :part ( form :mod today :mod ( democracy :mod-of ( party :mod society )  )  )  :time ( date-entity :year 2008 )  )  )  )  :arg0-of ( begin :arg1 science )  :arg0-of ( leave :arg1 former :mod-of ( wing :mod democrat )  )  :poss-of party )  :poss ( organization :mod youth )  :time ( date-entity :year 1996 )  )  )
become :arg1 ( person :arg0-of ( have-org-role :arg1 ( organization :name ( name :op1 european :op2 community :op3 organization :op4 of :op5 socialist :op6 youth )  :part ( temporal-quantity :quant 3 :unit year )  )  :arg2 ( president :mod vice )  )  :name ( name :op1 mogherini )  )  :time ( date-entity :year 1999 )
see :arg0 elect :arg1 ( take :arg0 ( she :arg0-of ( work :location ( department :mod ( policy :mod foreign )  )  :op1-of ( and :op2 ( become :arg1 ( high :arg1 council )  :arg2 ( head :arg1 ( organization :name ( name :op1 left :op2 wing :op3 democrats )  )  )  :time then :time ( date-entity :year 2001 )  )  )  )  )  :arg1 office :arg2 place )
and :arg1-of ( relation :arg0 ( country :name ( name :op1 italy )  :wiki italy )  :arg1-of ( promote :arg0 she :arg2 ( thing :name ( name :op1 social :op2 democrats )  )  :op2-of ( and :op1 ( become :arg0 ( she :arg2-of ( responsible :arg0 such :arg1 ( cornerston :mod tradition :poss ( policy :mod foreign )  )  )  )  :arg1 ( world-region :name ( name :op1 middle :op2 east )  :wiki middle_east )  :arg1-of ( know :arg0 operation :arg3 ( work :arg1 ( military :mod ( country :name ( name :op1 afghanistan )  :wiki afghanistan )  :name ( name :op1 nato )  :wiki nato )  :instrument-of ( prepare :arg1 and )  )  )  )  :op3 ( continent :name ( name :op1 europe )  :wiki europe )  )  )  :arg2 ( country :arg0-of ( participate :arg1 contingent )  :name ( name :op1 italy )  :wiki italy )  )  :op1 ( country :location-of democratic_party_[united_states] :name ( name :op1 usa )  :wiki united_states )
and :op1 ( continent :name ( name :op1 europe )  :wiki europe )  :op2 international :op3 ( affair :op3-of ( and :op1 ( person :arg1-of expert :arg1-of ( serve :arg0 ( organization :arg1-of ( have-org-role :arg0 she :arg2 member :time ( since :op1 ( date-entity :year 2008 )  )  )  :name ( name :op1 chamber :op2 of :op3 deputies )  )  )  )  :op2 defence )  )
appoint :arg0 ( he :arg0-of ( become :arg1 ( person :arg0-of ( have-org-role :arg2 premier )  :name ( name :op1 renzi )  )  )  )  :arg1 ( person :arg0-of ( have-org-role :arg2 minister :mode ( date-entity :year 2014 )  )  :name ( name :op1 mogherini )  )  :arg2 foreign
contribute :arg0 ( country :arg0-of ( relation :arg1-of ( enjoy :arg0 ( today :mod ( organization :name ( name :op1 pd )  )  )  )  :arg2 ( movement :arg1 ( free :arg1 then )  :arg1-of strong )  :mod good )  )  :arg2 ( vote :arg0 percentage-entity :arg1 ( organization :name ( name :op1 party :op2 in :op3 the )  )  :quant ( more :op1 40 )  )  :prep-in ( elect :arg0 ( organization :name ( name :op1 eu )  :wiki european_union )  :arg1 ( person :arg0-of ( play :arg1 ( role :mod lead :topic that )  :arg1-of ( believe :arg0 circle :arg1-of strong )  )  :name ( name :op1 federica :op2 mogherini )  )  )
and :arg1-of ( rebut :arg0 pd )  :arg1-of ( experience :degree ( little :degree too )  :mod diplomacy )  :op1 ( claim :location ( city :name ( name :op1 brussels )  :wiki brussels )  )  :op2 ( lack :arg0 ( have-org-role :arg1 ( organization :name ( name :op1 eu )  :wiki european_union )  :arg2 ( minister :mod new :mod foreign )  )  :arg1 clout )
and :location ( city :name ( name :op1 brussels )  :wiki brussels )  :op1 ( attack :arg0 ( and :op1 ( person :arg0-of ( have-org-role :arg2 member )  :arg1-of polish )  )  :arg1 ( stand :arg1 ( realistic :arg1 particular )  :arg1-of ( take :arg0 ( person :arg0-of ( represent :arg1 ( country :name ( name :op1 baltic :op2 states )  )  )  :name ( name :op1 logherini )  )  :prep-in ( crisis :mod ( country :name ( name :op1 ukraine )  :wiki ukraine )  )  )  )  )  :op2 denigrate
pipeline :arg1-of ( stream :arg0 ( she :arg0-of ( run :arg1 firm )  :arg0-of ( transport :arg1 ( gas :arg1-of ( natural :arg0 ( country :name ( name :op1 russia )  :wiki russia )  )  )  )  :arg0-of ( support :arg1 ( country :name ( name :op1 russia )  :wiki russia )  )  :arg0-of ( direct :arg1 ( south :arg1-of ( pass :arg0 ( country :arg0-of ( secure :arg1 ( energy :mod also )  )  :name ( name :op1 italy )  :wiki italy )  :location ( country :name ( name :op1 ukraine )  :wiki ukraine )  :location ( continent :name ( name :op1 europe )  :wiki europe )  :location this )  )  )  )  )
embark :arg1 ( visit :arg1 ( city :name ( name :op1 moscow )  :wiki moscow )  :mod state )  :time ( after :op1 ( assume :arg0 ( person :name ( name :op1 renzi )  )  :arg1 position :arg3 ( have-org-role :arg1 ( organization :name ( name :op1 eu )  :wiki european_union )  :arg2 chairman :location 7 )  )  )
receive :arg0 ( she :arg0-of ( invite :arg2 ( summit :mod economy )  :time-of fact )  :arg0-of ( have-org-role :arg1 ( government-organization :name ( name :op1 kremlin )  :wiki moscow_kremlin )  :arg2 chief )  :poss-of ( 10 :month-of date-entity )  :poss-of ( country :name ( name :op1 milan )  )  )  :arg1 ( photo :arg0-of ( show :arg1 ( hand :arg1-of shake )  :arg2 ( person :name ( name :op1 putin )  :wiki vladimir_putin )  )  )  :arg2 indignation :location ( city :name ( name :op1 brussels )  :wiki brussels )
begin :arg0 ( person :arg0-of train :part monday )  :arg1 ( total :arg2 9 )
include :arg0 ( they :arg0-of ( complete :arg1 ( same :arg1 company )  :time already )  )  :arg1 ( person :arg2-of ( train :arg1 another )  )
receive :arg0 ( person :arg0-of ( train :arg2 person )  :arg1-of employ :mod new )  :arg1 ( train :arg0 job :arg1 2 :arg2 2 )  :arg2 ( and :op1 area :op2 ( person :arg0-of ( engineer :arg1 electronic )  )  :op3 ( person :arg2-of train :quant 3 )  :op4 and :op5 ( person :arg0-of engineer :mod mechatronic :op2-of ( or :op1 future :op3 technician )  )  :op6 ( mechanic :mod tool )  :op7 ( person :arg0-of ( engineer :arg1 ( process :arg0 4 :arg1 2 )  )  )  )
come :arg0 ( and :op1 ( person :name ( name :op1 stefan :op2 brickl )  )  :op2 ( person :mod ( country :name ( name :op1 pfreimd )  )  :name ( name :op1 florian :op2 rewitzer )  :source ( country :name ( name :op1 schmidgaden )  )  )  :op3 ( person :name ( name :op1 ferdinand :op2 strebl )  :source ( country :name ( name :op1 teunz )  )  )  :op4-of ( and :op1 ( country :name ( name :op1 schwandorf )  :poss-of county )  :op2 ( person :name ( name :op1 braun )  :wiki - )  :op3 ( person :name ( name :op1 thomas :op2 b√ºcherl )  )  :op5 ( person :name ( name :op1 johannes :op2 beer )  )  )  )  :arg1 ( person :arg2-of train :quant all )  :op1-of ( and :op2 ( thing :name ( name :op1 vorm :op2 wald )  )  :op3 ( person :name ( name :op1 felix :op2 domaier )  :source ( country :name ( name :op1 oberviechtach )  )  )  :op4 ( person :name ( name :op1 daniel :op2 sorgenfrei )  )  :op5 ( person :name ( name :op1 sebastian :op2 zahner )  )  )
attend :arg0 ( person :arg2-of train :mod new )  :arg1 ( school :arg1-of high )  :op1-of ( and :op2 middle :op3 junior )  :time previous
and :location ( country :location-of ( event :mod ( country :name ( name :op1 team :op2 building )  )  )  :name ( name :op1 oberammergau )  )  :op1 ( include :arg0 ( friday :op1-of until )  :arg1 ( hike :duration ( temporal-quantity :quant all :unit day )  )  :arg2 ( thing :mod other )  )  :op2 ( raft :arg0 ( person :arg2-of ( train :arg1 ( age :mod various :quant all )  )  :poss-of wednesday )  :arg1 ( river :mod inn :wiki river_thames )  )
and :op1 ( person :arg1-of ( employ :arg0 company )  :mod 435 )  :op2 950 :op2-of ( throughout :op1 ( country :location worldwide :name ( name :op1 germany )  :wiki germany )  )
total :arg0 ( person :arg2-of ( train :location ( across :op1 age :op2 ( group :mod all )  )  )  :quant number )  :arg1 27
say :arg0 ( country :name ( name :op1 france )  :wiki france )  :arg1 ( and :arg1-of shut-down :arg1-of ( recommend :arg0 socialist )  :op1 ( country :mod-of sort :name ( name :op1 france )  :wiki france )  )  :arg1-of ( ally :arg0 francoi :arg2 out )  :arg1-of key
show :arg0 ( political-party :arg0-of ( divide :arg1 ( call :arg1 vall :arg1-of deep :arg2 mr )  )  :arg0-of ( approve :arg2 france :op1-of of )  :arg0-of ( reshuffle :arg1 ( fail :arg1 majority :arg1-of meet :arg2 vast )  )  :arg0-of ( have-org-role :arg2 president )  :arg0-of ( embattle :arg1 affection )  :name ( name :op1 socialist :op2 party )  :wiki bulgarian_socialist_party )  :arg1 it :arg1-of leave
deserve :arg0 ( he :arg1-of ( support :arg0 we )  )  :arg1 ( respect :arg1 we :arg1-of ( have-org-role :arg2 president )  :arg1-of deserve :arg1-of ( deserve :arg0 he )  :op1-of everyone )
say :arg0 he :arg1 ( applaud :arg0 ( he :arg1-of ( remain :arg0 we :arg3 it :op1-of side :op1-of duty )  )  )
suggest :arg0 week :arg1 ( recommend :arg0 ( he :arg0-of ( gesture :arg1 placatory )  :arg0-of ( call :arg1 ( government-organization :arg0-of ( govern :arg1 ( country :arg0-of ( work :arg1 35 :arg1-of inflame :duration ( temporal-quantity :unit hour )  )  :name ( name :op1 france )  :wiki france )  )  :arg1-of ( have-org-role :arg0 ( person :arg0-of ( have-org-role :arg1 ( economy :mod new )  :arg2 minister )  :name ( name :op1 emmanuel )  :poss-of macron :time week :wiki rahm_emanuel )  :arg2 ( minister :mod prime )  )  )  :arg1-of question :arg2 controversy :polarity - )  :arg0-of ( relax :arg1 rule )  :arg1-of insist )  :arg1 it :time early )
unite :arg0 ( he :arg0-of ( implore :arg1 saturday )  )  :arg1 ( fellow :arg1-of ( remain :op1-of socialist )  :arg1-of ( govern :arg0 government-organization )  )
contrast :arg1 ( put :arg1 spann :arg2 ( lose :arg0 ( political-party :arg0-of turn :arg0-of rebel :arg0-of meet :name ( name :op1 socialist :op2 party )  :wiki bulgarian_socialist_party )  :arg1 faith :arg2-of ( criticize :op1-of and )  :arg2-of ( let :arg0 ( political-party :arg0-of work :name ( name :op1 socialist :op2 party )  :wiki socialist_party_[france] )  :arg1 france :time future )  )  )  :arg2 ( person :arg0-of ( have-org-role :arg2 ( minister :mod justice )  )  :name ( name :op1 but )  )
say :arg0 ( she :arg0-of ( see :arg1 ( government-organization :arg0-of govern :arg0-of ( last :arg2 ( temporal-quantity :mod ( just :mod-of few )  :unit month )  :degree more :mod ( vall :mod new )  )  )  :polarity - )  )  :arg1 ( fight :arg0 ( person :arg0-of ( lead :arg1 front )  :arg0-of ( scorn :arg1 ( far :arg1-of ( pen :arg0 ( military :name ( name :op1 marine )  :wiki united_states_marine_corps )  :mod le )  )  )  :arg0-of ( heap :arg1 socialist )  :mod right )  :arg1 constant )
contrast :arg1 neither :arg2 clothes :arg2-of ( force :arg0 prince :arg1 ( put :arg0 ( government-organization :arg0-of ( survive :arg2 summer :mod even :polarity - )  :arg0-of ( govern :arg1 1 )  :arg1-of ( have-org-role :arg0 ( person :name ( name :op1 francois )  )  :arg2 emperor )  :mod new )  :arg1 together :arg2 previous )  :mod vall :polarity - )
tell :arg0 winter :arg1 and :arg2 ( person :arg0-of ( support :arg1 ( or :arg1-of ( survive :arg0 new )  :arg1-of ( fall :arg0 1 )  )  )  :arg1-of ( pen :arg0 le )  :arg1-of ( miss :arg0 either )  )  :polarity -
reiterate :arg0 she :arg1 ( she :arg0-of ( call :arg1 party )  :arg0-of ( ready :arg1 ( confident :arg1-of ( win :arg0 ( she :arg0-of ( say :arg1 ( and :arg1-of stand )  )  :arg0-of govern :arg0-of ( dissolve :arg1 parliament )  )  )  :arg1-of ( elect :mod early )  :arg1-of possible )  )  )
and :op1 ( elect :arg0 municipality :arg1 far :arg2 ( suffer :arg0 party :arg2-of ( rule :arg0 ( country :name ( name :op1 france )  :wiki france )  :arg1 drub )  )  :time ( date-entity :month 3 )  )  :op2 ( come :arg1 front :mod right )  :op3 ( organization :arg0-of ( elect :arg1 top :arg2 out :time ( date-entity :month 5 )  )  :name ( name :op1 eu )  :wiki european_union )
believe :arg0 ( person :arg1-of ( find :arg0 ( political-party :arg0-of ( risk :arg1 ( term :arg1-of end :arg1-of ( have-org-role :arg0 ( person :poss-of ( 2017 :year-of date-entity )  )  :arg2 president )  )  :arg2 before )  :arg0-of ( rival :arg1 faction )  :arg0-of ( break :arg1 ( monetary-quantity :unit cent )  )  :arg0-of ( poll :arg1 sunday )  :name ( name :op1 socialist :op2 party )  :poss-of several :poss-of into :wiki socialist_party_[france] )  :manner ( journal :wiki - )  )  :poss-of of :quant 76 )  :arg1 france
warn :arg0 ( scientist :location ( university :mod ( thing :name ( name :op1 sciences :op2 po )  )  )  :mod politics )  :arg1 ( person :name ( name :op1 pascal :op2 perrineau )  )  :arg2 ( lose :arg0 france :arg1 patience :condition ( succeed :arg0 ( government-organization :arg0-of govern :mod ( political-party :name ( name :op1 socialist :op2 party )  :wiki bulgarian_socialist_party )  :mod new )  :arg1 ( improve :arg1 ( and :op1 economy :op2 ( employ :arg1 record :polarity - )  )  )  )  :manner fast )
contrast :arg1 ( need :arg0 opportunity :arg1 ( thing :arg1-of ( feel :arg0 of )  :arg1-of ( quick :arg0 it )  )  :arg1-of ( opine :arg0 public )  )  :arg2 ( change :arg0 ( window :mod small )  :arg1 ( he :arg0-of warn )  )
possible :arg1 ( degenerate :arg1 situation :degree further :mod otherwise )
near :arg1 ( cruise :arg1 ( country :arg1-of ( deal :arg0 ( organization :name ( name :op1 prestige :op2 cruises )  :quant 3 )  )  :name ( name :op1 norway )  :wiki norway )  )
say :arg0 ( person :arg1-of ( cruise :arg0 ( country :name ( name :op1 norway )  :wiki norway )  :arg2-of ( line :arg1 holding )  )  :name ( name :op1 o'reilly )  :wiki bill_o'reilly_[political_commentator] )  :arg1 ( familiarize :arg1 matter :arg1-of ( acquire :arg1-of advanced :arg2-of ( cruise :arg1 ( international :mod-of inc )  )  :op1-of around )  :arg2 ( person :arg1-of ( have-rel-role :arg0 ( person :arg0-of ( operate :arg1 world )  :arg0-of talk :mod ( large :degree most :mod-of cruise )  )  :arg2 peer )  )  )  :quant 3
cruise :arg0 ( world-region :name ( name :op1 caribbean )  )  :arg1 n :arg2 ( and :op1 carnival :op2 corp :poss-of n )  :arg2-of ( rival :arg0 ( market :arg0-of ( cruise :arg1 luxury )  :arg1-of ( give :arg2 ( and :arg1-of access :op1 cruise :op2 ship :op3 affluence )  :arg2-of ( deal :arg0 ( country :arg0-of ( cruise :arg1 of )  :name ( name :op1 norway )  :poss-of company :wiki norway )  )  )  :arg1-of value )  :arg1 royal :arg2-of ( compete :arg0 it :arg1 clientele )  :mod big )
say :arg0 ( source :arg0-of ( caution :arg1 ( possible :arg1 ( fall :arg1 talk :mod apart :mod still )  )  )  )  :arg1 ( possible :arg1 ( announce :arg1 agree :time ( early :mod-of ( week :mod this )  )  )  )  :arg2 sunday
n :arg2-of ( cruise :arg0 ( country :name ( name :op1 norway )  :wiki norway )  :arg1 ( own :arg0 ( person :arg0-of ( own :arg1 ( organization :name ( name :op1 prestige :op2 cruises )  )  )  )  :arg1 ( stake :quant ( percentage-entity :value 20 )  )  :mod also )  :arg2-of ( private :arg1 ( organization :name ( name :name-of ( firm :mod equity )  :op1 apollo :op2 global :op3 management :op4 llc )  )  )  )
ask :arg0 source :arg1 - :arg1-of ( cause :arg0 ( public :domain negotiate :polarity - )  :arg1-of identify )
decline :arg0 ( person :arg0-of ( have-org-role :arg2 spokesman )  :name ( name :op1 apollo )  )  :arg1 ( comment :arg0 person )  :time-of ( respond :arg0 ( and :arg1-of ( represent :arg0 ( person :arg1-of cruise )  )  :op1 ( cruise :arg1 ( country :name ( name :op1 norway )  :wiki norway )  )  )  :arg1 ( request :arg1 ( comment :arg1 - )  )  )
cruise :arg0 ( country :name ( name :op1 norway )  :wiki norway )  :arg0-of ( operate :arg1 ( ship :mod cruise )  :time ( route :arg0-of ( span :arg1 ( continent :name ( name :op1 north :op2 america )  :op1-of ( and :op2 ( sea :name ( name :op1 mediterranean )  :wiki mediterranean_sea )  :op3 ( country :name ( name :op1 america )  :wiki united_states )  :op4 ( world-region :name ( name :op1 caribbean )  )  :quant 13 )  :wiki north_america )  )  )  )  :arg1 ( world-region :name ( name :op1 baltic )  :wiki baltic_states )  :arg1-of ( base :location miami )
revenue :mod it :time ( date-entity :domain-of ( date-entity :year 2012 )  :op1 ( 13 :value-of percentage-entity )  :year 2013 )
and :arg0-of ( travel :arg1 ( ship :mod cruise )  :arg4 ( country :name ( name :op1 scandinavia )  )  )  :op1 ( country :name ( name :op1 russia )  :wiki russia )  :op2 ( continent :name ( name :op1 north :op2 america )  :wiki north_america )  :op3 ( continent :name ( name :op1 asia )  :wiki asia )  :op4 ( continent :name ( name :op1 africa )  :wiki africa )  :op4-of ( and :op1 ( operate :arg0 ( organization :arg1-of ( base :arg0 8 :mod also )  :mod ( country :name ( name :op1 miami )  )  :name ( name :op1 prestige :op2 cruises )  )  :arg1 ( sea :name ( name :op1 mediterranean )  :wiki mediterranean_sea )  )  :op2 ( country :name ( name :op1 oceania )  )  :op3 ( regent :mod-of ( brand :mod together )  )  )  :op5 ( continent :name ( name :op1 south :op2 america )  :wiki south_america )
post :arg0 it :arg1 revenue :extent ( percentage-entity :value 6 )  :time ( date-entity :op1-of ( early :quant year )  :year 2013 )
and :arg1-of ( benefit :arg0 ( industry :mod cruise )  :arg1-of expect )  :op1 ( come :arg1 ( year :unit-of temporal-quantity )  )  :op2 ( rise :arg0 29 :arg1 ( class :mod middle )  :arg1-of ( emerge :arg0 economy )  )  :op3 such :op4 ( country :name ( name :op1 china )  :wiki china )  :op5 ( country :name ( name :op1 india )  :wiki india )
race :arg0 company :arg1 ( position :arg1 this :arg2 ( person :arg0-of ( operate :arg1 ( customer :mod new )  :mod cruise )  :arg1-of choose )  :arg0 company )
register :arg0 ( date-entity :year 2014 )  :arg1 ( organization :arg1-of ( offer :arg0 public :location 1 :time initial )  :name ( name :op1 prestige :op2 cruises )  )  :arg2 ( regulator :mod ( country :name ( name :op1 u.s. )  :wiki united_states )  )
sharehold :arg1-of ( follow :arg0 majority :arg2-of ( deal :arg0 ( company :name ( name :op1 apollo )  )  :arg1 850 :time ( date-entity :year 2007 )  )  )
and :arg1-of ( control :arg0 ( thing :mod billionaire :name ( name :op1 kok :op2 thay )  )  :arg2 conglomerate :op1-of ( date-entity :year 2000 )  )  :op1 ( person :arg0-of ( operate :mod cruise )  :arg1-of ( own :arg0 ( organization :name ( name :op1 genting :op2 bhd )  )  :location ( form :manner-of ( create :arg1 ( cruise :arg0 ( organization :name ( name :op1 gent.kl )  )  :arg1 ( country :name ( name :op1 norway )  :wiki norway )  )  )  :mod current )  )  :arg1-of merge )  :op2 leisure :op3 casino :op4 ( person :mod ( country :name ( name :op1 malaysia )  :wiki malaysia )  :name ( name :op1 lim )  :wiki lim_dong-won )
cruise :arg0 ( country :name ( name :op1 norway )  :name ( name :op1 apollo )  :wiki norway )  :arg2-of ( invest :arg1 1 :time ( date-entity :year 2008 )  )
cruise :arg0-of ( go :arg1 public :time 1 :time ( date-entity :year 2013 )  )  :arg1 ( country :name ( name :op1 norway )  :wiki norway )
say :arg0 ( file :arg0-of regulate )  :arg1 ( and :op1 ( organization :name ( name :op1 genting )  )  :op2 ( stake :quant ( percentage-entity :value 28 )  )  :op3 ( stake :quant ( percentage-entity :value 20 )  )  :op4 ( organization :arg0-of ( end :arg1 ( date-entity :mod-of ( company :name ( name :op1 apollo )  )  :month 6 )  )  :arg1-of private :name ( name :name-of ( firm :mod equity )  :op1 tpg :op2 capital :op3 lp )  )  :op5 ( stake :quant ( percentage-entity :value 8 )  )  )
say :arg0 ( berth :mod ( passenger :mod cruise )  )  :arg1 ( and :op1 ( organization :name ( name :op1 carnival )  )  :op2 royal :op3 ( cruise :arg0 ( world-region :name ( name :op1 caribbean )  )  :arg1 ( percentage-entity :mod 82 :quant-of of )  )  :op4 ( country :arg0-of ( cruise :arg2 account )  :name ( name :op1 norway )  :wiki norway )  :op5 together :op6 ( continent :name ( name :op1 north :op2 america )  :wiki north_america )  )  :arg2-of ( cruise :arg0 capacity :arg1 ( initial :arg0-of ( register :arg1 document :arg1-of ( offer :arg0 public )  )  )  )
heckle :arg0 ( activist :mod ( city :name ( name :op1 hong :op2 kong )  :wiki hong_kong )  )  :arg1 ( country :arg0-of ( vote :arg0-of ( rule :arg1 ( pro :mod democracy )  )  )  :name ( name :op1 china )  :wiki china )  :time after :time ( day :mod official )
stand :arg1 ( person :arg0-of ( wave :arg2 ( country :name ( name :op1 china )  :wiki china )  )  :arg1-of ( loyal :arg0 ( city :name ( name :op1 beijing )  :wiki beijing )  )  :poss-of flag :poss-of of :poss-of group )  :arg2 nearby
endorse :arg0 ( government-organization :arg0-of ( vote :arg1 ( candidate :arg0-of ( run :arg1 ( or :arg1-of ( let :arg0 ( government-organization :name ( name :op1 npc )  :wiki national_people's_congress )  :mod only :mod framework )  :op1 2 :op2 3 )  )  )  :arg2-of ( lead :arg1 ( city :name ( name :op1 hong :op2 kong )  :wiki hong_kong )  )  :time ( date-entity :year 2017 )  )  :name ( name :op1 standing :op2 committee )  :wiki standing_committee_of_the_national_people's_congress )  :arg1 sunday
stack :arg0 ( person :arg1-of ( loyal :location ( city :name ( name :op1 beijing )  :wiki beijing )  )  )  :arg1 ( back :arg0 ( committee :arg0-of ( nominate :arg1 all )  )  :arg1 majority :arg1-of ( obtain :arg0 candidate )  )  :arg1-of likely
prompt :arg0 ballot :arg1 ( get :arg0 ( oppose :arg1 democrat :time-of ( decide :arg1 ( make :arg0 it :arg1 ( democracy :mod-of ( activist :arg0-of ( vow :arg1 ( city :arg0-of ( occupy :arg1 finance :arg1-of protest :arg1-of ( halt :arg0 hub )  )  :arg1-of bring :name ( name :op1 hong :op2 kong )  :wiki hong_kong )  :arg1-of renew )  )  )  )  :op1-of almost )  )  )
source :arg1-of major :domain ( reform :arg0-of ( spread :arg1 democracy :arg1-of ( call :arg2-of ( fear :arg1 ( country :mod-of ( party :arg1-of ( lead :arg0 person )  )  :name ( name :op1 china )  :wiki china )  )  )  :arg2 ( city :mod other )  )  :arg1 ( city :name ( name :op1 hong :op2 kong )  :wiki hong_kong )  :arg2 tension :mod politics )
march :arg1 ( district :arg1-of ( sit :arg1-of stage :arg2 city :op2-of ( and :op1 business )  :op3-of ( and :op1 ( vote :arg0 ( authority :arg0-of ( hold :arg1 referendum :mod democracy :op1-of activist )  :arg0-of ( publicize :arg1 ( paper :mod white )  :arg1-of follow :location ( city :name ( name :op1 beijing )  :wiki beijing )  )  :arg0-of of :arg0-of ( outline :arg1 ( city :name ( name :op1 hong :op2 kong )  :wiki hong_kong )  )  :mod ( country :name ( name :op1 china )  :wiki china )  )  )  :op2 ( administrate :arg1 region :arg1-of special )  )  )  )
and :location ( city :location-of office :name ( name :op1 hong :op2 kong )  :wiki hong_kong )  :op1 ( person :arg1-of brief :name ( name :op1 li )  :wiki - )  :op2 ( government-organization :arg0-of ( govern :arg1 ( city :arg1-of organize :name ( name :op1 hong :op2 kong )  :wiki hong_kong )  )  )  :op3 ( country :name ( name :op1 china )  :wiki china )
and :op1 ( and :op1 ( affair :arg1-of ( legislate :arg0 ( government-organization :arg0-of commission :arg1-of ( have-org-role :arg0 of :arg2 ( chairman :mod vice )  )  :name ( name :op1 standing :op2 committee )  :wiki standing_committee_of_the_national_people's_congress )  )  )  :op2 ( deputy :arg0-of ( have-org-role :arg1 ( government-organization :arg0-of ( speak :arg1 ( due :mod also )  :time ( day :time-of ( throughout :mod briefing )  )  :time series )  :name ( name :op1 state :op2 council )  :wiki state_council_of_the_people's_republic_of_china )  :arg2 director )  )  )  :op2 ( city :name ( name :op1 hong :op2 kong )  :wiki hong_kong )  :op3 macau :op4 affair :op5 office :op6 wei
say :arg0 ( person :arg0-of study :arg0-of ( have-org-role :arg1 ( office :mod ' )  :arg2 chief :mod-of executive )  )  :arg1 activist :arg2-of ( gather :arg0 they :arg1 afternoon :op1-of ( outside :location ( city :name ( name :op1 hong :op2 kong )  :wiki hong_kong )  :mod would :op2 of )  )
mention :arg0 ( country :arg0-of ( rule :duration ( temporal-quantity :op2-of ( about :op1 150 )  :unit year )  :manner colony )  :arg0-of ( die :arg1 ( temporal-quantity :op1-of until :unit day )  )  :name ( name :op1 britain )  :wiki united_kingdom )  :arg1 democracy :beneficiary ( city :name ( name :op1 hong :op2 kong )  :wiki hong_kong )  :polarity -
demand :arg0 ( person :arg0-of ( talk :arg1 east )  :name ( name :op1 putin )  :wiki vladimir_putin )  :arg1 ( city :arg1-of ( open :arg0 ( country :name ( name :op1 ukraine )  :wiki ukraine )  )  :name ( name :op1 kiev )  :wiki kiev )
say :arg0 ( he :arg0-of ( remark :arg1 of )  :arg0-of ( break-away :arg1 region )  )  :arg1 ( and :op1 ( demand :arg0 ( person :arg0-of ( have-org-role :arg1 ( country :name ( name :op1 russia )  :wiki russia )  :arg2 president )  :name ( name :op1 vladimir :op2 putin )  :wiki vladimir_putin )  :arg1 sunday )  :op2 country :op3 east :op4 immediate :op5 ( begin :arg0 ( government-organization :arg0-of ( battle :arg1 separatist )  :arg0-of ( govern :arg1 ( country :name ( name :op1 ukraine )  :wiki ukraine )  )  :arg0-of ( cease :arg1 that )  )  :arg1-of ( negotiate :arg0 ( country :mod-of ( news :mod-of account )  :name ( name :op1 russia )  :wiki russia )  )  )  )
contrast :arg1 ( status :arg1-of ( control :arg1-of ( imply :arg0 ( he :arg0-of ( have-org-role :arg1 ( country :name ( name :op1 ukraine )  :poss-of territory :wiki ukraine )  :arg2 spokesman )  :arg0-of ( clarify :arg1 ( person :name ( name :op1 putin )  :poss-of late :wiki vladimir_putin )  )  )  :arg1-of ( mean :arg2 - )  :arg2 east )  :arg2-of ( become :arg1 ( country :name ( name :op1 russia )  :wiki russia )  )  :op1-of separatist )  )  :arg2 ( give :arg1 ( country :arg0-of ( speak :arg1 region )  :name ( name :op1 russia )  :wiki russia )  :arg1-of ( revise :arg0 ( country :name ( name :op1 ukraine )  :wiki ukraine )  )  :arg2 ( and :arg1-of protect :op1 power :op2 right :op3 interest )  )
contrast :arg1 ( call :arg0 ( he :arg0-of ( correspond :arg1 ( apparent :mod-of strategy )  :arg1-of ( equal :arg0 insurgent )  )  :arg0-of ( help :manner thing )  :arg0-of ( follow :arg1 violence )  :arg0-of ( begin :arg1 ( 5 :quant-of ( temporal-quantity :unit month )  )  :time-of ( take :arg1 territory :arg2 force :op1-of and :purpose ( grant :arg0 ( government-organization :arg0-of ( proclaim :arg1 region )  :arg0-of ( govern :arg1 ( country :name ( name :op1 ukraine )  :wiki ukraine )  )  )  :arg2 newly )  :purpose ( align :arg1-of ( depend :arg0 ( country :arg0-of ( instead-of :arg2 ( world-region :name ( name :op1 west )  :wiki western_world )  )  :name ( name :op1 russia )  :wiki russia )  :polarity - )  )  :purpose virtual :time separatist :time since )  )  )  :arg1 ( city :name ( name :op1 kiev )  :wiki kiev )  :arg2 ( government-organization :arg0-of ( govern :arg1 ( country :name ( name :op1 russia )  :wiki russia )  )  :arg0-of negotiate )  )  :arg2 ( person :name ( name :op1 putin )  :wiki vladimir_putin )
interview :arg1 ( person :arg0-of ( denounce :arg1 television )  :arg1-of ( campaign :arg0 ( military :arg0-of ( recover :arg1 separatist :arg1-of ( seize :arg0 east :op2-of ( and :op1 region :op3 ( and :location ( city :arg1-of ( annex :time after )  :location-of ( peninsula :wiki kamchatka_peninsula )  :name ( name :op1 moscow )  :wiki moscow )  :op1 ( country :name ( name :op1 ukraine )  :wiki ukraine )  :op2 18 :time ( date-entity :month 3 )  )  :quant donetsk )  )  :arg1-of ( hold :arg0 ( country :name ( name :op1 ukraine )  :wiki ukraine )  :arg2 territory )  )  )  )  :name ( name :op1 putin )  :wiki vladimir_putin )  :arg1-of ( run :arg0 ( state :arg0-of ( channel :arg1 1 )  )  )
seize :arg0 ( government-organization :name ( name :op1 kremlin )  :op1-of ( and :op2 separatist :op3 ( brand :arg0 ( country :name ( name :op1 russia )  :wiki russia )  :arg1 lately )  )  :wiki moscow_kremlin )  :arg1 ( term :mod ( that :mod-of harken :mod-of ( glory :arg1-of ( revolutionary :arg0 ( country :mod-of empire :name ( name :op1 russia )  :wiki russia )  )  :mod ( of :quant-of ( temporal-quantity :unit day )  )  )  )  )  :arg2 territory :op1-of ( or :op2 new )
say :arg0 ( person :arg0-of ( believe :arg1 amr-unknown )  :arg0-of ( talk :arg1 peace :manner-of ( launch :arg0 ( politician :mod ( country :arg1-of ( govern :arg0 ( government-organization :arg0-of attack :arg0-of ( report :arg1 illusion :topic ( name :op1 itar-tass )  )  :op3-of ( and :op1 ( elect :arg1 parliament :mod 26 )  :op2 while :op4 troop :op5 ( hold :arg0 civilian :arg1 prison :arg2 community :mod separatist :op1-of region )  )  )  )  :name ( name :op1 ukraine )  :wiki ukraine )  )  :arg1 ( campaign :arg0 anyone :arg1 an )  :arg2 off :time ( date-entity :month 10 )  )  )  :name ( name :op1 putin )  :wiki vladimir_putin )  :arg1 that
contrast :arg1 also :arg2 ( and :arg1-of ( say :arg0 ( he :arg2-of ( live :arg0 ( person :arg2-of ( serve :arg0 ( country :name ( name :op1 ukraine )  :wiki ukraine )  :arg1 interest )  )  :arg1 there )  )  )  :op1 ( and :op1 must :op2 substantive :op3 ( talk :arg0 we :arg1 ( issue :arg0 ( technical :mod only )  )  :arg2-of ( commence :arg0 immediate )  :polarity - )  )  :op2 politics :op3 organization :op4 of :op5 society :op6 statehood :op7 status :op8 southeast )
say :arg0 ( person :name ( name :op1 peskov )  )  :arg1 ( discuss :arg0 ( and :op1 culture :op2 linguistic :op3 ( right :mod-of danger )  )  :arg1 leadership :arg1-of ( broad :arg0 context :arg2 autonomy :mod of :mod that )  :arg1-of ( mean :arg0 ( person :arg1-of reference :name ( name :op1 putin )  :wiki vladimir_putin )  )  :arg1-of ( fear :arg1-of ( struggle :arg0 it )  :arg1-of ( speak :arg0 ( country :name ( name :op1 russia )  :wiki russia )  :location area )  :arg1-of allay )  :location ( city :location-of ( temporal-quantity :unit month )  :name ( name :op1 kiev )  :wiki kiev )  )
say :arg0 ( person :name ( name :op1 peskov )  )  :arg1 ( possible :arg0 east :arg1 ( grant :arg0 ( government-organization :arg0-of ( govern :arg1 ( country :name ( name :op1 ukraine )  :wiki ukraine )  )  )  :arg1 autonomy :arg2 region :mod only )  )
contrast :arg1 ( and :arg1-of ( cause :arg0 ( and :arg1-of ( say :arg0 ( country :name ( name :op1 russia )  :wiki russia )  )  :op1 ( matter :arg1 it :polarity - )  :op2 ( country :arg0-of ( negotiate :arg1 between )  :name ( name :op1 ukraine )  :wiki ukraine )  )  )  :op1 ( country :arg0-of ( conflict :polarity - )  :name ( name :op1 russia )  :wiki russia )  :op2 ( country :name ( name :op1 ukraine )  :wiki ukraine )  )  :arg1-of ( internal :arg1-of ( conflict :arg0 ( country :name ( name :op1 ukraine )  :wiki ukraine )  )  )
seize :arg1 ( peninsula :name ( name :op1 crimea )  :wiki crimea )  :arg1-of ( approach :arg0 ( person :arg0-of ( underscore :arg1 of )  :arg0-of ( have-org-role :arg1 ( government-organization :arg0-of ( correct :arg1 intercession )  :name ( name :op1 kremlin )  :wiki moscow_kremlin )  :arg2 spokesman )  :arg0-of ( remark :arg1 misinterpretation )  :name ( name :op1 putin )  :wiki vladimir_putin )  :arg1-of ( lead :arg0 ( country :name ( name :op1 russia )  :wiki russia )  )  :arg2-of ( deal :arg0 ( country :name ( name :op1 russia )  :wiki russia )  )  )  :arg1-of ( rebel :arg0 separatist )  :arg2 majority :arg2-of ( differ :arg0 ( population :mod-of ethnic )  :arg1 it :mod east )  :op1-of outright :time 2
poll :arg0-of ( show :arg1 ( support :arg0 ( person :arg0-of reside :arg0-of ( fight :arg1 ( annex :arg0 ( city :name ( name :op1 moscow )  :wiki moscow )  :arg1 ( and :op1 ( country :name ( name :op1 donetsk )  :poss ( country :name ( name :op1 ukraine )  :part east :wiki ukraine )  )  :op2 ( region :location ( country :name ( name :op1 luhansk )  )  )  )  )  :mod ( difficult :degree ( more :degree much )  )  )  )  :arg1 ( stay :arg0 most :arg1 ( country :name ( name :op1 russia )  :wiki russia )  :location ( country :name ( name :op1 ukraine )  :wiki ukraine )  )  :arg1-of ( broad :arg0 6.5 )  )  :op1-of and )  :arg1 - :arg1-of ( conflict :arg0 even )
grant :arg0 ( autonomy :arg0-of ( hand :arg1 ( control :arg0 ( government-organization :name ( name :op1 kremlin )  :wiki moscow_kremlin )  :arg0-of ( link :arg1 ( mainland :mod ( country :name ( name :op1 russia )  :wiki russia )  )  )  :arg1 territory )  :arg1-of effective )  )  :arg1 ( authority :arg0-of ( trade :arg1 ( peninsula :name ( name :op1 crimea )  :wiki crimea )  :arg1-of ( agree :arg1-of ( determine :arg0 ( government-organization :arg0-of ( govern :arg1 region )  )  )  :op1-of ( and :op2 ( relation :arg0 ( country :name ( name :op1 ukraine )  :wiki ukraine )  :arg1 foreign :arg2 ( country :arg1-of ( have-org-role :arg0 ( person :arg0-of ( discuss :arg1 de :medium ( forum :mod international )  )  )  :arg2 diplomat )  :name ( name :op1 russia )  :wiki russia )  )  )  )  )  )
and :op1 ( country :arg0-of ( black :arg1 ( sea :mod-of ( peninsula :arg0-of ( annex :arg1 ( 5 :quant-of ( temporal-quantity :quant home :unit month )  )  )  :wiki kamchatka_peninsula )  )  )  :name ( name :op1 russia )  :wiki russia )  :op2 ( fleet :mod ( main :mod-of naval )  )  :op3 ( commerce :mod well )  :op4 maritime :op5 facility :op6 history :op7 ( resort :arg1 coast )
and :op1 ( between :mod-of region )  :op2 ( country :name ( name :op1 russia )  :wiki russia )  :op3 rostov :op4 area :op5 ( peninsula :name ( name :op1 crimea )  :wiki crimea )  :op6 ( produce :arg0 ( country :name ( name :op1 russia )  :poss-of military :wiki russia )  :arg1 ( vital :mod-of component )  :mod that :op4-of ( and :op1 ( mine :mod also :mod home )  :op2 factory :op3 foundri )  )
propose :arg0 ( person :arg0-of ( have-org-role :arg1 ( country :name ( name :op1 ukraine )  :wiki ukraine )  :arg2 ( president :arg0-of ( weigh :arg1 ( amend :arg0 constitution :arg1 ( give :arg0 ( and :op1 finance :op2 ( status :poss language )  )  :arg1 ( control :arg0 ( lawmaker :mod ( country :name ( name :op1 ukraine )  :wiki ukraine )  )  :arg1 7 )  :arg2 ( region :mod disparate )  )  :op1-of ( new :mod-of ( elect :arg1 more :op1-of after )  )  )  )  )  )  :name ( name :op1 petro :op2 poroshenko )  )  :time ( speech :location ( date-entity :month 6 )  :mod inauguration )
contrast :arg1-of ( appear :arg0 autonomy :arg2 ( differ :arg0 that :arg1 vision :mod sharp )  )  :arg2 ( and :op1 ( government-organization :name ( name :op1 kremlin )  :wiki moscow_kremlin )  :op2 ( arm :arg0 ( city :name ( name :op1 moscow )  :wiki moscow )  :arg2-of ( accuse :arg1 ( person :arg0-of rebel :mod separatist :op1-of and )  )  )  :op3 instigate )
equal :arg0 ( person :arg0-of ( lead :arg1 separatist )  :arg1-of ( call :arg0 ( person :name ( name :op1 putin )  :wiki vladimir_putin )  :arg2 ( city :name ( name :op1 kiev )  :wiki kiev )  :op1-of ( and :op2 ( person :arg0-of ( rebel :arg1 ( week :mod last )  )  :arg1-of ( advance :mod new )  )  :op3 ( country :name ( name :op1 russia )  :wiki russia )  :op4 troop :op5 tank :op6 ( enter :arg0 previous :arg1 ( area :mod peaceful :mod-of along )  )  :op7 east :time after )  :op1-of ( late :degree most )  )  :arg2-of ( deal :arg0 ( country :name ( name :op1 ukraine )  :wiki ukraine )  )  )  :arg1 ( follow :arg1 ( sea :mod-of of )  )
say :arg0 ( person :arg0-of ( have-org-role :arg1 ( security :mod ( country :name ( name :op1 ukraine )  :wiki ukraine )  )  :arg2 official )  )  :arg1 ( fear :arg0 they :arg1 ( open :arg0 way :arg1 ( campaign :arg1 ( seize :arg0 ( peninsula :name ( name :op1 crimea )  :wiki crimea )  :arg1 ( territory :mod coast :mod strategy )  :purpose-of ( control :arg0 ( separatist :arg1-of ( back :arg0 ( country :name ( name :op1 russia )  :wiki russia )  )  )  :arg1 town )  )  )  )  )  :arg2-of ( drive :arg0 all )
and :op1 ( lie :arg0 civilian :arg1 ( country :arg1-of ( fortify :purpose-of ( spur :arg0 that :arg1 and )  :purpose-of ( effort :mod massive )  )  :mod ( port :mod steelmak )  :name ( name :op1 mariupol )  )  :arg2 ( peninsula :location ( country :mod-of military :name ( name :op1 crimean )  )  :wiki kamchatka_peninsula )  )  :op2 ( country :name ( name :op1 novoazovsk )  )  :op3 ( gateway :arg1-of narrow )
address :arg0 ( person :arg0-of ( urge :arg1 ( prevent :arg0 action :arg1 ( aggression :mod ( country :name ( name :op1 russia )  :wiki russia )  :mod further :prep-against ( country :mod ( republic :mod ( depend :arg1 saturday :polarity - )  :mod ( country :name ( name :op1 soviet :op2 union )  :wiki soviet_union )  )  :name ( name :op1 ukraine )  :wiki ukraine )  )  )  )  :name ( name :op1 poroshenko )  )  :arg1 former :arg2 ( meet :arg0 ( person :arg0-of ( lead :arg1 ( organization :name ( name :op1 european :op2 union )  :wiki european_union )  )  )  :duration ( temporal-quantity :quant 23 :unit year )  )  :location ( city :name ( name :op1 brussels )  :wiki brussels )
warn :arg0 ( person :arg1-of ( return :arg4 ( point :mod close )  :mod of :polarity - )  :name ( name :op1 &quot; )  )  :arg1 we
and :op1 ( thousand :consist-of ( troop :mod ( foreign :mod-of now )  )  )  :op2 ( hundred :mod ( tank :mod foreign :part-of ( country :location-of territory :name ( name :op1 ukraine )  :wiki ukraine )  )  )
impose :arg2 ( event :mod ( escalate :arg0 ( action :mod definitive )  :arg1 ( crisis :location ( country :name ( name :op1 ukraine )  :wiki ukraine )  )  :arg1-of ( specify :arg0 - :polarity - )  )  )  :purpose-of ( draft :arg0 ( person :arg0-of lead :arg0-of ( call :op1-of and )  )  :arg1 ( sanction :arg0 ( organization :mod-of summit :name ( name :op1 eu )  :wiki european_union )  :arg1-of ( punish :degree more )  )  :arg2 ( country :name ( name :op1 russia )  :wiki russia )  )
tell :arg0 ( person :arg0-of ( have-org-role :arg1 ( thing :arg0-of ( bolster :arg1 ( separatist :arg1-of beleaguer )  :purpose-of ( move :arg1 ( column :poss ( armor :mod ( country :mod-of troop :name ( name :op1 russia )  :wiki russia )  :op1-of and )  :quant 2 )  :arg2 ( region :mod ( country :name ( name :op1 donetsk )  )  )  :op1-of ( after :time-of ( withdraw :arg0 ( soldier :mod ( country :name ( name :op1 ukraine )  :wiki ukraine )  )  :arg1 ( country :name ( name :op1 ukraine )  :wiki ukraine )  :arg2 ( position :location ( country :name ( name :op1 ilovaysk )  )  )  )  )  :time ( week :mod last )  )  )  :name ( name :op1 national :op2 security )  )  :arg2 spokesman )  :op1-of ( and :op2 ( government-organization :name ( name :op1 defense :op2 council )  :wiki council_for_national_security )  )  )  :arg1 ( thing :name ( name :op1 andriy :op2 ( lysenko :mod ( country :name ( name :op1 col. )  )  )  )  )  :arg2 ( person :arg0-of report :location ( city :name ( name :op1 kiev )  :wiki kiev )  )  :time saturday
say :arg0 ( person :name ( name :op1 lysenko )  )  :arg1 ( swap :arg0 ( soldier :arg1-of ( trap :arg0 ( incursion :mod ( country :name ( name :op1 russia )  :wiki russia )  )  :arg2 ( country :name ( name :op1 ilovaysk )  )  )  :arg1-of ( report :arg0 10 )  :mod ( country :name ( name :op1 ukraine )  :wiki ukraine )  )  :arg1 ( sunday :arg0-of ( capture :arg1 ( paratrooper :mod ( country :name ( name :op1 russia )  :wiki russia )  )  :arg2 ( inside :op1 ( territory :poss ( country :name ( name :op1 ukraine )  :wiki ukraine )  )  )  )  )  )  :op1-of 63 :time sunday :time week
and :op1 ( celebrity :arg1-of ( embroil :arg0 ( scandal :mod photo )  )  :mod ( country :name ( name :op1 australia )  :wiki australia )  )  :op2 ( person :name ( name :op1 gabi :op2 grecko )  )
and :arg1-of possible :location ( city-district :name ( name :op1 hollywood )  :wiki hollywood )  :op1 ( person :arg0-of ( hack :arg1 lister )  :arg1-of ( disgust :arg0 ( he :arg0-of ( steal :arg1 of )  :arg1-of ( vent :arg0 ( person :name ( name :op1 geoffrey )  )  )  )  )  )  :op2 ( image :mod nude )  :op3 fiancee
nude :mod-of ( hit :arg1 ( person :name ( name :op1 jennifer :op2 lawrence )  )  :arg2-of ( show :arg0 ( photo :arg0-of ( hack :arg1 celebrity :manner-of ( scandal :arg1-of major )  )  :arg1-of explicit :quant series )  :arg1 internet :op1-of ( after :time-of ( reel :arg0 ( country :name ( name :op1 tinseltown )  )  )  )  )  )
say :arg1 ( photo :mod nude :topic ( person :mod ( thing :mod-of star :name ( name :op1 hunger :op2 games )  )  :name ( name :op1 lawrence )  :op1-of ( and :op2 superstar :op3 actor :op4 ( person :name ( name :op1 kirsten :op2 dunst )  :op3-of ( and :op1 ( person :mod model :name ( name :op1 kate :op2 upton )  :op1-of ( and :op2 ( person :name ( name :op1 cara :op2 delevingne )  )  :op3 ( person :arg0-of ( responsible :arg1 ( hack :arg1 60 )  )  :name ( name :op1 ariana :op2 grande )  )  :op4 ( person :name ( name :op1 lea :op2 michelle )  :op1-of and )  )  )  :op2 ( thing :name ( name :op1 singers :op2 rihanna )  )  )  )  )  )  )
retrieve :arg1 ( picture :arg1-of personal )  :arg1-of allege :arg2 ( leak :arg1 ( actor :mod ( country :name ( name :op1 australia )  :wiki australia )  )  )  :op4-of ( and :op1 ( person :name ( name :op1 teresa :op2 palmer )  )  :op1-of also :op2 ( person :name ( name :op1 emily :op2 browning )  )  :op3 ( person :arg1-of ( base :location ( city :name ( name :op1 melbourne )  :wiki melbourne )  )  :name ( name :op1 yvonne :op2 strahovski )  )  )
list :arg1 ( celebrity :mod 101 )  :topic-of name
tell :arg0 ( person :arg0-of propose :name ( name :op1 edelsten )  )  :arg1 confidential :arg2 ( disgust :arg0 it )  :duration ( temporal-quantity :unit month )  :mod last
recommend :arg1 ( remain :arg1 ( and :op1 image :quant all )  :arg3 ( private :arg1 ( correspondence :arg1-of private )  )  )
and :arg1-of ( steal :arg0 ( information :arg1-of personal :arg1-of ( disgrace :arg0 it )  )  )  :arg1-of possible :arg1-of ( disperse :arg0 other )
tell :arg0 ( person :arg0-of ( hack :arg1 website )  :arg0-of ( feel :arg1 ( and :arg1-of shame :arg1-of ( target :mod that )  )  :arg1-of violate )  :name ( name :op1 grecko )  )  :arg1 ( report :arg0 ( city :name ( name :op1 new :op2 york )  :wiki new_york_city )  )  :arg2 news
believe :arg1 ( hack :arg1 ( lounge :arg0 ( she :arg1-of ( have-rel-role :arg0 person :arg2 boyfriend :time ex )  :poss-of pool )  :arg1 toples :time-of ( frame :arg1 ( thing :name ( name :op1 scott :op2 speedman )  :prep-with-of ( image :quant 30 :topic ( person :name ( name :op1 palmer )  )  )  )  :quant 2 )  )  )
honor :arg1 ( and :arg1-of opposite :arg1-of ( include :arg2 credit )  :op1 ( love :arg0 ( person :name ( name :op1 palmer )  )  :arg1 film )  )
comment :arg0 ( person :name ( name :op1 palmer )  )  :arg1 ( and :op1 ( person :name ( name :op1 chuck )  )  :op2 ( person :name ( name :op1 strahovski )  )  :op3 ( person :arg0-of ( punch :arg1 ( suck :arg1 actres )  )  :name ( name :op1 browning )  )  :op4 yesterday )  :arg3 ( picture :mod ( hack :arg1 star )  )  :polarity -
mean :arg1 this :arg1-of ( tell :arg0 ( represent :arg1 privacy )  :arg2 ( violate :arg0 flagrant :arg1 of )  )
hack :arg1 ( post :arg0 ( person :arg0-of ( differ :arg1 ( cell :mod-of phone )  :arg2 ( sell :arg2-of ( steal :arg1 merchandise )  )  :mod really :polarity - )  :arg0-of ( lash :arg1 actor :arg2 out )  :name ( name :op1 actor )  )  :arg1 pic :arg1-of tweet :arg1-of hack )
report :arg1 pic :arg1-of ( tolerate :polarity - )  :arg1-of steal :arg1-of ( speak :arg0 just )  :arg1-of ( recommend :arg0 it )
and :op1 cyclist :op2 jogger :op3 walker :op4 take :op5 ( part :mod-of yesterday )  :op6 ( thing :manner-of ( help :arg2 ( child :arg1-of ( support :arg0 their )  :arg2-of ( give :arg0 ( feldberg :mod gross )  :arg1 mountain :arg1-of ( cycle :arg0 8th :arg2 event )  )  :mod-of ( with :mod-of canc )  )  )  )
grind :arg0 tour :arg1 some :arg1-of hard :condition ( treat :arg0 other :arg1 ( session :location-of ( train :arg1-of light )  )  )
agree :arg0 everyone :arg1 thing :concession ( lot :domain it :quant-of fun )
sleep :arg0 ( person :name ( name :op1 thomas :op2 studanski )  )  :arg1 ( night :mod last )
head :arg0 ( person :name ( name :op1 feldberg )  :poss-of ( life :time-of time )  )  :arg1 ( organization :name ( name :op1 oberursel :op2 brewery )  :poss-of bike )  :arg2 very
and :op1 ( cause :mod good )
cancer :arg0-of ( associate :arg1 ( child :arg0-of ( give :arg1 and :arg1-of personal :arg1-of ( value :arg0 insight )  )  :arg1-of ( aid :arg0 ( he :arg0-of ( help :manner thing )  :arg0-of ( put :arg1 little :arg1-of possible )  :arg0-of ( participate :arg1 especially :arg1-of ( cycle :arg0 event )  :time since )  :arg0-of gross :arg0-of ( muscle :arg1 stiffnes )  )  )  )  )
thing :mod great
possible :arg1 ( do :arg0 ( i :arg2-of ( know :arg0 i :arg1 that :time now )  )  :arg0-of ( brilliant :arg1 expressive )  :arg1 it )
applaud :arg1 ( break-up :arg0 you :arg1 little :polarity - )  :op1-of interrogative :op1-of milk
possible :arg1 ( carry :arg1 ( i :arg1-of ( stop :arg0 i )  )  :polarity - )
contrast :arg1 ( come :arg1 exhaustion :arg1-of ( resemble :arg2 ( person :arg0-of ( have-org-role :arg1 ( organization :name ( name :op1 cdu )  )  :arg2 member )  :name ( name :op1 thomas :op2 studanski )  )  )  )  :arg1-of ( struggle :arg0 ( person :arg0-of participate :quant many )  :arg2 ( dew :mod mountain )  :time early )  :arg2 ( arrive :arg1 ( town :mod-of ( council :mod ( country :name ( name :op1 oberursel )  )  )  )  :arg4 ( top :part-of ( plateau :mod summit )  )  :manner happy )
easy :arg1 ( complete :arg0 ( hand :mod other )  :arg1 ( route :mod ( distance-quantity :unit kilometer )  :mod full :mod ( eleven :time-of ( and :op1 ( country :name ( name :op1 hohemark )  )  :op2 ( person :name ( name :op1 feldberg )  :poss-of much )  )  )  )  )  :arg1-of ( find :arg0 ( other :quant some )  )
person :name ( name :op1 norman :op2 diessner )  :prep-for example
cause :arg0 ( professional :mod some )  :arg1 ( and :op1 ( take :arg0 ( politician :arg0-of ( wear :arg1 ( red :mod all )  )  :arg1-of green )  :arg1 it :arg1-of ( look :arg0 red :arg1-of quit :mod bike )  :time gently :time here )  :op2 then :op3 ( look :arg0 ( council :mod municipality :mod-of ( red :mod-of clothes )  )  :arg1 almost :arg1-of ( resemble :arg2 ( he :arg0-of ( end :arg1 45 :time ( late :quant-of ( temporal-quantity :unit minute )  )  )  :arg0-of ( pause :arg1 breathe )  :arg1-of arrive )  )  :arg1-of ( finish :mod about :time expressive )  )  :quant all )
spokesperson :arg2-of ( have-org-role :arg0 ( person :arg0-of ( go :arg1 ( side :mod-of ( person :name ( name :op1 nina :op2 kuhn )  )  )  :mod ( person :mod ( another :mod-of ( he :domain-of one )  )  :name ( name :op1 frank :op2 gr√ºneisen )  :op1-of ( along :location-of route )  :quant all )  )  )  :arg1 ( organization :name ( name :op1 oberursel :op2 council )  )  )  :mod press
say :arg0 kuhn :arg1 ( go :arg0 we :arg1 ( event :arg2-of ( cycle :arg0 triathlet :arg1 both )  )  :arg1-of ( ride :arg0 ( we :arg0-of ( glad :arg1 ( charity :arg2-of ( mean :arg1 ( challenge :arg0 necessarily :arg1 sport )  :mod this )  )  :op1-of and )  )  :polarity - :time-of anyway )  :location here )  :time today
meet :arg0 they :arg1 ( route :op1-of along )  :source ( country :name ( name :op1 oberreifenberg )  :source-of ( person :name ( name :op1 paul :op2 wenzel )  )  )
drive :arg0 ( boy :arg0-of ( go :direction back :manner immediate :mod again :mod only )  )  :arg1 12 :arg2 ( country :name ( name :op1 oberusel )  )  :time morning
and :op1 ( person :name ( name :op1 florian )  )  :op2 9 :op3 ( he :arg0-of ( wheel :arg1 home :arg2 back :mod ( then :op1-of before )  )  :arg2-of ( saddle :arg0 ( country :name ( name :op1 florian )  )  :arg1 into )  )  :op4 ( person :mod-of twice :name ( name :op1 florian )  )
enjoy :arg0 another :arg1 ( thing :name ( name :op1 another )  )  :arg3 1
event :arg0-of ( go :arg1 ( person :name ( name :op1 feldberg )  )  )  :arg1-of ( cycle :arg0-of ( take :arg1-of ( natural :arg1-of perfect )  )  :compared-to ( manage :arg1 ( kiosk :mod ( cult :mod ( country :name ( name :op1 oberursel )  )  )  )  )  )
race :arg0 ( kilo :arg2-of ( do :arg0 he :arg1 route :arg3 6.5 :consist ( temporal-quantity :mod just :quant 40 :unit minute )  )  )  :arg1 bike
event :arg1-of mad
cause :arg0 ( i :arg0-of ( comment :arg1 andrea )  :arg1-of ( glad :degree very :location here )  )  :arg1 this
say :arg0 ( he :arg0-of ( race :arg1 cyclist :mod ambitious )  )  :arg1 ( condition :arg1 man :mod well )
and :op1 ( he :arg0-of ( ride :arg1 ( he :arg0-of ( bike :arg1 ( gear :arg1 bike )  )  )  :time since )  )
contrast :arg1 ( attach :arg1-of ( wall :arg0 white :op1-of and )  :arg1-of ( evidence :arg0 jaunt :arg2-of ( contrast :arg1 it )  :polarity - :polarity - )  :arg1-of ( climb :arg0 walker :mod only :mod ( only :mod-of cyclist )  :mod top :time 20 )  :arg1-of ( pull :arg0 jogg :arg2 behind )  :arg1-of ( weight :arg0 tyre )  :arg2 rope )  :arg2 also
say :arg0 ( he :arg0-of ( have-org-role :arg1 ( rescue :arg0 doctor :arg1 mountain )  :arg2 professor )  :arg0-of ( equip :arg1 4 :op1-of ( and :arg1-of ( provide :arg0 team :arg1-of safe )  :op2 ( person :arg0-of specialize :arg1-of ( sleigh :arg0 ( he :arg0-of ( own :arg1 ( sense :arg0 ( he :arg0-of ( pull :arg1 just )  :arg0-of ( sleigh :arg1 it )  )  :arg0-of ( sleigh :arg1 dog )  :arg1 man )  )  :poss-of trail :poss-of train )  )  )  )  )  :arg0-of ( bully :arg1 wheel )  )  :arg1 ( and :op1 quad :op2 ( know :arg0 i :arg1 frankfurt )  )  :arg1-of mean
send :arg1 ( person :arg0-of ( participate :arg1 ( number :mod ( great :degree most )  :time ever )  )  )  :prep-in ( group :location morning )
start :arg1 walker
begin :arg0 runner :arg1 ( and :op1 ( turn :arg0 10 :arg1 cyclist :location then )  )
biker :domain-of ( off :mod-of ( temporal-quantity :op1-of late :quant 5 :unit minute )  )  :mod mountain
and :arg1-of ( give :arg1-of cycle :arg1-of gross :arg1-of start )  :op1 order :op2 ( take :arg0 ( person :arg0-of wish :arg0-of ( have-org-role :arg1 of :arg2 chairman )  :name ( name :op1 bent )  )  :arg1 enjoyable :arg1-of trip :mod that )
hope :arg0 he :arg1 ( barrier :mod ( safe :arg1 ( take :arg1 ( person :arg1-of benefit :name ( name :op1 feldberg )  )  )  :arg2 ( year :mod next )  )  )
